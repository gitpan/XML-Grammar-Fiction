changeset:   544:c225cbf0da64
bookmark:    master
tag:         tip
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 30 21:36:21 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/dist.ini
description:
Remove Makefile.PL.


diff -r 30040ca8a544 -r c225cbf0da64 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 30 20:49:30 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 30 21:36:21 2013 +0300
@@ -1,7 +1,10 @@
 Revision history for XML-Grammar-Fiction.
 
     * Tweak dist.in to have proper runtime dependencies.
-        - Thanks to leont on irc.perl.org.
+        - Thanks to leont on irc.perl.org .
+    * Remove the Makefile.PL from the target distribution.
+        - it did not handle dependencies well.
+        - thanks to ether and kentnl on irc.perl.org .
 
 0.14.1      Mon 29 Apr 12:15:32 IDT 2013
     * Moved unused to rejects:
diff -r 30040ca8a544 -r c225cbf0da64 perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Tue Apr 30 20:49:30 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Tue Apr 30 21:36:21 2013 +0300
@@ -4,7 +4,9 @@
 copyright_holder = Shlomi Fish
 copyright_year   = 2007
 
-[@Basic]
+[@Filter]
+-bundle = @Basic
+-remove = MakeMaker
 [AutoPrereqs]
 [ModuleBuild]
 mb_class = XML::Grammar::Builder

changeset:   543:30040ca8a544
tag:         git/master
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 30 20:49:30 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/dist.ini
description:
Tweak dist.in to have proper runtime dependencies.

Thanks to leont on irc.perl.org.


diff -r 6e33d15a1586 -r 30040ca8a544 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 29 12:19:15 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 30 20:49:30 2013 +0300
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Tweak dist.in to have proper runtime dependencies.
+        - Thanks to leont on irc.perl.org.
+
 0.14.1      Mon 29 Apr 12:15:32 IDT 2013
     * Moved unused to rejects:
         - lib/XML/Grammar/Fiction/RNG_Renderer.pm
diff -r 6e33d15a1586 -r 30040ca8a544 perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Mon Apr 29 12:19:15 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Tue Apr 30 20:49:30 2013 +0300
@@ -11,9 +11,11 @@
 testing_command = runtest
 [PodSyntaxTests]
 [PodCoverageTests]
-[Prereqs]
+[Prereqs / Runtime]
+-phase = runtime
 MooX::late = 0.010
 XML::GrammarBase::Role::XSLT = 0.2.1
+[Prereqs / Test]
 -phase = test
 Test::XML::Ordered = 0.0.5
 [Test::Compile]

changeset:   542:6e33d15a1586
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 29 12:19:15 2013 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.14.1


diff -r 73d796c4827a -r 6e33d15a1586 .hgtags
--- a/.hgtags	Mon Apr 29 12:18:05 2013 +0300
+++ b/.hgtags	Mon Apr 29 12:19:15 2013 +0300
@@ -35,3 +35,4 @@
 0a002236e64348b8a5e61adf8bfe9360a815f4bd releases/XML-Grammar-Fiction/0.12.4
 2e26239a59d7aae0b8b4d30bd43ff46ca7b7bdd0 releases/XML-Grammar-Fiction/0.12.5
 93e033a19db55f981952bffffe12248d316e9bc0 releases/XML-Grammar-Fiction/0.14.0
+73d796c4827a701af674247e6bc96e70fc6608bb releases/XML-Grammar-Fiction/0.14.1

changeset:   541:73d796c4827a
tag:         releases/XML-Grammar-Fiction/0.14.1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 29 12:18:05 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
description:
Bump version number to 0.14.1.


diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 29 12:18:05 2013 +0300
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.14.1      Mon 29 Apr 12:15:32 IDT 2013
     * Moved unused to rejects:
         - lib/XML/Grammar/Fiction/RNG_Renderer.pm
         - lib/XML/Grammar/Screenplay/XSLT/Base.pm
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use Exception::Class
     (
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head2 new()
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use MooX 'late';
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use MooX 'late';
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -8,7 +8,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use MooX 'late';
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use MooX 'late';
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use MooX 'late';
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 1;
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -20,11 +20,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 METHODS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -27,11 +27,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 METHODS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 sub is_tag_of_name
 {
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -946,11 +946,11 @@
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 use XML::Writer;
 use HTML::Entities ();
@@ -24,7 +24,7 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -122,11 +122,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 METHODS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 SYNOPSIS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 NAME
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 NAME
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 NAME
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =encoding utf8
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head2 new()
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 1;
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -13,7 +13,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head2 new()
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head1 METHODS
 
diff -r a3496d01d1ab -r 73d796c4827a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon Apr 29 12:13:44 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon Apr 29 12:18:05 2013 +0300
@@ -26,11 +26,11 @@
 
 =head1 VERSION
 
-Version 0.14.0
+Version 0.14.1
 
 =cut
 
-our $VERSION = '0.14.0';
+our $VERSION = '0.14.1';
 
 =head2 new()
 

changeset:   540:a3496d01d1ab
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 29 12:13:44 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/dist.ini
description:
Add more.


diff -r c178d495fa0b -r a3496d01d1ab perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 15:01:17 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 29 12:13:44 2013 +0300
@@ -3,6 +3,8 @@
     * Moved unused to rejects:
         - lib/XML/Grammar/Fiction/RNG_Renderer.pm
         - lib/XML/Grammar/Screenplay/XSLT/Base.pm
+    * Made Test::XML::Ordered a test phase requires in dist.ini.
+        - so it will be mentioned only once.
 
 0.14.0      Sun 28 Apr 06:07:03 IDT 2013
     * Update the glob in inc/Test/Run/Builder.pm .
diff -r c178d495fa0b -r a3496d01d1ab perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Sun Apr 28 15:01:17 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Mon Apr 29 12:13:44 2013 +0300
@@ -14,6 +14,7 @@
 [Prereqs]
 MooX::late = 0.010
 XML::GrammarBase::Role::XSLT = 0.2.1
+-phase = test
 Test::XML::Ordered = 0.0.5
 [Test::Compile]
 fake_home = 1

changeset:   539:c178d495fa0b
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 15:01:17 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
description:
Moved the unused ::Nodes to the rejects.


diff -r 944369213223 -r c178d495fa0b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 28 13:50:56 2013 +0300
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,40 +0,0 @@
-package XML::Grammar::Fiction::FromProto::Nodes;
-
-use strict;
-use warnings;
-
-use List::Util ();
-
-use XML::Grammar::Fiction::FromProto::Node;
-
-=head1 NAME
-
-XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Fiction::FromProto.
-
-=head1 VERSION
-
-Version 0.14.0
-
-=cut
-
-our $VERSION = '0.14.0';
-
-use XML::Grammar::Fiction::FromProto::Node::WithContent;
-use XML::Grammar::Fiction::FromProto::Node::Element;
-use XML::Grammar::Fiction::FromProto::Node::List;
-use XML::Grammar::Fiction::FromProto::Node::Text;
-use XML::Grammar::Fiction::FromProto::Node::Saying;
-use XML::Grammar::Fiction::FromProto::Node::Description;
-use XML::Grammar::Fiction::FromProto::Node::Paragraph;
-use XML::Grammar::Fiction::FromProto::Node::InnerDesc;
-use XML::Grammar::Fiction::FromProto::Node::Comment;
-
-1;
-
-=head1 DESCRIPTION
-
-Contains several nodes.
-
-=cut
-
diff -r 944369213223 -r c178d495fa0b perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 28 15:01:17 2013 +0300
@@ -0,0 +1,40 @@
+package XML::Grammar::Fiction::FromProto::Nodes;
+
+use strict;
+use warnings;
+
+use List::Util ();
+
+use XML::Grammar::Fiction::FromProto::Node;
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Fiction::FromProto.
+
+=head1 VERSION
+
+Version 0.14.0
+
+=cut
+
+our $VERSION = '0.14.0';
+
+use XML::Grammar::Fiction::FromProto::Node::WithContent;
+use XML::Grammar::Fiction::FromProto::Node::Element;
+use XML::Grammar::Fiction::FromProto::Node::List;
+use XML::Grammar::Fiction::FromProto::Node::Text;
+use XML::Grammar::Fiction::FromProto::Node::Saying;
+use XML::Grammar::Fiction::FromProto::Node::Description;
+use XML::Grammar::Fiction::FromProto::Node::Paragraph;
+use XML::Grammar::Fiction::FromProto::Node::InnerDesc;
+use XML::Grammar::Fiction::FromProto::Node::Comment;
+
+1;
+
+=head1 DESCRIPTION
+
+Contains several nodes.
+
+=cut
+

changeset:   538:944369213223
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 13:50:56 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Get rid of "use ... ::Nodes".


diff -r 8d6a9e1da64d -r 944369213223 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Sun Apr 28 13:34:25 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Sun Apr 28 13:50:56 2013 +0300
@@ -2,8 +2,7 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Fiction::FromProto.
+XML::Grammar::Fiction::FromProto::Node::Element - an XML element node.
 
 =cut
 
diff -r 8d6a9e1da64d -r 944369213223 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Sun Apr 28 13:34:25 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Sun Apr 28 13:50:56 2013 +0300
@@ -5,8 +5,8 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Fiction::FromProto.
+XML::Grammar::Fiction::FromProto::Node::WithContent - contains a node
+with content.
 
 =head1 VERSION
 
diff -r 8d6a9e1da64d -r 944369213223 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 28 13:34:25 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 28 13:50:56 2013 +0300
@@ -7,8 +7,6 @@
 
 use List::MoreUtils;
 
-use XML::Grammar::Fiction::FromProto::Nodes;
-
 =head1 NAME
 
 XML::Grammar::Fiction::Struct::Tag - information about an XML/SGML opening or
diff -r 8d6a9e1da64d -r 944369213223 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun Apr 28 13:34:25 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun Apr 28 13:50:56 2013 +0300
@@ -14,7 +14,7 @@
 
 use MooX 'late';
 
-use XML::Grammar::Fiction::FromProto::Nodes;
+use XML::Grammar::Fiction::FromProto::Node;
 
 has 'type' => (isa => "Str", is => "ro");
 has 'tag' => (isa => "Maybe[Str]", is => "ro", predicate => '_has_tag',);
diff -r 8d6a9e1da64d -r 944369213223 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Apr 28 13:34:25 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Apr 28 13:50:56 2013 +0300
@@ -11,6 +11,16 @@
 use XML::Grammar::Fiction::Struct::Tag;
 use XML::Grammar::FictionBase::Event;
 
+use XML::Grammar::Fiction::FromProto::Node::WithContent;
+use XML::Grammar::Fiction::FromProto::Node::Element;
+use XML::Grammar::Fiction::FromProto::Node::List;
+use XML::Grammar::Fiction::FromProto::Node::Text;
+use XML::Grammar::Fiction::FromProto::Node::Saying;
+use XML::Grammar::Fiction::FromProto::Node::Description;
+use XML::Grammar::Fiction::FromProto::Node::Paragraph;
+use XML::Grammar::Fiction::FromProto::Node::InnerDesc;
+use XML::Grammar::Fiction::FromProto::Node::Comment;
+
 extends("XML::Grammar::FictionBase::FromProto::Parser::LineIterator");
 
 has "_tags_stack" =>
diff -r 8d6a9e1da64d -r 944369213223 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 28 13:34:25 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 28 13:50:56 2013 +0300
@@ -7,8 +7,6 @@
 use XML::Writer;
 use HTML::Entities ();
 
-use XML::Grammar::Fiction::FromProto::Nodes;
-
 sub _get_xml_xml_ns
 {
     return "http://www.w3.org/XML/1998/namespace";

changeset:   537:8d6a9e1da64d
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 13:34:25 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Remove an unnecessary "use XML::Grammar::Fiction::FromProto::Nodes".


diff -r 8f969fa489df -r 8d6a9e1da64d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 28 13:27:36 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 28 13:34:25 2013 +0300
@@ -7,8 +7,6 @@
 
 extends("XML::Grammar::FictionBase::FromProto::Parser::XmlIterator");
 
-use XML::Grammar::Fiction::FromProto::Nodes;
-
 use XML::Grammar::Fiction::Struct::Tag;
 use XML::Grammar::Fiction::Err;
 use XML::Grammar::FictionBase::Event;

changeset:   536:8f969fa489df
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 13:27:36 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Remove an unused use command.


diff -r 6f22f6b6e884 -r 8f969fa489df perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Apr 28 12:30:50 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Apr 28 13:27:36 2013 +0300
@@ -7,7 +7,6 @@
 
 extends( 'XML::Grammar::FictionBase::FromProto::Parser::XmlIterator' );
 
-use XML::Grammar::Fiction::FromProto::Nodes;
 use XML::Grammar::Fiction::Struct::Tag;
 use XML::Grammar::FictionBase::Event;
 

changeset:   535:6f22f6b6e884
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 12:30:50 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add to Changes.


diff -r a461c6a67304 -r 6f22f6b6e884 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 12:29:05 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 12:30:50 2013 +0300
@@ -1,5 +1,9 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Moved unused to rejects:
+        - lib/XML/Grammar/Fiction/RNG_Renderer.pm
+        - lib/XML/Grammar/Screenplay/XSLT/Base.pm
+
 0.14.0      Sun 28 Apr 06:07:03 IDT 2013
     * Update the glob in inc/Test/Run/Builder.pm .
         - include t/screenplay/*.t and t/fiction/*.t .

changeset:   534:a461c6a67304
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 12:29:05 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm perl/modules/XML-Grammar-Fiction/rejects/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/rejects/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Move unused classes to the rejects.


diff -r 2e94af873cc9 -r a461c6a67304 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Sun Apr 28 06:11:44 2013 +0300
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,37 +0,0 @@
-package XML::Grammar::Fiction::RNG_Renderer;
-
-use strict;
-use warnings;
-
-our $VERSION = '0.14.0';
-
-=head1 XML::Grammar::Fiction::RNG_Renderer
-
-The base class for the Fiction-XML renderer with the common RNG.
-
-=head1 VERSION
-
-0.11.0
-
-=head1 SYNOPSIS
-
-For internal use.
-
-=cut
-
-use MooX 'late';
-
-extends ("XML::Grammar::FictionBase::XSLT::Converter");
-
-has '+rng_schema_basename' => (default => "fiction-xml.rng");
-
-=head1 METHODS
-
-=head2 rng_schema_basename()
-
-Inherited - (to settle pod-coverage).
-
-=cut
-
-1;
-
diff -r 2e94af873cc9 -r a461c6a67304 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun Apr 28 06:11:44 2013 +0300
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,30 +0,0 @@
-package XML::Grammar::Screenplay::XSLT::Base;
-
-use MooX 'late';
-
-our $VERSION = '0.14.0';
-
-extends('XML::Grammar::FictionBase::XSLT::Converter');
-
-has '+rng_schema_basename' => (default => "screenplay-xml.rng");
-
-1;
-
-__END__
-
-=head1 NAME
-
-XML::Grammar::Screenplay::XSLT::Base - base module for XML::Grammar::Screenplay
-XSLT conversions.
-
-=head1 VERSION
-
-Version 0.14.0
-
-=head1 METHODS
-
-=head2 rng_schema_basename()
-
-Inherited - (to settle pod-coverage).
-
-=cut
diff -r 2e94af873cc9 -r a461c6a67304 perl/modules/XML-Grammar-Fiction/rejects/XML/Grammar/Fiction/RNG_Renderer.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/XML/Grammar/Fiction/RNG_Renderer.pm	Sun Apr 28 12:29:05 2013 +0300
@@ -0,0 +1,37 @@
+package XML::Grammar::Fiction::RNG_Renderer;
+
+use strict;
+use warnings;
+
+our $VERSION = '0.14.0';
+
+=head1 XML::Grammar::Fiction::RNG_Renderer
+
+The base class for the Fiction-XML renderer with the common RNG.
+
+=head1 VERSION
+
+0.11.0
+
+=head1 SYNOPSIS
+
+For internal use.
+
+=cut
+
+use MooX 'late';
+
+extends ("XML::Grammar::FictionBase::XSLT::Converter");
+
+has '+rng_schema_basename' => (default => "fiction-xml.rng");
+
+=head1 METHODS
+
+=head2 rng_schema_basename()
+
+Inherited - (to settle pod-coverage).
+
+=cut
+
+1;
+
diff -r 2e94af873cc9 -r a461c6a67304 perl/modules/XML-Grammar-Fiction/rejects/XML/Grammar/Screenplay/XSLT/Base.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/XML/Grammar/Screenplay/XSLT/Base.pm	Sun Apr 28 12:29:05 2013 +0300
@@ -0,0 +1,30 @@
+package XML::Grammar::Screenplay::XSLT::Base;
+
+use MooX 'late';
+
+our $VERSION = '0.14.0';
+
+extends('XML::Grammar::FictionBase::XSLT::Converter');
+
+has '+rng_schema_basename' => (default => "screenplay-xml.rng");
+
+1;
+
+__END__
+
+=head1 NAME
+
+XML::Grammar::Screenplay::XSLT::Base - base module for XML::Grammar::Screenplay
+XSLT conversions.
+
+=head1 VERSION
+
+Version 0.14.0
+
+=head1 METHODS
+
+=head2 rng_schema_basename()
+
+Inherited - (to settle pod-coverage).
+
+=cut

changeset:   533:2e94af873cc9
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 06:11:44 2013 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.14.0


diff -r 93e033a19db5 -r 2e94af873cc9 .hgtags
--- a/.hgtags	Sun Apr 28 06:10:21 2013 +0300
+++ b/.hgtags	Sun Apr 28 06:11:44 2013 +0300
@@ -34,3 +34,4 @@
 43d8b9f86e24518e231fd8ff9e106060998902af releases/XML-Grammar-Fiction/0.12.3
 0a002236e64348b8a5e61adf8bfe9360a815f4bd releases/XML-Grammar-Fiction/0.12.4
 2e26239a59d7aae0b8b4d30bd43ff46ca7b7bdd0 releases/XML-Grammar-Fiction/0.12.5
+93e033a19db55f981952bffffe12248d316e9bc0 releases/XML-Grammar-Fiction/0.14.0

changeset:   532:93e033a19db5
tag:         releases/XML-Grammar-Fiction/0.14.0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 06:10:21 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump XML-Grammar-Fiction's version number to 0.14.0.


diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 06:10:21 2013 +0300
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.14.0      Sun 28 Apr 06:07:03 IDT 2013
     * Update the glob in inc/Test/Run/Builder.pm .
         - include t/screenplay/*.t and t/fiction/*.t .
     * lib/XML/Grammar/FictionBase/XSLT/Converter.pm
@@ -11,6 +12,8 @@
         - lib/XML/Grammar/Screenplay/ToDocBook.pm
         - lib/XML/Grammar/Screenplay/ToHTML.pm
         - lib/XML/Grammar/Screenplay/ToTEI.pm
+    * Add a missing Test::XML::Ordered minimal version of 0.0.5
+        - Due to test failures.
 
 0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use Exception::Class
     (
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head2 new()
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use MooX 'late';
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use MooX 'late';
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -9,7 +9,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use MooX 'late';
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use MooX 'late';
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use MooX 'late';
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 1;
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 METHODS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -27,11 +27,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 METHODS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 sub is_tag_of_name
 {
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -936,11 +936,11 @@
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 use XML::Writer;
 use HTML::Entities ();
@@ -26,7 +26,7 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -122,11 +122,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 METHODS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 SYNOPSIS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 NAME
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 NAME
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 NAME
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =encoding utf8
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head2 new()
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 1;
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head2 new()
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head1 METHODS
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -26,11 +26,11 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =cut
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 =head2 new()
 
diff -r 5a06f58d6647 -r 93e033a19db5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun Apr 28 06:04:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun Apr 28 06:10:21 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.5';
+our $VERSION = '0.14.0';
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
@@ -19,7 +19,7 @@
 
 =head1 VERSION
 
-Version 0.12.5
+Version 0.14.0
 
 =head1 METHODS
 

changeset:   531:5a06f58d6647
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 06:04:46 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/dist.ini
description:
Add prereq.


diff -r 859976876fe5 -r 5a06f58d6647 perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Sun Apr 28 05:29:59 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Sun Apr 28 06:04:46 2013 +0300
@@ -14,6 +14,7 @@
 [Prereqs]
 MooX::late = 0.010
 XML::GrammarBase::Role::XSLT = 0.2.1
+Test::XML::Ordered = 0.0.5
 [Test::Compile]
 fake_home = 1
 skip = bump-ver

changeset:   530:859976876fe5
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 05:29:59 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/dist.ini
description:
Add a prereq.


diff -r f84e7c4a7f9a -r 859976876fe5 perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Sun Apr 28 05:23:09 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Sun Apr 28 05:29:59 2013 +0300
@@ -13,6 +13,7 @@
 [PodCoverageTests]
 [Prereqs]
 MooX::late = 0.010
+XML::GrammarBase::Role::XSLT = 0.2.1
 [Test::Compile]
 fake_home = 1
 skip = bump-ver

changeset:   529:f84e7c4a7f9a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 05:23:09 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
description:
Convert ::Screenplay::ToDocBook to XML::GrammarBase .


diff -r 021e833859a7 -r f84e7c4a7f9a perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 05:17:51 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 05:23:09 2013 +0300
@@ -8,6 +8,7 @@
     * Convert to XML::GrammarBase :
         - lib/XML/Grammar/Fiction/ToHTML.pm
         - lib/XML/Grammar/Fiction/ToDocBook.pm
+        - lib/XML/Grammar/Screenplay/ToDocBook.pm
         - lib/XML/Grammar/Screenplay/ToHTML.pm
         - lib/XML/Grammar/Screenplay/ToTEI.pm
 
diff -r 021e833859a7 -r f84e7c4a7f9a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 28 05:17:51 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 28 05:23:09 2013 +0300
@@ -2,9 +2,19 @@
 
 use MooX 'late';
 
-extends('XML::Grammar::Screenplay::XSLT::Base');
+use XML::GrammarBase::Role::RelaxNG;
+use XML::GrammarBase::Role::XSLT;
 
-has '+xslt_transform_basename' => (default => "screenplay-xml-to-docbook.xslt");
+with ('XML::GrammarBase::Role::RelaxNG');
+with XSLT(output_format => 'docbook');
+
+has '+module_base' => (default => 'XML-Grammar-Fiction');
+has '+rng_schema_basename' => (default => 'screenplay-xml.rng');
+
+has '+to_docbook_xslt_transform_basename' =>
+(
+    default => 'screenplay-xml-to-docbook.xslt',
+);
 
 =head1 NAME
 
@@ -51,7 +61,9 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation(
+        {output_format => 'docbook', %{$args}}
+    );
 }
 
 1;

changeset:   528:021e833859a7
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 05:17:51 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
description:
Convert the ::ToTEI to XML::GrammarBase .


diff -r a3ab642d841f -r 021e833859a7 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 05:14:43 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 05:17:51 2013 +0300
@@ -8,6 +8,8 @@
     * Convert to XML::GrammarBase :
         - lib/XML/Grammar/Fiction/ToHTML.pm
         - lib/XML/Grammar/Fiction/ToDocBook.pm
+        - lib/XML/Grammar/Screenplay/ToHTML.pm
+        - lib/XML/Grammar/Screenplay/ToTEI.pm
 
 0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
diff -r a3ab642d841f -r 021e833859a7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun Apr 28 05:14:43 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun Apr 28 05:17:51 2013 +0300
@@ -5,9 +5,19 @@
 
 use MooX 'late';
 
-extends('XML::Grammar::Screenplay::XSLT::Base');
+use XML::GrammarBase::Role::RelaxNG;
+use XML::GrammarBase::Role::XSLT;
 
-has '+xslt_transform_basename' => (default => "screenplay-xml-to-tei.xslt");
+with ('XML::GrammarBase::Role::RelaxNG');
+with XSLT(output_format => 'tei');
+
+has '+module_base' => (default => 'XML-Grammar-Fiction');
+has '+rng_schema_basename' => (default => 'screenplay-xml.rng');
+
+has '+to_tei_xslt_transform_basename' =>
+(
+    default => 'screenplay-xml-to-tei.xslt',
+);
 
 =head1 NAME
 
@@ -50,7 +60,9 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation(
+        {output_format => 'tei', %{$args}}
+    );
 }
 
 1;

changeset:   527:a3ab642d841f
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 05:14:43 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Convert ::Screenplay::ToHTML to XML::GrammarBase .


diff -r 5514131f02bf -r a3ab642d841f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 28 05:09:15 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 28 05:14:43 2013 +0300
@@ -20,6 +20,7 @@
 (
     default => 'fiction-xml-to-docbook.xslt',
 );
+
 =head1 NAME
 
 XML::Grammar::Fiction::ToDocBook - module that converts the Fiction-XML to
diff -r 5514131f02bf -r a3ab642d841f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 28 05:09:15 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 28 05:14:43 2013 +0300
@@ -2,9 +2,19 @@
 
 use MooX 'late';
 
-extends('XML::Grammar::Screenplay::XSLT::Base');
+use XML::GrammarBase::Role::RelaxNG;
+use XML::GrammarBase::Role::XSLT;
 
-has '+xslt_transform_basename' => (default => "screenplay-xml-to-html.xslt");
+with ('XML::GrammarBase::Role::RelaxNG');
+with XSLT(output_format => 'html');
+
+has '+module_base' => (default => 'XML-Grammar-Fiction');
+has '+rng_schema_basename' => (default => 'screenplay-xml.rng');
+
+has '+to_html_xslt_transform_basename' =>
+(
+    default => 'screenplay-xml-to-html.xslt',
+);
 
 =head1 NAME
 
@@ -49,7 +59,9 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation(
+        {output_format => 'html', %{$args}}
+    );
 }
 
 1;

changeset:   526:5514131f02bf
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 05:09:15 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Convert ::Fiction to XML::GrammarBase .


diff -r 2a7801a045ce -r 5514131f02bf perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 04:27:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 28 05:09:15 2013 +0300
@@ -5,6 +5,9 @@
     * lib/XML/Grammar/FictionBase/XSLT/Converter.pm
         - Refactoring: _data_dir now initialized from default => sub { ... }.
         - Refactoring: _rng now initialized from default => sub { ... }.
+    * Convert to XML::GrammarBase :
+        - lib/XML/Grammar/Fiction/ToHTML.pm
+        - lib/XML/Grammar/Fiction/ToDocBook.pm
 
 0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
diff -r 2a7801a045ce -r 5514131f02bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 28 04:27:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 28 05:09:15 2013 +0300
@@ -7,10 +7,19 @@
 
 use MooX 'late';
 
-extends ("XML::Grammar::Fiction::RNG_Renderer");
+use XML::GrammarBase::Role::RelaxNG;
+use XML::GrammarBase::Role::XSLT;
 
-has '+xslt_transform_basename' => (default => "fiction-xml-to-docbook.xslt");
+with ('XML::GrammarBase::Role::RelaxNG');
+with XSLT(output_format => 'docbook');
 
+has '+module_base' => (default => 'XML-Grammar-Fiction');
+has '+rng_schema_basename' => (default => 'fiction-xml.rng');
+
+has '+to_docbook_xslt_transform_basename' =>
+(
+    default => 'fiction-xml-to-docbook.xslt',
+);
 =head1 NAME
 
 XML::Grammar::Fiction::ToDocBook - module that converts the Fiction-XML to
@@ -41,7 +50,9 @@
 
 =cut
 
+=head2 perform_xslt_translation
 
+See L<XML::GrammarBase::Role::XSLT> . The output_format is C<'docbook'> .
 
 =head2 translate_to_docbook
 
@@ -74,7 +85,7 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation({output_format => 'docbook', %{$args}});
 }
 
 1;
diff -r 2a7801a045ce -r 5514131f02bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 28 04:27:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 28 05:09:15 2013 +0300
@@ -7,7 +7,19 @@
 
 use MooX 'late';
 
-extends( 'XML::Grammar::Fiction::RNG_Renderer' );
+use XML::GrammarBase::Role::RelaxNG;
+use XML::GrammarBase::Role::XSLT;
+
+with ('XML::GrammarBase::Role::RelaxNG');
+with XSLT(output_format => 'html');
+
+has '+module_base' => (default => 'XML-Grammar-Fiction');
+has '+rng_schema_basename' => (default => 'fiction-xml.rng');
+
+has '+to_html_xslt_transform_basename' =>
+(
+    default => 'fiction-xml-to-html.xslt',
+);
 
 =head1 NAME
 
@@ -38,7 +50,9 @@
 
 =cut
 
-has '+xslt_transform_basename' => (default => "fiction-xml-to-html.xslt", );
+=head2 perform_xslt_translation
+
+See L<XML::GrammarBase::Role::XSLT> . The output_format is C<'html'> .
 
 =head2 translate_to_html
 
@@ -71,7 +85,7 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation({output_format => 'html', %{$args}});
 }
 
 1;

changeset:   525:2a7801a045ce
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 04:27:38 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
description:
Reformatted.


diff -r 8c88366d35f6 -r 2a7801a045ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun Apr 28 04:11:56 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun Apr 28 04:27:38 2013 +0300
@@ -22,7 +22,14 @@
         return shift->_calc_data_dir();
     },
 );
-has '_data_dir_from_input' => (isa => 'Str', is => 'rw', init_arg => 'data_dir',);
+
+has '_data_dir_from_input' =>
+(
+    isa => 'Str',
+    is => 'rw',
+    init_arg => 'data_dir',
+);
+
 has '_rng' =>
 (
     isa => 'XML::LibXML::RelaxNG',

changeset:   524:8c88366d35f6
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Apr 28 04:11:56 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Remove an unused function.


diff -r 23b7e56415cf -r 8c88366d35f6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:41:32 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 28 04:11:56 2013 +0300
@@ -108,24 +108,6 @@
     );
 }
 
-sub _get_text_start
-{
-    my ($self, $elem) = @_;
-
-    if ($elem->_short_isa("Saying"))
-    {
-        return ["saying", 'character' => $elem->character()];
-    }
-    elsif ($elem->_short_isa("Description"))
-    {
-        return ["description"];
-    }
-    else
-    {
-        Carp::confess ("Unknown element class - " . ref($elem) . "!");
-    }
-}
-
 sub _paragraph_tag
 {
     return "p";

changeset:   523:23b7e56415cf
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:41:32 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Move _write_scene() to the base class.

Extract a _write_scene_main() in each of X-G-Fiction-FromProto and
X-G-Screenplay-FromProto .


diff -r e87da46e03f5 -r 23b7e56415cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:31:14 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:41:32 2013 +0300
@@ -289,26 +289,15 @@
     return ['List', @{$orig->($self)}];
 };
 
-sub _write_scene
+sub _write_scene_main
 {
-    my ($self, $args) = @_;
+    my ($self, $scene) = @_;
 
-    my $scene = $args->{scene};
-
-    my $tag = $scene->name;
-
-    if (($tag eq "s") || ($tag eq "scene"))
-    {
-        $self->_output_tag_with_childs_and_common_attributes(
-            $scene,
-            "section",
-            { missing_id_msg => "Unspecified id for scene!", },
-        );
-    }
-    else
-    {
-        confess "Improper scene tag - should be '<s>' or '<scene>'!";
-    }
+    $self->_output_tag_with_childs_and_common_attributes(
+        $scene,
+        "section",
+        { missing_id_msg => "Unspecified id for scene!", },
+    );
 
     return;
 }
diff -r e87da46e03f5 -r 23b7e56415cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:31:14 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:41:32 2013 +0300
@@ -384,6 +384,26 @@
     return $self->_parser->process_text($self->_read_file($filename));
 }
 
+sub _write_scene
+{
+    my ($self, $args) = @_;
+
+    my $scene = $args->{scene};
+
+    my $tag = $scene->name;
+
+    if (($tag eq "s") || ($tag eq "scene"))
+    {
+        $self->_write_scene_main($scene);
+    }
+    else
+    {
+        confess "Improper scene tag - should be '<s>' or '<scene>'!";
+    }
+
+    return;
+}
+
 =head2 $self->convert({ source => { file => $path_to_file } })
 
 Converts the file $path_to_file to XML and returns it. Throws an exception
diff -r e87da46e03f5 -r 23b7e56415cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:31:14 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:41:32 2013 +0300
@@ -130,37 +130,26 @@
     return "italics";
 }
 
-sub _write_scene
+sub _write_scene_main
 {
-    my ($self, $args) = @_;
+    my ($self, $scene) = @_;
 
-    my $scene = $args->{scene};
+    my $id = $scene->lookup_attr("id");
 
-    my $tag = $scene->name;
+    if (!defined($id))
+    {
+        Carp::confess("Unspecified id for scene!");
+    }
 
-    if (($tag eq "s") || ($tag eq "scene"))
-    {
-        my $id = $scene->lookup_attr("id");
+    my $title = $scene->lookup_attr("title");
+    my @t = (defined($title) ? (title => $title) : ());
 
-        if (!defined($id))
+    $self->_output_tag_with_childs(
         {
-            Carp::confess("Unspecified id for scene!");
+            'start' => ["scene", id => $id, @t],
+            elem => $scene,
         }
-
-        my $title = $scene->lookup_attr("title");
-        my @t = (defined($title) ? (title => $title) : ());
-
-        $self->_output_tag_with_childs(
-            {
-                'start' => ["scene", id => $id, @t],
-                elem => $scene,
-            }
-        );
-    }
-    else
-    {
-        confess "Improper scene tag - should be '<s>' or '<scene>'!";
-    }
+    );
 
     return;
 }

changeset:   522:e87da46e03f5
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:31:14 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Remove unused code.


diff -r 505ccb2171ac -r e87da46e03f5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:29:30 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:31:14 2013 +0300
@@ -67,16 +67,12 @@
 
         return;
     }
-    elsif ($elem->_short_isa("Text"))
+    else
     {
         $self->_write_elem_childs($elem);
 
         return;
     }
-    else
-    {
-        Carp::confess ("Unknown element class - " . ref($elem) . "!");
-    }
 }
 
 sub _paragraph_tag

changeset:   521:505ccb2171ac
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:29:30 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Merge _read_file into TagsTree2XML.


diff -r 137fb259f28a -r 505ccb2171ac perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:26:16 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:29:30 2013 +0300
@@ -313,23 +313,6 @@
     return;
 }
 
-sub _read_file
-{
-    my ($self, $filename) = @_;
-
-    open my $in, "<", $filename or
-        confess "Could not open the file \"$filename\" for slurping.";
-    binmode $in, ":utf8";
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>;
-    }
-    close($in);
-
-    return $contents;
-}
-
 sub _write_body
 {
     my $self = shift;
diff -r 137fb259f28a -r 505ccb2171ac perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:26:16 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:29:30 2013 +0300
@@ -357,6 +357,23 @@
     return;
 }
 
+sub _read_file
+{
+    my ($self, $filename) = @_;
+
+    open my $in, "<", $filename or
+        Carp::confess("Could not open the file \"$filename\" for slurping.");
+    binmode $in, ":utf8";
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+
+    return $contents;
+}
+
 sub _calc_tree
 {
     my ($self, $args) = @_;
diff -r 137fb259f28a -r 505ccb2171ac perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:26:16 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:29:30 2013 +0300
@@ -169,23 +169,6 @@
     return;
 }
 
-sub _read_file
-{
-    my ($self, $filename) = @_;
-
-    open my $in, "<", $filename or
-        confess "Could not open the file \"$filename\" for slurping.";
-    binmode $in, ":utf8";
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>;
-    }
-    close($in);
-
-    return $contents;
-}
-
 sub _get_default_xml_ns
 {
     return $screenplay_ns;

changeset:   520:137fb259f28a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:26:16 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Remove extraneous POD markup.


diff -r 4f0df0917fdd -r 137fb259f28a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:24:40 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:26:16 2013 +0300
@@ -34,8 +34,6 @@
 
 Internal - (to settle pod-coverage.).
 
-=cut
-
 =head2 $self->convert({ source => { file => $path_to_file } })
 
 Converts the file $path_to_file to XML and returns it.

changeset:   519:4f0df0917fdd
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:24:40 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Remove an unused method.


diff -r 11095d6e59eb -r 4f0df0917fdd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:23:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:24:40 2013 +0300
@@ -36,22 +36,6 @@
 
 =cut
 
-sub _init
-{
-    my ($self, $args) = @_;
-
-    local $Parse::RecDescent::skip = "";
-
-    my $parser_class =
-        ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
-
-    $self->_parser(
-        $parser_class->new()
-    );
-
-    return 0;
-}
-
 =head2 $self->convert({ source => { file => $path_to_file } })
 
 Converts the file $path_to_file to XML and returns it.

changeset:   518:11095d6e59eb
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:23:31 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Regularised the use's of the modules.


diff -r 223a45ff2942 -r 11095d6e59eb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:16:18 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:23:31 2013 +0300
@@ -5,14 +5,11 @@
 use autodie;
 
 use Carp;
-use HTML::Entities ();
 
 use MooX 'late';
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
 
-use List::Util (qw(first));
-
 my $fiction_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/};
 
 =head1 NAME
diff -r 223a45ff2942 -r 11095d6e59eb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:16:18 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:23:31 2013 +0300
@@ -1,5 +1,11 @@
 package XML::Grammar::Screenplay::FromProto;
 
+use strict;
+use warnings;
+use autodie;
+
+use Carp;
+
 use MooX 'late';
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");

changeset:   517:223a45ff2942
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:16:18 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Extract methods to avoid duplicate vars.


diff -r 24125a591f5e -r 223a45ff2942 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:10:58 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:16:18 2013 +0300
@@ -14,8 +14,6 @@
 use List::Util (qw(first));
 
 my $fiction_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/};
-my $xml_ns = "http://www.w3.org/XML/1998/namespace";
-my $xlink_ns = "http://www.w3.org/1999/xlink";
 
 =head1 NAME
 
@@ -83,12 +81,12 @@
     }
     else
     {
-        push @attr, ([$xml_ns, "id"] => $id);
+        push @attr, ([$self->_get_xml_xml_ns, "id"] => $id);
     }
 
     if (defined($lang))
     {
-        push @attr, ([$xml_ns, 'lang'] => $lang);
+        push @attr, ([$self->_get_xml_xml_ns, 'lang'] => $lang);
     }
 
     if (! defined($href))
@@ -102,7 +100,7 @@
     }
     else
     {
-        push @attr, ([$xlink_ns, 'href'] => $href);
+        push @attr, ([$self->_get_xlink_xml_ns(), 'href'] => $href);
     }
 
     return $self->_output_tag_with_childs(
diff -r 24125a591f5e -r 223a45ff2942 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:10:58 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:16:18 2013 +0300
@@ -9,8 +9,15 @@
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
-my $xml_ns = "http://www.w3.org/XML/1998/namespace";
-my $xlink_ns = "http://www.w3.org/1999/xlink";
+sub _get_xml_xml_ns
+{
+    return "http://www.w3.org/XML/1998/namespace";
+}
+
+sub _get_xlink_xml_ns
+{
+    return "http://www.w3.org/1999/xlink";
+}
 
 =head1 NAME
 
@@ -52,8 +59,8 @@
         PREFIX_MAP =>
         {
             $self->_get_default_xml_ns() => "",
-            $xml_ns => 'xml',
-            $xlink_ns => 'xlink',
+            $self->_get_xml_xml_ns() => 'xml',
+            $self->_get_xlink_xml_ns() => 'xlink',
         },
     );
 

changeset:   516:24125a591f5e
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:10:58 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Refactoring: merge two methods.


diff -r 5ecdb90e7cdd -r 24125a591f5e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:08:45 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:10:58 2013 +0300
@@ -53,7 +53,7 @@
 =cut
 
 
-sub _handle_text_start
+sub _write_Element_Text
 {
     my ($self, $elem) = @_;
 
@@ -96,13 +96,6 @@
     return "para";
 }
 
-sub _write_Element_Text
-{
-    my ($self, $elem) = @_;
-
-    return $self->_handle_text_start($elem);
-}
-
 sub _handle_elem_of_name_img
 {
     my ($self, $elem) = @_;

changeset:   515:5ecdb90e7cdd
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:08:45 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Delete an unused method.


diff -r d89723a24a29 -r 5ecdb90e7cdd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:06:49 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:08:45 2013 +0300
@@ -269,20 +269,6 @@
     return "i";
 }
 
-sub _handle_text_start
-{
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => $self->_get_text_start($elem),
-            elem => $elem,
-        },
-    );
-
-    return;
-}
-
 sub _write_Element_Text
 {
     return shift->_write_elem_childs(@_);

changeset:   514:d89723a24a29
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:06:49 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Move _output_tag() to base class.


diff -r fe4ff24d61ab -r d89723a24a29 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:03:00 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:06:49 2013 +0300
@@ -64,18 +64,6 @@
     return $orig->($self, @_);
 };
 
-sub _output_tag
-{
-    my ($self, $args) = @_;
-
-    my @start = @{$args->{start}};
-    $self->_writer->startTag([$fiction_ns,$start[0]], @start[1..$#start]);
-
-    $args->{in}->($self, $args);
-
-    $self->_writer->endTag();
-}
-
 sub _output_tag_with_childs_and_common_attributes
 {
     my ($self, $elem, $tag_name, $args) = @_;
diff -r fe4ff24d61ab -r d89723a24a29 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:03:00 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:06:49 2013 +0300
@@ -278,6 +278,18 @@
     return;
 }
 
+sub _output_tag
+{
+    my ($self, $args) = @_;
+
+    my @start = @{$args->{start}};
+    $self->_writer->startTag([$self->_get_default_xml_ns(),$start[0]], @start[1..$#start]);
+
+    $args->{in}->($self, $args);
+
+    $self->_writer->endTag();
+}
+
 sub _convert_while_handling_errors
 {
     my ($self, $args) = @_;
diff -r fe4ff24d61ab -r d89723a24a29 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:03:00 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:06:49 2013 +0300
@@ -52,17 +52,6 @@
 
 =cut
 
-sub _output_tag
-{
-    my ($self, $args) = @_;
-
-    my @start = @{$args->{start}};
-    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
-
-    $args->{in}->($self, $args);
-
-    $self->_writer->endTag();
-}
 
 sub _handle_text_start
 {

changeset:   513:fe4ff24d61ab
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:03:00 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Move _calc_tree() upwards.


diff -r 9437214933ce -r fe4ff24d61ab perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:00:23 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:03:00 2013 +0300
@@ -361,16 +361,6 @@
     return $contents;
 }
 
-sub _calc_tree
-{
-    my ($self, $args) = @_;
-
-    my $filename = $args->{source}->{file} or
-        confess "Wrong filename given.";
-
-    return $self->_parser->process_text($self->_read_file($filename));
-}
-
 sub _write_body
 {
     my $self = shift;
diff -r 9437214933ce -r fe4ff24d61ab perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:00:23 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 22:03:00 2013 +0300
@@ -338,6 +338,16 @@
     return;
 }
 
+sub _calc_tree
+{
+    my ($self, $args) = @_;
+
+    my $filename = $args->{source}->{file} or
+        confess "Wrong filename given.";
+
+    return $self->_parser->process_text($self->_read_file($filename));
+}
+
 =head2 $self->convert({ source => { file => $path_to_file } })
 
 Converts the file $path_to_file to XML and returns it. Throws an exception
diff -r 9437214933ce -r fe4ff24d61ab perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:00:23 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 22:03:00 2013 +0300
@@ -216,16 +216,6 @@
     return $contents;
 }
 
-sub _calc_tree
-{
-    my ($self, $args) = @_;
-
-    my $filename = $args->{source}->{file} or
-        confess "Wrong filename given.";
-
-    return $self->_parser->process_text($self->_read_file($filename));
-}
-
 sub _get_default_xml_ns
 {
     return $screenplay_ns;

changeset:   512:9437214933ce
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 22:00:23 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Remove an unused "use Data::Dumper;" stmt.


diff -r dfa78c133eec -r 9437214933ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 21:57:29 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 22:00:23 2013 +0300
@@ -48,8 +48,6 @@
 
 =cut
 
-use Data::Dumper;
-
 my %lookup = (map { $_ => $_ } qw( li ol ul ));
 
 around '_calc_passthrough_cb' => sub

changeset:   511:dfa78c133eec
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 21:57:29 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Extract a common method from Screenplay|Fiction.


diff -r fb88ff3e2940 -r dfa78c133eec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 21:49:40 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 21:57:29 2013 +0300
@@ -401,23 +401,9 @@
     return $fiction_ns;
 }
 
-sub convert
+sub _convert_write_content
 {
-    my ($self, $args) = @_;
-
-    # These should be un-commented for debugging.
-    # local $::RD_HINT = 1;
-    # local $::RD_TRACE = 1;
-
-    # We need this so P::RD won't skip leading whitespace at lines
-    # which are siginificant.
-
-    my $tree = $self->_calc_tree($args);
-
-    if (!defined($tree))
-    {
-        Carp::confess("Parsing failed.");
-    }
+    my ($self, $tree) = @_;
 
     my $writer = $self->_writer;
 
@@ -429,7 +415,7 @@
 
     $writer->endTag();
 
-    return ${$self->_flush_buffer()};
+    return;
 }
 
 1;
diff -r fb88ff3e2940 -r dfa78c133eec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 21:49:40 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 21:57:29 2013 +0300
@@ -338,6 +338,28 @@
     return;
 }
 
+=head2 $self->convert({ source => { file => $path_to_file } })
+
+Converts the file $path_to_file to XML and returns it. Throws an exception
+on failure.
+
+=cut
+
+sub convert
+{
+    my ($self, $args) = @_;
+
+    my $tree = $self->_calc_tree($args);
+    if (!defined($tree))
+    {
+        Carp::confess("Parsing failed.");
+    }
+
+    $self->_convert_write_content($tree);
+
+    return ${$self->_flush_buffer()};
+}
+
 =head2 meta()
 
 Internal - (to settle pod-coverage.).
diff -r fb88ff3e2940 -r dfa78c133eec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:49:40 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:57:29 2013 +0300
@@ -231,23 +231,9 @@
     return $screenplay_ns;
 }
 
-sub convert
+sub _convert_write_content
 {
-    my ($self, $args) = @_;
-
-    # These should be un-commented for debugging.
-    # local $::RD_HINT = 1;
-    # local $::RD_TRACE = 1;
-
-    # We need this so P::RD won't skip leading whitespace at lines
-    # which are siginificant.
-
-    my $tree = $self->_calc_tree($args);
-
-    if (!defined($tree))
-    {
-        Carp::confess("Parsing failed.");
-    }
+    my ($self, $tree) = @_;
 
     my $writer = $self->_writer;
 
@@ -263,7 +249,7 @@
 
     $writer->endTag();
 
-    return ${$self->_flush_buffer()};
+    return;
 }
 
 1;

changeset:   510:fb88ff3e2940
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 21:49:40 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Remove extraneous code.


diff -r 32446e1ba4fe -r fb88ff3e2940 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:48:36 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:49:40 2013 +0300
@@ -264,9 +264,6 @@
     $writer->endTag();
 
     return ${$self->_flush_buffer()};
-    my $ret = $self->_buffer();
-    $self->_reset_buffer();
-    return ${$ret};
 }
 
 1;

changeset:   509:32446e1ba4fe
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 21:48:36 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Extract a common writer/buffer.


diff -r 6d00b9c241b7 -r 32446e1ba4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 21:04:00 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 21:48:36 2013 +0300
@@ -6,7 +6,6 @@
 
 use Carp;
 use HTML::Entities ();
-use XML::Writer;
 
 use MooX 'late';
 
@@ -397,6 +396,11 @@
     return;
 }
 
+sub _get_default_xml_ns
+{
+    return $fiction_ns;
+}
+
 sub convert
 {
     my ($self, $args) = @_;
@@ -415,34 +419,17 @@
         Carp::confess("Parsing failed.");
     }
 
-    my $buffer = "";
-    $self->_buffer(\$buffer);
+    my $writer = $self->_writer;
 
-    my $writer = XML::Writer->new(
-        OUTPUT => $self->_buffer(),
-        ENCODING => "utf-8",
-        NAMESPACES => 1,
-        PREFIX_MAP =>
-        {
-             $fiction_ns => q{},
-             $xml_ns => 'xml',
-             $xlink_ns => 'xlink',
-        }
-    );
-
-    $writer->xmlDecl("utf-8");
     $writer->startTag([$fiction_ns, "document"], "version" => "0.2");
     $writer->startTag([$fiction_ns, "head"]);
     $writer->endTag();
 
-    # Now we're inside the body.
-    $self->_writer($writer);
-
     $self->_write_body({body => $tree});
 
     $writer->endTag();
 
-    return ${$self->_buffer()};
+    return ${$self->_flush_buffer()};
 }
 
 1;
diff -r 6d00b9c241b7 -r 32446e1ba4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 21:04:00 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 21:48:36 2013 +0300
@@ -9,6 +9,8 @@
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
+my $xml_ns = "http://www.w3.org/XML/1998/namespace";
+my $xlink_ns = "http://www.w3.org/1999/xlink";
 
 =head1 NAME
 
@@ -39,9 +41,64 @@
     },
 );
 
-has "_writer" => ('isa' => "Maybe[XML::Writer]", 'is' => "rw");
+sub _get_initial_writer
+{
+    my $self = shift;
 
-has '_buffer' => (is => "rw");
+    my $writer = XML::Writer->new(
+        OUTPUT => $self->_buffer(),
+        ENCODING => "utf-8",
+        NAMESPACES => 1,
+        PREFIX_MAP =>
+        {
+            $self->_get_default_xml_ns() => "",
+            $xml_ns => 'xml',
+            $xlink_ns => 'xlink',
+        },
+    );
+
+    $writer->xmlDecl("utf-8");
+
+    return $writer;
+}
+
+has "_writer" => (
+    'isa' => "Maybe[XML::Writer]",
+    'is' => "rw",
+    lazy => 1,
+    default => sub { return shift->_get_initial_writer(); },
+);
+
+sub _get_initial_buffer {
+    my $buffer = '';
+    return \$buffer;
+}
+
+has '_buffer' => (
+    is => "rw",
+    lazy => 1,
+    default => sub { return shift->_get_initial_buffer; },
+);
+
+sub _reset_buffer
+{
+    my $self = shift;
+
+    $self->_buffer($self->_get_initial_buffer());
+    $self->_writer($self->_get_initial_writer());
+
+    return;
+}
+
+sub _flush_buffer
+{
+    my $self = shift;
+
+    my $ret = $self->_buffer();
+    $self->_reset_buffer();
+
+    return $ret;
+}
 
 my %passthrough_elem =
 (
diff -r 6d00b9c241b7 -r 32446e1ba4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:04:00 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:48:36 2013 +0300
@@ -1,7 +1,5 @@
 package XML::Grammar::Screenplay::FromProto;
 
-use XML::Writer;
-
 use MooX 'late';
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
@@ -228,6 +226,11 @@
     return $self->_parser->process_text($self->_read_file($filename));
 }
 
+sub _get_default_xml_ns
+{
+    return $screenplay_ns;
+}
+
 sub convert
 {
     my ($self, $args) = @_;
@@ -246,28 +249,13 @@
         Carp::confess("Parsing failed.");
     }
 
-    my $buffer = "";
-    $self->_buffer(\$buffer);
+    my $writer = $self->_writer;
 
-    my $writer = XML::Writer->new(
-        OUTPUT => $self->_buffer(),
-        ENCODING => "utf-8",
-        NAMESPACES => 1,
-        PREFIX_MAP =>
-        {
-             $screenplay_ns => "",
-        }
-    );
-
-    $writer->xmlDecl("utf-8");
     $writer->startTag([$screenplay_ns, "document"]);
     $writer->startTag([$screenplay_ns, "head"]);
     $writer->endTag();
     $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
 
-    # Now we're inside the body.
-    $self->_writer($writer);
-
     $self->_write_scene({scene => $tree});
 
     # Ending the body
@@ -275,7 +263,10 @@
 
     $writer->endTag();
 
-    return ${$self->_buffer()};
+    return ${$self->_flush_buffer()};
+    my $ret = $self->_buffer();
+    $self->_reset_buffer();
+    return ${$ret};
 }
 
 1;

changeset:   508:6d00b9c241b7
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 21:04:00 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Moved to a base class.


diff -r ed04f2dfb055 -r 6d00b9c241b7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:46:05 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 21:04:00 2013 +0300
@@ -416,8 +416,10 @@
     }
 
     my $buffer = "";
+    $self->_buffer(\$buffer);
+
     my $writer = XML::Writer->new(
-        OUTPUT => \$buffer,
+        OUTPUT => $self->_buffer(),
         ENCODING => "utf-8",
         NAMESPACES => 1,
         PREFIX_MAP =>
@@ -440,7 +442,7 @@
 
     $writer->endTag();
 
-    return $buffer;
+    return ${$self->_buffer()};
 }
 
 1;
diff -r ed04f2dfb055 -r 6d00b9c241b7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:46:05 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 21:04:00 2013 +0300
@@ -41,6 +41,8 @@
 
 has "_writer" => ('isa' => "Maybe[XML::Writer]", 'is' => "rw");
 
+has '_buffer' => (is => "rw");
+
 my %passthrough_elem =
 (
     b => sub { return shift->_bold_tag_name(); },
diff -r ed04f2dfb055 -r 6d00b9c241b7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 20:46:05 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 21:04:00 2013 +0300
@@ -228,8 +228,6 @@
     return $self->_parser->process_text($self->_read_file($filename));
 }
 
-has '_buffer' => (is => "rw");
-
 sub convert
 {
     my ($self, $args) = @_;

changeset:   507:ed04f2dfb055
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 20:46:05 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/rejects/Fiction_FromProto.pm
description:
Extract a method.


diff -r 1779f82eeaac -r ed04f2dfb055 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:29:35 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:46:05 2013 +0300
@@ -79,22 +79,6 @@
     $self->_writer->endTag();
 }
 
-sub _output_tag_with_childs
-{
-    my ($self, $args) = @_;
-
-    return
-        $self->_output_tag({
-            %$args,
-            'in' => sub {
-                foreach my $child (@{$args->{elem}->_get_childs()})
-                {
-                    $self->_write_elem({elem => $child,});
-                }
-            },
-        });
-}
-
 sub _output_tag_with_childs_and_common_attributes
 {
     my ($self, $elem, $tag_name, $args) = @_;
@@ -273,6 +257,7 @@
     # TODO :
     # Eliminate the Law-of-Demeter-syndrome here.
     my $list = $elem->_get_childs()->[0];
+
     $self->_output_tag(
         {
             start => ["title"],
@@ -315,14 +300,7 @@
 
 sub _write_Element_Text
 {
-    my ($self, $elem) = @_;
-
-    foreach my $child (@{$elem->_get_childs()})
-    {
-        $self->_write_elem({ elem => $child,},);
-    }
-
-    return;
+    return shift->_write_elem_childs(@_);
 }
 
 sub _write_Element_List
@@ -404,30 +382,12 @@
     my $body = $args->{'body'};
 
     my $tag = $body->name;
+
     if ($tag ne "body")
     {
         confess "Improper body tag - should be '<body>'!";
     }
 
-=begin foo
-
-    my $title =
-        first
-        { $_->name() eq "title" }
-        @{$body->_get_childs()}
-        ;
-
-    my @t =
-    (
-          defined($title)
-        ? (title => $title->_get_childs()->[0])
-        : ()
-    );
-
-=end foo
-
-=cut
-
     $self->_output_tag_with_childs_and_common_attributes(
         $body,
         'body',
diff -r 1779f82eeaac -r ed04f2dfb055 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:29:35 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:46:05 2013 +0300
@@ -124,6 +124,31 @@
     return [qw(Text Paragraph Element Comment)];
 }
 
+sub _output_tag_with_childs
+{
+    my ($self, $args) = @_;
+
+    return
+        $self->_output_tag({
+            %$args,
+            'in' => sub {
+                return $self->_write_elem_childs( $args->{elem} );
+            },
+        });
+}
+
+sub _write_elem_childs
+{
+    my ($self, $elem) = @_;
+
+    foreach my $child (@{$elem->_get_childs()})
+    {
+        $self->_write_elem({ elem => $child,},);
+    }
+
+    return;
+}
+
 sub _write_elem_obj
 {
     my ($self, $args) = @_;
diff -r 1779f82eeaac -r ed04f2dfb055 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 20:29:35 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 20:46:05 2013 +0300
@@ -66,22 +66,6 @@
     $self->_writer->endTag();
 }
 
-sub _output_tag_with_childs
-{
-    my ($self, $args) = @_;
-
-    return
-        $self->_output_tag({
-            %$args,
-            'in' => sub {
-                foreach my $child (@{$args->{elem}->_get_childs()})
-                {
-                    $self->_write_elem({elem => $child,});
-                }
-            },
-        });
-}
-
 sub _handle_text_start
 {
     my ($self, $elem) = @_;
@@ -94,6 +78,8 @@
                 elem => $elem,
             },
         );
+
+        return;
     }
     elsif ($elem->_short_isa("Description"))
     {
@@ -103,13 +89,14 @@
                 elem => $elem,
             },
         );
+
+        return;
     }
     elsif ($elem->_short_isa("Text"))
     {
-        foreach my $child (@{$elem->_get_childs()})
-        {
-            $self->_write_elem({ elem => $child,},);
-        }
+        $self->_write_elem_childs($elem);
+
+        return;
     }
     else
     {
diff -r 1779f82eeaac -r ed04f2dfb055 perl/modules/XML-Grammar-Fiction/rejects/Fiction_FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/Fiction_FromProto.pm	Sat Apr 27 20:46:05 2013 +0300
@@ -0,0 +1,23 @@
+package rejects::Fiction_FromProto;
+
+use strict;
+use warnings;
+
+=begin foo
+
+    my $title =
+        first
+        { $_->name() eq "title" }
+        @{$body->_get_childs()}
+        ;
+
+    my @t =
+    (
+          defined($title)
+        ? (title => $title->_get_childs()->[0])
+        : ()
+    );
+
+=end foo
+
+=cut

changeset:   506:1779f82eeaac
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 20:29:35 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Refacotring: convert to a list.


diff -r 953168053d46 -r 1779f82eeaac perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:21:36 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:29:35 2013 +0300
@@ -337,22 +337,12 @@
     return;
 }
 
-around '_write_elem_obj' => sub {
+around '_calc_write_elem_obj_classes' => sub
+{
     my $orig = shift;
     my $self = shift;
 
-    my ($args) = @_;
-
-    my $elem = $args->{elem};
-
-    if ($elem->_short_isa("List"))
-    {
-        return $self->_write_Element_List($elem);
-    }
-    else
-    {
-        return $orig->($self, @_);
-    }
+    return ['List', @{$orig->($self)}];
 };
 
 sub _write_scene
diff -r 953168053d46 -r 1779f82eeaac perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:21:36 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:29:35 2013 +0300
@@ -119,30 +119,28 @@
     $self->_writer->comment($elem->text());
 }
 
+sub _calc_write_elem_obj_classes
+{
+    return [qw(Text Paragraph Element Comment)];
+}
+
 sub _write_elem_obj
 {
     my ($self, $args) = @_;
 
     my $elem = $args->{elem};
 
-    if ($elem->_short_isa("Text"))
+    foreach my $class (@{$self->_calc_write_elem_obj_classes()})
     {
-        $self->_write_Element_Text($elem);
-    }
-    if ($elem->_short_isa("Paragraph"))
-    {
-        $self->_write_Element_Paragraph($elem);
-    }
-    elsif ($elem->_short_isa("Element"))
-    {
-        $self->_write_Element_Element($elem);
-    }
-    elsif ($elem->_short_isa("Comment"))
-    {
-        $self->_write_Element_Comment($elem);
+        if ($elem->_short_isa($class))
+        {
+            my $meth = "_write_Element_$class";
+            $self->$meth($elem);
+            return;
+        }
     }
 
-    return;
+    Carp::confess("Class of element not detected - " . ref($elem) . "!");
 }
 
 sub _write_Element_elem

changeset:   505:953168053d46
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 20:21:36 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Refactoring - extract methods.


diff -r cebf75a09f29 -r 953168053d46 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:10:37 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:21:36 2013 +0300
@@ -325,21 +325,29 @@
     return;
 }
 
+sub _write_Element_List
+{
+    my ($self, $elem) = @_;
+
+    foreach my $child (@{$elem->contents()})
+    {
+        $self->_write_elem({elem => $child, });
+    }
+
+    return;
+}
+
 around '_write_elem_obj' => sub {
     my $orig = shift;
     my $self = shift;
+
     my ($args) = @_;
 
     my $elem = $args->{elem};
 
     if ($elem->_short_isa("List"))
     {
-        foreach my $child (@{$elem->contents()})
-        {
-            $self->_write_elem({elem => $child, });
-        }
-
-        return;
+        return $self->_write_Element_List($elem);
     }
     else
     {
diff -r cebf75a09f29 -r 953168053d46 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:10:37 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:21:36 2013 +0300
@@ -93,6 +93,32 @@
     }
 }
 
+sub _write_Element_Paragraph
+{
+    my ($self, $elem) = @_;
+
+    return $self->_output_tag_with_childs(
+        {
+            start => [$self->_paragraph_tag()],
+            elem => $elem,
+        },
+    );
+}
+
+sub _write_Element_Element
+{
+    my ($self, $elem) = @_;
+
+    return $self->_write_Element_elem($elem);
+}
+
+sub _write_Element_Comment
+{
+    my ($self, $elem) = @_;
+
+    $self->_writer->comment($elem->text());
+}
+
 sub _write_elem_obj
 {
     my ($self, $args) = @_;
@@ -105,20 +131,15 @@
     }
     if ($elem->_short_isa("Paragraph"))
     {
-        $self->_output_tag_with_childs(
-            {
-               start => [$self->_paragraph_tag()],
-                elem => $elem,
-            },
-        );
+        $self->_write_Element_Paragraph($elem);
     }
     elsif ($elem->_short_isa("Element"))
     {
-        $self->_write_Element_elem($elem);
+        $self->_write_Element_Element($elem);
     }
     elsif ($elem->_short_isa("Comment"))
     {
-        $self->_writer->comment($elem->text());
+        $self->_write_Element_Comment($elem);
     }
 
     return;

changeset:   504:cebf75a09f29
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 20:10:37 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Add an explicit return.


diff -r 56b9963b5b0d -r cebf75a09f29 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:09:08 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:10:37 2013 +0300
@@ -120,6 +120,8 @@
     {
         $self->_writer->comment($elem->text());
     }
+
+    return;
 }
 
 sub _write_Element_elem

changeset:   503:56b9963b5b0d
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 20:09:08 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Extract _write_Element_Text .

This way - we have the same functionality only in one place.


diff -r b2b49c8782bf -r 56b9963b5b0d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:03:07 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:09:08 2013 +0300
@@ -313,6 +313,18 @@
     return;
 }
 
+sub _write_Element_Text
+{
+    my ($self, $elem) = @_;
+
+    foreach my $child (@{$elem->_get_childs()})
+    {
+        $self->_write_elem({ elem => $child,},);
+    }
+
+    return;
+}
+
 around '_write_elem_obj' => sub {
     my $orig = shift;
     my $self = shift;
@@ -329,15 +341,6 @@
 
         return;
     }
-    elsif ($elem->_short_isa("Text"))
-    {
-        foreach my $child (@{$elem->_get_childs()})
-        {
-            $self->_write_elem({ elem => $child,},);
-        }
-
-        return;
-    }
     else
     {
         return $orig->($self, @_);
diff -r b2b49c8782bf -r 56b9963b5b0d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:03:07 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:09:08 2013 +0300
@@ -99,6 +99,10 @@
 
     my $elem = $args->{elem};
 
+    if ($elem->_short_isa("Text"))
+    {
+        $self->_write_Element_Text($elem);
+    }
     if ($elem->_short_isa("Paragraph"))
     {
         $self->_output_tag_with_childs(
diff -r b2b49c8782bf -r 56b9963b5b0d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 20:03:07 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 20:09:08 2013 +0300
@@ -122,22 +122,12 @@
     return "para";
 }
 
-around '_write_elem_obj' => sub {
-    my $orig = shift;
-    my $self = shift;
-    my ($args) = @_;
+sub _write_Element_Text
+{
+    my ($self, $elem) = @_;
 
-    my $elem = $args->{elem};
-
-    if ($elem->_short_isa("Text"))
-    {
-        $self->_handle_text_start($elem);
-    }
-    else
-    {
-        return $orig->($self, @_);
-    }
-};
+    return $self->_handle_text_start($elem);
+}
 
 sub _handle_elem_of_name_img
 {

changeset:   502:b2b49c8782bf
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 20:03:07 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Refactoring: extract common code.


diff -r a48967c5636a -r b2b49c8782bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 17:28:10 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 20:03:07 2013 +0300
@@ -313,15 +313,21 @@
     return;
 }
 
-sub _write_elem
-{
-    my ($self, $args) = @_;
+around '_write_elem_obj' => sub {
+    my $orig = shift;
+    my $self = shift;
+    my ($args) = @_;
 
     my $elem = $args->{elem};
 
-    if (ref($elem) eq "")
+    if ($elem->_short_isa("List"))
     {
-        $self->_writer->characters($elem);
+        foreach my $child (@{$elem->contents()})
+        {
+            $self->_write_elem({elem => $child, });
+        }
+
+        return;
     }
     elsif ($elem->_short_isa("Text"))
     {
@@ -329,36 +335,14 @@
         {
             $self->_write_elem({ elem => $child,},);
         }
+
+        return;
     }
-    elsif ($elem->_short_isa("Paragraph"))
+    else
     {
-        $self->_output_tag_with_childs(
-            {
-                start => [$self->_paragraph_tag()],
-                elem => $elem,
-            },
-        );
+        return $orig->($self, @_);
     }
-    elsif ($elem->_short_isa("List"))
-    {
-        foreach my $child (@{$elem->contents()})
-        {
-            $self->_write_elem({elem => $child, });
-        }
-    }
-    elsif ($elem->_short_isa("Element"))
-    {
-        $self->_write_Element_elem($elem);
-    }
-    elsif ($elem->_short_isa("Text"))
-    {
-        $self->_handle_text_start($elem);
-    }
-    elsif ($elem->_short_isa("Comment"))
-    {
-        $self->_writer->comment($elem->text());
-    }
-}
+};
 
 sub _write_scene
 {
diff -r a48967c5636a -r b2b49c8782bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 17:28:10 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 20:03:07 2013 +0300
@@ -77,6 +77,47 @@
     }
 }
 
+sub _write_elem
+{
+    my ($self, $args) = @_;
+
+    my $elem = $args->{elem};
+
+    if (ref($elem) eq "")
+    {
+        $self->_writer->characters($elem);
+    }
+    else
+    {
+        return $self->_write_elem_obj($args);
+    }
+}
+
+sub _write_elem_obj
+{
+    my ($self, $args) = @_;
+
+    my $elem = $args->{elem};
+
+    if ($elem->_short_isa("Paragraph"))
+    {
+        $self->_output_tag_with_childs(
+            {
+               start => [$self->_paragraph_tag()],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->_short_isa("Element"))
+    {
+        $self->_write_Element_elem($elem);
+    }
+    elsif ($elem->_short_isa("Comment"))
+    {
+        $self->_writer->comment($elem->text());
+    }
+}
+
 sub _write_Element_elem
 {
     my ($self, $elem) = @_;
diff -r a48967c5636a -r b2b49c8782bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 17:28:10 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 20:03:07 2013 +0300
@@ -122,6 +122,23 @@
     return "para";
 }
 
+around '_write_elem_obj' => sub {
+    my $orig = shift;
+    my $self = shift;
+    my ($args) = @_;
+
+    my $elem = $args->{elem};
+
+    if ($elem->_short_isa("Text"))
+    {
+        $self->_handle_text_start($elem);
+    }
+    else
+    {
+        return $orig->($self, @_);
+    }
+};
+
 sub _handle_elem_of_name_img
 {
     my ($self, $elem) = @_;
@@ -172,39 +189,6 @@
     return "italics";
 }
 
-sub _write_elem
-{
-    my ($self, $args) = @_;
-
-    my $elem = $args->{elem};
-
-    if (ref($elem) eq "")
-    {
-        $self->_writer->characters($elem);
-    }
-    elsif ($elem->_short_isa("Paragraph"))
-    {
-        $self->_output_tag_with_childs(
-            {
-               start => [$self->_paragraph_tag()],
-                elem => $elem,
-            },
-        );
-    }
-    elsif ($elem->_short_isa("Element"))
-    {
-        $self->_write_Element_elem($elem);
-    }
-    elsif ($elem->_short_isa("Text"))
-    {
-        $self->_handle_text_start($elem);
-    }
-    elsif ($elem->_short_isa("Comment"))
-    {
-        $self->_writer->comment($elem->text());
-    }
-}
-
 sub _write_scene
 {
     my ($self, $args) = @_;

changeset:   501:a48967c5636a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 17:28:10 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Convert to Maybe.


diff -r a90376789d8a -r a48967c5636a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 17:20:55 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 17:28:10 2013 +0300
@@ -39,7 +39,7 @@
     },
 );
 
-has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
+has "_writer" => ('isa' => "Maybe[XML::Writer]", 'is' => "rw");
 
 my %passthrough_elem =
 (

changeset:   500:a90376789d8a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 17:20:55 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
description:
Remove the POD of "BUILD".


diff -r 44ac46c07a12 -r a90376789d8a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:19:43 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:20:55 2013 +0300
@@ -132,10 +132,6 @@
 
 Internal - (to settle pod-coverage.).
 
-=head2 BUILD()
-
-Internal - (to settle pod-coverage.).
-
 =head2 rng_schema_basename()
 
 Inherited - (to settle pod-coverage.).

changeset:   499:44ac46c07a12
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 17:19:43 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
description:
Get rid of the BUILD.


diff -r 7b12a8b190b9 -r 44ac46c07a12 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:10:30 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:19:43 2013 +0300
@@ -47,8 +47,64 @@
         );
 }
 
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+has '_xml_parser' =>
+(
+    isa => 'XML::LibXML',
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return shift->_calc_xml_parser();
+    },
+);
+
+sub _calc_xml_parser
+{
+    my $self = shift;
+
+    return XML::LibXML->new();
+}
+
+has '_xslt_processor' =>
+(
+    isa => "XML::LibXSLT",
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return shift->_calc_xslt_processor();
+    },
+);
+
+sub _calc_xslt_processor
+{
+    my ($self) = @_;
+
+    return XML::LibXSLT->new();
+}
+
+has '_stylesheet' =>
+(
+    isa => "XML::LibXSLT::StylesheetWrapper",
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return shift->_calc_stylesheet();
+    },
+);
+
+sub _calc_stylesheet
+{
+    my ($self) = @_;
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(),
+                $self->xslt_transform_basename(),
+            ),
+        );
+
+    return $self->_xslt_processor->parse_stylesheet($style_doc);
+}
+
 has 'rng_schema_basename' => (is => 'ro', isa => 'Str', required => 1,);
 has 'xslt_transform_basename' => (is => 'ro', isa => 'Str', required => 1,);
 
@@ -97,26 +153,6 @@
     return $self->_data_dir_from_input() || dist_dir( 'XML-Grammar-Fiction');
 }
 
-sub BUILD
-{
-    my ($self) = @_;
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(),
-                $self->xslt_transform_basename(),
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
 =head2 $converter->perform_translation
 
 =over 4

changeset:   498:7b12a8b190b9
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 17:10:30 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
description:
Add _calc_rng.


diff -r 8226d359fb48 -r 7b12a8b190b9 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 17:06:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 17:10:30 2013 +0300
@@ -2,7 +2,9 @@
 
     * Update the glob in inc/Test/Run/Builder.pm .
         - include t/screenplay/*.t and t/fiction/*.t .
-    * Refactoring: _data_dir now initialized from default => sub { ... }.
+    * lib/XML/Grammar/FictionBase/XSLT/Converter.pm
+        - Refactoring: _data_dir now initialized from default => sub { ... }.
+        - Refactoring: _rng now initialized from default => sub { ... }.
 
 0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
diff -r 8226d359fb48 -r 7b12a8b190b9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:06:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:10:30 2013 +0300
@@ -23,7 +23,30 @@
     },
 );
 has '_data_dir_from_input' => (isa => 'Str', is => 'rw', init_arg => 'data_dir',);
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_rng' =>
+(
+    isa => 'XML::LibXML::RelaxNG',
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return shift->_calc_rng();
+    },
+);
+
+sub _calc_rng
+{
+    my $self = shift;
+
+    return
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(),
+                $self->rng_schema_basename(),
+            ),
+        );
+}
+
 has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
 has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
 has 'rng_schema_basename' => (is => 'ro', isa => 'Str', required => 1,);
@@ -78,17 +101,6 @@
 {
     my ($self) = @_;
 
-    my $rngschema =
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(),
-                $self->rng_schema_basename(),
-            ),
-        );
-
-    $self->_rng($rngschema);
-
     $self->_xml_parser(XML::LibXML->new());
 
     my $xslt = XML::LibXSLT->new();

changeset:   497:8226d359fb48
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 17:06:02 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
description:
Initialize _data_dir not in BUILD.


diff -r 6db8e19fedac -r 8226d359fb48 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 16:45:28 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 17:06:02 2013 +0300
@@ -2,6 +2,7 @@
 
     * Update the glob in inc/Test/Run/Builder.pm .
         - include t/screenplay/*.t and t/fiction/*.t .
+    * Refactoring: _data_dir now initialized from default => sub { ... }.
 
 0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
diff -r 6db8e19fedac -r 8226d359fb48 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 16:45:28 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 17:06:02 2013 +0300
@@ -13,7 +13,15 @@
 
 use MooX 'late';
 
-has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_data_dir' =>
+(
+    isa => 'Str',
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return shift->_calc_data_dir();
+    },
+);
 has '_data_dir_from_input' => (isa => 'Str', is => 'rw', init_arg => 'data_dir',);
 has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
 has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
@@ -59,15 +67,17 @@
 
 =cut
 
+sub _calc_data_dir
+{
+    my ($self) = @_;
+
+    return $self->_data_dir_from_input() || dist_dir( 'XML-Grammar-Fiction');
+}
+
 sub BUILD
 {
     my ($self) = @_;
 
-    my $data_dir = $self->_data_dir_from_input() ||
-        dist_dir( 'XML-Grammar-Fiction');
-
-    $self->_data_dir($data_dir);
-
     my $rngschema =
         XML::LibXML::RelaxNG->new(
             location =>

changeset:   496:6db8e19fedac
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 16:45:28 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
description:
Update the glob in inc/Test/Run/Builder.pm .

So ./Build runtest will run all tests.


diff -r 3299df065e6c -r 6db8e19fedac perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 14:29:59 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 16:45:28 2013 +0300
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Update the glob in inc/Test/Run/Builder.pm .
+        - include t/screenplay/*.t and t/fiction/*.t .
+
 0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
         - Requires File::Find::Object which isn't a dependency.
diff -r 3299df065e6c -r 6db8e19fedac perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Sat Apr 27 14:29:59 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Sat Apr 27 16:45:28 2013 +0300
@@ -46,7 +46,7 @@
 
 sub get_test_run_test_files
 {
-    return [glob("t/*.t")]
+    return [sort { $a cmp $b } (glob("t/*.t"), glob("t/*/*.t"), )]
 }
 
 sub do_test_run_tests

changeset:   495:3299df065e6c
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 14:29:59 2013 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.12.5


diff -r 2e26239a59d7 -r 3299df065e6c .hgtags
--- a/.hgtags	Sat Apr 27 14:29:38 2013 +0300
+++ b/.hgtags	Sat Apr 27 14:29:59 2013 +0300
@@ -33,3 +33,4 @@
 7dbc95599c20b72ae8f5d1be9c0c25b34f7704a0 releases/XML-Grammar-Fiction/0.12.2
 43d8b9f86e24518e231fd8ff9e106060998902af releases/XML-Grammar-Fiction/0.12.3
 0a002236e64348b8a5e61adf8bfe9360a815f4bd releases/XML-Grammar-Fiction/0.12.4
+2e26239a59d7aae0b8b4d30bd43ff46ca7b7bdd0 releases/XML-Grammar-Fiction/0.12.5

changeset:   494:2e26239a59d7
tag:         releases/XML-Grammar-Fiction/0.12.5
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 14:29:38 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump version number to 0.12.5.


diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 14:29:38 2013 +0300
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.12.5      Sat 27 Apr 14:25:15 IDT 2013
     * Do not try to compile scripts/bump-version-number.pl .
         - Requires File::Find::Object which isn't a dependency.
     * New version of MooX::late to avoid test failures.
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use Exception::Class
     (
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head2 new()
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use MooX 'late';
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use MooX 'late';
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -9,7 +9,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use MooX 'late';
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use MooX 'late';
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use MooX 'late';
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 1;
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 METHODS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 METHODS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 sub is_tag_of_name
 {
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -936,11 +936,11 @@
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 use XML::Writer;
 use HTML::Entities ();
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 METHODS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 SYNOPSIS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 NAME
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 NAME
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 NAME
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =encoding utf8
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head2 new()
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 1;
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head2 new()
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head1 METHODS
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =cut
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 =head2 new()
 
diff -r bda19b8863bc -r 2e26239a59d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat Apr 27 14:25:02 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat Apr 27 14:29:38 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.4';
+our $VERSION = '0.12.5';
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
@@ -19,7 +19,7 @@
 
 =head1 VERSION
 
-Version 0.12.4
+Version 0.12.5
 
 =head1 METHODS
 

changeset:   493:bda19b8863bc
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 14:25:02 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/dist.ini
description:
New version of MooX::late to avoid test failures.


diff -r 24fe607cc33c -r bda19b8863bc perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 14:20:53 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 14:25:02 2013 +0300
@@ -2,6 +2,8 @@
 
     * Do not try to compile scripts/bump-version-number.pl .
         - Requires File::Find::Object which isn't a dependency.
+    * New version of MooX::late to avoid test failures.
+        - MooX::late = 0.010
 
 0.12.4      Mon 22 Apr 13:29:13 IDT 2013
     * Add $VERSION to more missing files.
diff -r 24fe607cc33c -r bda19b8863bc perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Sat Apr 27 14:20:53 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Sat Apr 27 14:25:02 2013 +0300
@@ -12,7 +12,7 @@
 [PodSyntaxTests]
 [PodCoverageTests]
 [Prereqs]
-MooX::late = 0.007
+MooX::late = 0.010
 [Test::Compile]
 fake_home = 1
 skip = bump-ver

changeset:   492:24fe607cc33c
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Apr 27 14:20:53 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/dist.ini
description:
Skip.


diff -r 309836ced2dd -r 24fe607cc33c perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:32:06 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 27 14:20:53 2013 +0300
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Do not try to compile scripts/bump-version-number.pl .
+        - Requires File::Find::Object which isn't a dependency.
+
 0.12.4      Mon 22 Apr 13:29:13 IDT 2013
     * Add $VERSION to more missing files.
 
diff -r 309836ced2dd -r 24fe607cc33c perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Mon Apr 22 13:32:06 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Sat Apr 27 14:20:53 2013 +0300
@@ -15,6 +15,7 @@
 MooX::late = 0.007
 [Test::Compile]
 fake_home = 1
+skip = bump-ver
 [PruneCruft]
 [VersionFromModule]
 [MetaResources]

changeset:   491:309836ced2dd
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 22 13:32:06 2013 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.12.4


diff -r 0a002236e643 -r 309836ced2dd .hgtags
--- a/.hgtags	Mon Apr 22 13:29:44 2013 +0300
+++ b/.hgtags	Mon Apr 22 13:32:06 2013 +0300
@@ -32,3 +32,4 @@
 efe239959fd6a4fd07fe4c6fba58bf2c4371fb2c releases/XML-Grammar-Fiction/0.12.1
 7dbc95599c20b72ae8f5d1be9c0c25b34f7704a0 releases/XML-Grammar-Fiction/0.12.2
 43d8b9f86e24518e231fd8ff9e106060998902af releases/XML-Grammar-Fiction/0.12.3
+0a002236e64348b8a5e61adf8bfe9360a815f4bd releases/XML-Grammar-Fiction/0.12.4

changeset:   490:0a002236e643
tag:         releases/XML-Grammar-Fiction/0.12.4
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 22 13:29:44 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump version number to 0.12.4.


diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:29:44 2013 +0300
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.12.4      Mon 22 Apr 13:29:13 IDT 2013
     * Add $VERSION to more missing files.
 
 0.12.3      Mon 22 Apr 13:12:59 IDT 2013
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use Exception::Class
     (
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head2 new()
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use MooX 'late';
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use MooX 'late';
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -9,7 +9,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use MooX 'late';
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use MooX 'late';
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use MooX 'late';
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 1;
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 METHODS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 METHODS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 sub is_tag_of_name
 {
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -936,11 +936,11 @@
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 use XML::Writer;
 use HTML::Entities ();
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 METHODS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 SYNOPSIS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 NAME
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 NAME
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 NAME
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =encoding utf8
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head2 new()
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 1;
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head2 new()
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head1 METHODS
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =cut
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 =head2 new()
 
diff -r aa288e0905aa -r 0a002236e643 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon Apr 22 13:28:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon Apr 22 13:29:44 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.3';
+our $VERSION = '0.12.4';
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
@@ -19,7 +19,7 @@
 
 =head1 VERSION
 
-Version 0.12.3
+Version 0.12.4
 
 =head1 METHODS
 

changeset:   489:aa288e0905aa
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 22 13:28:46 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Fix missing $VERSION .


diff -r fe558d536713 -r aa288e0905aa perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:15:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:28:46 2013 +0300
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add $VERSION to more missing files.
+
 0.12.3      Mon 22 Apr 13:12:59 IDT 2013
     * Add $VERSION to missing files.
 
diff -r fe558d536713 -r aa288e0905aa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 22 13:15:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 22 13:28:46 2013 +0300
@@ -5,14 +5,12 @@
 XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
 use in XML::Grammar::Fiction::FromProto.
 
-=head1 VERSION
-
-Version 0.12.3
-
 =cut
 
 use MooX 'late';
 
+our $VERSION = '0.12.3';
+
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
 has 'name' => (isa => 'Str', is => 'rw');
diff -r fe558d536713 -r aa288e0905aa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 22 13:15:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 22 13:28:46 2013 +0300
@@ -2,6 +2,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.12.3';
+
 use XML::Writer;
 use HTML::Entities ();
 
diff -r fe558d536713 -r aa288e0905aa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon Apr 22 13:15:38 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon Apr 22 13:28:46 2013 +0300
@@ -2,6 +2,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.12.3';
+
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
 has '+rng_schema_basename' => (default => "screenplay-xml.rng");

changeset:   488:fe558d536713
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 22 13:15:38 2013 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.12.3


diff -r 43d8b9f86e24 -r fe558d536713 .hgtags
--- a/.hgtags	Mon Apr 22 13:14:29 2013 +0300
+++ b/.hgtags	Mon Apr 22 13:15:38 2013 +0300
@@ -31,3 +31,4 @@
 d215c588fb4da122fee75f626890d1d72732e033 releases/XML-Grammar-Fiction/0.12.0
 efe239959fd6a4fd07fe4c6fba58bf2c4371fb2c releases/XML-Grammar-Fiction/0.12.1
 7dbc95599c20b72ae8f5d1be9c0c25b34f7704a0 releases/XML-Grammar-Fiction/0.12.2
+43d8b9f86e24518e231fd8ff9e106060998902af releases/XML-Grammar-Fiction/0.12.3

changeset:   487:43d8b9f86e24
tag:         releases/XML-Grammar-Fiction/0.12.3
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 22 13:14:29 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.12.3.


diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 22 13:14:29 2013 +0300
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+0.12.3      Mon 22 Apr 13:12:59 IDT 2013
+    * Add $VERSION to missing files.
+
 0.12.2      Tue  9 Apr 16:41:15 IDT 2013
     * Made error handling more informative.
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use Exception::Class
     (
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head2 new()
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use MooX 'late';
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use MooX 'late';
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -7,7 +7,7 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use MooX 'late';
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -2,7 +2,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use MooX 'late';
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use MooX 'late';
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 1;
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 METHODS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 METHODS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 sub is_tag_of_name
 {
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -936,11 +936,11 @@
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 METHODS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 SYNOPSIS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 NAME
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 NAME
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 NAME
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =encoding utf8
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head2 new()
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 1;
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head2 new()
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head1 METHODS
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =cut
 
-our $VERSION = '0.12.2';
+our $VERSION = '0.12.3';
 
 =head2 new()
 
diff -r d9e0f44ea510 -r 43d8b9f86e24 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon Apr 22 13:12:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon Apr 22 13:14:29 2013 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.12.2
+Version 0.12.3
 
 =head1 METHODS
 

changeset:   486:d9e0f44ea510
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Mon Apr 22 13:12:46 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
description:
Add more $VERSIONs.


diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -2,6 +2,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.12.2';
+
 extends("XML::Grammar::Fiction::FromProto::Node");
 
 has "text" => (isa => "Str", is => "rw");
diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -1,5 +1,7 @@
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
+our $VERSION = '0.12.2';
+
 use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -2,6 +2,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.12.2';
+
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
 =head1 METHODS
diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -2,6 +2,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.12.2';
+
 extends("XML::Grammar::Fiction::FromProto::Node");
 
 has 'contents' => (isa => "ArrayRef", is => "rw");
diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -1,5 +1,7 @@
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
+our $VERSION = '0.12.2';
+
 use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -2,6 +2,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.12.2';
+
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
 has 'character' => (isa => "Str", is => "rw");
diff -r 51b62106db68 -r d9e0f44ea510 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Wed Apr 10 16:23:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Mon Apr 22 13:12:46 2013 +0300
@@ -3,6 +3,8 @@
 use strict;
 use warnings;
 
+our $VERSION = '0.12.2';
+
 use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");

changeset:   485:51b62106db68
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 16:23:39 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Refactoring: more generic _write_elem.

Got rid of _handle_elem_of_name_i / _handle_elem_of_name_b .


diff -r 80b9d9056bc0 -r 51b62106db68 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Apr 10 15:58:42 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Apr 10 16:23:39 2013 +0300
@@ -51,14 +51,21 @@
 
 use Data::Dumper;
 
-my %lookup = (map { $_ => 1 } qw( li ol ul ));
+my %lookup = (map { $_ => $_ } qw( li ol ul ));
 
-sub _is_passthrough_elem
+around '_calc_passthrough_cb' => sub
 {
-    my ($self, $name) = @_;
+    my $orig = shift;
+    my $self = shift;
+    my ($name) = @_;
 
-    return exists($lookup{$name});
-}
+    if ($lookup{$name})
+    {
+        return $name;
+    }
+
+    return $orig->($self, @_);
+};
 
 sub _output_tag
 {
diff -r 80b9d9056bc0 -r 51b62106db68 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Apr 10 15:58:42 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Apr 10 16:23:39 2013 +0300
@@ -39,9 +39,40 @@
 
 has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
 
-sub _is_passthrough_elem
+my %passthrough_elem =
+(
+    b => sub { return shift->_bold_tag_name(); },
+    i => sub { return shift->_italics_tag_name(); },
+);
+
+sub _calc_passthrough_cb
 {
-    return;
+    my ($self, $name) = @_;
+
+    if (exists($passthrough_elem{$name}))
+    {
+        return $passthrough_elem{$name};
+    }
+    else
+    {
+        return undef();
+    }
+}
+
+sub _calc_passthrough_name
+{
+    my ($self, $name, $elem) = @_;
+
+    my $cb = $self->_calc_passthrough_cb($name);
+
+    if (ref($cb) eq 'CODE')
+    {
+        return $cb->($self, $name, $elem,);
+    }
+    else
+    {
+        return $cb;
+    }
 }
 
 sub _write_Element_elem
@@ -60,12 +91,11 @@
         );
         return;
     }
-    elsif ($self->_is_passthrough_elem($name))
+    elsif (defined(my $out_name = $self->_calc_passthrough_name($name, $elem)))
     {
-        return
-        $self->_output_tag_with_childs(
+        return $self->_output_tag_with_childs(
             {
-                start => [$name],
+                start => [$out_name],
                 elem => $elem,
             }
         );
@@ -87,18 +117,6 @@
     $self->_write_scene({scene => $elem});
 }
 
-sub _handle_elem_of_name_b
-{
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => [$self->_bold_tag_name()],
-            elem => $elem,
-        }
-    );
-}
-
 sub _handle_elem_of_name_br
 {
     my ($self, $elem) = @_;
@@ -108,20 +126,6 @@
     return;
 }
 
-sub _handle_elem_of_name_i
-{
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => [$self->_italics_tag_name],
-            elem => $elem,
-        }
-    );
-
-    return;
-}
-
 sub _convert_while_handling_errors
 {
     my ($self, $args) = @_;

changeset:   484:80b9d9056bc0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 15:58:42 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Add more.


diff -r 9773cfd06af1 -r 80b9d9056bc0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 10 15:56:42 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 10 15:58:42 2013 +0300
@@ -54,16 +54,6 @@
 
 =cut
 
-
-my %lookup = (map { $_ => 1 } qw( li ol ul ));
-
-sub _is_passthrough_elem
-{
-    my ($self, $name) = @_;
-
-    return exists($lookup{$name});
-}
-
 sub _output_tag
 {
     my ($self, $args) = @_;

changeset:   483:9773cfd06af1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 15:56:42 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Add the passthrough elements.


diff -r 3c8b124ba3b4 -r 9773cfd06af1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Apr 10 15:10:07 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Apr 10 15:56:42 2013 +0300
@@ -51,6 +51,15 @@
 
 use Data::Dumper;
 
+my %lookup = (map { $_ => 1 } qw( li ol ul ));
+
+sub _is_passthrough_elem
+{
+    my ($self, $name) = @_;
+
+    return exists($lookup{$name});
+}
+
 sub _output_tag
 {
     my ($self, $args) = @_;
@@ -184,20 +193,6 @@
 }
 
 
-sub _handle_elem_of_name_li
-{
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ['li'],
-            elem => $elem,
-        }
-    );
-
-    return;
-}
-
 sub _handle_elem_of_name_programlisting
 {
     my ($self, $elem) = @_;
@@ -248,20 +243,6 @@
     return;
 }
 
-sub _handle_elem_of_name_ol
-{
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ['ol'],
-            elem => $elem,
-        }
-    );
-
-    return;
-}
-
 sub _handle_elem_of_name_span
 {
     my ($self, $elem) = @_;
@@ -278,20 +259,6 @@
     return;
 }
 
-sub _handle_elem_of_name_ul
-{
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ['ul'],
-            elem => $elem,
-        }
-    );
-
-    return;
-}
-
 sub _handle_elem_of_name_title
 {
     my ($self, $elem) = @_;
diff -r 3c8b124ba3b4 -r 9773cfd06af1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Apr 10 15:10:07 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Apr 10 15:56:42 2013 +0300
@@ -39,10 +39,17 @@
 
 has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
 
+sub _is_passthrough_elem
+{
+    return;
+}
+
 sub _write_Element_elem
 {
     my ($self, $elem) = @_;
 
+    my $name = $elem->name();
+
     if ($elem->_short_isa("InnerDesc"))
     {
         $self->_output_tag_with_childs(
@@ -53,9 +60,19 @@
         );
         return;
     }
+    elsif ($self->_is_passthrough_elem($name))
+    {
+        return
+        $self->_output_tag_with_childs(
+            {
+                start => [$name],
+                elem => $elem,
+            }
+        );
+    }
     else
     {
-        my $method = "_handle_elem_of_name_" . $elem->name();
+        my $method = "_handle_elem_of_name_$name";
 
         $self->$method($elem);
 
diff -r 3c8b124ba3b4 -r 9773cfd06af1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 10 15:10:07 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 10 15:56:42 2013 +0300
@@ -54,6 +54,16 @@
 
 =cut
 
+
+my %lookup = (map { $_ => 1 } qw( li ol ul ));
+
+sub _is_passthrough_elem
+{
+    my ($self, $name) = @_;
+
+    return exists($lookup{$name});
+}
+
 sub _output_tag
 {
     my ($self, $args) = @_;

changeset:   482:3c8b124ba3b4
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 15:10:07 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay.pm
description:
Remove some no-longer relevant documentation.


diff -r c25b3c2afbe3 -r 3c8b124ba3b4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:07:29 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:10:07 2013 +0300
@@ -181,17 +181,6 @@
 
 =back
 
-=head1 DEBUGGING
-
-When trying to convert the well-formed text to XML, one will often
-encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
-which is used for parsing. The best way I found to deal with it is to
-gradually eliminate parts of the document until the offending markup is
-isolated.
-
-In the future, I plan on writing a custom parser that will provide better
-diagnostics and will hopefully also be faster.
-
 =cut
 
 1;
diff -r c25b3c2afbe3 -r 3c8b124ba3b4 perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:10:07 2013 +0300
@@ -0,0 +1,18 @@
+package XML::Grammar::Screenplay;
+
+use strict;
+use warnings;
+
+=head1 DEBUGGING
+
+When trying to convert the well-formed text to XML, one will often
+encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
+which is used for parsing. The best way I found to deal with it is to
+gradually eliminate parts of the document until the offending markup is
+isolated.
+
+In the future, I plan on writing a custom parser that will provide better
+diagnostics and will hopefully also be faster.
+
+=cut
+

changeset:   481:c25b3c2afbe3
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 15:07:29 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
description:
Add more examples.


diff -r 4257bff0bdd4 -r c25b3c2afbe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:05:51 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:07:29 2013 +0300
@@ -171,6 +171,14 @@
 
 L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
 
+=item * Selina Mandrake - The Slayer
+
+L<http://www.shlomifish.org/humour/Selina-Mandrake/>
+
+=item * Summerschool at the NSA
+
+L<http://www.shlomifish.org/humour/Summerschool-at-the-NSA/>
+
 =back
 
 =head1 DEBUGGING

changeset:   480:4257bff0bdd4
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 15:05:51 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
description:
Convert to stylised quotes.


diff -r afa3d19a3cb4 -r 4257bff0bdd4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:00:22 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Apr 10 15:05:51 2013 +0300
@@ -167,7 +167,7 @@
 
 L<http://www.shlomifish.org/humour/humanity/>
 
-=item * Star Trek - "We The Living Dead"
+=item * Star Trek - “We The Living Dead”
 
 L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
 

changeset:   479:afa3d19a3cb4
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 15:00:22 2013 +0300
files:       .hgignore perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP
description:
Add tags to the ignore.


diff -r fb4954e9b657 -r afa3d19a3cb4 .hgignore
--- a/.hgignore	Wed Apr 10 14:58:58 2013 +0300
+++ b/.hgignore	Wed Apr 10 15:00:22 2013 +0300
@@ -6,3 +6,4 @@
 perl/modules/XML-Grammar-Fiction/Makefile.PL
 perl/modules/XML-Grammar-Fiction/_build
 perl/modules/XML-Grammar-Fiction/blib
+perl/modules/XML-Grammar-Fiction/tags
diff -r fb4954e9b657 -r afa3d19a3cb4 perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP	Wed Apr 10 14:58:58 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP	Wed Apr 10 15:00:22 2013 +0300
@@ -16,6 +16,7 @@
 \.tar\.gz$
 \.zip$
 _uu$
+^tags$
 ^ttt*
 ^dist/
 ^\.cvs

changeset:   478:fb4954e9b657
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 14:58:58 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO perl/modules/XML-Grammar-Fiction/TODO.quicktask
description:
Add the quicktask.


diff -r 3000b40886ba -r fb4954e9b657 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Wed Apr 10 14:46:20 2013 +0300
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,60 +0,0 @@
-Pressing:
----------
-
-Long term:
-----------
-
-* ::Fiction: Implement the correct handling of leading special characters in
-lines. Currently, they are processed as they are, without generating an error.
-
-* Convert the parsing errors from Carp::confess to Exception::Class
-
-This will allow a friendlier diagnostic. Carp::confess was implemented due to
-laziness on the programmers' part.
-
-* ::Fiction : add a feature for a formatting tag at the beginning of a
-paragraph, that will not be mistaken for a top-level tag:
-
-[QUOTE]
-
-+<b>Hello</b>: There.
-
-[/QUOTE]
-
-* Add more necessary tags and features.
-
-* Convert the XML grammar to use the xlink namespace for links.
-
-* Regularise the XML grammars of XML-Grammar-Fiction and XML-Grammar-Screenplay.
-
-* Merge more tests.
-
-* Make the ::Screenplay exceptions contain the opening line closing line
-and generally more context (currently they are guess-work).
-
-* ::Screenplay - Fix the innerdesc on the start of the line in the middle of
-the paragraph. Like:
-
------------------
-Hi I went to the store and
-[walks around the room, nervous] bought a chocolate bar.
------------------
-
-* Can we include some stray sayings at the beginning of the scene without an
-inner wrapping scene:
-
------------------
-David: prepare for judgement day.
-
-Goliath: First, let's go the next scene:
-
-<s id="....>
-
-Goliath: OK, now we can continue, you were saying...
-
-David: Judgement day.
-
-Goliath: yes, what about it?
-
-</s>
------------------
diff -r 3000b40886ba -r fb4954e9b657 perl/modules/XML-Grammar-Fiction/TODO.quicktask
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TODO.quicktask	Wed Apr 10 14:58:58 2013 +0300
@@ -0,0 +1,29 @@
+# Quicktask v1.2
+
+CURRENT TASKS:
+    - ::Fiction: correct handling of leading special characters in lines.
+        * Currently, they are processed as they are, without generating an
+          error.
+        * Added [Wed 2013-04-10]
+    - Convert the parsing errors from Carp::confess to Exception::Class
+        * This will allow a friendlier diagnostic. Carp::confess was
+          implemented due to laziness on the programmers' part.
+        * Added [Wed 2013-04-10]
+    - ::Fiction : add a feature for a formatting tag at the beginning of a
+        * paragraph, that will not be mistaken for a top-level tag:
+        * Added [Wed 2013-04-10]
+    - Convert the XML grammar to use the xlink namespace for links.
+        * Added [Wed 2013-04-10]
+    - Make the Screenplay exceptions contain the opening line closing line
+        * and generally more context (currently they are guess-work).
+      * Added [Wed 2013-04-10]
+
+
+    - Fix innerdesc on start of line in middle of paragraph.
+      * «Hi I went to the store and
+      * «[walks around the room, nervous] bought a chocolate bar.
+      * Added [Wed 2013-04-10]
+
+COMPLETED TASKS:
+
+# vim:ft=quicktask:sw=4:ts=4

changeset:   477:3000b40886ba
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Apr 10 14:46:20 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Mark an item to add unit tests to LineIter as done.


diff -r 8815aeef6d87 -r 3000b40886ba perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Tue Apr 09 16:46:55 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Apr 10 14:46:20 2013 +0300
@@ -21,8 +21,6 @@
 
 [/QUOTE]
 
-* Write unit tests for LineIterator.pm.
-
 * Add more necessary tags and features.
 
 * Convert the XML grammar to use the xlink namespace for links.

changeset:   476:8815aeef6d87
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:46:55 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Fix pluralisation.


diff -r ef9d0aacf480 -r 8815aeef6d87 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Apr 09 16:43:39 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Apr 09 16:46:55 2013 +0300
@@ -28,7 +28,7 @@
     {
         '_push_tag' => 'push',
         '_grep_tags_stack' => 'grep',
-        '_tag_stack_is_empty' => 'is_empty',
+        '_tags_stack_is_empty' => 'is_empty',
         '_pop_tag' => 'pop',
         '_get_tag' => 'get',
     },
@@ -44,7 +44,7 @@
     return $self->_tags_stack->[$idx];
 }
 
-sub _tag_stack_is_empty
+sub _tags_stack_is_empty
 {
     my $self = shift;
 
@@ -419,7 +419,7 @@
 {
     my $self = shift;
 
-    if ($self->_tag_stack_is_empty())
+    if ($self->_tags_stack_is_empty())
     {
         $self->throw_text_error(
             'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
@@ -563,7 +563,7 @@
             $self->_new_list($open_tag->detach_children()),
         );
 
-    if (! $self->_tag_stack_is_empty())
+    if (! $self->_tags_stack_is_empty())
     {
         $self->_add_to_top_tag($new_elem);
         return;
@@ -874,7 +874,7 @@
 
     if ($self->eof() && $self->_no_events())
     {
-        if (! $self->_tag_stack_is_empty() )
+        if (! $self->_tags_stack_is_empty() )
         {
             XML::Grammar::Fiction::Err::Parse::TagNotClosedAtEOF->throw(
                 error => "Tag not closed at EOF.",

changeset:   475:ef9d0aacf480
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:43:39 2013 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.12.2


diff -r 7dbc95599c20 -r ef9d0aacf480 .hgtags
--- a/.hgtags	Tue Apr 09 16:42:45 2013 +0300
+++ b/.hgtags	Tue Apr 09 16:43:39 2013 +0300
@@ -30,3 +30,4 @@
 01a7ed7711a0240f4199e9341936f5be396f1d86 releases/XML-Grammar-Fiction/0.11.1
 d215c588fb4da122fee75f626890d1d72732e033 releases/XML-Grammar-Fiction/0.12.0
 efe239959fd6a4fd07fe4c6fba58bf2c4371fb2c releases/XML-Grammar-Fiction/0.12.1
+7dbc95599c20b72ae8f5d1be9c0c25b34f7704a0 releases/XML-Grammar-Fiction/0.12.2

changeset:   474:7dbc95599c20
tag:         releases/XML-Grammar-Fiction/0.12.2
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:42:45 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump version to 0.12.2.


diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 09 16:42:45 2013 +0300
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+0.12.2      Tue  9 Apr 16:41:15 IDT 2013
+    * Made error handling more informative.
+
 0.12.1      Tue 26 Mar 06:22:47 IST 2013
     * Add MooX::late to the dependencies to avoid test failures:
         - http://www.cpantesters.org/cpan/report/62d51cec-946e-11e2-b162-c5ed238b44f3
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 use Exception::Class
     (
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head2 new()
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 use MooX 'late';
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -7,7 +7,7 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 use MooX 'late';
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 1;
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 METHODS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 METHODS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 sub is_tag_of_name
 {
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -936,11 +936,11 @@
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 METHODS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 SYNOPSIS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 NAME
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 NAME
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 NAME
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =encoding utf8
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head2 new()
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 1;
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head2 new()
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head1 METHODS
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =cut
 
-our $VERSION = '0.12.1';
+our $VERSION = '0.12.2';
 
 =head2 new()
 
diff -r 77e8866ffcaf -r 7dbc95599c20 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue Apr 09 16:40:31 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue Apr 09 16:42:45 2013 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.12.1
+Version 0.12.2
 
 =head1 METHODS
 

changeset:   473:77e8866ffcaf
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:40:31 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Mark the items for robust erroring as DONE.


diff -r e60f1b8f40ec -r 77e8866ffcaf perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Tue Apr 09 16:26:53 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Tue Apr 09 16:40:31 2013 +0300
@@ -1,14 +1,6 @@
 Pressing:
 ---------
 
-    Screenplay-Text:
-    ----------------
-
-    * Make a non-closed description («[foo ») emit an error with the location
-    of the opening square bracket.
-
-    * If </s>s are missing at the end (or too many) - handle more gracefully.
-
 Long term:
 ----------
 

changeset:   472:e60f1b8f40ec
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:26:53 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
description:
Handle the exception tag better.


diff -r 0195a3361da8 -r e60f1b8f40ec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 09 16:18:03 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 09 16:26:53 2013 +0300
@@ -141,6 +141,15 @@
         warn "At line ", $e->line(), "\n";
         exit(-1);
     }
+    elsif ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagNotClosedAtEOF"))
+    {
+        warn $e->error(), "\n";
+        warn "Open: ", $e->opening_tag->name(),
+            " at line ", $e->opening_tag->line(), "\n"
+            ;
+
+        exit(-1);
+    }
     elsif ($e = Exception::Class->caught())
     {
         if (ref($e))

changeset:   471:0195a3361da8
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:18:03 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
description:
Refactoring: extract a common method.


diff -r ee281856f827 -r 0195a3361da8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Apr 09 16:02:21 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Apr 09 16:18:03 2013 +0300
@@ -59,50 +59,15 @@
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
     });
 
-    eval {
-        my $output_xml = $converter->convert({
+    $converter->_convert_while_handling_errors(
+        {
+            convert_args =>
+            {
                 source => { file => shift(@ARGV), },
-            }
-        );
-
-        open my $out, ">", $output_filename;
-        binmode $out, ":utf8";
-        print {$out} $output_xml;
-        close($out);
-    };
-
-    # Error handling.
-
-    my $e;
-    if ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagsMismatch"))
-    {
-        warn $e->error(), "\n";
-        warn "Open: ", $e->opening_tag->name(),
-            " at line ", $e->opening_tag->line(), "\n"
-            ;
-        warn "Close: ",
-            $e->closing_tag->name(), " at line ",
-            $e->closing_tag->line(), "\n";
-
-        exit(-1);
-    }
-    elsif ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::LineError"))
-    {
-        warn $e->error(), "\n";
-        warn "At line ", $e->line(), "\n";
-        exit(-1);
-    }
-    elsif ($e = Exception::Class->caught())
-    {
-        if (ref($e))
-        {
-            $e->rethrow();
+            },
+            output_filename => $output_filename,
         }
-        else
-        {
-            die $e;
-        }
-    }
+    );
 
     exit(0);
 }
diff -r ee281856f827 -r 0195a3361da8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 09 16:02:21 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 09 16:18:03 2013 +0300
@@ -104,6 +104,58 @@
 
     return;
 }
+
+sub _convert_while_handling_errors
+{
+    my ($self, $args) = @_;
+
+    eval {
+        my $output_xml = $self->convert(
+            $args->{convert_args},
+        );
+
+        open my $out, ">", $args->{output_filename};
+        binmode $out, ":utf8";
+        print {$out} $output_xml;
+        close($out);
+    };
+
+    # Error handling.
+
+    my $e;
+    if ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagsMismatch"))
+    {
+        warn $e->error(), "\n";
+        warn "Open: ", $e->opening_tag->name(),
+            " at line ", $e->opening_tag->line(), "\n"
+            ;
+        warn "Close: ",
+            $e->closing_tag->name(), " at line ",
+            $e->closing_tag->line(), "\n";
+
+        exit(-1);
+    }
+    elsif ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::LineError"))
+    {
+        warn $e->error(), "\n";
+        warn "At line ", $e->line(), "\n";
+        exit(-1);
+    }
+    elsif ($e = Exception::Class->caught())
+    {
+        if (ref($e))
+        {
+            $e->rethrow();
+        }
+        else
+        {
+            die $e;
+        }
+    }
+
+    return;
+}
+
 =head2 meta()
 
 Internal - (to settle pod-coverage.).
diff -r ee281856f827 -r 0195a3361da8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Apr 09 16:02:21 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Apr 09 16:18:03 2013 +0300
@@ -55,49 +55,16 @@
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
     });
 
-    eval
-    {
-        my $output_xml = $converter->convert({
+    $converter->_convert_while_handling_errors(
+        {
+            convert_args =>
+            {
                 source => { file => shift(@ARGV), },
-            }
-        );
+            },
+            output_filename => $output_filename,
+        }
+    );
 
-        open my $out, ">", $output_filename;
-        binmode $out, ":utf8";
-        print {$out} $output_xml;
-        close($out);
-    };
-
-    my $e;
-    if ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagsMismatch"))
-    {
-        warn $e->error(), "\n";
-        warn "Open: ", $e->opening_tag->name(),
-            " at line ", $e->opening_tag->line(), "\n"
-            ;
-        warn "Close: ",
-            $e->closing_tag->name(), " at line ",
-            $e->closing_tag->line(), "\n";
-
-        exit(-1);
-    }
-    elsif ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::LineError"))
-    {
-        warn $e->error(), "\n";
-        warn "At line ", $e->line(), "\n";
-        exit(-1);
-    }
-    elsif ($e = Exception::Class->caught())
-    {
-        if (ref($e))
-        {
-            $e->rethrow();
-        }
-        else
-        {
-            die $e;
-        }
-    }
 
     exit(0);
 }

changeset:   470:ee281856f827
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 16:02:21 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/non-terminated-desc.txt perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t
description:
Handle a non-closing tag gracefully.


diff -r a1d65681df6b -r ee281856f827 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Apr 09 15:37:12 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Apr 09 16:02:21 2013 +0300
@@ -20,9 +20,14 @@
 use Exception::Class
     (
         "XML::Grammar::Fiction::Err::Base",
+        "XML::Grammar::Fiction::Err::Base::WithOpenTag" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Base",
+            fields => [qw(opening_tag)],
+        },
         "XML::Grammar::Fiction::Err::Parse::TagsMismatch" =>
         {
-            isa => "XML::Grammar::Fiction::Err::Base",
+            isa => "XML::Grammar::Fiction::Err::Base::WithOpenTag",
             fields => [qw(opening_tag closing_tag)],
         },
         "XML::Grammar::Fiction::Err::Parse::LineError" =>
@@ -54,6 +59,10 @@
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
         },
+        "XML::Grammar::Fiction::Err::Parse::TagNotClosedAtEOF" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Base::WithOpenTag",
+        },
     )
     ;
 1;
diff -r a1d65681df6b -r ee281856f827 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Apr 09 15:37:12 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Apr 09 16:02:21 2013 +0300
@@ -177,7 +177,9 @@
 
     $self->_curr_line_idx($self->_curr_line_idx()+1);
 
-    pos(${$self->curr_line_ref()}) = 0;
+    if (! $self->eof() ) {
+        pos(${$self->curr_line_ref()}) = 0;
+    }
 
     return $self->curr_line_ref();
 }
diff -r a1d65681df6b -r ee281856f827 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Apr 09 15:37:12 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Apr 09 16:02:21 2013 +0300
@@ -874,7 +874,17 @@
 
     if ($self->eof() && $self->_no_events())
     {
-        Carp::confess (qq{Reached EOF.});
+        if (! $self->_tag_stack_is_empty() )
+        {
+            XML::Grammar::Fiction::Err::Parse::TagNotClosedAtEOF->throw(
+                error => "Tag not closed at EOF.",
+                opening_tag => $self->_top_tag(),
+            );
+        }
+        else
+        {
+            Carp::confess (qq{Reached EOF.});
+        }
     }
 
     return;
diff -r a1d65681df6b -r ee281856f827 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/non-terminated-desc.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/non-terminated-desc.txt	Tue Apr 09 16:02:21 2013 +0300
@@ -0,0 +1,25 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.
+
+David is a red-head.
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.
+
+Goliath: I'm still waiting.
+
diff -r a1d65681df6b -r ee281856f827 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t	Tue Apr 09 15:37:12 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t	Tue Apr 09 16:02:21 2013 +0300
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::More tests => 1;
+use Test::More tests => 2;
 
 use XML::LibXML;
 
@@ -26,26 +26,56 @@
     return $contents;
 }
 
-my $grammar = XML::Grammar::Screenplay::FromProto->new({
+
+{
+    my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
     });
 
-eval {
-my $got_xml = $grammar->convert(
-    {
-        source =>
-        {
-            file => "t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
-        },
-    }
-);
-};
+    eval {
+        my $got_xml = $grammar->convert(
+            {
+                source =>
+                {
+                    file => "t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
+                },
+            }
+        );
+    };
 
-my $err = $@;
+    my $err = $@;
 
-# TEST
-like ($err, qr{inner-desc.*?addressing},
-   "Tried to put an inner-desc inside an addressing "
-);
+    # TEST
+    like ($err, qr{inner-desc.*?addressing},
+        "Tried to put an inner-desc inside an addressing "
+    );
+
+}
+
+{
+    my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+    eval {
+        my $got_xml = $grammar->convert(
+            {
+                source =>
+                {
+                    file => "t/screenplay/data/proto-text-invalid/non-terminated-desc.txt",
+                },
+            }
+        );
+    };
+
+    my $err = $@;
+
+    # TEST
+    like ($err, qr{Tag not closed at EOF},
+        "Screenplay with a description that did not terminate"
+    );
+
+}
 
 1;
+

changeset:   469:a1d65681df6b
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 15:37:12 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
description:
Handling warnings better.

This way the error message is less obscure. There's some duplicate code
with XML-Grammar-Fiction-App-FromProto.


diff -r c0e9a15a983f -r a1d65681df6b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Apr 09 14:56:46 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Apr 09 15:37:12 2013 +0300
@@ -55,15 +55,49 @@
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
     });
 
-    my $output_xml = $converter->convert({
-            source => { file => shift(@ARGV), },
+    eval
+    {
+        my $output_xml = $converter->convert({
+                source => { file => shift(@ARGV), },
+            }
+        );
+
+        open my $out, ">", $output_filename;
+        binmode $out, ":utf8";
+        print {$out} $output_xml;
+        close($out);
+    };
+
+    my $e;
+    if ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagsMismatch"))
+    {
+        warn $e->error(), "\n";
+        warn "Open: ", $e->opening_tag->name(),
+            " at line ", $e->opening_tag->line(), "\n"
+            ;
+        warn "Close: ",
+            $e->closing_tag->name(), " at line ",
+            $e->closing_tag->line(), "\n";
+
+        exit(-1);
+    }
+    elsif ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::LineError"))
+    {
+        warn $e->error(), "\n";
+        warn "At line ", $e->line(), "\n";
+        exit(-1);
+    }
+    elsif ($e = Exception::Class->caught())
+    {
+        if (ref($e))
+        {
+            $e->rethrow();
         }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_xml;
-    close($out);
+        else
+        {
+            die $e;
+        }
+    }
 
     exit(0);
 }

changeset:   468:c0e9a15a983f
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 09 14:56:46 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Mark an item as DONE.


diff -r 27076565c06b -r c0e9a15a983f perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Tue Apr 02 17:32:13 2013 +0300
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Tue Apr 09 14:56:46 2013 +0300
@@ -1,9 +1,6 @@
 Pressing:
 ---------
 
-* Make sure «dzil test --all» runs all the tests in the sub-directories
-(«t/*/*.t») using runtest.
-
     Screenplay-Text:
     ----------------
 

changeset:   467:27076565c06b
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Apr 02 17:32:13 2013 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Add more.


diff -r 2f7c91b0ce74 -r 27076565c06b perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Tue Mar 26 06:27:59 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Tue Apr 02 17:32:13 2013 +0300
@@ -4,6 +4,14 @@
 * Make sure «dzil test --all» runs all the tests in the sub-directories
 («t/*/*.t») using runtest.
 
+    Screenplay-Text:
+    ----------------
+
+    * Make a non-closed description («[foo ») emit an error with the location
+    of the opening square bracket.
+
+    * If </s>s are missing at the end (or too many) - handle more gracefully.
+
 Long term:
 ----------
 

changeset:   466:2f7c91b0ce74
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Mar 26 06:27:59 2013 +0200
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.12.1


diff -r efe239959fd6 -r 2f7c91b0ce74 .hgtags
--- a/.hgtags	Tue Mar 26 06:25:33 2013 +0200
+++ b/.hgtags	Tue Mar 26 06:27:59 2013 +0200
@@ -29,3 +29,4 @@
 6e66b33627d35fe3233ba97899c155d8726ba135 releases/XML-Grammar-Fiction/0.11.0
 01a7ed7711a0240f4199e9341936f5be396f1d86 releases/XML-Grammar-Fiction/0.11.1
 d215c588fb4da122fee75f626890d1d72732e033 releases/XML-Grammar-Fiction/0.12.0
+efe239959fd6a4fd07fe4c6fba58bf2c4371fb2c releases/XML-Grammar-Fiction/0.12.1

changeset:   465:efe239959fd6
tag:         releases/XML-Grammar-Fiction/0.12.1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Mar 26 06:25:33 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the ver to 0.12.1.


diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Mar 26 06:25:33 2013 +0200
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.12.1      Tue 26 Mar 06:22:47 IST 2013
     * Add MooX::late to the dependencies to avoid test failures:
         - http://www.cpantesters.org/cpan/report/62d51cec-946e-11e2-b162-c5ed238b44f3
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 use Exception::Class
     (
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head2 new()
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 use MooX 'late';
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -7,7 +7,7 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 use MooX 'late';
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 1;
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 METHODS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 METHODS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 sub is_tag_of_name
 {
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -926,11 +926,11 @@
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 METHODS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 SYNOPSIS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 NAME
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 NAME
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 NAME
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =encoding utf8
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head2 new()
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 1;
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head2 new()
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head1 METHODS
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =cut
 
-our $VERSION = '0.12.0';
+our $VERSION = '0.12.1';
 
 =head2 new()
 
diff -r 4c15edfc6a15 -r efe239959fd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue Mar 26 06:22:29 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue Mar 26 06:25:33 2013 +0200
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.12.0
+Version 0.12.1
 
 =head1 METHODS
 

changeset:   464:4c15edfc6a15
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Mar 26 06:22:29 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/dist.ini
description:
Add explicit MooX::late Prereqs.


diff -r 78b3ce1a468a -r 4c15edfc6a15 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Mar 21 19:01:32 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Mar 26 06:22:29 2013 +0200
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add MooX::late to the dependencies to avoid test failures:
+        - http://www.cpantesters.org/cpan/report/62d51cec-946e-11e2-b162-c5ed238b44f3
+
 0.12.0      Thu 21 Mar 18:58:59 IST 2013
     * BUG FIX: add the xmlns='http://www.w3.org/1999/xhtml' to the XML
     generated by extradata/screenplay-xml-to-html.xslt - fixed the broken
diff -r 78b3ce1a468a -r 4c15edfc6a15 perl/modules/XML-Grammar-Fiction/dist.ini
--- a/perl/modules/XML-Grammar-Fiction/dist.ini	Thu Mar 21 19:01:32 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Tue Mar 26 06:22:29 2013 +0200
@@ -11,6 +11,8 @@
 testing_command = runtest
 [PodSyntaxTests]
 [PodCoverageTests]
+[Prereqs]
+MooX::late = 0.007
 [Test::Compile]
 fake_home = 1
 [PruneCruft]

changeset:   463:78b3ce1a468a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 19:01:32 2013 +0200
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.12.0


diff -r d215c588fb4d -r 78b3ce1a468a .hgtags
--- a/.hgtags	Thu Mar 21 19:00:57 2013 +0200
+++ b/.hgtags	Thu Mar 21 19:01:32 2013 +0200
@@ -28,3 +28,4 @@
 1516924bd4fe4ef92838b4a32f5c6f88248771be releases/cpan/0.0507
 6e66b33627d35fe3233ba97899c155d8726ba135 releases/XML-Grammar-Fiction/0.11.0
 01a7ed7711a0240f4199e9341936f5be396f1d86 releases/XML-Grammar-Fiction/0.11.1
+d215c588fb4da122fee75f626890d1d72732e033 releases/XML-Grammar-Fiction/0.12.0

changeset:   462:d215c588fb4d
tag:         releases/XML-Grammar-Fiction/0.12.0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 19:00:57 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number.


diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 use Exception::Class
     (
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head2 new()
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 use MooX 'late';
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -7,7 +7,7 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 use MooX 'late';
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 use XML::Grammar::Fiction::FromProto::Node::WithContent;
 use XML::Grammar::Fiction::FromProto::Node::Element;
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 1;
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 METHODS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 METHODS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 sub is_tag_of_name
 {
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -926,11 +926,11 @@
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 METHODS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 SYNOPSIS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 NAME
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 NAME
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 NAME
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =encoding utf8
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head2 new()
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 1;
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head2 new()
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head1 METHODS
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =cut
 
-our $VERSION = '0.11.1';
+our $VERSION = '0.12.0';
 
 =head2 new()
 
diff -r 8eae63e2b589 -r d215c588fb4d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Thu Mar 21 18:59:13 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Thu Mar 21 19:00:57 2013 +0200
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.11.1
+Version 0.12.0
 
 =head1 METHODS
 

changeset:   461:8eae63e2b589
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 18:59:13 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add more.


diff -r baee5896fa56 -r 8eae63e2b589 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Mar 21 18:56:21 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Mar 21 18:59:13 2013 +0200
@@ -1,5 +1,12 @@
 Revision history for XML-Grammar-Fiction.
 
+0.12.0      Thu 21 Mar 18:58:59 IST 2013
+    * BUG FIX: add the xmlns='http://www.w3.org/1999/xhtml' to the XML
+    generated by extradata/screenplay-xml-to-html.xslt - fixed the broken
+    tests.
+
+    * Extract some classes into lib/XML/Grammar/Fiction/FromProto/Node/*.
+
 0.11.1      Wed 20 Feb 15:36:55 IST 2013
     * Add $VERSION and =head1 VERSION to the .pm files that missed them.
 

changeset:   460:baee5896fa56
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 18:56:21 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
description:
Add the XHTML namespace.

Add the XHTML namespace to the resultant XHTML of the one generated by
Screenplay-XML->HTML.


diff -r cdeb8c8b8807 -r baee5896fa56 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Thu Mar 21 18:50:27 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Thu Mar 21 18:56:21 2013 +0200
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
+     xmlns='http://www.w3.org/1999/xhtml'
      xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
      xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
      >
diff -r cdeb8c8b8807 -r baee5896fa56 perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Thu Mar 21 18:50:27 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Thu Mar 21 18:56:21 2013 +0200
@@ -57,33 +57,26 @@
     my $xpc = XML::LibXML::XPathContext->new();
     $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
     # TEST*$num_texts
-    my @results = $xpc->find(q{//x:html}, $doc);
+    my $r = $xpc->find(q{//x:html}, $doc);
     is (
-        scalar(@results),
+        $r->size(),
         1,
         "Found one article with id index",
     );
 
-    @results = $xpc->find(q{//x:div[@class='saying']}, $doc);
+    $r = $xpc->find(q{//x:div[@class='saying']}, $doc);
     # TEST*$num_texts
     ok (
-        (scalar(@results)
-            >=
-            1
-        ),
+        ($r->size() >= 1),
         "Found role=description sections",
     );
 
-    @results = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc);
+    $r = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc);
     # TEST*$num_texts
     ok (
-        (scalar(@results)
-            >=
-            1
-        ),
+        ( $r->size() >= 1 ),
         "Found role=description sections",
     );
-
 }
 
 1;

changeset:   459:cdeb8c8b8807
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 18:50:27 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
description:
Made for easy debugging.


diff -r a0bb616f4b40 -r cdeb8c8b8807 perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Thu Mar 21 18:44:38 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Thu Mar 21 18:50:27 2013 +0200
@@ -57,24 +57,27 @@
     my $xpc = XML::LibXML::XPathContext->new();
     $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
     # TEST*$num_texts
+    my @results = $xpc->find(q{//x:html}, $doc);
     is (
-        scalar(() = $xpc->find(q{//x:html}, $doc)),
+        scalar(@results),
         1,
         "Found one article with id index",
     );
 
+    @results = $xpc->find(q{//x:div[@class='saying']}, $doc);
     # TEST*$num_texts
     ok (
-        (scalar(() = $xpc->find(q{//x:div[@class='saying']}, $doc))
+        (scalar(@results)
             >=
             1
         ),
         "Found role=description sections",
     );
 
+    @results = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc);
     # TEST*$num_texts
     ok (
-        (scalar(() = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc))
+        (scalar(@results)
             >=
             1
         ),

changeset:   458:a0bb616f4b40
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 18:44:38 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
description:
Extract into separate classes.


diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Comment.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,9 @@
+package XML::Grammar::Fiction::FromProto::Node::Comment;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node");
+
+has "text" => (isa => "Str", is => "rw");
+
+1;
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Description.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,7 @@
+package XML::Grammar::Fiction::FromProto::Node::Description;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node::Text");
+
+1;
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Element.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,47 @@
+package XML::Grammar::Fiction::FromProto::Node::Element;
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Fiction::FromProto.
+
+=head1 VERSION
+
+Version 0.11.1
+
+=cut
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
+
+has 'name' => (isa => 'Str', is => 'rw');
+has 'attrs' => (isa => 'ArrayRef', is => 'rw');
+has 'open_line' => (isa => 'Maybe[Int]', is => 'rw');
+
+=head1 METHODS
+
+=head2 lookup_attr
+
+Internal use.
+
+=cut
+
+sub lookup_attr
+{
+    my ($self, $attr_name) = @_;
+
+    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
+
+    if (!defined($pair))
+    {
+        return undef;
+    }
+    else
+    {
+        return $pair->{value};
+    }
+}
+
+1;
+
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/InnerDesc.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,20 @@
+package XML::Grammar::Fiction::FromProto::Node::InnerDesc;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node::Element");
+
+=head1 METHODS
+
+=head2 name
+
+Internal use.
+
+=cut
+
+sub name
+{
+    return "inlinedesc";
+}
+
+1;
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/List.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,10 @@
+package XML::Grammar::Fiction::FromProto::Node::List;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node");
+
+has 'contents' => (isa => "ArrayRef", is => "rw");
+
+1;
+
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Paragraph.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,7 @@
+package XML::Grammar::Fiction::FromProto::Node::Paragraph;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node::Element");
+
+1;
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Saying.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,9 @@
+package XML::Grammar::Fiction::FromProto::Node::Saying;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node::Text");
+
+has 'character' => (isa => "Str", is => "rw");
+
+1;
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/Text.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,26 @@
+package XML::Grammar::Fiction::FromProto::Node::Text;
+
+use strict;
+use warnings;
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
+
+=head1 METHODS
+
+=head2 $self->get_text($regex)
+
+Internal use.
+
+=cut
+
+sub get_text
+{
+    my ($self, $re) = @_;
+
+    return $self->children->contents->[0];
+}
+
+1;
+
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node/WithContent.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -0,0 +1,37 @@
+package XML::Grammar::Fiction::FromProto::Node::WithContent;
+
+use strict;
+use warnings;
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Fiction::FromProto.
+
+=head1 VERSION
+
+Version 0.11.1
+
+=cut
+
+our $VERSION = '0.11.1';
+
+use MooX 'late';
+
+extends("XML::Grammar::Fiction::FromProto::Node");
+
+has 'children' => (
+    isa => 'XML::Grammar::Fiction::FromProto::Node::List',
+    is => 'rw'
+);
+
+sub _get_childs
+{
+    my $self = shift;
+
+    my $childs = $self->children->contents();
+
+    return $childs || [];
+}
+
+1;
diff -r f8a7935a6d33 -r a0bb616f4b40 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Mar 21 18:17:40 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Mar 21 18:44:38 2013 +0200
@@ -20,111 +20,15 @@
 
 our $VERSION = '0.11.1';
 
-package XML::Grammar::Fiction::FromProto::Node::WithContent;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node");
-
-has 'children' => (
-    isa => 'XML::Grammar::Fiction::FromProto::Node::List',
-    is => 'rw'
-);
-
-sub _get_childs
-{
-    my $self = shift;
-
-    my $childs = $self->children->contents();
-
-    return $childs || [];
-}
-
-package XML::Grammar::Fiction::FromProto::Node::Element;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
-
-has 'name' => (isa => 'Str', is => 'rw');
-has 'attrs' => (isa => 'ArrayRef', is => 'rw');
-has 'open_line' => (isa => 'Maybe[Int]', is => 'rw');
-
-sub lookup_attr
-{
-    my ($self, $attr_name) = @_;
-
-    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
-
-    if (!defined($pair))
-    {
-        return undef;
-    }
-    else
-    {
-        return $pair->{value};
-    }
-}
-
-package XML::Grammar::Fiction::FromProto::Node::List;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node");
-
-has 'contents' => (isa => "ArrayRef", is => "rw");
-
-package XML::Grammar::Fiction::FromProto::Node::Text;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
-
-sub get_text
-{
-    my ($self, $re) = @_;
-
-    return $self->children->contents->[0];
-}
-
-package XML::Grammar::Fiction::FromProto::Node::Saying;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node::Text");
-
-has 'character' => (isa => "Str", is => "rw");
-
-package XML::Grammar::Fiction::FromProto::Node::Description;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node::Text");
-
-package XML::Grammar::Fiction::FromProto::Node::Paragraph;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node::Element");
-
-package XML::Grammar::Fiction::FromProto::Node::InnerDesc;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node::Element");
-
-sub name
-{
-    return "inlinedesc";
-}
-
-package XML::Grammar::Fiction::FromProto::Node::Comment;
-
-use MooX 'late';
-
-extends("XML::Grammar::Fiction::FromProto::Node");
-
-has "text" => (isa => "Str", is => "rw");
+use XML::Grammar::Fiction::FromProto::Node::WithContent;
+use XML::Grammar::Fiction::FromProto::Node::Element;
+use XML::Grammar::Fiction::FromProto::Node::List;
+use XML::Grammar::Fiction::FromProto::Node::Text;
+use XML::Grammar::Fiction::FromProto::Node::Saying;
+use XML::Grammar::Fiction::FromProto::Node::Description;
+use XML::Grammar::Fiction::FromProto::Node::Paragraph;
+use XML::Grammar::Fiction::FromProto::Node::InnerDesc;
+use XML::Grammar::Fiction::FromProto::Node::Comment;
 
 1;
 

changeset:   457:f8a7935a6d33
parent:      455:2a1e326aca77
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Mar 21 18:17:40 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
description:
Extract lib/XML/Grammar/Fiction/FromProto/Node.pm .


diff -r 2a1e326aca77 -r f8a7935a6d33 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Node.pm	Thu Mar 21 18:17:40 2013 +0200
@@ -0,0 +1,41 @@
+package XML::Grammar::Fiction::FromProto::Node;
+
+use strict;
+use warnings;
+
+use List::Util ();
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Node - contains several nodes for
+use in XML::Grammar::Fiction::FromProto.
+
+=head1 VERSION
+
+Version 0.11.1
+
+=cut
+
+our $VERSION = '0.11.1';
+
+use MooX 'late';
+
+sub _short_isa
+{
+    my $self = shift;
+    my $isa_classish = shift;
+
+    return
+        $self->isa(
+            "XML::Grammar::Fiction::FromProto::Node::$isa_classish"
+        );
+}
+
+1;
+
+=head1 DESCRIPTION
+
+Contains several nodes.
+
+=cut
+
diff -r 2a1e326aca77 -r f8a7935a6d33 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Feb 21 00:07:15 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Mar 21 18:17:40 2013 +0200
@@ -5,6 +5,8 @@
 
 use List::Util ();
 
+use XML::Grammar::Fiction::FromProto::Node;
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
@@ -18,21 +20,6 @@
 
 our $VERSION = '0.11.1';
 
-package XML::Grammar::Fiction::FromProto::Node;
-
-use MooX 'late';
-
-sub _short_isa
-{
-    my $self = shift;
-    my $isa_classish = shift;
-
-    return
-        $self->isa(
-            "XML::Grammar::Fiction::FromProto::Node::$isa_classish"
-        );
-}
-
 package XML::Grammar::Fiction::FromProto::Node::WithContent;
 
 use MooX 'late';

changeset:   456:bf02397ae9d2
branch:      XML-GrammarBase-conversion-temp-1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Feb 21 00:53:28 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Commit temporary changes.


diff -r 2a1e326aca77 -r bf02397ae9d2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Thu Feb 21 00:07:15 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Thu Feb 21 00:53:28 2013 +0200
@@ -21,9 +21,12 @@
 
 use MooX 'late';
 
-extends ("XML::Grammar::FictionBase::XSLT::Converter");
+use XML::GrammarBase::Role::RelaxNG v0.2.1;
 
-has '+rng_schema_basename' => (default => "fiction-xml.rng");
+with ('XML::GrammarBase::Role::RelaxNG');
+
+has '+module_base' => (default => 'XML-Grammar-Fiction',);
+has '+rng_schema_basename' => (default => 'fiction-xml.rng',);
 
 =head1 METHODS
 
diff -r 2a1e326aca77 -r bf02397ae9d2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Feb 21 00:07:15 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Feb 21 00:53:28 2013 +0200
@@ -7,9 +7,17 @@
 
 use MooX 'late';
 
+use XML::GrammarBase::Role::XSLT;
+
 extends ("XML::Grammar::Fiction::RNG_Renderer");
 
-has '+xslt_transform_basename' => (default => "fiction-xml-to-docbook.xslt");
+with XSLT(output_format => 'docbook');
+has '+to_docbook_xslt_transform_basename' => (default => "fiction-xml-to-docbook.xslt");
+
+sub xslt_transform_basename
+{
+    return shift->to_docbook_xslt_transform_basename;
+}
 
 =head1 NAME
 
@@ -39,6 +47,10 @@
 
 Inherited - (to settle pod-coverage).
 
+=head2 to_docbook_xslt_transform_basename()
+
+Inherited - (to settle pod-coverage).
+
 =cut
 
 
@@ -74,7 +86,7 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation($args);
 }
 
 1;
diff -r 2a1e326aca77 -r bf02397ae9d2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Feb 21 00:07:15 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Feb 21 00:53:28 2013 +0200
@@ -7,8 +7,18 @@
 
 use MooX 'late';
 
+use XML::GrammarBase::Role::XSLT;
+
 extends( 'XML::Grammar::Fiction::RNG_Renderer' );
 
+with XSLT(output_format => 'html');
+has '+to_html_xslt_transform_basename' => (default => "fiction-xml-to-html.xslt");
+
+sub xslt_transform_basename
+{
+    return shift->to_html_xslt_transform_basename;
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::ToHTML - module that converts the Fiction-XML to HTML.
@@ -23,6 +33,10 @@
 
 =head1 METHODS
 
+=head2 to_html_xslt_transform_basename()
+
+The basename of the to_html transform.
+
 =head2 xslt_transform_basename()
 
 Inherited - (to settle pod-coverage).
@@ -38,8 +52,6 @@
 
 =cut
 
-has '+xslt_transform_basename' => (default => "fiction-xml-to-html.xslt", );
-
 =head2 translate_to_html
 
 =over 4
@@ -71,7 +83,7 @@
 {
     my ($self, $args) = @_;
 
-    return $self->perform_translation($args);
+    return $self->perform_xslt_translation($args);
 }
 
 1;

changeset:   455:2a1e326aca77
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Feb 21 00:07:15 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Missing space after =cut.


diff -r 2368379bb468 -r 2a1e326aca77 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 15:41:44 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Feb 21 00:07:15 2013 +0200
@@ -37,6 +37,7 @@
 Internal - (to settle pod-coverage.).
 
 =cut
+
 has '+xslt_transform_basename' => (default => "fiction-xml-to-html.xslt", );
 
 =head2 translate_to_html
diff -r 2368379bb468 -r 2a1e326aca77 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 15:41:44 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Thu Feb 21 00:07:15 2013 +0200
@@ -36,6 +36,7 @@
 =end Removed
 
 =cut
+
 sub _get_tag
 {
     my ($self, $idx) = @_;

changeset:   454:2368379bb468
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 15:41:44 2013 +0200
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.11.1


diff -r 01a7ed7711a0 -r 2368379bb468 .hgtags
--- a/.hgtags	Wed Feb 20 15:39:32 2013 +0200
+++ b/.hgtags	Wed Feb 20 15:41:44 2013 +0200
@@ -27,3 +27,4 @@
 71e0fd98fff173dd05a09a13b251e9146c4dfc02 releases/XML-Grammar-Fiction/0.10.0
 1516924bd4fe4ef92838b4a32f5c6f88248771be releases/cpan/0.0507
 6e66b33627d35fe3233ba97899c155d8726ba135 releases/XML-Grammar-Fiction/0.11.0
+01a7ed7711a0240f4199e9341936f5be396f1d86 releases/XML-Grammar-Fiction/0.11.1

changeset:   453:01a7ed7711a0
tag:         releases/XML-Grammar-Fiction/0.11.1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 15:39:32 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.11.1.


diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 15:39:32 2013 +0200
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.11.1      Wed 20 Feb 15:36:55 IST 2013
     * Add $VERSION and =head1 VERSION to the .pm files that missed them.
 
 0.11.0      Wed 20 Feb 13:08:42 IST 2013
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 use Exception::Class
     (
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head2 new()
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 1;
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 METHODS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 METHODS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -21,7 +21,7 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 sub is_tag_of_name
 {
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -925,11 +925,11 @@
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 METHODS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 SYNOPSIS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -13,7 +13,7 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 NAME
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 NAME
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -12,7 +12,7 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 NAME
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =encoding utf8
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head2 new()
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -5,7 +5,7 @@
 
 use MooX 'late';
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 1;
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -14,7 +14,7 @@
 use List::Util ();
 use List::MoreUtils ();
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head2 new()
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head1 METHODS
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =cut
 
-our $VERSION = '0.11.0';
+our $VERSION = '0.11.1';
 
 =head2 new()
 
diff -r 891432102fe3 -r 01a7ed7711a0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 15:36:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 15:39:32 2013 +0200
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.11.0
+Version 0.11.1
 
 =head1 METHODS
 

changeset:   452:891432102fe3
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 15:36:39 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Add $VERSION and =head1 VERSION.


diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 15:36:39 2013 +0200
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add $VERSION and =head1 VERSION to the .pm files that missed them.
+
 0.11.0      Wed 20 Feb 13:08:42 IST 2013
     * Add the <img /> tag to the Screenplay.
     * Convert the distribution to use Dist-Zilla.
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -3,10 +3,16 @@
 use strict;
 use warnings;
 
+our $VERSION = '0.11.0';
+
 =head1 XML::Grammar::Fiction::RNG_Renderer
 
 The base class for the Fiction-XML renderer with the common RNG.
 
+=head1 VERSION
+
+0.11.0
+
 =head1 SYNOPSIS
 
 For internal use.
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -6,6 +6,10 @@
 
 B<For internal use only>.
 
+=head1 VERSION
+
+0.11.0
+
 =cut
 
 use MooX 'late';
@@ -17,6 +21,8 @@
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
+our $VERSION = '0.11.0';
+
 sub is_tag_of_name
 {
     my ($self, $name) = @_;
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -13,12 +13,18 @@
 use XML::Grammar::Screenplay::FromProto;
 use XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
+our $VERSION = '0.11.0';
+
 =head1 NAME
 
 XML::Grammar::Screenplay::App::FromProto - module implementing
 a command line application to convert a well-formed text to
 Screenplay XML.
 
+=head1 VERSION
+
+0.11.0
+
 =head1 SYNOPSIS
 
     perl -MXML::Grammar::Screenplay::App::FromProto -e 'run()' -- \
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -12,11 +12,17 @@
 
 use XML::Grammar::Screenplay::ToDocBook;
 
+our $VERSION = '0.11.0';
+
 =head1 NAME
 
 XML::Grammar::Screenplay::App::ToDocBook - module implementing
 a command line application to convert a Screenplay XML file to docbook.
 
+=head1 VERSION
+
+0.11.0
+
 =head1 FUNCTIONS
 
 =head2 run()
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -12,11 +12,17 @@
 
 use XML::Grammar::Screenplay::ToHTML;
 
+our $VERSION = '0.11.0';
+
 =head1 NAME
 
 XML::Grammar::Screenplay::App::ToHTML - module implementing
 a command line application to convert a Screenplay XML file to HTML
 
+=head1 VERSION
+
+0.11.0
+
 =head1 FUNCTIONS
 
 =head2 run()
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -3,6 +3,8 @@
 use strict;
 use warnings;
 
+our $VERSION = '0.11.0';
+
 =encoding utf8
 
 =head1 NAME
@@ -10,6 +12,10 @@
 XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
 classes.
 
+=head1 VERSION
+
+0.11.0
+
 =head1 METHODS
 
 =head2 $package->new({%args});
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -5,6 +5,8 @@
 
 use MooX 'late';
 
+our $VERSION = '0.11.0';
+
 1;
 
 =head1 NAME
@@ -14,4 +16,8 @@
 
 B<For internal use only>.
 
+=head1 VERSION
+
+0.11.0
+
 =cut
diff -r 314305c77c7c -r 891432102fe3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 13:14:08 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 15:36:39 2013 +0200
@@ -14,6 +14,8 @@
 use List::Util ();
 use List::MoreUtils ();
 
+our $VERSION = '0.11.0';
+
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
 has '_is_start' => (isa => 'Bool', is => 'rw');
@@ -606,6 +608,10 @@
 
 B<For internal use only>.
 
+=head1 VERSION
+
+0.11.0
+
 =head1 METHODS
 
 =head2 $self->process_text($string)

changeset:   451:314305c77c7c
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 13:14:08 2013 +0200
files:       .hgtags
description:
Tagging release as 0.11.0


diff -r 6e66b33627d3 -r 314305c77c7c .hgtags
--- a/.hgtags	Wed Feb 20 13:13:43 2013 +0200
+++ b/.hgtags	Wed Feb 20 13:14:08 2013 +0200
@@ -26,3 +26,4 @@
 eabd854b3709f034ca5f7565a9ee249b2c4890c4 releases/XML-Grammar-Fiction/0.9.3
 71e0fd98fff173dd05a09a13b251e9146c4dfc02 releases/XML-Grammar-Fiction/0.10.0
 1516924bd4fe4ef92838b4a32f5c6f88248771be releases/cpan/0.0507
+6e66b33627d35fe3233ba97899c155d8726ba135 releases/XML-Grammar-Fiction/0.11.0

changeset:   450:6e66b33627d3
tag:         releases/XML-Grammar-Fiction/0.11.0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 13:13:43 2013 +0200
files:       .hgtags
description:
Tagging XML-Grammar-Fortune as 0.0507


diff -r 1516924bd4fe -r 6e66b33627d3 .hgtags
--- a/.hgtags	Wed Feb 20 13:12:49 2013 +0200
+++ b/.hgtags	Wed Feb 20 13:13:43 2013 +0200
@@ -25,3 +25,4 @@
 91dd08cc43f32b2ce7a77e2987d046933f1e29a0 releases/XML-Grammar-Fiction/0.9.2
 eabd854b3709f034ca5f7565a9ee249b2c4890c4 releases/XML-Grammar-Fiction/0.9.3
 71e0fd98fff173dd05a09a13b251e9146c4dfc02 releases/XML-Grammar-Fiction/0.10.0
+1516924bd4fe4ef92838b4a32f5c6f88248771be releases/cpan/0.0507

changeset:   449:1516924bd4fe
tag:         releases/cpan/0.0507
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 13:12:49 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number.


diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 13:12:49 2013 +0200
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.11.0      Wed 20 Feb 13:08:42 IST 2013
     * Add the <img /> tag to the Screenplay.
     * Convert the distribution to use Dist-Zilla.
     * Convert the tests from Test::XML to Test::XML::Ordered.
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 use Exception::Class
     (
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head2 new()
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 1;
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 METHODS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 METHODS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -925,11 +925,11 @@
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 METHODS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 SYNOPSIS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head2 new()
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head2 new()
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head1 METHODS
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =cut
 
-our $VERSION = '0.10.0';
+our $VERSION = '0.11.0';
 
 =head2 new()
 
diff -r 0bbab30c46ca -r 1516924bd4fe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 13:02:37 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 13:12:49 2013 +0200
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.10.0
+Version 0.11.0
 
 =head1 METHODS
 

changeset:   448:0bbab30c46ca
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 13:02:37 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add to Changes.


diff -r 6d27aeb8176a -r 0bbab30c46ca perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 12:52:50 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 13:02:37 2013 +0200
@@ -1,6 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
     * Add the <img /> tag to the Screenplay.
+    * Convert the distribution to use Dist-Zilla.
+    * Convert the tests from Test::XML to Test::XML::Ordered.
 
 0.10.0      Sun 13 Jan 08:32:43 IST 2013
     * Add more links to the XML::Grammar::Fiction's perldoc.

changeset:   447:6d27aeb8176a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 12:52:50 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add a description.


diff -r e86466e1982c -r 6d27aeb8176a perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 12:52:10 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 12:52:50 2013 +0200
@@ -1,6 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
-    * Add the <img tag to the Screenplay.
+    * Add the <img /> tag to the Screenplay.
 
 0.10.0      Sun 13 Jan 08:32:43 IST 2013
     * Add more links to the XML::Grammar::Fiction's perldoc.

changeset:   446:e86466e1982c
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 12:52:10 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
description:
Finish converting away from Test::XML.


diff -r 7e0e7ebb1cf1 -r e86466e1982c perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Wed Feb 20 12:44:34 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Wed Feb 20 12:52:10 2013 +0200
@@ -5,7 +5,8 @@
 
 use Test::More tests => 29;
 
-use Test::XML;
+use lib './t/lib';
+use XmlGrammarTestXML qw(my_is_xml);
 
 use XML::LibXML;
 
@@ -79,8 +80,10 @@
     }
 
     # TEST*$num_texts
-    is_xml ($got_xml, load_xml("t/fiction/data/xml/$fn.xml"),
-        "Output of the Proto Text \"$fn\""
+    my_is_xml (
+        [string => $got_xml,],
+        [string => load_xml("t/fiction/data/xml/$fn.xml"),],
+        "Output of the Proto Text \"$fn\"",
     );
 
     my $dom = $xml_parser->parse_string($got_xml);

changeset:   445:7e0e7ebb1cf1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 12:44:34 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t
description:
Convert to-tei to Test::XML::Ordered.


diff -r f439b71f552e -r 7e0e7ebb1cf1 perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t	Wed Feb 20 12:34:01 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t	Wed Feb 20 12:44:34 2013 +0200
@@ -5,7 +5,8 @@
 
 use Test::More tests => 17;
 
-use Test::XML;
+use lib './t/lib';
+use XmlGrammarTestXML qw(my_is_xml);
 
 use File::Spec;
 
@@ -62,7 +63,9 @@
     );
 
     # TEST*$num_texts
-    is_xml ($tei_text, load_xml("t/screenplay/data/tei/$fn.tei.xml"),
+    my_is_xml (
+        [ string => $tei_text, ],
+        [ string => load_xml("t/screenplay/data/tei/$fn.tei.xml"), ],
         "Output of the TEI \"$fn\"",
     );
 }

changeset:   444:f439b71f552e
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 12:34:01 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Convert more to Test::XML::Ordered.


diff -r f012cdef0888 -r f439b71f552e perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm
--- a/perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm	Wed Feb 20 10:22:03 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm	Wed Feb 20 12:34:01 2013 +0200
@@ -7,7 +7,7 @@
 
 our @EXPORT_OK = (qw(my_is_xml));
 
-use Test::XML::Ordered '0.0.4';
+use Test::XML::Ordered '0.0.5';
 use Test::XML::Ordered qw(is_xml_ordered);
 
 my @is_xml_common = (validation => 0, load_ext_dtd => 0, no_network => 1);
diff -r f012cdef0888 -r f439b71f552e perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml	Wed Feb 20 10:22:03 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml	Wed Feb 20 12:34:01 2013 +0200
@@ -9,8 +9,8 @@
             <para>
                 I will kill you.
             </para>
+            <!-- David and Goliath are Biblical characters -->
         </saying>
-        <!-- David and Goliath are Biblical characters -->
         <saying character="Goliath">
             <para>
                 no way, you little idiot!
diff -r f012cdef0888 -r f439b71f552e perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Wed Feb 20 10:22:03 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Wed Feb 20 12:34:01 2013 +0200
@@ -9,11 +9,11 @@
             <para>
                 I will kill you.
             </para>
-        </saying>
         <!-- David and Goliath are Biblical characters
 
         They are nifty.
         -->
+        </saying>
         <saying character="Goliath">
             <para>
                 no way, you little idiot!
diff -r f012cdef0888 -r f439b71f552e perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Wed Feb 20 10:22:03 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Wed Feb 20 12:34:01 2013 +0200
@@ -3,9 +3,11 @@
 use strict;
 use warnings;
 
-use Test::More;
+use lib './t/lib';
 
-use Test::XML tests => 54;
+use Test::More tests => 54;
+
+use XmlGrammarTestXML qw(my_is_xml);
 
 use XML::LibXML;
 
@@ -17,7 +19,7 @@
 {
     my $path = shift;
 
-    open my $in, "<", $path;
+    open my $in, "<:encoding(utf8)", $path;
     my $contents;
     {
         local $/;
@@ -76,7 +78,9 @@
     unlike ($got_xml, qr{^<!DOCTYPE}ms, "No doctype in \"$fn\"");
 
     # TEST*$num_texts
-    is_xml ($got_xml, load_xml("t/screenplay/data/xml/$fn.xml"),
+    my_is_xml (
+        [ string => $got_xml, ],
+        [ string => load_xml("t/screenplay/data/xml/$fn.xml"), ],
         "Output of the Proto Text \"$fn\""
     );
 

changeset:   443:f012cdef0888
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 10:22:03 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t
description:
Remove an unused 'use Test::XML'.


diff -r f03b3ab95ff0 -r f012cdef0888 perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t	Wed Feb 20 10:19:43 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t	Wed Feb 20 10:22:03 2013 +0200
@@ -3,9 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More;
-
-use Test::XML tests => 2;
+use Test::More tests => 2;
 
 use File::Spec;
 

changeset:   442:f03b3ab95ff0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 10:19:43 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
description:
Start converting from Test::XML to Test::XML::Ordered.


diff -r fa1126fd6686 -r f03b3ab95ff0 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Wed Feb 20 07:46:50 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Wed Feb 20 10:19:43 2013 +0200
@@ -3,9 +3,11 @@
 use strict;
 use warnings;
 
-use Test::More;
+use lib './t/lib';
 
-use Test::XML tests => 33;
+use Test::More tests => 33;
+
+use XmlGrammarTestXML qw(my_is_xml);
 
 use File::Spec;
 
@@ -81,7 +83,9 @@
     );
 
     # TEST*$num_texts
-    is_xml ($docbook_text, load_xml("t/fiction/data/docbook/$fn.docbook.xml"),
+    my_is_xml (
+        [ string => $docbook_text, ],
+        [ string => load_xml("t/fiction/data/docbook/$fn.docbook.xml"), ],
         "Output of the DocBook \"$fn\"",
     );
 }
diff -r fa1126fd6686 -r f03b3ab95ff0 perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/lib/XmlGrammarTestXML.pm	Wed Feb 20 10:19:43 2013 +0200
@@ -0,0 +1,30 @@
+package XmlGrammarTestXML;
+
+use strict;
+use warnings;
+
+use parent 'Exporter';
+
+our @EXPORT_OK = (qw(my_is_xml));
+
+use Test::XML::Ordered '0.0.4';
+use Test::XML::Ordered qw(is_xml_ordered);
+
+my @is_xml_common = (validation => 0, load_ext_dtd => 0, no_network => 1);
+
+sub my_is_xml
+{
+    local $Test::Builder::Level = $Test::Builder::Level + 1;
+
+    my ($got, $expected, $blurb) = @_;
+
+    return is_xml_ordered(
+        [ @{$got}, @is_xml_common, ],
+        [ @{$expected}, @is_xml_common, ],
+        {},
+        $blurb,
+    );
+}
+
+1;
+
diff -r fa1126fd6686 -r f03b3ab95ff0 perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Wed Feb 20 07:46:50 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Wed Feb 20 10:19:43 2013 +0200
@@ -5,7 +5,9 @@
 
 use Test::More;
 
-use Test::XML tests => 6;
+use lib './t/lib';
+
+use Test::More tests => 6;
 
 use File::Spec;
 

changeset:   441:fa1126fd6686
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 07:46:50 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Mark an item as DONE.


diff -r caeea186ab51 -r fa1126fd6686 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 07:44:38 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 07:46:50 2013 +0200
@@ -7,9 +7,6 @@
 Long term:
 ----------
 
-
-* Add a test script to test for trailing space and get rid of trailing space.
-
 * ::Fiction: Implement the correct handling of leading special characters in
 lines. Currently, they are processed as they are, without generating an error.
 

changeset:   440:caeea186ab51
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 07:44:38 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Add the <image/> tag.


diff -r be8ebe2438d1 -r caeea186ab51 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 07:23:50 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 07:44:38 2013 +0200
@@ -1,8 +1,6 @@
 Pressing:
 ---------
 
-* Finish implementing the <image /> tag in the ::Screenplay.
-
 * Make sure «dzil test --all» runs all the tests in the sub-directories
 («t/*/*.t») using runtest.
 

changeset:   439:be8ebe2438d1
parent:      436:898025470b1f
parent:      438:6c71a7af0d59
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 07:23:50 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/README
description:
Merge from convert-to-dist-zilla .


diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Wed Feb 20 00:13:35 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,88 +0,0 @@
-use strict;
-use warnings;
-
-use File::Spec;
-use lib File::Spec->catdir(File::Spec->curdir(), "inc");
-
-use XML::Grammar::Fiction::Builder;
-
-my $builder = XML::Grammar::Fiction::Builder->new(
-    module_name         => 'XML::Grammar::Fiction',
-    license             => 'mit',
-    dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
-    dist_version_from   => 'lib/XML/Grammar/Fiction.pm',
-    configure_requires => {
-        'strict' => 0,
-        'warnings' => 0,
-        'File::Spec' => 0,
-        'Module::Build' => 0,
-    },
-    build_requires => {
-        'Config' => 0,
-        'File::Find' => 0,
-        'File::Spec' => 0,
-        'strict' => 0,
-        'Test::More' => 0,
-        'Test::XML' => '0.08',
-        'warnings' => 0,
-        'XML::LibXML' => 0,
-        'XML::SemanticDiff' => '1.0000',
-    },
-    requires =>
-    {
-        'autodie' => 0,
-        'Carp' => 0,
-        'Exporter' => 0,
-        'Data::Dumper' => 0,
-        'Exception::Class' => 0,
-        'File::ShareDir' => 0,
-        'Getopt::Long' => 0,
-        'HTML::Entities' => 0,
-        'List::MoreUtils' => 0,
-        'List::Util' => 0,
-        'Moo' => 0,
-        'MooX' => 0,
-        'MooX::late' => 0,
-        'Parse::RecDescent' => 0,
-        'strict' => 0,
-        'warnings' => 0,
-        'XML::LibXML' => 0,
-        'XML::LibXSLT' => 0,
-        'XML::Writer' => 0,
-    },
-    add_to_cleanup      => [ 'XML-Grammar-Fiction-*' ],
-    create_makefile_pl => 'passthrough',
-    meta_merge =>
-    {
-        resources =>
-        {
-            repository => "https://bitbucket.org/shlomif/fiction-xml",
-            homepage => "http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/",
-        },
-        keywords =>
-        [
-            "authoring",
-            "cinema",
-            "creative writing",
-            "films",
-            "grammar",
-            "movies",
-            "parsing",
-            "fiction",
-            "story",
-            "stories",
-            "noveilla",
-            "noveillas",
-            "novels",
-            "novel",
-            "writing",
-            "xml",
-            "xml-libxml",
-            "xslt",
-        ],
-    },
-    # In order to run the screenplay tests.
-    test_files => "t/*.t t/*/*.t",
-);
-
-$builder->create_build_script();
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 07:23:50 2013 +0200
@@ -62,10 +62,10 @@
     by the tests.
     * A lot of refactoring and cleanup - moved some modules from
     XML-Grammar-Fiction to XML-Grammar-FictionBase .
-    
+
 0.5.1       Sun May 22 09:33:43 IDT 2011
     * Fix the handling of entities at the start of the opening line of
-    paragraphs in the Fiction-Text . See 
+    paragraphs in the Fiction-Text . See
     t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt .
 
 0.5.0       Sat May 21 23:20:43 IDT 2011
@@ -83,11 +83,11 @@
     * Add support for the <blockquote> tag to Fiction-XML / Fiction-Text.
 
 0.3.0       Tue May 17 22:59:17 IDT 2011
-    * Add extradata/screenplay-xml-to-tei.xslt and 
+    * Add extradata/screenplay-xml-to-tei.xslt and
     lib/XML/Grammar/Screenplay/ToTEI.pm - add tests for them.
         - They convert Screenplay-XML into TEI - Text Encoding Initiative,
-        a markup language for digital representation of texts (especially 
-        artsy texts such as screenplays, prose or poems) 
+        a markup language for digital representation of texts (especially
+        artsy texts such as screenplays, prose or poems)
             - http://www.tei-c.org/ .
         - This will allow for easier conversion into XSL-FO, as well as many
         other formats.
@@ -109,7 +109,7 @@
 0.1.6       Sat Apr  9 16:15:17 IDT 2011
     * Now handling the <a /> element only in XML::Grammar::Screenplay - it
     does not exist in ::Fiction.
-    * Add support for the <a href="$URL">$CONTENT</a> tag in Fiction-Text 
+    * Add support for the <a href="$URL">$CONTENT</a> tag in Fiction-Text
     which is translated into <span xlink:href="$URL" >$CONTENT</span> in
     the Fiction-XML grammar.
 
@@ -120,7 +120,7 @@
     in XML-Grammar-Screenplay.
 
 0.1.4       Mon Apr  4 00:50:07 IDT 2011
-    * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
+    * ::Screenplay - Fix the innerdesc on the start of the line in the middle
     of the paragraph. Like:
 
 -----------------
@@ -135,7 +135,7 @@
 +$self->_prev_line_is_empty(scalar(${$self->curr_line_ref()} =~ m{\A\s*\z}));
 -----------------
 
-        - they cancelled each other most of the time except for in this 
+        - they cancelled each other most of the time except for in this
         case.
 
     * ::Screenplay - add support for Screenplay-Text's <i> tags which get
@@ -148,18 +148,18 @@
         problems.
 
 0.1.2       Thu Apr 29 22:47:04 IDT 2010
-        - In the Build.PL - merged 'test_requires' into 'build_requires'. 
+        - In the Build.PL - merged 'test_requires' into 'build_requires'.
         Turns out that 'test_requires' is a Module::Installism.
 
 0.1.1       Tue Apr 27 10:11:00 IDT 2010
         - Made sure XML-Grammar-Screenplay used
-        XML::Grammar::Fiction::ConfigData instead of 
+        XML::Grammar::Fiction::ConfigData instead of
         XML::Grammar::Screenplay::ConfigData . This broke the installation
         and tests on the following test reports:
             - http://www.cpantesters.org/cpan/report/7167671
             - http://www.cpantesters.org/cpan/report/7167759
             - http://www.cpantesters.org/cpan/report/7167134
-        
+
 0.1.0       Mon Apr 26 19:25:55 IDT 2010
         - Merged in the XML-Grammar-Screenplay into this module.
         - Converted XML-Grammar-Screenplay to a non-procedurally-recursive
@@ -173,7 +173,7 @@
         - Add the TODO file.
 
 0.0.4       Sat Mar 13 00:28:52 IST 2010
-        - Implemented better error handling and presentation in 
+        - Implemented better error handling and presentation in
         ::App::FromProto.
             - making use of Exception-Class-based classes.
         - Removed the DOCTYPE from the DocBook/XML output (it was a DocBook
@@ -189,12 +189,12 @@
         - Various refactorings / code cleanup:
             - removed old methods.
             - got rid of the _with_curr_line() anti-abstrcation.
-            - converted the parsing exceptions to Exception-Class 
+            - converted the parsing exceptions to Exception-Class
             ( see lib/XML/Grammar/Fiction/Err.pm )
             - Extract the Struct/Tag.pm helper class.
             - extracted the lib/XML/Grammar/Fiction/RendererBase.pm
             and lib/XML/Grammar/Fiction/RNG_Renderer.pm base classes.
-            - Convert the proto-text parser (::Parser::QnD) to a 
+            - Convert the proto-text parser (::Parser::QnD) to a
             non-procedurally recursive one and extracted many methods from it.
 
 0.0.1       Thu Nov  5 18:59:27 IST 2009
@@ -211,7 +211,7 @@
         - Converted the generated Screenplay-XML to its own namespace:
         http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/
         - Adapted the stylesheets, the RelaxNG schema, etc. to that while
-        adapting the test scripts. 
+        adapting the test scripts.
 
 0.0503  Wed Jul 29 10:12:38 IDT 2009
         - Included a "package XML::Grammar::Screenplay::FromProto::Nodes"
@@ -225,7 +225,7 @@
 
 0.0501  Tue Mar  3 19:38:22 IST 2009
         - Changed the Build.PL to use XML::Grammar::Builder.
-            - changed the tests accordingly, due to the lack of 
+            - changed the tests accordingly, due to the lack of
             "blib/extradata".
 
 0.0500  Fri Feb 27 17:48:52 IST 2009
@@ -246,7 +246,7 @@
 
 0.04    Mon Jun 11 21:26:48 IDT 2007
         - Added the Quick-and-Dirty FromProto parser, which is slightly faster,
-        than the Parse::RecDescent one and with much better diagnostics. 
+        than the Parse::RecDescent one and with much better diagnostics.
         - More parsers can be added later.
         - Broke some compatibility - now require "use"-ing the parser class.
 
@@ -261,12 +261,12 @@
         - Added the title="" attribute to the scene tag.
         - Added support for SGML-like entities
         - Added the direct ScreenplayXML -> HTML processor.
-        
+
 0.0101  Thu May 17 19:14:01 IDT 2007
-        - BUG FIX: Changed to open the filename in 
-        XML::Grammar::Screenplay::FromProto in ":utf8" mode. 
+        - BUG FIX: Changed to open the filename in
+        XML::Grammar::Screenplay::FromProto in ":utf8" mode.
         - BUG FIX: added more dependencies to the Build.PL.
 
-0.01    
+0.01
         First version, released on an unsuspecting world.
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Feb 20 00:13:35 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,189 +0,0 @@
-Build.PL
-Changes
-contrib/docbook-to-fiction-xml-txt.pl
-extradata/fiction-xml.rng
-extradata/fiction-xml-to-docbook.xslt
-extradata/fiction-xml-to-html.xslt
-extradata/screenplay-xml.dtd
-extradata/screenplay-xml.rng
-extradata/screenplay-xml-to-docbook.xslt
-extradata/screenplay-xml-to-html.xslt
-extradata/screenplay-xml-to-tei.xslt
-extradata/screenplay-xml-to-xsl-fo.xslt
-inc/Test/Run/Builder.pm
-inc/XML/Grammar/Builder.pm
-inc/XML/Grammar/Fiction/Builder.pm
-lib/XML/Grammar/Fiction/App/FromProto.pm
-lib/XML/Grammar/Fiction/App/ToDocBook.pm
-lib/XML/Grammar/Fiction/App/ToHTML.pm
-lib/XML/Grammar/FictionBase/Event.pm
-lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
-lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
-lib/XML/Grammar/FictionBase/TagsTree2XML.pm
-lib/XML/Grammar/FictionBase/XSLT/Converter.pm
-lib/XML/Grammar/Fiction/Err.pm
-lib/XML/Grammar/Fiction/FromProto/Nodes.pm
-lib/XML/Grammar/Fiction/FromProto/Parser.pm
-lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Fiction/FromProto.pm
-lib/XML/Grammar/Fiction.pm
-lib/XML/Grammar/Fiction/RNG_Renderer.pm
-lib/XML/Grammar/Fiction/Struct/Tag.pm
-lib/XML/Grammar/Fiction/ToDocBook.pm
-lib/XML/Grammar/Fiction/ToHTML.pm
-lib/XML/Grammar/Screenplay/App/FromProto.pm
-lib/XML/Grammar/Screenplay/App/ToDocBook.pm
-lib/XML/Grammar/Screenplay/App/ToHTML.pm
-lib/XML/Grammar/Screenplay/Base.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Screenplay/FromProto.pm
-lib/XML/Grammar/Screenplay.pm
-lib/XML/Grammar/Screenplay/ToDocBook.pm
-lib/XML/Grammar/Screenplay/ToHTML.pm
-lib/XML/Grammar/Screenplay/ToTEI.pm
-lib/XML/Grammar/Screenplay/XSLT/Base.pm
-Makefile.PL
-MANIFEST
-META.yml # Will be created by "make dist"
-README
-rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
-rejects/lib/XML/Grammar/Fiction/RendererBase.pm
-rejects/lib/XML/Grammar/Fiction/RendererBase.pm.2
-rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
-rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
-rejects/proto-text-to-xml.t
-rejects/QnD.pm
-rejects/Screenplay_Parser_QnD.pm
-scripts/bump-version-number.pl
-scripts/run_agg_tests.t
-scripts/tag-release.pl
-t/00-libxml-basic.t
-t/00-load.t
-t/app-to-html.t
-t/base/line-iterator-unit.t
-t/boilerplate.t
-t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml
-t/fiction/data/docbook/sections-a-href.docbook.xml
-t/fiction/data/docbook/sections-and-paras.docbook.xml
-t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
-t/fiction/data/docbook/with-blockquote.docbook.xml
-t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml
-t/fiction/data/docbook/with-internal-description.docbook.xml
-t/fiction/data/docbook/with-programlisting.docbook.xml
-t/fiction/data/docbook/with-span.docbook.xml
-t/fiction/data/docbook/with-ul-ol-li.docbook.xml
-t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
-t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
-t/fiction/data/proto-text/a-href-with-id-and-lang.txt
-t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
-t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
-t/fiction/data/proto-text-invalid/leading-space.txt
-t/fiction/data/proto-text-invalid/no-right-angle.txt
-t/fiction/data/proto-text-invalid/not-start-with-tag.txt
-t/fiction/data/proto-text-invalid/wrong-close-tag.txt
-t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
-t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt
-t/fiction/data/proto-text/sections-a-href.txt
-t/fiction/data/proto-text/sections-and-paras.txt
-t/fiction/data/proto-text/sections-p-b-i-comments.txt
-t/fiction/data/proto-text/sections-p-b-i.txt
-t/fiction/data/proto-text/with-blockquote.txt
-t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt
-t/fiction/data/proto-text/with-internal-description.txt
-t/fiction/data/proto-text/with-programlisting.txt
-t/fiction/data/proto-text/with-span.txt
-t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt
-t/fiction/data/proto-text/with-ul-ol-li.txt
-t/fiction/data/proto-text/with-xml-lang-attribute.txt
-t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
-t/fiction/data/xml/a-href-with-id-and-lang.xml
-t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
-t/fiction/data/xml/sections-a-href.xml
-t/fiction/data/xml/sections-and-paras.xml
-t/fiction/data/xml/sections-p-b-i-comments.xml
-t/fiction/data/xml/sections-p-b-i.xml
-t/fiction/data/xml/with-blockquote-with-lang-and-id.xml
-t/fiction/data/xml/with-blockquote.xml
-t/fiction/data/xml/with-programlisting.xml
-t/fiction/data/xml/with-span.xml
-t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml
-t/fiction/data/xml/with-ul-ol-li.xml
-t/fiction/data/xml/with-xml-lang-attribute.xml
-t/fiction/data/xml/with-xml-lang-attr-in-section.xml
-t/fiction/proto-text-invalid.t
-t/fiction/proto-text-to-xml-using-custom-parser.t
-t/fiction/qnd-parser-unit.t
-t/fiction/to-docbook.t
-t/fiction/to-xhtml.t
-t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm
-TODO
-t/pod-coverage.t
-t/pod.t
-t/screenplay/00-load.t
-t/screenplay/app-to-html.t
-t/screenplay/boilerplate.t
-t/screenplay/data/docbook/with-internal-description.docbook.xml
-t/screenplay/data/proto-text/dialogue-with-several-paragraphs.txt
-t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
-t/screenplay/data/proto-text/nested-s.txt
-t/screenplay/data/proto-text/scenes-with-titles.txt
-t/screenplay/data/proto-text/two-nested-s.txt
-t/screenplay/data/proto-text/with-brs.txt
-t/screenplay/data/proto-text/with-colon-inside-description.txt
-t/screenplay/data/proto-text/with-comments.txt
-t/screenplay/data/proto-text/with-description.txt
-t/screenplay/data/proto-text/with-dialogue.txt
-t/screenplay/data/proto-text/with-entities.txt
-t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
-t/screenplay/data/proto-text/with-img-element-inside-paragraphs.txt
-t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
-t/screenplay/data/proto-text/with-internal-description.txt
-t/screenplay/data/proto-text/with-multi-line-comments.txt
-t/screenplay/data/proto-text/with-multi-para-desc.txt
-t/screenplay/data/proto-text/with-numeric-entities.txt
-t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
-t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml
-t/screenplay/data/tei/nested-s.tei.xml
-t/screenplay/data/tei/scenes-with-titles.tei.xml
-t/screenplay/data/tei/two-nested-s.tei.xml
-t/screenplay/data/tei/with-brs.tei.xml
-t/screenplay/data/tei/with-colon-inside-description.tei.xml
-t/screenplay/data/tei/with-comments.tei.xml
-t/screenplay/data/tei/with-description.tei.xml
-t/screenplay/data/tei/with-dialogue.tei.xml
-t/screenplay/data/tei/with-entities.tei.xml
-t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml
-t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml
-t/screenplay/data/tei/with-internal-description.tei.xml
-t/screenplay/data/tei/with-multi-line-comments.tei.xml
-t/screenplay/data/tei/with-multi-para-desc.tei.xml
-t/screenplay/data/tei/with-numeric-entities.tei.xml
-t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml
-t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
-t/screenplay/data/xml/nested-s.xml
-t/screenplay/data/xml/scenes-with-titles.xml
-t/screenplay/data/xml/two-nested-s.xml
-t/screenplay/data/xml/with-brs.xml
-t/screenplay/data/xml/with-colon-inside-description.xml
-t/screenplay/data/xml/with-comments.xml
-t/screenplay/data/xml/with-description.xml
-t/screenplay/data/xml/with-dialogue.xml
-t/screenplay/data/xml/with-entities.xml
-t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
-t/screenplay/data/xml/with-img-element-inside-paragraphs.xml
-t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
-t/screenplay/data/xml/with-internal-description.xml
-t/screenplay/data/xml/with-multi-line-comments.xml
-t/screenplay/data/xml/with-multi-para-desc.xml
-t/screenplay/data/xml/with-numeric-entities.xml
-t/screenplay/data/xml/with-tags-inside-paragraphs.xml
-t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
-t/screenplay/proto-text-invalid.t
-t/screenplay/proto-text-to-xml-using-custom-parser.t
-t/screenplay/qnd-parser-unit.t
-t/screenplay/to-docbook.t
-t/screenplay/to-tei.t
-t/screenplay/to-xhtml.t
-t/style-trailing-space.t
-META.json
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP	Wed Feb 20 07:23:50 2013 +0200
@@ -0,0 +1,29 @@
+^blib/
+^Makefile$
+^Makefile\.[a-z]+$
+^pm_to_blib$
+CVS/
+,v$
+^tmp/
+\.old$
+\.bak$
+~$
+^#
+.*.swp
+\.shar$
+\.tar$
+\.tgz$
+\.tar\.gz$
+\.zip$
+_uu$
+^ttt*
+^dist/
+^\.cvs
+^\.git
+^\.hg
+^\.bzr
+\.svn
+^XML-Fiction
+^MYMETA.yml$
+^_build/
+^Build$
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/README
--- a/perl/modules/XML-Grammar-Fiction/README	Wed Feb 20 00:13:35 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,53 +0,0 @@
-XML-Grammar-Fiction / XML-Grammar-Screenplay
-
-This is a module implementing two XML grammars and two corresponding
-well-formed text-based languages - one for screenplays and one for free-form
-fiction. It contains:
-
-1. Converters from a well-formed plain text format to its custom XML format.
-
-2. Converters from its custom XML format to DocBook/XML.
-
-INSTALLATION
-
-To install this module, run the following commands:
-
-    perl Build.PL
-    ./Build
-    ./Build test
-    ./Build install
-
-
-SUPPORT AND DOCUMENTATION
-
-After installing, you can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-    perldoc XML::Grammar::Fiction
-
-You can also look for information at:
-
-    The XML-Grammar-Fiction Homepage:
-        http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/
-
-    MetaCPAN
-        https://metacpan.org/release/XML-Grammar-Fiction
-
-    Search CPAN
-        http://search.cpan.org/dist/XML-Grammar-Fiction
-
-    CPAN Request Tracker:
-        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction
-
-    AnnoCPAN, annotated CPAN documentation:
-        http://annocpan.org/dist/XML-Grammar-Fiction
-
-    CPAN Ratings:
-        http://cpanratings.perl.org/d/XML-Grammar-Fiction
-
-COPYRIGHT AND LICENCE
-
-Copyright (C) 2007 Shlomi Fish
-
-This program is released under the following license: MIT X11.
-
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 07:23:50 2013 +0200
@@ -3,6 +3,9 @@
 
 * Finish implementing the <image /> tag in the ::Screenplay.
 
+* Make sure «dzil test --all» runs all the tests in the sub-directories
+(«t/*/*.t») using runtest.
+
 Long term:
 ----------
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/dist.ini
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Wed Feb 20 07:23:50 2013 +0200
@@ -0,0 +1,24 @@
+name    = XML-Grammar-Fiction
+author  = Shlomi Fish <shlomif@cpan.org>
+license = MIT
+copyright_holder = Shlomi Fish
+copyright_year   = 2007
+
+[@Basic]
+[AutoPrereqs]
+[ModuleBuild]
+mb_class = XML::Grammar::Builder
+testing_command = runtest
+[PodSyntaxTests]
+[PodCoverageTests]
+[Test::Compile]
+fake_home = 1
+[PruneCruft]
+[VersionFromModule]
+[MetaResources]
+bugtracker.web = http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction
+bugtracker.mailto = bug-xml-grammar-fiction@rt.cpan.org
+repository.url = ssh://hg@bitbucket.org/shlomif/perl-XML-Grammar-Fiction
+repository.web = http://bitbucket.org/shlomif/perl-XML-Grammar-Fiction
+repository.type = hg
+[PodWeaver]
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -183,18 +183,6 @@
 
 =back
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
 =head1 MOTIVATION
 
 I (= Shlomi Fish) originated this CPAN distribution (after forking
@@ -211,73 +199,6 @@
 required in the future. I hope you still find it useful and let me know
 if you need any feature or bug-fix.
 
-=head1 SUPPORT
-
-You can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Fiction
-
-You can also look for information at:
-
-=over 4
-
-=item * XML-Grammar-Fiction’s Homepage
-
-L<http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/>
-
-=item * AnnoCPAN: Annotated CPAN documentation
-
-L<http://annocpan.org/dist/XML-Grammar-Fiction>
-
-=item * CPAN Ratings
-
-L<http://cpanratings.perl.org/d/XML-Grammar-Fiction>
-
-=item * RT: CPAN's request tracker
-
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
-
-=item * MetaCPAN
-
-L<https://metacpan.org/release/XML-Grammar-Fiction>
-
-=item * Search CPAN
-
-L<http://search.cpan.org/dist/XML-Grammar-Fiction>
-
-=back
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-This program is released under the following license: MIT X11:
-L<http://www.opensource.org/licenses/mit-license.php> .
-
-=head2 LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -107,29 +107,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -67,29 +67,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -67,29 +67,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -75,48 +75,5 @@
 
 These are exceptions for L<XML::Grammar::Fiction> based on L<Exception::Class>
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-This program is released under the following license: MIT X11:
-L<http://www.opensource.org/licenses/mit-license.php> .
-
-=head2 LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
 =cut
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -524,28 +524,5 @@
     return $buffer;
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -20,27 +20,5 @@
 
 our $VERSION = '0.10.0';
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -194,26 +194,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -25,27 +25,6 @@
 
 Inherited - (to settle pod-coverage).
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -106,26 +106,6 @@
 
 Detaches the children and returns them as an array reference.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -77,28 +77,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -73,28 +73,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -77,25 +77,5 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -382,26 +382,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -961,26 +961,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -108,27 +108,6 @@
 
 Internal - (to settle pod-coverage.).
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2010, Shlomi Fish.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -199,30 +199,5 @@
     }
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
-1;
-
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -3,6 +3,8 @@
 use warnings;
 use strict;
 
+=encoding utf8
+
 =head1 NAME
 
 XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for
@@ -182,54 +184,6 @@
 In the future, I plan on writing a custom parser that will provide better
 diagnostics and will hopefully also be faster.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 SUPPORT
-
-You can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-
-You can also look for information at:
-
-=over 4
-
-=item * AnnoCPAN: Annotated CPAN documentation
-
-L<http://annocpan.org/dist/XML-Grammar-Fiction>
-
-=item * CPAN Ratings
-
-L<http://cpanratings.perl.org/d/XML-Grammar-Fiction>
-
-=item * RT: CPAN's request tracker
-
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
-
-=item * Search CPAN
-
-L<http://search.cpan.org/dist/XML-Grammar-Fiction/>
-
-=back
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -62,29 +62,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -54,29 +54,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -54,29 +54,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -3,6 +3,8 @@
 use strict;
 use warnings;
 
+=encoding utf8
+
 =head1 NAME
 
 XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -319,28 +319,5 @@
     return ${$self->_buffer()};
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -14,24 +14,4 @@
 
 B<For internal use only>.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -620,26 +620,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -54,28 +54,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -52,28 +52,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -53,28 +53,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 07:23:50 2013 +0200
@@ -25,24 +25,4 @@
 
 Inherited - (to settle pod-coverage).
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
diff -r 898025470b1f -r be8ebe2438d1 perl/modules/XML-Grammar-Fiction/weaver.ini
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/weaver.ini	Wed Feb 20 07:23:50 2013 +0200
@@ -0,0 +1,39 @@
+[@CorePrep]
+
+[-Encoding]
+
+[Generic / NAME]
+
+[Version]
+
+[Region  / prelude]
+
+
+[Generic / SYNOPSIS]
+[Generic / DESCRIPTION]
+[Generic / OVERVIEW]
+
+[Collect / ATTRIBUTES]
+command = attr
+
+[Collect / METHODS]
+command = method
+
+[Leftovers]
+
+[Region  / postlude]
+
+[Authors]
+[Legal]
+
+; [Generic / DESCRIPTION]
+; required = 1
+
+; [Generic / BUGS]
+
+; [Generic / Section::Bugs]
+; [Generic / Section::License]
+;
+[Bugs]
+[Support]
+all_modules = 1

changeset:   438:6c71a7af0d59
branch:      convert-to-dist-zilla
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 01:50:31 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Trim the POD and add MANIFEST.SKIP.

The POD is removing sections that already exist in such form.

The MANIFEST.SKIP is to prevent generated and temporary files.


diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST.SKIP	Wed Feb 20 01:50:31 2013 +0200
@@ -0,0 +1,29 @@
+^blib/
+^Makefile$
+^Makefile\.[a-z]+$
+^pm_to_blib$
+CVS/
+,v$
+^tmp/
+\.old$
+\.bak$
+~$
+^#
+.*.swp
+\.shar$
+\.tar$
+\.tgz$
+\.tar\.gz$
+\.zip$
+_uu$
+^ttt*
+^dist/
+^\.cvs
+^\.git
+^\.hg
+^\.bzr
+\.svn
+^XML-Fiction
+^MYMETA.yml$
+^_build/
+^Build$
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -183,18 +183,6 @@
 
 =back
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
 =head1 MOTIVATION
 
 I (= Shlomi Fish) originated this CPAN distribution (after forking
@@ -211,73 +199,6 @@
 required in the future. I hope you still find it useful and let me know
 if you need any feature or bug-fix.
 
-=head1 SUPPORT
-
-You can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Fiction
-
-You can also look for information at:
-
-=over 4
-
-=item * XML-Grammar-Fiction’s Homepage
-
-L<http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/>
-
-=item * AnnoCPAN: Annotated CPAN documentation
-
-L<http://annocpan.org/dist/XML-Grammar-Fiction>
-
-=item * CPAN Ratings
-
-L<http://cpanratings.perl.org/d/XML-Grammar-Fiction>
-
-=item * RT: CPAN's request tracker
-
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
-
-=item * MetaCPAN
-
-L<https://metacpan.org/release/XML-Grammar-Fiction>
-
-=item * Search CPAN
-
-L<http://search.cpan.org/dist/XML-Grammar-Fiction>
-
-=back
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-This program is released under the following license: MIT X11:
-L<http://www.opensource.org/licenses/mit-license.php> .
-
-=head2 LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -107,29 +107,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -67,29 +67,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -67,29 +67,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -75,48 +75,5 @@
 
 These are exceptions for L<XML::Grammar::Fiction> based on L<Exception::Class>
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-This program is released under the following license: MIT X11:
-L<http://www.opensource.org/licenses/mit-license.php> .
-
-=head2 LICENSE
-
-Copyright (c) 2007, 2009 Shlomi Fish.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
 =cut
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -524,28 +524,5 @@
     return $buffer;
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -20,27 +20,5 @@
 
 our $VERSION = '0.10.0';
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -194,26 +194,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -25,27 +25,6 @@
 
 Inherited - (to settle pod-coverage).
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -106,26 +106,6 @@
 
 Detaches the children and returns them as an array reference.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -77,28 +77,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -73,28 +73,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -77,25 +77,5 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -382,26 +382,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -961,26 +961,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -108,27 +108,6 @@
 
 Internal - (to settle pod-coverage.).
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2010, Shlomi Fish.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -199,30 +199,5 @@
     }
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
-1;
-
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -3,6 +3,8 @@
 use warnings;
 use strict;
 
+=encoding utf8
+
 =head1 NAME
 
 XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for
@@ -182,54 +184,6 @@
 In the future, I plan on writing a custom parser that will provide better
 diagnostics and will hopefully also be faster.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 SUPPORT
-
-You can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-
-You can also look for information at:
-
-=over 4
-
-=item * AnnoCPAN: Annotated CPAN documentation
-
-L<http://annocpan.org/dist/XML-Grammar-Fiction>
-
-=item * CPAN Ratings
-
-L<http://cpanratings.perl.org/d/XML-Grammar-Fiction>
-
-=item * RT: CPAN's request tracker
-
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
-
-=item * Search CPAN
-
-L<http://search.cpan.org/dist/XML-Grammar-Fiction/>
-
-=back
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -62,29 +62,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -54,29 +54,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -54,29 +54,5 @@
     exit(0);
 }
 
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -3,6 +3,8 @@
 use strict;
 use warnings;
 
+=encoding utf8
+
 =head1 NAME
 
 XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -319,28 +319,5 @@
     return ${$self->_buffer()};
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -14,24 +14,4 @@
 
 B<For internal use only>.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -620,26 +620,6 @@
 
 Leftover from Moo.
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut
 
 1;
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -54,28 +54,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -52,28 +52,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -53,28 +53,5 @@
     return $self->perform_translation($args);
 }
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
 1;
 
diff -r 3d2c1e763c37 -r 6c71a7af0d59 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 01:23:39 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Feb 20 01:50:31 2013 +0200
@@ -25,24 +25,4 @@
 
 Inherited - (to settle pod-coverage).
 
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
 =cut

changeset:   437:3d2c1e763c37
branch:      convert-to-dist-zilla
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 01:23:39 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/README perl/modules/XML-Grammar-Fiction/TODO perl/modules/XML-Grammar-Fiction/dist.ini perl/modules/XML-Grammar-Fiction/weaver.ini
description:
Convert the build system to dzil.


diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Wed Feb 20 00:13:35 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,88 +0,0 @@
-use strict;
-use warnings;
-
-use File::Spec;
-use lib File::Spec->catdir(File::Spec->curdir(), "inc");
-
-use XML::Grammar::Fiction::Builder;
-
-my $builder = XML::Grammar::Fiction::Builder->new(
-    module_name         => 'XML::Grammar::Fiction',
-    license             => 'mit',
-    dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
-    dist_version_from   => 'lib/XML/Grammar/Fiction.pm',
-    configure_requires => {
-        'strict' => 0,
-        'warnings' => 0,
-        'File::Spec' => 0,
-        'Module::Build' => 0,
-    },
-    build_requires => {
-        'Config' => 0,
-        'File::Find' => 0,
-        'File::Spec' => 0,
-        'strict' => 0,
-        'Test::More' => 0,
-        'Test::XML' => '0.08',
-        'warnings' => 0,
-        'XML::LibXML' => 0,
-        'XML::SemanticDiff' => '1.0000',
-    },
-    requires =>
-    {
-        'autodie' => 0,
-        'Carp' => 0,
-        'Exporter' => 0,
-        'Data::Dumper' => 0,
-        'Exception::Class' => 0,
-        'File::ShareDir' => 0,
-        'Getopt::Long' => 0,
-        'HTML::Entities' => 0,
-        'List::MoreUtils' => 0,
-        'List::Util' => 0,
-        'Moo' => 0,
-        'MooX' => 0,
-        'MooX::late' => 0,
-        'Parse::RecDescent' => 0,
-        'strict' => 0,
-        'warnings' => 0,
-        'XML::LibXML' => 0,
-        'XML::LibXSLT' => 0,
-        'XML::Writer' => 0,
-    },
-    add_to_cleanup      => [ 'XML-Grammar-Fiction-*' ],
-    create_makefile_pl => 'passthrough',
-    meta_merge =>
-    {
-        resources =>
-        {
-            repository => "https://bitbucket.org/shlomif/fiction-xml",
-            homepage => "http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/",
-        },
-        keywords =>
-        [
-            "authoring",
-            "cinema",
-            "creative writing",
-            "films",
-            "grammar",
-            "movies",
-            "parsing",
-            "fiction",
-            "story",
-            "stories",
-            "noveilla",
-            "noveillas",
-            "novels",
-            "novel",
-            "writing",
-            "xml",
-            "xml-libxml",
-            "xslt",
-        ],
-    },
-    # In order to run the screenplay tests.
-    test_files => "t/*.t t/*/*.t",
-);
-
-$builder->create_build_script();
diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 01:23:39 2013 +0200
@@ -62,10 +62,10 @@
     by the tests.
     * A lot of refactoring and cleanup - moved some modules from
     XML-Grammar-Fiction to XML-Grammar-FictionBase .
-    
+
 0.5.1       Sun May 22 09:33:43 IDT 2011
     * Fix the handling of entities at the start of the opening line of
-    paragraphs in the Fiction-Text . See 
+    paragraphs in the Fiction-Text . See
     t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt .
 
 0.5.0       Sat May 21 23:20:43 IDT 2011
@@ -83,11 +83,11 @@
     * Add support for the <blockquote> tag to Fiction-XML / Fiction-Text.
 
 0.3.0       Tue May 17 22:59:17 IDT 2011
-    * Add extradata/screenplay-xml-to-tei.xslt and 
+    * Add extradata/screenplay-xml-to-tei.xslt and
     lib/XML/Grammar/Screenplay/ToTEI.pm - add tests for them.
         - They convert Screenplay-XML into TEI - Text Encoding Initiative,
-        a markup language for digital representation of texts (especially 
-        artsy texts such as screenplays, prose or poems) 
+        a markup language for digital representation of texts (especially
+        artsy texts such as screenplays, prose or poems)
             - http://www.tei-c.org/ .
         - This will allow for easier conversion into XSL-FO, as well as many
         other formats.
@@ -109,7 +109,7 @@
 0.1.6       Sat Apr  9 16:15:17 IDT 2011
     * Now handling the <a /> element only in XML::Grammar::Screenplay - it
     does not exist in ::Fiction.
-    * Add support for the <a href="$URL">$CONTENT</a> tag in Fiction-Text 
+    * Add support for the <a href="$URL">$CONTENT</a> tag in Fiction-Text
     which is translated into <span xlink:href="$URL" >$CONTENT</span> in
     the Fiction-XML grammar.
 
@@ -120,7 +120,7 @@
     in XML-Grammar-Screenplay.
 
 0.1.4       Mon Apr  4 00:50:07 IDT 2011
-    * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
+    * ::Screenplay - Fix the innerdesc on the start of the line in the middle
     of the paragraph. Like:
 
 -----------------
@@ -135,7 +135,7 @@
 +$self->_prev_line_is_empty(scalar(${$self->curr_line_ref()} =~ m{\A\s*\z}));
 -----------------
 
-        - they cancelled each other most of the time except for in this 
+        - they cancelled each other most of the time except for in this
         case.
 
     * ::Screenplay - add support for Screenplay-Text's <i> tags which get
@@ -148,18 +148,18 @@
         problems.
 
 0.1.2       Thu Apr 29 22:47:04 IDT 2010
-        - In the Build.PL - merged 'test_requires' into 'build_requires'. 
+        - In the Build.PL - merged 'test_requires' into 'build_requires'.
         Turns out that 'test_requires' is a Module::Installism.
 
 0.1.1       Tue Apr 27 10:11:00 IDT 2010
         - Made sure XML-Grammar-Screenplay used
-        XML::Grammar::Fiction::ConfigData instead of 
+        XML::Grammar::Fiction::ConfigData instead of
         XML::Grammar::Screenplay::ConfigData . This broke the installation
         and tests on the following test reports:
             - http://www.cpantesters.org/cpan/report/7167671
             - http://www.cpantesters.org/cpan/report/7167759
             - http://www.cpantesters.org/cpan/report/7167134
-        
+
 0.1.0       Mon Apr 26 19:25:55 IDT 2010
         - Merged in the XML-Grammar-Screenplay into this module.
         - Converted XML-Grammar-Screenplay to a non-procedurally-recursive
@@ -173,7 +173,7 @@
         - Add the TODO file.
 
 0.0.4       Sat Mar 13 00:28:52 IST 2010
-        - Implemented better error handling and presentation in 
+        - Implemented better error handling and presentation in
         ::App::FromProto.
             - making use of Exception-Class-based classes.
         - Removed the DOCTYPE from the DocBook/XML output (it was a DocBook
@@ -189,12 +189,12 @@
         - Various refactorings / code cleanup:
             - removed old methods.
             - got rid of the _with_curr_line() anti-abstrcation.
-            - converted the parsing exceptions to Exception-Class 
+            - converted the parsing exceptions to Exception-Class
             ( see lib/XML/Grammar/Fiction/Err.pm )
             - Extract the Struct/Tag.pm helper class.
             - extracted the lib/XML/Grammar/Fiction/RendererBase.pm
             and lib/XML/Grammar/Fiction/RNG_Renderer.pm base classes.
-            - Convert the proto-text parser (::Parser::QnD) to a 
+            - Convert the proto-text parser (::Parser::QnD) to a
             non-procedurally recursive one and extracted many methods from it.
 
 0.0.1       Thu Nov  5 18:59:27 IST 2009
@@ -211,7 +211,7 @@
         - Converted the generated Screenplay-XML to its own namespace:
         http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/
         - Adapted the stylesheets, the RelaxNG schema, etc. to that while
-        adapting the test scripts. 
+        adapting the test scripts.
 
 0.0503  Wed Jul 29 10:12:38 IDT 2009
         - Included a "package XML::Grammar::Screenplay::FromProto::Nodes"
@@ -225,7 +225,7 @@
 
 0.0501  Tue Mar  3 19:38:22 IST 2009
         - Changed the Build.PL to use XML::Grammar::Builder.
-            - changed the tests accordingly, due to the lack of 
+            - changed the tests accordingly, due to the lack of
             "blib/extradata".
 
 0.0500  Fri Feb 27 17:48:52 IST 2009
@@ -246,7 +246,7 @@
 
 0.04    Mon Jun 11 21:26:48 IDT 2007
         - Added the Quick-and-Dirty FromProto parser, which is slightly faster,
-        than the Parse::RecDescent one and with much better diagnostics. 
+        than the Parse::RecDescent one and with much better diagnostics.
         - More parsers can be added later.
         - Broke some compatibility - now require "use"-ing the parser class.
 
@@ -261,12 +261,12 @@
         - Added the title="" attribute to the scene tag.
         - Added support for SGML-like entities
         - Added the direct ScreenplayXML -> HTML processor.
-        
+
 0.0101  Thu May 17 19:14:01 IDT 2007
-        - BUG FIX: Changed to open the filename in 
-        XML::Grammar::Screenplay::FromProto in ":utf8" mode. 
+        - BUG FIX: Changed to open the filename in
+        XML::Grammar::Screenplay::FromProto in ":utf8" mode.
         - BUG FIX: added more dependencies to the Build.PL.
 
-0.01    
+0.01
         First version, released on an unsuspecting world.
 
diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Feb 20 00:13:35 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,189 +0,0 @@
-Build.PL
-Changes
-contrib/docbook-to-fiction-xml-txt.pl
-extradata/fiction-xml.rng
-extradata/fiction-xml-to-docbook.xslt
-extradata/fiction-xml-to-html.xslt
-extradata/screenplay-xml.dtd
-extradata/screenplay-xml.rng
-extradata/screenplay-xml-to-docbook.xslt
-extradata/screenplay-xml-to-html.xslt
-extradata/screenplay-xml-to-tei.xslt
-extradata/screenplay-xml-to-xsl-fo.xslt
-inc/Test/Run/Builder.pm
-inc/XML/Grammar/Builder.pm
-inc/XML/Grammar/Fiction/Builder.pm
-lib/XML/Grammar/Fiction/App/FromProto.pm
-lib/XML/Grammar/Fiction/App/ToDocBook.pm
-lib/XML/Grammar/Fiction/App/ToHTML.pm
-lib/XML/Grammar/FictionBase/Event.pm
-lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
-lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
-lib/XML/Grammar/FictionBase/TagsTree2XML.pm
-lib/XML/Grammar/FictionBase/XSLT/Converter.pm
-lib/XML/Grammar/Fiction/Err.pm
-lib/XML/Grammar/Fiction/FromProto/Nodes.pm
-lib/XML/Grammar/Fiction/FromProto/Parser.pm
-lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Fiction/FromProto.pm
-lib/XML/Grammar/Fiction.pm
-lib/XML/Grammar/Fiction/RNG_Renderer.pm
-lib/XML/Grammar/Fiction/Struct/Tag.pm
-lib/XML/Grammar/Fiction/ToDocBook.pm
-lib/XML/Grammar/Fiction/ToHTML.pm
-lib/XML/Grammar/Screenplay/App/FromProto.pm
-lib/XML/Grammar/Screenplay/App/ToDocBook.pm
-lib/XML/Grammar/Screenplay/App/ToHTML.pm
-lib/XML/Grammar/Screenplay/Base.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Screenplay/FromProto.pm
-lib/XML/Grammar/Screenplay.pm
-lib/XML/Grammar/Screenplay/ToDocBook.pm
-lib/XML/Grammar/Screenplay/ToHTML.pm
-lib/XML/Grammar/Screenplay/ToTEI.pm
-lib/XML/Grammar/Screenplay/XSLT/Base.pm
-Makefile.PL
-MANIFEST
-META.yml # Will be created by "make dist"
-README
-rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
-rejects/lib/XML/Grammar/Fiction/RendererBase.pm
-rejects/lib/XML/Grammar/Fiction/RendererBase.pm.2
-rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
-rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
-rejects/proto-text-to-xml.t
-rejects/QnD.pm
-rejects/Screenplay_Parser_QnD.pm
-scripts/bump-version-number.pl
-scripts/run_agg_tests.t
-scripts/tag-release.pl
-t/00-libxml-basic.t
-t/00-load.t
-t/app-to-html.t
-t/base/line-iterator-unit.t
-t/boilerplate.t
-t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml
-t/fiction/data/docbook/sections-a-href.docbook.xml
-t/fiction/data/docbook/sections-and-paras.docbook.xml
-t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
-t/fiction/data/docbook/with-blockquote.docbook.xml
-t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml
-t/fiction/data/docbook/with-internal-description.docbook.xml
-t/fiction/data/docbook/with-programlisting.docbook.xml
-t/fiction/data/docbook/with-span.docbook.xml
-t/fiction/data/docbook/with-ul-ol-li.docbook.xml
-t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
-t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
-t/fiction/data/proto-text/a-href-with-id-and-lang.txt
-t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
-t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
-t/fiction/data/proto-text-invalid/leading-space.txt
-t/fiction/data/proto-text-invalid/no-right-angle.txt
-t/fiction/data/proto-text-invalid/not-start-with-tag.txt
-t/fiction/data/proto-text-invalid/wrong-close-tag.txt
-t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
-t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt
-t/fiction/data/proto-text/sections-a-href.txt
-t/fiction/data/proto-text/sections-and-paras.txt
-t/fiction/data/proto-text/sections-p-b-i-comments.txt
-t/fiction/data/proto-text/sections-p-b-i.txt
-t/fiction/data/proto-text/with-blockquote.txt
-t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt
-t/fiction/data/proto-text/with-internal-description.txt
-t/fiction/data/proto-text/with-programlisting.txt
-t/fiction/data/proto-text/with-span.txt
-t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt
-t/fiction/data/proto-text/with-ul-ol-li.txt
-t/fiction/data/proto-text/with-xml-lang-attribute.txt
-t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
-t/fiction/data/xml/a-href-with-id-and-lang.xml
-t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
-t/fiction/data/xml/sections-a-href.xml
-t/fiction/data/xml/sections-and-paras.xml
-t/fiction/data/xml/sections-p-b-i-comments.xml
-t/fiction/data/xml/sections-p-b-i.xml
-t/fiction/data/xml/with-blockquote-with-lang-and-id.xml
-t/fiction/data/xml/with-blockquote.xml
-t/fiction/data/xml/with-programlisting.xml
-t/fiction/data/xml/with-span.xml
-t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml
-t/fiction/data/xml/with-ul-ol-li.xml
-t/fiction/data/xml/with-xml-lang-attribute.xml
-t/fiction/data/xml/with-xml-lang-attr-in-section.xml
-t/fiction/proto-text-invalid.t
-t/fiction/proto-text-to-xml-using-custom-parser.t
-t/fiction/qnd-parser-unit.t
-t/fiction/to-docbook.t
-t/fiction/to-xhtml.t
-t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm
-TODO
-t/pod-coverage.t
-t/pod.t
-t/screenplay/00-load.t
-t/screenplay/app-to-html.t
-t/screenplay/boilerplate.t
-t/screenplay/data/docbook/with-internal-description.docbook.xml
-t/screenplay/data/proto-text/dialogue-with-several-paragraphs.txt
-t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
-t/screenplay/data/proto-text/nested-s.txt
-t/screenplay/data/proto-text/scenes-with-titles.txt
-t/screenplay/data/proto-text/two-nested-s.txt
-t/screenplay/data/proto-text/with-brs.txt
-t/screenplay/data/proto-text/with-colon-inside-description.txt
-t/screenplay/data/proto-text/with-comments.txt
-t/screenplay/data/proto-text/with-description.txt
-t/screenplay/data/proto-text/with-dialogue.txt
-t/screenplay/data/proto-text/with-entities.txt
-t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
-t/screenplay/data/proto-text/with-img-element-inside-paragraphs.txt
-t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
-t/screenplay/data/proto-text/with-internal-description.txt
-t/screenplay/data/proto-text/with-multi-line-comments.txt
-t/screenplay/data/proto-text/with-multi-para-desc.txt
-t/screenplay/data/proto-text/with-numeric-entities.txt
-t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
-t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml
-t/screenplay/data/tei/nested-s.tei.xml
-t/screenplay/data/tei/scenes-with-titles.tei.xml
-t/screenplay/data/tei/two-nested-s.tei.xml
-t/screenplay/data/tei/with-brs.tei.xml
-t/screenplay/data/tei/with-colon-inside-description.tei.xml
-t/screenplay/data/tei/with-comments.tei.xml
-t/screenplay/data/tei/with-description.tei.xml
-t/screenplay/data/tei/with-dialogue.tei.xml
-t/screenplay/data/tei/with-entities.tei.xml
-t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml
-t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml
-t/screenplay/data/tei/with-internal-description.tei.xml
-t/screenplay/data/tei/with-multi-line-comments.tei.xml
-t/screenplay/data/tei/with-multi-para-desc.tei.xml
-t/screenplay/data/tei/with-numeric-entities.tei.xml
-t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml
-t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
-t/screenplay/data/xml/nested-s.xml
-t/screenplay/data/xml/scenes-with-titles.xml
-t/screenplay/data/xml/two-nested-s.xml
-t/screenplay/data/xml/with-brs.xml
-t/screenplay/data/xml/with-colon-inside-description.xml
-t/screenplay/data/xml/with-comments.xml
-t/screenplay/data/xml/with-description.xml
-t/screenplay/data/xml/with-dialogue.xml
-t/screenplay/data/xml/with-entities.xml
-t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
-t/screenplay/data/xml/with-img-element-inside-paragraphs.xml
-t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
-t/screenplay/data/xml/with-internal-description.xml
-t/screenplay/data/xml/with-multi-line-comments.xml
-t/screenplay/data/xml/with-multi-para-desc.xml
-t/screenplay/data/xml/with-numeric-entities.xml
-t/screenplay/data/xml/with-tags-inside-paragraphs.xml
-t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
-t/screenplay/proto-text-invalid.t
-t/screenplay/proto-text-to-xml-using-custom-parser.t
-t/screenplay/qnd-parser-unit.t
-t/screenplay/to-docbook.t
-t/screenplay/to-tei.t
-t/screenplay/to-xhtml.t
-t/style-trailing-space.t
-META.json
diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/README
--- a/perl/modules/XML-Grammar-Fiction/README	Wed Feb 20 00:13:35 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,53 +0,0 @@
-XML-Grammar-Fiction / XML-Grammar-Screenplay
-
-This is a module implementing two XML grammars and two corresponding
-well-formed text-based languages - one for screenplays and one for free-form
-fiction. It contains:
-
-1. Converters from a well-formed plain text format to its custom XML format.
-
-2. Converters from its custom XML format to DocBook/XML.
-
-INSTALLATION
-
-To install this module, run the following commands:
-
-    perl Build.PL
-    ./Build
-    ./Build test
-    ./Build install
-
-
-SUPPORT AND DOCUMENTATION
-
-After installing, you can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-    perldoc XML::Grammar::Fiction
-
-You can also look for information at:
-
-    The XML-Grammar-Fiction Homepage:
-        http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/
-
-    MetaCPAN
-        https://metacpan.org/release/XML-Grammar-Fiction
-
-    Search CPAN
-        http://search.cpan.org/dist/XML-Grammar-Fiction
-
-    CPAN Request Tracker:
-        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction
-
-    AnnoCPAN, annotated CPAN documentation:
-        http://annocpan.org/dist/XML-Grammar-Fiction
-
-    CPAN Ratings:
-        http://cpanratings.perl.org/d/XML-Grammar-Fiction
-
-COPYRIGHT AND LICENCE
-
-Copyright (C) 2007 Shlomi Fish
-
-This program is released under the following license: MIT X11.
-
diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 00:13:35 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 01:23:39 2013 +0200
@@ -3,6 +3,9 @@
 
 * Finish implementing the <image /> tag in the ::Screenplay.
 
+* Make sure «dzil test --all» runs all the tests in the sub-directories
+(«t/*/*.t») using runtest.
+
 Long term:
 ----------
 
diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/dist.ini
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/dist.ini	Wed Feb 20 01:23:39 2013 +0200
@@ -0,0 +1,24 @@
+name    = XML-Grammar-Fiction
+author  = Shlomi Fish <shlomif@cpan.org>
+license = MIT
+copyright_holder = Shlomi Fish
+copyright_year   = 2007
+
+[@Basic]
+[AutoPrereqs]
+[ModuleBuild]
+mb_class = XML::Grammar::Builder
+testing_command = runtest
+[PodSyntaxTests]
+[PodCoverageTests]
+[Test::Compile]
+fake_home = 1
+[PruneCruft]
+[VersionFromModule]
+[MetaResources]
+bugtracker.web = http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction
+bugtracker.mailto = bug-xml-grammar-fiction@rt.cpan.org
+repository.url = ssh://hg@bitbucket.org/shlomif/perl-XML-Grammar-Fiction
+repository.web = http://bitbucket.org/shlomif/perl-XML-Grammar-Fiction
+repository.type = hg
+[PodWeaver]
diff -r 898025470b1f -r 3d2c1e763c37 perl/modules/XML-Grammar-Fiction/weaver.ini
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/weaver.ini	Wed Feb 20 01:23:39 2013 +0200
@@ -0,0 +1,39 @@
+[@CorePrep]
+
+[-Encoding]
+
+[Generic / NAME]
+
+[Version]
+
+[Region  / prelude]
+
+
+[Generic / SYNOPSIS]
+[Generic / DESCRIPTION]
+[Generic / OVERVIEW]
+
+[Collect / ATTRIBUTES]
+command = attr
+
+[Collect / METHODS]
+command = method
+
+[Leftovers]
+
+[Region  / postlude]
+
+[Authors]
+[Legal]
+
+; [Generic / DESCRIPTION]
+; required = 1
+
+; [Generic / BUGS]
+
+; [Generic / Section::Bugs]
+; [Generic / Section::License]
+;
+[Bugs]
+[Support]
+all_modules = 1

changeset:   436:898025470b1f
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 00:13:35 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
description:
Add a class.


diff -r fb6e28f090c8 -r 898025470b1f perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Wed Feb 20 00:11:18 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Wed Feb 20 00:13:35 2013 +0200
@@ -93,7 +93,7 @@
 </xsl:template>
 
 <xsl:template match="sp:image">
-    <img>
+    <img class="screenplay_image">
         <xsl:attribute name="src">
             <xsl:value-of select="@url" />
         </xsl:attribute>

changeset:   435:fb6e28f090c8
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 00:11:18 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
description:
Add the <img to to-xhtml.


diff -r b0009d1dc0c1 -r fb6e28f090c8 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Wed Feb 20 00:01:57 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Wed Feb 20 00:11:18 2013 +0200
@@ -92,6 +92,20 @@
     </strong>
 </xsl:template>
 
+<xsl:template match="sp:image">
+    <img>
+        <xsl:attribute name="src">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:attribute name="title">
+            <xsl:value-of select="@title" />
+        </xsl:attribute>
+        <xsl:attribute name="alt">
+            <xsl:value-of select="@alt" />
+        </xsl:attribute>
+    </img>
+</xsl:template>
+
 <xsl:template match="sp:italics">
     <em class="italics">
         <xsl:apply-templates />
diff -r b0009d1dc0c1 -r fb6e28f090c8 perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Wed Feb 20 00:01:57 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Wed Feb 20 00:11:18 2013 +0200
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 3;
+use Test::XML tests => 6;
 
 use File::Spec;
 
@@ -15,6 +15,7 @@
 
 my @tests = (qw(
         with-internal-description
+        with-img-element-inside-paragraphs
     ));
 
 sub load_xml
@@ -31,7 +32,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=1
+# TEST:$num_texts=2
 
 my $converter = XML::Grammar::Screenplay::ToHTML->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   434:b0009d1dc0c1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Wed Feb 20 00:01:57 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/TODO perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-img-element-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-img-element-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Add the <img tag.


diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Jan 13 08:40:14 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Feb 20 00:01:57 2013 +0200
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add the <img tag to the Screenplay.
+
 0.10.0      Sun 13 Jan 08:32:43 IST 2013
     * Add more links to the XML::Grammar::Fiction's perldoc.
     * Convert from Mouse to Moo, MooX and "use MooX 'late'".
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Jan 13 08:40:14 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Feb 20 00:01:57 2013 +0200
@@ -136,6 +136,7 @@
 t/screenplay/data/proto-text/with-dialogue.txt
 t/screenplay/data/proto-text/with-entities.txt
 t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
+t/screenplay/data/proto-text/with-img-element-inside-paragraphs.txt
 t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
 t/screenplay/data/proto-text/with-internal-description.txt
 t/screenplay/data/proto-text/with-multi-line-comments.txt
@@ -170,6 +171,7 @@
 t/screenplay/data/xml/with-dialogue.xml
 t/screenplay/data/xml/with-entities.xml
 t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
+t/screenplay/data/xml/with-img-element-inside-paragraphs.xml
 t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
 t/screenplay/data/xml/with-internal-description.xml
 t/screenplay/data/xml/with-multi-line-comments.xml
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Sun Jan 13 08:40:14 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Feb 20 00:01:57 2013 +0200
@@ -1,3 +1,12 @@
+Pressing:
+---------
+
+* Finish implementing the <image /> tag in the ::Screenplay.
+
+Long term:
+----------
+
+
 * Add a test script to test for trailing space and get rid of trailing space.
 
 * ::Fiction: Implement the correct handling of leading special characters in
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Sun Jan 13 08:40:14 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Wed Feb 20 00:01:57 2013 +0200
@@ -30,6 +30,7 @@
             <ref name="ulink"/>
             <ref name="bold"/>
             <ref name="italics"/>
+            <ref name="image"/>
         </choice>
     </define>
     <define name="scene">
@@ -83,6 +84,19 @@
             <text />
         </element>
     </define>
+    <define name="image">
+        <element name="sp:image">
+            <attribute name="url">
+                <text/>
+            </attribute>
+            <attribute name="alt">
+                <text/>
+            </attribute>
+            <attribute name="title">
+                <text/>
+            </attribute>
+        </element>
+    </define>
     <define name="italics">
         <element name="sp:italics">
             <text />
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Jan 13 08:40:14 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Feb 20 00:01:57 2013 +0200
@@ -122,6 +122,25 @@
     return "para";
 }
 
+sub _handle_elem_of_name_img
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => [
+                "image",
+                "url" => $elem->lookup_attr("src"),
+                "alt" => $elem->lookup_attr("alt"),
+                "title" => $elem->lookup_attr("title"),
+            ],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
 sub _handle_elem_of_name_a
 {
     my ($self, $elem) = @_;
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-img-element-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-img-element-inside-paragraphs.txt	Wed Feb 20 00:01:57 2013 +0200
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the
+<i>merciful</i>, real merciful</a>, I will show you the power of my sling.
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling. <img src="sling.png" alt="a sling" title="Photo of David’s sling." /> . ]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-img-element-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-img-element-inside-paragraphs.xml	Wed Feb 20 00:01:57 2013 +0200
@@ -0,0 +1,60 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink>
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <italics>merciful</italics>, real merciful</ulink>, I will show you the power
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling. <image url="sling.png" alt="a sling" title="Photo of David’s sling." /> .
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r e89db60ed02d -r b0009d1dc0c1 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Jan 13 08:40:14 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Wed Feb 20 00:01:57 2013 +0200
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 51;
+use Test::XML tests => 54;
 
 use XML::LibXML;
 
@@ -35,6 +35,7 @@
         with-description
         with-tags-inside-paragraphs
         with-i-element-inside-paragraphs
+        with-img-element-inside-paragraphs
         with-internal-description
         with-comments
         with-multi-para-desc
@@ -47,7 +48,7 @@
         with-numeric-entities
     ));
 
-# TEST:$num_texts=17
+# TEST:$num_texts=18
 
 my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",

changeset:   433:e89db60ed02d
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Jan 13 08:40:14 2013 +0200
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.10.0


diff -r 71e0fd98fff1 -r e89db60ed02d .hgtags
--- a/.hgtags	Sun Jan 13 08:38:50 2013 +0200
+++ b/.hgtags	Sun Jan 13 08:40:14 2013 +0200
@@ -24,3 +24,4 @@
 b03e5406640b1807ec4fa456f8e678a8bfe7c6d6 releases/XML-Grammar-Fiction/0.9.1
 91dd08cc43f32b2ce7a77e2987d046933f1e29a0 releases/XML-Grammar-Fiction/0.9.2
 eabd854b3709f034ca5f7565a9ee249b2c4890c4 releases/XML-Grammar-Fiction/0.9.3
+71e0fd98fff173dd05a09a13b251e9146c4dfc02 releases/XML-Grammar-Fiction/0.10.0

changeset:   432:71e0fd98fff1
tag:         releases/XML-Grammar-Fiction/0.10.0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Jan 13 08:38:50 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number.


diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 use Exception::Class
     (
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head2 new()
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 AUTHOR
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 METHODS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 METHODS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -925,11 +925,11 @@
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 METHODS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 SYNOPSIS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head2 new()
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head2 new()
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head1 METHODS
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =cut
 
-our $VERSION = '0.9.3';
+our $VERSION = '0.10.0';
 
 =head2 new()
 
diff -r b8a2c1a6c078 -r 71e0fd98fff1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun Jan 13 08:37:07 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun Jan 13 08:38:50 2013 +0200
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.9.3
+Version 0.10.0
 
 =head1 METHODS
 

changeset:   431:b8a2c1a6c078
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Jan 13 08:37:07 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/bump-version-number.pl perl/modules/XML-Grammar-Fiction/scripts/bump-version-number.pl
description:
Move away bump-version-number.


diff -r 205d1bd48e72 -r b8a2c1a6c078 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Jan 13 08:31:59 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Jan 13 08:37:07 2013 +0200
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.10.0      Sun 13 Jan 08:32:43 IST 2013
     * Add more links to the XML::Grammar::Fiction's perldoc.
     * Convert from Mouse to Moo, MooX and "use MooX 'late'".
     * Add t/00-libxml-basic.t to diagnose the XML::LibXML version.
diff -r 205d1bd48e72 -r b8a2c1a6c078 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Jan 13 08:31:59 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Jan 13 08:37:07 2013 +0200
@@ -1,5 +1,4 @@
 Build.PL
-bump-version-number.pl
 Changes
 contrib/docbook-to-fiction-xml-txt.pl
 extradata/fiction-xml.rng
@@ -56,6 +55,7 @@
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
+scripts/bump-version-number.pl
 scripts/run_agg_tests.t
 scripts/tag-release.pl
 t/00-libxml-basic.t
diff -r 205d1bd48e72 -r b8a2c1a6c078 perl/modules/XML-Grammar-Fiction/bump-version-number.pl
--- a/perl/modules/XML-Grammar-Fiction/bump-version-number.pl	Sun Jan 13 08:31:59 2013 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,35 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use File::Find::Object;
-use IO::All;
-
-my $tree = File::Find::Object->new({}, 'lib/');
-
-my $version_n = shift(@ARGV);
-
-if (!defined($version_n))
-{
-    die "Specify version number as an argument! bump-version-number.pl '0.0.1'";
-}
-
-while (my $r = $tree->next()) {
-    if ($r =~ m{/\.svn\z})
-    {
-        $tree->prune();
-    }
-    elsif ($r =~ m{\.pm\z})
-    {
-        my @lines = io->file($r)->getlines();
-        foreach (@lines)
-        {
-            s#(\$VERSION = '|^Version )\d+\.\d+(?:\.\d+)?('|)#$1 . $version_n . $2#e;
-        }
-        io->file($r)->print(
-            @lines
-        );
-    }
-}
-
diff -r 205d1bd48e72 -r b8a2c1a6c078 perl/modules/XML-Grammar-Fiction/scripts/bump-version-number.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/scripts/bump-version-number.pl	Sun Jan 13 08:37:07 2013 +0200
@@ -0,0 +1,35 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use File::Find::Object;
+use IO::All;
+
+my $tree = File::Find::Object->new({}, 'lib/');
+
+my $version_n = shift(@ARGV);
+
+if (!defined($version_n))
+{
+    die "Specify version number as an argument! bump-version-number.pl '0.0.1'";
+}
+
+while (my $r = $tree->next()) {
+    if ($r =~ m{/\.svn\z})
+    {
+        $tree->prune();
+    }
+    elsif ($r =~ m{\.pm\z})
+    {
+        my @lines = io->file($r)->getlines();
+        foreach (@lines)
+        {
+            s#(\$VERSION = '|^Version )\d+\.\d+(?:\.\d+)?('|)#$1 . $version_n . $2#e;
+        }
+        io->file($r)->print(
+            @lines
+        );
+    }
+}
+

changeset:   430:205d1bd48e72
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Jan 13 08:31:59 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Add more.


diff -r d54bd51c17da -r 205d1bd48e72 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Jan 13 08:30:10 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Jan 13 08:31:59 2013 +0200
@@ -192,7 +192,7 @@
 
 =head2 $self->meta()
 
-Leftover from Mouse.
+Leftover from Moo.
 
 =head1 AUTHOR
 
diff -r d54bd51c17da -r 205d1bd48e72 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun Jan 13 08:30:10 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun Jan 13 08:31:59 2013 +0200
@@ -75,7 +75,7 @@
 
 =head2 $self->meta()
 
-Leftover from Mouse.
+Leftover from Moo.
 
 =head1 AUTHOR
 
diff -r d54bd51c17da -r 205d1bd48e72 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun Jan 13 08:30:10 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun Jan 13 08:31:59 2013 +0200
@@ -380,7 +380,7 @@
 
 =head2 $self->meta()
 
-Leftover from Mouse.
+Leftover from Moo.
 
 =head1 AUTHOR
 
diff -r d54bd51c17da -r 205d1bd48e72 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Jan 13 08:30:10 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sun Jan 13 08:31:59 2013 +0200
@@ -959,7 +959,7 @@
 
 =head2 $self->meta()
 
-Leftover from Mouse.
+Leftover from Moo.
 
 =head1 AUTHOR
 
diff -r d54bd51c17da -r 205d1bd48e72 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Jan 13 08:30:10 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Jan 13 08:31:59 2013 +0200
@@ -618,7 +618,7 @@
 
 =head2 $self->next_line_ref
 
-Leftover from Mouse.
+Leftover from Moo.
 
 =head1 AUTHOR
 

changeset:   429:d54bd51c17da
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sun Jan 13 08:30:10 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/00-libxml-basic.t
description:
Add t/00-libxml-basic.t for LibXML diags.


diff -r e3b356009b14 -r d54bd51c17da perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Jan 03 21:27:05 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Jan 13 08:30:10 2013 +0200
@@ -2,6 +2,7 @@
 
     * Add more links to the XML::Grammar::Fiction's perldoc.
     * Convert from Mouse to Moo, MooX and "use MooX 'late'".
+    * Add t/00-libxml-basic.t to diagnose the XML::LibXML version.
 
 0.9.3       Tue 31 Jul 09:22:01 IDT 2012
     * Add an explicit version of 0.0301 to File::Find::Object::Rule .
diff -r e3b356009b14 -r d54bd51c17da perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Jan 03 21:27:05 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Jan 13 08:30:10 2013 +0200
@@ -58,6 +58,7 @@
 rejects/Screenplay_Parser_QnD.pm
 scripts/run_agg_tests.t
 scripts/tag-release.pl
+t/00-libxml-basic.t
 t/00-load.t
 t/app-to-html.t
 t/base/line-iterator-unit.t
diff -r e3b356009b14 -r d54bd51c17da perl/modules/XML-Grammar-Fiction/t/00-libxml-basic.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/00-libxml-basic.t	Sun Jan 13 08:30:10 2013 +0200
@@ -0,0 +1,29 @@
+# Taken from the XML::LibXML for diagnosis purposes.
+use strict;
+use warnings;
+
+use Test::More tests => 3;
+
+use XML::LibXML;
+
+# TEST
+ok(1, 'Loaded fine');
+
+my $p = XML::LibXML->new();
+# TEST
+ok ($p, 'Can initialize a new XML::LibXML instance');
+
+my ($runtime_version) = (XML::LibXML::LIBXML_RUNTIME_VERSION() =~ /\A(\d+)/);
+
+# TEST
+if (!is (
+    XML::LibXML::LIBXML_VERSION, $runtime_version,
+    'LIBXML__VERSION == LIBXML_RUNTIME_VERSION',
+))
+{
+   diag("DO NOT REPORT THIS FAILURE: Your setup of library paths is incorrect!");
+}
+
+diag( "\n\nCompiled against libxml2 version: ",XML::LibXML::LIBXML_VERSION,
+     "\nRunning libxml2 version:          ",$runtime_version,
+     "\n\n");

changeset:   428:e3b356009b14
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Jan 03 21:27:05 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add an item to the TODO


diff -r f136e54d5797 -r e3b356009b14 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Jan 03 19:04:43 2013 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Jan 03 21:27:05 2013 +0200
@@ -1,6 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
     * Add more links to the XML::Grammar::Fiction's perldoc.
+    * Convert from Mouse to Moo, MooX and "use MooX 'late'".
 
 0.9.3       Tue 31 Jul 09:22:01 IDT 2012
     * Add an explicit version of 0.0301 to File::Find::Object::Rule .

changeset:   427:f136e54d5797
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Jan 03 19:04:43 2013 +0200
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Convert from Mouse to Moo / MooX::late.


diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Thu Jan 03 19:04:43 2013 +0200
@@ -40,8 +40,9 @@
         'HTML::Entities' => 0,
         'List::MoreUtils' => 0,
         'List::Util' => 0,
-        'Mouse' => 0,
-        'Mouse::Meta::Attribute::Custom::Trait::Array' => 0,
+        'Moo' => 0,
+        'MooX' => 0,
+        'MooX::late' => 0,
         'Parse::RecDescent' => 0,
         'strict' => 0,
         'warnings' => 0,
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -8,7 +8,7 @@
 use HTML::Entities ();
 use XML::Writer;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -20,7 +20,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node;
 
-use Mouse;
+use MooX 'late';
 
 sub _short_isa
 {
@@ -35,7 +35,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::WithContent;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
@@ -55,7 +55,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Element;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
@@ -81,7 +81,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::List;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
@@ -89,7 +89,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Text;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
@@ -102,7 +102,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Saying;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
@@ -110,19 +110,19 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
 package XML::Grammar::Fiction::FromProto::Node::InnerDesc;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
@@ -133,7 +133,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Comment;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 =head1 NAME
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::FictionBase::FromProto::Parser::XmlIterator");
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -13,12 +13,18 @@
 
 =cut
 
-use Mouse;
+use MooX 'late';
 
 extends ("XML::Grammar::FictionBase::XSLT::Converter");
 
 has '+rng_schema_basename' => (default => "fiction-xml.rng");
 
+=head1 METHODS
+
+=head2 rng_schema_basename()
+
+Inherited - (to settle pod-coverage).
+
 =head1 AUTHOR
 
 Shlomi Fish, L<http://www.shlomifish.org/>.
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 use List::MoreUtils;
 
@@ -68,7 +68,7 @@
 
 package XML::Grammar::Fiction::Struct::Tag::Para;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::Fiction::Struct::Tag");
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -5,7 +5,7 @@
 
 use Carp;
 
-use Mouse;
+use MooX 'late';
 
 extends ("XML::Grammar::Fiction::RNG_Renderer");
 
@@ -24,6 +24,8 @@
 
 our $VERSION = '0.9.3';
 
+=head1 METHODS
+
 =head2 new()
 
 Accepts no arguments so far. May take some time as the grammar is compiled
@@ -33,6 +35,10 @@
 
 Internal - (to settle pod-coverage.).
 
+=head2 xslt_transform_basename()
+
+Inherited - (to settle pod-coverage).
+
 =cut
 
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -5,7 +5,7 @@
 
 use Carp;
 
-use Mouse;
+use MooX 'late';
 
 extends( 'XML::Grammar::Fiction::RNG_Renderer' );
 
@@ -21,6 +21,12 @@
 
 our $VERSION = '0.9.3';
 
+=head1 METHODS
+
+=head2 xslt_transform_basename()
+
+Inherited - (to settle pod-coverage).
+
 =head2 new()
 
 Accepts no arguments so far. May take some time as the grammar is compiled
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -8,7 +8,7 @@
 
 =cut
 
-use Mouse;
+use MooX 'late';
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
@@ -40,6 +40,27 @@
 
 1;
 
+=head1 SLOTS
+
+=head2 $event->elem()
+
+The DOM (Document Object Model) element that the event refers to. See
+L<XML::Grammar::Fiction::FromProto::Node> .
+
+=head2 $event->tag_elem()
+
+Extra tag_elem.
+
+=head2 $event->type()
+
+A string specifying the type.
+
+=head2 tag
+
+An optional string (or undef) with the tag name.
+
+=head1 METHODS
+
 =head2 $event->is_tag_of_name($name)
 
 Determines if the $event is a tag and of name $name.
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 use XML::Grammar::Fiction::Err;
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,9 @@
 use strict;
 use warnings;
 
-use Mouse;
+use Carp ();
+
+use MooX 'late';
 
 use XML::Grammar::Fiction::Err;
 use XML::Grammar::Fiction::Struct::Tag;
@@ -16,6 +18,11 @@
     isa => "ArrayRef",
     is => "rw",
     default => sub { [] },
+);
+
+=begin Removed
+    # Not supported by Moo / MooX yet.
+
     traits => ['Array'],
     handles =>
     {
@@ -25,7 +32,47 @@
         '_pop_tag' => 'pop',
         '_get_tag' => 'get',
     },
-);
+
+=end Removed
+
+=cut
+sub _get_tag
+{
+    my ($self, $idx) = @_;
+
+    return $self->_tags_stack->[$idx];
+}
+
+sub _tag_stack_is_empty
+{
+    my $self = shift;
+
+    return (! @{$self->_tags_stack});
+}
+
+sub _grep_tags_stack
+{
+    my $self = shift;
+    my $cb = shift;
+
+    return grep { $cb->($_) } @{$self->_tags_stack};
+}
+
+sub _push_tag
+{
+    my $self = shift;
+
+    push( @{$self->_tags_stack}, @_);
+
+    return;
+}
+
+sub _pop_tag
+{
+    my $self = shift;
+
+    return pop(@{$self->_tags_stack});
+}
 
 has "_events_queue" =>
 (
@@ -33,6 +80,11 @@
     # isa => "ArrayRef",
     is => "rw",
     default => sub { []; },
+);
+
+=begin Removed
+    # Not supported by Moo / MooX yet.
+
     traits => ['Array'],
     handles =>
     {
@@ -41,7 +93,47 @@
         _no_events => 'is_empty',
         _clear_events => 'clear',
     },
-);
+
+=end Removed
+
+=cut
+
+sub _clear_events
+{
+    my $self = shift;
+
+    $self->_events_queue([]);
+
+    return;
+}
+
+sub _no_events
+{
+    my $self = shift;
+
+    return (! @{$self->_events_queue});
+}
+
+sub _enqueue_event
+{
+    my $self = shift;
+    my $event = shift;
+
+    if (@_) {
+        Carp::confess("More than one argument.");
+    }
+
+    push( @{$self->_events_queue}, $event);
+
+    return;
+}
+
+sub _extract_event
+{
+    my $self = shift;
+
+    return shift(@{$self->_events_queue});
+}
 
 has '_ret_tag' =>
 (
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -1,6 +1,6 @@
 package XML::Grammar::FictionBase::TagsTree2XML;
 
-use Mouse;
+use MooX 'late';
 
 use XML::Writer;
 use HTML::Entities ();
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -11,7 +11,7 @@
 use XML::LibXML;
 use XML::LibXSLT;
 
-use Mouse;
+use MooX 'late';
 
 has '_data_dir' => (isa => 'Str', is => 'rw');
 has '_data_dir_from_input' => (isa => 'Str', is => 'rw', init_arg => 'data_dir',);
@@ -34,6 +34,8 @@
 
 our $VERSION = '0.9.3';
 
+=head1 METHODS
+
 =head2 new()
 
 Accepts no arguments so far. May take some time as the grammar is compiled
@@ -47,6 +49,14 @@
 
 Internal - (to settle pod-coverage.).
 
+=head2 rng_schema_basename()
+
+Inherited - (to settle pod-coverage.).
+
+=head2 xslt_transform_basename()
+
+Inherited - (to settle pod-coverage.).
+
 =cut
 
 sub BUILD
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -2,7 +2,7 @@
 
 use XML::Writer;
 
-use Mouse;
+use MooX 'late';
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 1;
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 extends( 'XML::Grammar::FictionBase::FromProto::Parser::XmlIterator' );
 
@@ -614,6 +614,10 @@
 
 =head2 $self->meta()
 
+Leftover from Moo.
+
+=head2 $self->next_line_ref
+
 Leftover from Mouse.
 
 =head1 AUTHOR
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -1,6 +1,6 @@
 package XML::Grammar::Screenplay::ToDocBook;
 
-use Mouse;
+use MooX 'late';
 
 extends('XML::Grammar::Screenplay::XSLT::Base');
 
@@ -11,6 +11,12 @@
 XML::Grammar::Screenplay::ToDocBook - module that converts the Screenplay
 XML to DocBook.
 
+=head1 METHODS
+
+=head2 xslt_transform_basename()
+
+Inherited - (to settle pod-coverage).
+
 =head1 VERSION
 
 Version 0.9.3
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -1,6 +1,6 @@
 package XML::Grammar::Screenplay::ToHTML;
 
-use Mouse;
+use MooX 'late';
 
 extends('XML::Grammar::Screenplay::XSLT::Base');
 
@@ -19,6 +19,12 @@
 
 our $VERSION = '0.9.3';
 
+=head1 METHODS
+
+=head2 xslt_transform_basename()
+
+Inherited - (to settle pod-coverage).
+
 =head2 new()
 
 Accepts no arguments so far. May take some time as the grammar is compiled
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Mouse;
+use MooX 'late';
 
 extends('XML::Grammar::Screenplay::XSLT::Base');
 
@@ -29,7 +29,11 @@
 
 =head2 meta()
 
-Internal - (to settle pod-coverage.).
+Internal - (to settle pod-coverage).
+
+=head2 xslt_transform_basename()
+
+Inherited - (to settle pod-coverage).
 
 =head2 $converter->translate_to_tei({source => {file => $filename}, output => "string" })
 
diff -r 179ba67d92ff -r f136e54d5797 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Dec 21 12:31:19 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Thu Jan 03 19:04:43 2013 +0200
@@ -1,6 +1,6 @@
 package XML::Grammar::Screenplay::XSLT::Base;
 
-use Mouse;
+use MooX 'late';
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
@@ -19,6 +19,12 @@
 
 Version 0.9.3
 
+=head1 METHODS
+
+=head2 rng_schema_basename()
+
+Inherited - (to settle pod-coverage).
+
 =head1 AUTHOR
 
 Shlomi Fish, L<http://www.shlomifish.org/>.

changeset:   426:179ba67d92ff
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Dec 21 12:31:19 2012 +0200
files:       perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
description:
Fix a typo.


diff -r 8728f2043658 -r 179ba67d92ff perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Thu Nov 01 00:44:51 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Fri Dec 21 12:31:19 2012 +0200
@@ -72,7 +72,7 @@
         system(qw(
             ctags -f tags --recurse --totals
     		--exclude=blib/** --exclude=t/lib/**
-    		--exclude=.svn --exclude='*~'
+    		--exclude=.svn --exclude=*~
     		--languages=Perl --langmap=Perl:+.t
     ));
 }

changeset:   425:8728f2043658
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Nov 01 00:44:51 2012 +0200
files:       perl/modules/XML-Grammar-Fiction/README
description:
Add more.


diff -r c91560155d69 -r 8728f2043658 perl/modules/XML-Grammar-Fiction/README
--- a/perl/modules/XML-Grammar-Fiction/README	Thu Nov 01 00:43:57 2012 +0200
+++ b/perl/modules/XML-Grammar-Fiction/README	Thu Nov 01 00:44:51 2012 +0200
@@ -30,6 +30,9 @@
     The XML-Grammar-Fiction Homepage:
         http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/
 
+    MetaCPAN
+        https://metacpan.org/release/XML-Grammar-Fiction
+
     Search CPAN
         http://search.cpan.org/dist/XML-Grammar-Fiction
 

changeset:   424:c91560155d69
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Thu Nov 01 00:43:57 2012 +0200
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Add more links.


diff -r 1402e1ea8eb2 -r c91560155d69 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Jul 31 09:23:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 01 00:43:57 2012 +0200
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add more links to the XML::Grammar::Fiction's perldoc.
+
 0.9.3       Tue 31 Jul 09:22:01 IDT 2012
     * Add an explicit version of 0.0301 to File::Find::Object::Rule .
         - With lower versions tests fail.
diff -r 1402e1ea8eb2 -r c91560155d69 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jul 31 09:23:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 01 00:43:57 2012 +0200
@@ -31,9 +31,9 @@
 
 =over 4
 
-=item 1. Converting a well-formed plain text format to a specialized XML format.
+=item 1. Convert a well-formed plain text format to a specialized XML format.
 
-=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
+=item 2. Convert the XML to DocBook/XML or directly to HTML for rendering.
 
 =back
 
@@ -169,10 +169,18 @@
 
 =over 4
 
-=item * The Pope Died on Sunday
+=item * The Pope Died on Sunday (Hebrew version)
 
 L<http://www.shlomifish.org/humour/Pope/>
 
+=item * The Enemy and How I Helped to Fight it (Hebrew version)
+
+L<http://www.shlomifish.org/humour/TheEnemy/>
+
+=item * The Human Hacking Field Guide (Hebrew version)
+
+L<http://www.shlomifish.org/humour/human-hacking/>
+
 =back
 
 =head1 AUTHOR
@@ -213,6 +221,10 @@
 
 =over 4
 
+=item * XML-Grammar-Fiction’s Homepage
+
+L<http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/>
+
 =item * AnnoCPAN: Annotated CPAN documentation
 
 L<http://annocpan.org/dist/XML-Grammar-Fiction>
@@ -225,6 +237,10 @@
 
 L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
 
+=item * MetaCPAN
+
+L<https://metacpan.org/release/XML-Grammar-Fiction>
+
 =item * Search CPAN
 
 L<http://search.cpan.org/dist/XML-Grammar-Fiction>

changeset:   423:1402e1ea8eb2
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Jul 31 09:23:55 2012 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.9.3


diff -r eabd854b3709 -r 1402e1ea8eb2 .hgtags
--- a/.hgtags	Tue Jul 31 09:23:05 2012 +0300
+++ b/.hgtags	Tue Jul 31 09:23:55 2012 +0300
@@ -23,3 +23,4 @@
 b6fe4fc1276982d50599e45a46b9e81116955fe2 releases/XML-Grammar-Fiction/0.9.0
 b03e5406640b1807ec4fa456f8e678a8bfe7c6d6 releases/XML-Grammar-Fiction/0.9.1
 91dd08cc43f32b2ce7a77e2987d046933f1e29a0 releases/XML-Grammar-Fiction/0.9.2
+eabd854b3709f034ca5f7565a9ee249b2c4890c4 releases/XML-Grammar-Fiction/0.9.3

changeset:   422:eabd854b3709
tag:         releases/XML-Grammar-Fiction/0.9.3
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Jul 31 09:23:05 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.9.3


diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Jul 31 09:23:05 2012 +0300
@@ -1,6 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
-0.9.3
+0.9.3       Tue 31 Jul 09:22:01 IDT 2012
     * Add an explicit version of 0.0301 to File::Find::Object::Rule .
         - With lower versions tests fail.
         - Thanks to Slaven Rezic for the report and investigation.
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 use Exception::Class
     (
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 AUTHOR
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head1 SYNOPSIS
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =cut
 
-our $VERSION = '0.9.2';
+our $VERSION = '0.9.3';
 
 =head2 new()
 
diff -r dc1c52b8883a -r eabd854b3709 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue Jul 31 09:21:20 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue Jul 31 09:23:05 2012 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.9.2
+Version 0.9.3
 
 =head1 AUTHOR
 

changeset:   421:dc1c52b8883a
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Tue Jul 31 09:21:20 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t
description:
Explicit version for File-Find-Object-Rule.


diff -r 72cb20a6cb1c -r dc1c52b8883a perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Jul 28 11:30:39 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Jul 31 09:21:20 2012 +0300
@@ -1,5 +1,10 @@
 Revision history for XML-Grammar-Fiction.
 
+0.9.3
+    * Add an explicit version of 0.0301 to File::Find::Object::Rule .
+        - With lower versions tests fail.
+        - Thanks to Slaven Rezic for the report and investigation.
+
 0.9.2       Sat 28 Jul 11:27:22 IDT 2012
     * Add List::MoreUtils to the dependencies.
         - Some build failures at:
diff -r 72cb20a6cb1c -r dc1c52b8883a perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t
--- a/perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t	Sat Jul 28 11:30:39 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t	Tue Jul 31 09:21:20 2012 +0300
@@ -7,7 +7,7 @@
 
 use Test::More;
 
-eval "use File::Find::Object::Rule";
+eval "use File::Find::Object::Rule 0.0301";
 if ($@)
 {
     plan skip_all => "File::Find::Object::Rule required for trailing space test.";

changeset:   420:72cb20a6cb1c
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jul 28 11:30:39 2012 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.9.2


diff -r 91dd08cc43f3 -r 72cb20a6cb1c .hgtags
--- a/.hgtags	Sat Jul 28 11:30:11 2012 +0300
+++ b/.hgtags	Sat Jul 28 11:30:39 2012 +0300
@@ -22,3 +22,4 @@
 5249a3e406813b6a85e14745f4833ed5f26192e3 releases/0.8.1
 b6fe4fc1276982d50599e45a46b9e81116955fe2 releases/XML-Grammar-Fiction/0.9.0
 b03e5406640b1807ec4fa456f8e678a8bfe7c6d6 releases/XML-Grammar-Fiction/0.9.1
+91dd08cc43f32b2ce7a77e2987d046933f1e29a0 releases/XML-Grammar-Fiction/0.9.2

changeset:   419:91dd08cc43f3
tag:         releases/XML-Grammar-Fiction/0.9.2
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jul 28 11:30:11 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number.


diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 use Exception::Class
     (
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 AUTHOR
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head1 SYNOPSIS
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =cut
 
-our $VERSION = '0.9.1';
+our $VERSION = '0.9.2';
 
 =head2 new()
 
diff -r 7451df9e9dd6 -r 91dd08cc43f3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat Jul 28 11:28:19 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat Jul 28 11:30:11 2012 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.9.1
+Version 0.9.2
 
 =head1 AUTHOR
 

changeset:   418:7451df9e9dd6
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jul 28 11:28:19 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes
description:
Add List::MoreUtils to build deps.


diff -r c39d799a4d35 -r 7451df9e9dd6 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Jul 27 21:41:27 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Sat Jul 28 11:28:19 2012 +0300
@@ -38,6 +38,7 @@
         'File::ShareDir' => 0,
         'Getopt::Long' => 0,
         'HTML::Entities' => 0,
+        'List::MoreUtils' => 0,
         'List::Util' => 0,
         'Mouse' => 0,
         'Mouse::Meta::Attribute::Custom::Trait::Array' => 0,
diff -r c39d799a4d35 -r 7451df9e9dd6 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 21:41:27 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Jul 28 11:28:19 2012 +0300
@@ -1,5 +1,10 @@
 Revision history for XML-Grammar-Fiction.
 
+0.9.2       Sat 28 Jul 11:27:22 IDT 2012
+    * Add List::MoreUtils to the dependencies.
+        - Some build failures at:
+            - http://www.cpantesters.org/cpan/report/add74ed0-d84a-11e1-9066-3d54fb7543f5
+
 0.9.1       Fri 27 Jul 21:40:10 IDT 2012
     * Update the link to the repository in META.yml/META.json.
 

changeset:   417:c39d799a4d35
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 21:41:27 2012 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.9.1


diff -r b03e5406640b -r c39d799a4d35 .hgtags
--- a/.hgtags	Fri Jul 27 21:41:03 2012 +0300
+++ b/.hgtags	Fri Jul 27 21:41:27 2012 +0300
@@ -21,3 +21,4 @@
 eb047ae84d26100ab0d04729ee7a1abf7d63ac3c releases/0.8.0
 5249a3e406813b6a85e14745f4833ed5f26192e3 releases/0.8.1
 b6fe4fc1276982d50599e45a46b9e81116955fe2 releases/XML-Grammar-Fiction/0.9.0
+b03e5406640b1807ec4fa456f8e678a8bfe7c6d6 releases/XML-Grammar-Fiction/0.9.1

changeset:   416:b03e5406640b
tag:         releases/XML-Grammar-Fiction/0.9.1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 21:41:03 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number.


diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 21:41:03 2012 +0300
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+0.9.1       Fri 27 Jul 21:40:10 IDT 2012
+    * Update the link to the repository in META.yml/META.json.
+
 0.9.0       Fri 27 Jul 09:20:42 IDT 2012
     * Add t/style-trailing-space.t to check for trailing space.
         - Got rid of trailing space.
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 use Exception::Class
     (
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 AUTHOR
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head1 SYNOPSIS
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =cut
 
-our $VERSION = '0.9.0';
+our $VERSION = '0.9.1';
 
 =head2 new()
 
diff -r e1f49c0c0969 -r b03e5406640b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Jul 27 21:39:53 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Jul 27 21:41:03 2012 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.9.0
+Version 0.9.1
 
 =head1 AUTHOR
 

changeset:   415:e1f49c0c0969
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 21:39:53 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Update the link to the repository.


diff -r 8d43d9b163ed -r e1f49c0c0969 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Jul 27 09:24:08 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Jul 27 21:39:53 2012 +0300
@@ -54,7 +54,7 @@
     {
         resources =>
         {
-            repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Fiction/",
+            repository => "https://bitbucket.org/shlomif/fiction-xml",
             homepage => "http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/",
         },
         keywords =>

changeset:   414:8d43d9b163ed
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 09:24:08 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/.cvsignore
description:
Got rid of a stray .cvsignore file.


diff -r e949fd3b6f34 -r 8d43d9b163ed perl/modules/XML-Grammar-Fiction/.cvsignore
--- a/perl/modules/XML-Grammar-Fiction/.cvsignore	Fri Jul 27 09:23:04 2012 +0300
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,10 +0,0 @@
-blib*
-Makefile
-Makefile.old
-Build
-_build*
-pm_to_blib*
-*.tar.gz
-.lwpcookies
-XML-Grammar-Screeplay-*
-cover_db

changeset:   413:e949fd3b6f34
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 09:23:04 2012 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.9.0


diff -r b6fe4fc12769 -r e949fd3b6f34 .hgtags
--- a/.hgtags	Fri Jul 27 09:21:08 2012 +0300
+++ b/.hgtags	Fri Jul 27 09:23:04 2012 +0300
@@ -20,3 +20,4 @@
 76728a39472a905f1b5fd893fe0177c798e3f454 releases/0.7.0
 eb047ae84d26100ab0d04729ee7a1abf7d63ac3c releases/0.8.0
 5249a3e406813b6a85e14745f4833ed5f26192e3 releases/0.8.1
+b6fe4fc1276982d50599e45a46b9e81116955fe2 releases/XML-Grammar-Fiction/0.9.0

changeset:   412:b6fe4fc12769
tag:         releases/XML-Grammar-Fiction/0.9.0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 09:21:08 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.9.0.


diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 09:21:08 2012 +0300
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.9.0       Fri 27 Jul 09:20:42 IDT 2012
     * Add t/style-trailing-space.t to check for trailing space.
         - Got rid of trailing space.
         - TODO: extract into a CPAN module.
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 use Exception::Class
     (
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 AUTHOR
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head1 SYNOPSIS
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =cut
 
-our $VERSION = '0.8.1';
+our $VERSION = '0.9.0';
 
 =head2 new()
 
diff -r 14e88e26cd49 -r b6fe4fc12769 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Jul 27 09:19:57 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Jul 27 09:21:08 2012 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.8.1
+Version 0.9.0
 
 =head1 AUTHOR
 

changeset:   411:14e88e26cd49
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 09:19:57 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/scripts/tag-release.pl perl/modules/XML-Grammar-Fiction/tag-release.pl
description:
Add the new tag-release script.


diff -r 732ba220d7cc -r 14e88e26cd49 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Jul 27 09:14:24 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Jul 27 09:19:57 2012 +0300
@@ -57,8 +57,8 @@
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
 scripts/run_agg_tests.t
+scripts/tag-release.pl
 t/00-load.t
-tag-release.pl
 t/app-to-html.t
 t/base/line-iterator-unit.t
 t/boilerplate.t
diff -r 732ba220d7cc -r 14e88e26cd49 perl/modules/XML-Grammar-Fiction/scripts/tag-release.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/scripts/tag-release.pl	Fri Jul 27 09:19:57 2012 +0300
@@ -0,0 +1,27 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use IO::All;
+
+my ($version) =
+    (map { m{\$VERSION *= *'([^']+)'} ? ($1) : () }
+    io->file('lib/XML/Grammar/Fiction.pm')->getlines()
+    )
+    ;
+
+if (!defined ($version))
+{
+    die "Version is undefined!";
+}
+
+my @cmd = (
+    "hg", "tag", "-m",
+    "Tagging the XML-Grammar-Fiction release as $version",
+    "releases/XML-Grammar-Fiction/$version",
+);
+
+print join(" ", map { /\s/ ? qq{"$_"} : $_ } @cmd), "\n";
+exec(@cmd);
+
diff -r 732ba220d7cc -r 14e88e26cd49 perl/modules/XML-Grammar-Fiction/tag-release.pl
--- a/perl/modules/XML-Grammar-Fiction/tag-release.pl	Fri Jul 27 09:14:24 2012 +0300
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,30 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use IO::All;
-
-my ($version) =
-    (map { m{\$VERSION *= *'([^']+)'} ? ($1) : () }
-    io->file('lib/XML/Grammar/Fiction.pm')->getlines()
-    )
-    ;
-
-if (!defined ($version))
-{
-    die "Version is undefined!";
-}
-
-my $mini_repos_base = 'https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Fiction';
-
-my @cmd = (
-    "svn", "copy", "-m",
-    "Tagging the XML-Grammar-Fiction release as $version",
-    "$mini_repos_base/trunk",
-    "$mini_repos_base/tags/releases/$version",
-);
-
-print join(" ", map { /\s/ ? qq{"$_"} : $_ } @cmd), "\n";
-exec(@cmd);
-

changeset:   410:732ba220d7cc
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 09:14:24 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Change Moose to Mouse in the Build.PL.


diff -r 5bd0e1ab1c6e -r 732ba220d7cc perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Jul 27 09:12:37 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Jul 27 09:14:24 2012 +0300
@@ -39,7 +39,8 @@
         'Getopt::Long' => 0,
         'HTML::Entities' => 0,
         'List::Util' => 0,
-        'Moose' => 0,
+        'Mouse' => 0,
+        'Mouse::Meta::Attribute::Custom::Trait::Array' => 0,
         'Parse::RecDescent' => 0,
         'strict' => 0,
         'warnings' => 0,

changeset:   409:5bd0e1ab1c6e
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 09:12:37 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Convert from Moose to Mouse.


diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Jul 27 09:12:37 2012 +0300
@@ -1,5 +1,12 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add t/style-trailing-space.t to check for trailing space.
+        - Got rid of trailing space.
+        - TODO: extract into a CPAN module.
+    * Convert from "use Moose;" to "use Mouse;":
+        - it made the test suite run faster.
+        - TODO: test with https://metacpan.org/module/Moo .
+
 0.8.1       Sat Jun  9 23:07:51 IDT 2012
     * Add t/base/line-iterator-unit.t to provide unit-tests for
         XML::Grammar::FictionBase::FromProto::Parser::LineIterator .
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -8,7 +8,7 @@
 use HTML::Entities ();
 use XML::Writer;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -20,7 +20,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node;
 
-use Moose;
+use Mouse;
 
 sub _short_isa
 {
@@ -35,7 +35,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::WithContent;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
@@ -55,7 +55,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Element;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
@@ -81,7 +81,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::List;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
@@ -89,7 +89,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Text;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
@@ -102,7 +102,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Saying;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
@@ -110,19 +110,19 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Description;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node::Text");
 
 package XML::Grammar::Fiction::FromProto::Node::Paragraph;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
 package XML::Grammar::Fiction::FromProto::Node::InnerDesc;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node::Element");
 
@@ -133,7 +133,7 @@
 
 package XML::Grammar::Fiction::FromProto::Node::Comment;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::FromProto::Node");
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 =head1 NAME
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::FictionBase::FromProto::Parser::XmlIterator");
 
@@ -192,7 +192,7 @@
 
 =head2 $self->meta()
 
-Leftover from Moose.
+Leftover from Mouse.
 
 =head1 AUTHOR
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -13,7 +13,7 @@
 
 =cut
 
-use Moose;
+use Mouse;
 
 extends ("XML::Grammar::FictionBase::XSLT::Converter");
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,9 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
+
+use List::MoreUtils;
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
@@ -66,7 +68,7 @@
 
 package XML::Grammar::Fiction::Struct::Tag::Para;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::Fiction::Struct::Tag");
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -5,7 +5,7 @@
 
 use Carp;
 
-use Moose;
+use Mouse;
 
 extends ("XML::Grammar::Fiction::RNG_Renderer");
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -5,7 +5,7 @@
 
 use Carp;
 
-use Moose;
+use Mouse;
 
 extends( 'XML::Grammar::Fiction::RNG_Renderer' );
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -8,7 +8,7 @@
 
 =cut
 
-use Moose;
+use Mouse;
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
@@ -54,7 +54,7 @@
 
 =head2 $self->meta()
 
-Leftover from Moose.
+Leftover from Mouse.
 
 =head1 AUTHOR
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 use XML::Grammar::Fiction::Err;
 
@@ -380,7 +380,7 @@
 
 =head2 $self->meta()
 
-Leftover from Moose.
+Leftover from Mouse.
 
 =head1 AUTHOR
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 use XML::Grammar::Fiction::Err;
 use XML::Grammar::Fiction::Struct::Tag;
@@ -867,7 +867,7 @@
 
 =head2 $self->meta()
 
-Leftover from Moose.
+Leftover from Mouse.
 
 =head1 AUTHOR
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::FictionBase::TagsTree2XML;
 
-use Moose;
+use Mouse;
 
 use XML::Writer;
 use HTML::Entities ();
@@ -39,8 +39,6 @@
 
 has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
 
-has '_buffer' => ('isa' => "ScalarRef[Str]", is => "rw");
-
 sub _write_Element_elem
 {
     my ($self, $elem) = @_;
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -11,7 +11,7 @@
 use XML::LibXML;
 use XML::LibXSLT;
 
-use Moose;
+use Mouse;
 
 has '_data_dir' => (isa => 'Str', is => 'rw');
 has '_data_dir_from_input' => (isa => 'Str', is => 'rw', init_arg => 'data_dir',);
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -2,7 +2,7 @@
 
 use XML::Writer;
 
-use Moose;
+use Mouse;
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
 
@@ -54,8 +54,6 @@
 
 =cut
 
-use Data::Dumper;
-
 sub _output_tag
 {
     my ($self, $args) = @_;
@@ -250,6 +248,8 @@
     return $self->_parser->process_text($self->_read_file($filename));
 }
 
+has '_buffer' => (is => "rw");
+
 sub convert
 {
     my ($self, $args) = @_;
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 1;
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 extends( 'XML::Grammar::FictionBase::FromProto::Parser::XmlIterator' );
 
@@ -614,7 +614,7 @@
 
 =head2 $self->meta()
 
-Leftover from Moose.
+Leftover from Mouse.
 
 =head1 AUTHOR
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Screenplay::ToDocBook;
 
-use Moose;
+use Mouse;
 
 extends('XML::Grammar::Screenplay::XSLT::Base');
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Screenplay::ToHTML;
 
-use Moose;
+use Mouse;
 
 extends('XML::Grammar::Screenplay::XSLT::Base');
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Moose;
+use Mouse;
 
 extends('XML::Grammar::Screenplay::XSLT::Base');
 
diff -r 43810e1e6df9 -r 5bd0e1ab1c6e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Jul 27 08:55:55 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri Jul 27 09:12:37 2012 +0300
@@ -1,6 +1,6 @@
 package XML::Grammar::Screenplay::XSLT::Base;
 
-use Moose;
+use Mouse;
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 

changeset:   408:43810e1e6df9
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 08:55:55 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t perl/modules/XML-Grammar-Fiction/t/app-to-html.t perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t perl/modules/XML-Grammar-Fiction/tag-release.pl
description:
Got rid of trailing space.


diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Jul 27 08:55:55 2012 +0300
@@ -182,4 +182,5 @@
 t/screenplay/to-docbook.t
 t/screenplay/to-tei.t
 t/screenplay/to-xhtml.t
+t/style-trailing-space.t
 META.json
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl
--- a/perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl	Fri Jul 27 08:55:55 2012 +0300
@@ -51,7 +51,7 @@
 my $ret = GetOptions(
     "o|output=s" => \$output_file,
     "help|h" => \$help,
-    "man" => \$man, 
+    "man" => \$man,
 );
 
 if (!defined($output_file))
@@ -103,12 +103,12 @@
 
     my @subs = $xpc->findnodes(q{./db:section}, $sect_elem);
 
-    return 
-          qq{<s id="} . _esc_for_attr($id) . qq{">\n\n} 
+    return
+          qq{<s id="} . _esc_for_attr($id) . qq{">\n\n}
         . qq{<title>} . _esc($title_text) . qq{</title>\n\n}
         .  join("\n\n", map { _esc($_->textContent()) } @paras)
         . join("\n\n", map { _out_section($_) } @subs)
-        . qq{</s>\n\n} 
+        . qq{</s>\n\n}
         ;
 }
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri Jul 27 08:55:55 2012 +0300
@@ -10,7 +10,7 @@
  />
 
 <xsl:template match="/">
-        <xsl:apply-templates select="//fic:body" />  
+        <xsl:apply-templates select="//fic:body" />
 </xsl:template>
 
 <xsl:template match="fic:body">
@@ -47,7 +47,7 @@
                     <xsl:otherwise>
                         <xsl:value-of select="@xml:id" />
                     </xsl:otherwise>
-                </xsl:choose> 
+                </xsl:choose>
             </db:title>
         </db:info>
         <xsl:apply-templates select="fic:section|fic:blockquote|fic:p|fic:ol|fic:ul|fic:programlisting" />
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Fri Jul 27 08:55:55 2012 +0300
@@ -11,7 +11,7 @@
  />
 
 <xsl:template match="/">
-        <xsl:apply-templates select="//fic:body" />  
+        <xsl:apply-templates select="//fic:body" />
 </xsl:template>
 
 <xsl:template match="fic:body">
@@ -25,14 +25,14 @@
             <div class="fiction story">
                 <xsl:attribute name="xml:id">
                     <xsl:value-of select="@xml:id" />
-                </xsl:attribute>                
+                </xsl:attribute>
                 <!-- TODO : duplicate code between here and fic:section.
-                    Abstract into a common functionality! 
+                    Abstract into a common functionality!
                 -->
                 <xsl:element name="h{count(ancestor-or-self::fic:section|ancestor-or-self::fic:body)}">
                     <xsl:value-of select="fic:title" />
                 </xsl:element>
-                
+
                 <xsl:apply-templates select="fic:section" />
             </div>
         </body>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri Jul 27 08:55:55 2012 +0300
@@ -27,7 +27,7 @@
         <optional>
             <attribute name="xml:id">
                 <data type="ID"/>
-            </attribute>            
+            </attribute>
         </optional>
         <optional>
             <attribute name="xml:lang">
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Fri Jul 27 08:55:55 2012 +0300
@@ -10,7 +10,7 @@
  />
 
 <xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
+        <xsl:apply-templates select="//sp:body" />
 </xsl:template>
 
 <xsl:template match="sp:body">
@@ -36,7 +36,7 @@
                 <xsl:otherwise>
                     <xsl:value-of select="@id" />
                 </xsl:otherwise>
-            </xsl:choose> 
+            </xsl:choose>
         </title>
         <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
     </section>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Fri Jul 27 08:55:55 2012 +0300
@@ -10,7 +10,7 @@
  />
 
 <xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
+        <xsl:apply-templates select="//sp:body" />
 </xsl:template>
 
 <xsl:template match="sp:body">
@@ -64,7 +64,7 @@
 <xsl:template match="sp:para">
     <p>
         <xsl:if test="local-name(..) = 'saying'">
-            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong>
             <xsl:text> </xsl:text>
         </xsl:if>
         <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=1] = .">
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Fri Jul 27 08:55:55 2012 +0300
@@ -9,7 +9,7 @@
  />
 
 <xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
+        <xsl:apply-templates select="//sp:body" />
 </xsl:template>
 
 <xsl:template match="sp:body">
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
 <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
 
 <xsl:template match="/">
-        <xsl:apply-templates select="//body" />  
+        <xsl:apply-templates select="//body" />
 </xsl:template>
 
 <xsl:template match="body">
@@ -22,7 +22,7 @@
             </fo:layout-master-set>
             <fo:page-sequence master-reference="A4">
                 <fo:flow flow-name="xsl-region-body">
-                    <xsl:apply-templates select="scene" />        
+                    <xsl:apply-templates select="scene" />
                 </fo:flow>
             </fo:page-sequence>
     </fo:root>
@@ -63,7 +63,7 @@
 <xsl:template match="para">
     <p>
         <xsl:if test="local-name(..) = 'saying'">
-            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong>
             <xsl:text> </xsl:text>
         </xsl:if>
         <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -59,7 +59,7 @@
         Test::Run::CmdLine::Iface->new(
             {
                 'test_files' => $self->get_test_run_test_files(),
-            }   
+            }
             # 'backend_params' => $self->_get_backend_params(),
         );
 
@@ -68,7 +68,7 @@
 
 sub ACTION_tags
 {
-    return 
+    return
         system(qw(
             ctags -f tags --recurse --totals
     		--exclude=blib/** --exclude=t/lib/**
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -14,7 +14,7 @@
     my $package = shift;
     my %args = @_;
     my @extradata_files;
-    
+
     my $builder = $package->SUPER::new(
         share_dir => 'extradata',
         auto_configure_requires => 1,
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction - CPAN distribution implementing an XML grammar 
+XML::Grammar::Fiction - CPAN distribution implementing an XML grammar
 and a lightweight markup language for stories, novels and other fiction.
 
 =head1 VERSION
@@ -20,7 +20,7 @@
 
 =head1 SYNOPSIS
 
-See L<XML::Grammar::Fiction::FromProto>, 
+See L<XML::Grammar::Fiction::FromProto>,
 L<XML::Grammar::Fiction::ToDocBook> and
 L<XML::Grammar::Fiction::ToHTML>.
 
@@ -43,9 +43,9 @@
 L<XML::Grammar::Fiction::App::ToHTML>, which are modules implementing
 command line applications for their processing.
 
-In order to be able to share the common code and functionality more easily, 
-then L<XML::Grammar::Screenplay>, which provides similar XML grammar and 
-text-based markup language for writing screenplays, is now included in this 
+In order to be able to share the common code and functionality more easily,
+then L<XML::Grammar::Screenplay>, which provides similar XML grammar and
+text-based markup language for writing screenplays, is now included in this
 CPAN distribution, and you can refer to its documentation as well:
 L<XML::Grammar::Screenplay> .
 
@@ -56,15 +56,15 @@
 =head2 Sections
 
 Sections are placed in XML-like tags of C<< <section> ... </section> >> or
-abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
+abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have
 attributes whose keys are plaintext and whose values are surrounded by
 double quotes. (Single-quotes are not supported).
 
 The section tag must have an C<id> attribute (for anchors, etc.) and could
-contain an optional (but highly recommended) C<< <title> >> sub-tag. If the 
+contain an optional (but highly recommended) C<< <title> >> sub-tag. If the
 title is not specified, it will default to the ID.
 
-Sections may be B<nested>. 
+Sections may be B<nested>.
 
 =head2 Text
 
@@ -84,7 +84,7 @@
 =item 3. Entities
 
 The text format supports SGML-like entities such as C<< &amp; >>,
-C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
+C<< &lt; >>, C<< &quot; >> and all other entities that are supported by
 L<HTML::Entities>.
 
 =item 4. Supported initial characters
@@ -101,7 +101,7 @@
 
 =item * XML/SGML entities.
 
-XML/SGML entities are also supported at the start. 
+XML/SGML entities are also supported at the start.
 
 =back
 
@@ -116,8 +116,8 @@
 =head3 Paragraphs
 
 These are not delimited by anything - just a paragraph of text not containing
-an empty line. If a paragraph starts with a Plus sign ( C<+> ) then it is 
-immediately expected to be followed by a styling tag (as opposed to a 
+an empty line. If a paragraph starts with a Plus sign ( C<+> ) then it is
+immediately expected to be followed by a styling tag (as opposed to a
 
 =head3 <ol>
 
@@ -189,10 +189,10 @@
 
 =head1 MOTIVATION
 
-I (= Shlomi Fish) originated this CPAN distribution (after forking 
+I (= Shlomi Fish) originated this CPAN distribution (after forking
 L<XML:Grammar::Screenplay> which was similar enough) so I'll have a convenient
-way to edit a story I'm writing in Hebrew and similar fiction, as 
-OpenOffice.org caused me many problems, and I found editing bi-directional 
+way to edit a story I'm writing in Hebrew and similar fiction, as
+OpenOffice.org caused me many problems, and I found editing bi-directional
 DocBook/XML to be painful with either gvim or KDE 4's kate, so I opted for a
 more plain-texty format.
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -77,11 +77,11 @@
     if ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagsMismatch"))
     {
         warn $e->error(), "\n";
-        warn "Open: ", $e->opening_tag->name(), 
+        warn "Open: ", $e->opening_tag->name(),
             " at line ", $e->opening_tag->line(), "\n"
             ;
-        warn "Close: ", 
-            $e->closing_tag->name(), " at line ", 
+        warn "Close: ",
+            $e->closing_tag->name(), " at line ",
             $e->closing_tag->line(), "\n";
 
         exit(-1);
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -22,7 +22,7 @@
         "XML::Grammar::Fiction::Err::Base",
         "XML::Grammar::Fiction::Err::Parse::TagsMismatch" =>
         {
-            isa => "XML::Grammar::Fiction::Err::Base", 
+            isa => "XML::Grammar::Fiction::Err::Base",
             fields => [qw(opening_tag closing_tag)],
         },
         "XML::Grammar::Fiction::Err::Parse::LineError" =>
@@ -33,7 +33,7 @@
         "XML::Grammar::Fiction::Err::Parse::LeadingSpace" =>
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
-        },        
+        },
         "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag" =>
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -67,7 +67,7 @@
 {
     my ($self, $args) = @_;
 
-    return 
+    return
         $self->_output_tag({
             %$args,
             'in' => sub {
@@ -306,7 +306,7 @@
                 $self->_write_elem(
                     {
                         elem => $list,
-                    }                            
+                    }
                 ),
             },
         },
@@ -393,7 +393,7 @@
     my $scene = $args->{scene};
 
     my $tag = $scene->name;
-    
+
     if (($tag eq "s") || ($tag eq "scene"))
     {
         $self->_output_tag_with_childs_and_common_attributes(
@@ -423,7 +423,7 @@
         $contents = <$in>;
     }
     close($in);
-    
+
     return $contents;
 }
 
@@ -458,7 +458,7 @@
         @{$body->_get_childs()}
         ;
 
-    my @t = 
+    my @t =
     (
           defined($title)
         ? (title => $title->_get_childs()->[0])
@@ -485,9 +485,9 @@
     # These should be un-commented for debugging.
     # local $::RD_HINT = 1;
     # local $::RD_TRACE = 1;
-    
+
     # We need this so P::RD won't skip leading whitespace at lines
-    # which are siginificant.  
+    # which are siginificant.
 
     my $tree = $self->_calc_tree($args);
 
@@ -498,7 +498,7 @@
 
     my $buffer = "";
     my $writer = XML::Writer->new(
-        OUTPUT => \$buffer, 
+        OUTPUT => \$buffer,
         ENCODING => "utf-8",
         NAMESPACES => 1,
         PREFIX_MAP =>
@@ -520,7 +520,7 @@
     $self->_write_body({body => $tree});
 
     $writer->endTag();
-    
+
     return $buffer;
 }
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -40,7 +40,7 @@
 extends("XML::Grammar::Fiction::FromProto::Node");
 
 has 'children' => (
-    isa => 'XML::Grammar::Fiction::FromProto::Node::List', 
+    isa => 'XML::Grammar::Fiction::FromProto::Node::List',
     is => 'rw'
 );
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -149,7 +149,7 @@
     return [qw(para)];
 }
 
-before '_handle_close_tag' => sub { 
+before '_handle_close_tag' => sub {
     my $self = shift;
 
     $self->skip_space();
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -9,7 +9,7 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::Struct::Tag - information about an XML/SGML opening or 
+XML::Grammar::Fiction::Struct::Tag - information about an XML/SGML opening or
 closing tag.
 
 B<For internal use only>.
@@ -27,7 +27,7 @@
 has 'is_standalone' => (is => "rw", isa => "Bool");
 has 'attrs' => (is => "rw", isa => "ArrayRef");
 has 'children' => (
-    is => "rw", 
+    is => "rw",
     isa => "Maybe[ArrayRef]",
 );
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -13,7 +13,7 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::ToDocBook - module that converts the Fiction-XML to 
+XML::Grammar::Fiction::ToDocBook - module that converts the Fiction-XML to
 DocBook 5.
 
 =head1 VERSION
@@ -53,13 +53,13 @@
 
 Does the actual conversion. The C<'source'> argument points to a hash-ref with
 keys and values for the source. If C<'file'> is specified there it points to the
-filename to translate (currently the only available source). If 
+filename to translate (currently the only available source). If
 C<'string_ref'> is specified it points to a reference to a string, with the
 contents of the source XML. If C<'dom'> is specified then it points to an XML
 DOM as parsed or constructed by XML::LibXML.
 
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'dom'> returns the XML as an 
+The C<'output'> key specifies the return value. A value of C<'string'> returns
+the XML as a string, and a value of C<'dom'> returns the XML as an
 L<XML::LibXML> DOM object.
 
 =cut
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -49,13 +49,13 @@
 
 Does the actual conversion. The C<'source'> argument points to a hash-ref with
 keys and values for the source. If C<'file'> is specified there it points to the
-filename to translate (currently the only available source). If 
+filename to translate (currently the only available source). If
 C<'string_ref'> is specified it points to a reference to a string, with the
 contents of the source XML. If C<'dom'> is specified then it points to an XML
 DOM as parsed or constructed by XML::LibXML.
 
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'dom'> returns the XML as an 
+The C<'output'> key specifies the return value. A value of C<'string'> returns
+the XML as a string, and a value of C<'dom'> returns the XML as an
 L<XML::LibXML> DOM object.
 
 =cut
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -134,7 +134,7 @@
 
 =head2 my $line_copy_ref = $self->curr_line_copy()
 
-Returns a reference to a copy of the current line that is allowed to be 
+Returns a reference to a copy of the current line that is allowed to be
 tempered with (by assigning to pos() or in a different way.). The line is
 returned as a reference so to avoid destroying its pos() value.
 
@@ -161,7 +161,7 @@
     my $l = ${$self->curr_line_ref()} . "";
 
     pos($l) = $self->curr_pos();
-    
+
     return \$l;
 }
 
@@ -220,8 +220,8 @@
 
 =head2 $self->curr_line_continues_with($regex)
 
-Matches the current line with $regex starting from the current position and 
-returns the result. The position remains at the original position if the 
+Matches the current line with $regex starting from the current position and
+returns the result. The position remains at the original position if the
 regular expression does not match (using C< qr//cg >).
 
 =cut
@@ -237,12 +237,12 @@
 
 =head2 my $line_number = $self->line_idx()
 
-Returns the line index as an integer. It starts from 0 for the 
+Returns the line index as an integer. It starts from 0 for the
 first line (like in Perl lines.)
 
 =head2 my $line_number = $self->line_num()
 
-Returns the line number as an integer. It starts from 1 for the 
+Returns the line number as an integer. It starts from 1 for the
 first line (like in file lines.)
 
 =cut
@@ -319,7 +319,7 @@
         # use of the variable.
         my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
         $return_value .= $1;
-        
+
         # Find if it matched the regex.
         if (length($2) > 0)
         {
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -31,7 +31,7 @@
 (
     isa => "ArrayRef[XML::Grammar::FictionBase::Event]",
     # isa => "ArrayRef",
-    is => "rw", 
+    is => "rw",
     default => sub { []; },
     traits => ['Array'],
     handles =>
@@ -102,7 +102,7 @@
     my $args = shift;
 
     # t == type
-    my $class = 
+    my $class =
         "XML::Grammar::Fiction::FromProto::Node::"
         . delete($args->{'t'})
         ;
@@ -122,7 +122,7 @@
         $self->_new_node(
             {
                 t => (
-                    $open->name() eq "desc" ? "Description" 
+                    $open->name() eq "desc" ? "Description"
                     : $open->name() eq "innerdesc" ? "InnerDesc"
                     : "Element"
                 ),
@@ -291,7 +291,7 @@
             "Cannot match the \">\" of the opening tag",
         );
     }
-    
+
     return XML::Grammar::Fiction::Struct::Tag->new(
         name => $id,
         is_standalone => $is_standalone,
@@ -464,9 +464,9 @@
     my $self = shift;
     my $open_tag = shift;
 
-    my $new_elem = 
+    my $new_elem =
         $self->_create_elem(
-            $open_tag, 
+            $open_tag,
             $self->_new_list($open_tag->detach_children()),
         );
 
@@ -617,7 +617,7 @@
     }
 }
 
-sub _flush_events 
+sub _flush_events
 {
     my $self = shift;
 
@@ -663,7 +663,7 @@
     }
 }
 
-sub _is_closing_tag { 
+sub _is_closing_tag {
     my $self = shift;
     my $tag_start = shift;
 
@@ -732,7 +732,7 @@
 sub _generate_text_unit_events
 {
     my $self = shift;
-    
+
     # $self->skip_multiline_space();
 
     if (! $self->_generate_tag_event())
@@ -783,7 +783,7 @@
     {
         Carp::confess (qq{Reached EOF.});
     }
-    
+
     return;
 }
 
@@ -806,7 +806,7 @@
 sub _attempt_to_calc_new_ret_tag
 {
     my $self = shift;
-    
+
     $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
 
     return;
@@ -845,7 +845,7 @@
 
 =head1 DESCRIPTION
 
-This is a line iterator with some features for parsing, nested, 
+This is a line iterator with some features for parsing, nested,
 XML-like grammars.
 
 =head1 METHODS
@@ -857,7 +857,7 @@
 =cut
 
 sub process_text
-{   
+{
     my ($self, $text) = @_;
 
     $self->setup_text($text);
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -28,11 +28,11 @@
 );
 
 has "_parser" => (
-    'isa' => "XML::Grammar::Fiction::FromProto::Parser", 
+    'isa' => "XML::Grammar::Fiction::FromProto::Parser",
     'is' => "rw",
     lazy => 1,
-    default => sub { 
-        my $self = shift; 
+    default => sub {
+        my $self = shift;
         return $self->_parser_class->new();
     },
 );
@@ -64,7 +64,7 @@
         return;
     }
 }
-    
+
 sub _handle_elem_of_name_s
 {
     my ($self, $elem) = @_;
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -23,7 +23,7 @@
 
 =head1 NAME
 
-XML::Grammar::FictionBase::XSLT::Converter - base module that converts an XML 
+XML::Grammar::FictionBase::XSLT::Converter - base module that converts an XML
 file to a different XML file using an XSLT transform.
 
 =head1 VERSION
@@ -62,7 +62,7 @@
         XML::LibXML::RelaxNG->new(
             location =>
             File::Spec->catfile(
-                $self->_data_dir(), 
+                $self->_data_dir(),
                 $self->rng_schema_basename(),
             ),
         );
@@ -75,7 +75,7 @@
 
     my $style_doc = $self->_xml_parser()->parse_file(
             File::Spec->catfile(
-                $self->_data_dir(), 
+                $self->_data_dir(),
                 $self->xslt_transform_basename(),
             ),
         );
@@ -101,13 +101,13 @@
 
 Does the actual conversion. The C<'source'> argument points to a hash-ref with
 keys and values for the source. If C<'file'> is specified there it points to the
-filename to translate (currently the only available source). If 
+filename to translate (currently the only available source). If
 C<'string_ref'> is specified it points to a reference to a string, with the
 contents of the source XML. If C<'dom'> is specified then it points to an XML
 DOM as parsed or constructed by XML::LibXML.
 
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'dom'> returns the XML as an 
+The C<'output'> key specifies the return value. A value of C<'string'> returns
+the XML as a string, and a value of C<'dom'> returns the XML as an
 L<XML::LibXML> DOM object.
 
 =cut
@@ -130,7 +130,7 @@
           exists($source->{'dom'})
         ? $source->{'dom'}
         : exists($source->{'string_ref'})
-        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
+        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}})
         : $self->_xml_parser()->parse_file($source->{'file'})
         ;
 }
@@ -139,7 +139,7 @@
 {
     my $self = shift;
     my $args = shift;
-  
+
     my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
 
     my $ret_code;
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -5,7 +5,7 @@
 
 =head1 NAME
 
-XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for 
+XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for
 screenplays.
 
 =head1 VERSION
@@ -18,7 +18,7 @@
 
 =head1 SYNOPSIS
 
-See L<XML::Grammar::Screenplay::FromProto>, 
+See L<XML::Grammar::Screenplay::FromProto>,
 L<XML::Grammar::Screenplay::ToDocBook> and
 L<XML::Grammar::Screenplay::ToHTML>.
 
@@ -47,7 +47,7 @@
 =head2 Scenes
 
 Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
-abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
+abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have
 attributes whose keys are plaintext and whose values are surrounded by
 double quotes. (Single-quotes are not supported).
 
@@ -76,7 +76,7 @@
 =item 3. Entities
 
 The text format supports SGML-like entities such as C<< &amp; >>,
-C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
+C<< &lt; >>, C<< &quot; >> and all other entities that are supported by
 L<HTML::Entities>.
 
 =item 4. Text between [ ... ]
@@ -84,7 +84,7 @@
 Text between square brackets (C<[ ... ]>) is reserved for descriptions
 or inline descriptions (see below).
 
-=back 
+=back
 
 =head2 Sayings
 
@@ -110,7 +110,7 @@
 
 There are also internal descriptions to the saying which are placed
 inside the paragraph of the saying and describe what happens while the
-character talks. 
+character talks.
 
 =head2 EXAMPLES
 
@@ -120,7 +120,7 @@
 
     <s id="david_and_goliath">
 
-    [David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+    [David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
     standing by each other.]
 
     David: I will kill you.
@@ -129,9 +129,9 @@
 
     David: yes way!
 
-    ++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+    ++++: In the name of <a href="http://real-allah.tld/">Allah, the
     <b>merciful</b>, real merciful</a>, I will show you
-    the [sarcastically] power of my sling. 
+    the [sarcastically] power of my sling.
 
     ++: I shall sling you and bing you till infinity.
 
@@ -173,7 +173,7 @@
 
 =head1 DEBUGGING
 
-When trying to convert the well-formed text to XML, one will often 
+When trying to convert the well-formed text to XML, one will often
 encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
 which is used for parsing. The best way I found to deal with it is to
 gradually eliminate parts of the document until the offending markup is
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -38,7 +38,7 @@
 
     local $Parse::RecDescent::skip = "";
 
-    my $parser_class = 
+    my $parser_class =
         ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
 
     $self->_parser(
@@ -72,7 +72,7 @@
 {
     my ($self, $args) = @_;
 
-    return 
+    return
         $self->_output_tag({
             %$args,
             'in' => sub {
@@ -195,7 +195,7 @@
     my $scene = $args->{scene};
 
     my $tag = $scene->name;
-    
+
     if (($tag eq "s") || ($tag eq "scene"))
     {
         my $id = $scene->lookup_attr("id");
@@ -236,7 +236,7 @@
         $contents = <$in>;
     }
     close($in);
-    
+
     return $contents;
 }
 
@@ -257,9 +257,9 @@
     # These should be un-commented for debugging.
     # local $::RD_HINT = 1;
     # local $::RD_TRACE = 1;
-    
+
     # We need this so P::RD won't skip leading whitespace at lines
-    # which are siginificant.  
+    # which are siginificant.
 
     my $tree = $self->_calc_tree($args);
 
@@ -270,9 +270,9 @@
 
     my $buffer = "";
     $self->_buffer(\$buffer);
-    
+
     my $writer = XML::Writer->new(
-        OUTPUT => $self->_buffer(), 
+        OUTPUT => $self->_buffer(),
         ENCODING => "utf-8",
         NAMESPACES => 1,
         PREFIX_MAP =>
@@ -296,7 +296,7 @@
     $writer->endTag();
 
     $writer->endTag();
-    
+
     return ${$self->_buffer()};
 }
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -92,7 +92,7 @@
     {
         Carp::confess (qq{Two sayings in the tags stack at the same time.});
     }
-    
+
     return;
 };
 
@@ -137,7 +137,7 @@
 around '_parse_closing_tag' => sub {
     my ($orig, $self) = @_;
 
-    return 
+    return
         $self->_detect_closing_desc_tag
         ? $self->_create_closing_desc_tag
         : $self->$orig();
@@ -182,7 +182,7 @@
 
     $self->_set_is_start;
 
-    return 
+    return
         $self->_detect_open_desc_tag
         ? $self->_create_open_desc_tag
         : $self->$orig();
@@ -202,7 +202,7 @@
     if ($sayer =~ m{[\[\]]})
     {
         Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->line_num());
-    }    
+    }
 
     # All pluses
     if ($sayer =~ m{\A\++\z})
@@ -262,7 +262,7 @@
 }
 
 
-sub _is_closing_tag { 
+sub _is_closing_tag {
     my $self = shift;
     my $tag_start = shift;
 
@@ -296,7 +296,7 @@
         );
         $in_para = 0;
     }
-    
+
     if ( $is_saying && $self->_in_saying())
     {
         $self->_enqueue_event(
@@ -363,9 +363,9 @@
     # This is an assert.
     if ($open->name() ne "saying")
     {
-        Carp::confess (qq{Not a saying tag.});    
+        Carp::confess (qq{Not a saying tag.});
     }
-    
+
     my $new_elem =
         $self->_new_saying(
             (List::Util::first
@@ -538,7 +538,7 @@
     return;
 };
 
-before '_handle_close_tag' => sub { 
+before '_handle_close_tag' => sub {
     my $self = shift;
 
     $self->_close_top_tags();
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -33,10 +33,10 @@
 =head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
 
 Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
+the only available source).
 
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
+The C<'output'> key specifies the return value. A value of C<'string'> returns
+the XML as a string, and a value of C<'xml'> returns the XML as an
 L<XML::LibXML> DOM object.
 
 =cut
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -31,10 +31,10 @@
 =head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
 
 Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
+the only available source).
 
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
+The C<'output'> key specifies the return value. A value of C<'string'> returns
+the XML as a string, and a value of C<'xml'> returns the XML as an
 L<XML::LibXML> DOM object.
 
 =cut
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -34,10 +34,10 @@
 =head2 $converter->translate_to_tei({source => {file => $filename}, output => "string" })
 
 Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
+the only available source).
 
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
+The C<'output'> key specifies the return value. A value of C<'string'> returns
+the XML as a string, and a value of C<'xml'> returns the XML as an
 L<XML::LibXML> DOM object.
 
 =cut
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -24,7 +24,7 @@
     my $self = shift;
 
     my ($sayer, $what);
-    
+
     ($sayer) = $self->_with_curr_line(
         sub {
             my $l = shift;
@@ -100,7 +100,7 @@
         $self->_new_node({
                 t => "Saying",
                 character => $first->{character},
-                children => 
+                children =>
                     $self->_new_list([ $first->{para}, @others ]),
         });
 }
@@ -144,7 +144,7 @@
     {
         Carp::confess (
             qq{Description ("[ ... ]") that started on line }
-            . ($start_line+1) . 
+            . ($start_line+1) .
             qq{does not terminate anywhere.}
         );
     }
@@ -153,7 +153,7 @@
             t => "Description",
             children => $self->_new_list(
             [
-                map { 
+                map {
                 $self->_new_para($_),
                 } @paragraphs
             ],),
@@ -251,7 +251,7 @@
     {
         if (!defined(${$self->_next_line_ref()}))
         {
-            Carp::confess 
+            Carp::confess
             (
                 "End of file in an addressing paragraph starting at "
                 . ($start_line+1)
@@ -310,7 +310,7 @@
     if ($$l =~ m{\G\&})
     {
         $which_tag = "entity";
-    }                
+    }
     elsif ($$l =~ m{\G(?:</|\])})
     {
         $which_tag = "close";
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -22,7 +22,7 @@
 
     if ($open->{name} ne $close->{name})
     {
-        Carp::confess("Opening and closing tags do not match: " 
+        Carp::confess("Opening and closing tags do not match: "
             . "$open->{name} and $close->{name} on element starting at "
             . "line $open->{line}"
         );
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -146,11 +146,11 @@
         my $paragraphs = $item[2];
 
         XML::Grammar::Fiction::FromProto::Node::Description->new(
-            children => 
+            children =>
                 XML::Grammar::Fiction::FromProto::Node::List->new(
                     contents =>
                 [
-                map { 
+                map {
                 XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
                     children =>
                         XML::Grammar::Fiction::FromProto::Node::List->new(
@@ -204,7 +204,7 @@
 }
 
 sub process_text
-{   
+{
     my ($self, $text) = @_;
 
     my $rv = $self->_p_rd()->start($text);
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -146,11 +146,11 @@
         my $paragraphs = $item[2];
 
         XML::Grammar::Screenplay::FromProto::Node::Description->new(
-            children => 
+            children =>
                 XML::Grammar::Screenplay::FromProto::Node::List->new(
                     contents =>
                 [
-                map { 
+                map {
                 XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
                     children =>
                         XML::Grammar::Screenplay::FromProto::Node::List->new(
@@ -204,7 +204,7 @@
 }
 
 sub process_text
-{   
+{
     my ($self, $text) = @_;
 
     my $rv = $self->_p_rd()->start($text);
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
 
 =head1 NAME
 
-XML::Grammar::Screenplay::Struct::Tag - information about an XML/SGML opening or 
+XML::Grammar::Screenplay::Struct::Tag - information about an XML/SGML opening or
 closing tag.
 
 B<For internal use only>.
@@ -25,7 +25,7 @@
 has 'is_standalone' => (is => "rw", isa => "Bool");
 has 'attrs' => (is => "rw", isa => "ArrayRef");
 has 'children' => (
-    is => "rw", 
+    is => "rw",
     isa => "Maybe[ArrayRef]",
 );
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t
--- a/perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t	Fri Jul 27 08:55:55 2012 +0300
@@ -27,7 +27,7 @@
 }
 
 my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/fiction-xml.rng" 
+        location => "./extradata/fiction-xml.rng"
     );
 
 my @tests = (qw(
@@ -52,7 +52,7 @@
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::PRD",
     });
 
-my $dtd = 
+my $dtd =
     XML::LibXML::Dtd->new(
         "Screenplay XML 0.1.0",
         File::Spec->catfile(
@@ -82,7 +82,7 @@
     my $dom = $xml_parser->parse_string($got_xml);
 
     # TEST*$num_texts
-    ok ($dom->validate($dtd), 
+    ok ($dom->validate($dtd),
         "Checking for validity of '$fn'"
     );
 
@@ -93,7 +93,7 @@
     ok ((defined($code) && ($code == 0)),
         "The validation of '$fn' succeeded.") ||
         diag("\$@ == $@");
-    
+
 }
 
 1;
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Fri Jul 27 08:55:55 2012 +0300
@@ -11,7 +11,7 @@
 {
     local %ENV = %ENV;
     my @p5lib = split($Config{'path_sep'}, $ENV{'PERL5LIB'});
-    $ENV{'PERL5LIB'} = join($Config{'path_sep'}, 
+    $ENV{'PERL5LIB'} = join($Config{'path_sep'},
         File::Spec->rel2abs(
             File::Spec->catdir(
                 File::Spec->curdir(),
@@ -25,7 +25,7 @@
             "-e", "run()",
             "--",
             "-o", "temp.xhtml",
-            File::Spec->catdir(File::Spec->curdir(), 
+            File::Spec->catdir(File::Spec->curdir(),
                 "t", "fiction", "data", "xml", "sections-and-paras.xml",
             )
         ),
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Fri Jul 27 08:55:55 2012 +0300
@@ -12,7 +12,7 @@
     # Project Gutenberg - The Adventures of Sherlock Holmes by
     # Sir Arthur Conan Doyle.
     # http://www.gutenberg.org/files/1661/1661-h/1661-h.htm#2
-    my $text = <<"EOF"; 
+    my $text = <<"EOF";
 I had called upon my friend, Mr. Sherlock Holmes, one day in the autumn of
 last year and found him in deep conversation with a very stout,
 florid-faced, elderly gentleman with fiery red hair. With an apology for my
@@ -77,7 +77,7 @@
 greatcoat. As he glanced down the advertisement column, with his head thrust
 forward and the paper flattened out upon his knee, I took a good look at the
 man and endeavoured, after the fashion of my companion, to read the indications
-which might be presented by his dress or appearance. 
+which might be presented by his dress or appearance.
 
 EOF
 
@@ -101,14 +101,14 @@
     is ($parser->curr_pos(), 0, "->pos() returns the right value.");
 
     # TEST
-    ok (scalar($parser->at_line_start()), 
+    ok (scalar($parser->at_line_start()),
         "Parser is at line start.");
 
     {
         my ($l_ref, $pos) = $parser->curr_line_and_pos();
 
         # TEST
-        is ($$l_ref, 
+        is ($$l_ref,
             qq{I had called upon my friend, Mr. Sherlock Holmes, one day in the autumn of\n},
             "Line ref of ->curr_line_and_pos() is OK."
         );
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        King <link xlink:href="http://en.wikipedia.org/wiki/David" xml:id="david_link" xml:lang="es">David</link> and Goliath were standing by each other.    
+        King <link xlink:href="http://en.wikipedia.org/wiki/David" xml:id="david_link" xml:lang="es">David</link> and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        David and Goliath were standing by each other.    
+        David and Goliath were standing by each other.
     </para>
     <para>
         David said unto Goliath: "I will shoot you."
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,11 +8,11 @@
       <section role="description" id="id2244766"><title/>
             <para>
             [
-        
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
+
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath"/>
                 are standing by each other.
-            
+
             ]
         </para>
         </section>
@@ -31,8 +31,8 @@
                 yes way!
             </para>
             <para><emphasis role="bold">David: </emphasis>
-                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
-                <phrase>[sarcastically]</phrase> power 
+                In the name of <ulink url="http://real-allah.tld"/>, I will show you the
+                <phrase>[sarcastically]</phrase> power
                 of my sling.
             </para>
             <para><emphasis role="bold">David: </emphasis>
@@ -42,9 +42,9 @@
       <section role="description" id="id2242910"><title/>
             <para>
             [
-        
+
                 David takes his sling.
-            
+
             ]
         </para>
         </section>
@@ -61,9 +61,9 @@
       <section role="description" id="id2244795"><title/>
         <para>
             [
-        
+
             David puts a stone in his sling and shoots Goliath. He hits.
-        
+
             ]
         </para>
     </section>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        King <phrase xml:lang="he-IL">דוד</phrase> and <phrase xml:id="foobar">Foobar Anchor</phrase> and <phrase xml:id="peter" xml:lang="fr-FR">Pierre</phrase> and Goliath were standing by each other.    
+        King <phrase xml:lang="he-IL">דוד</phrase> and <phrase xml:id="foobar">Foobar Anchor</phrase> and <phrase xml:id="peter" xml:lang="fr-FR">Pierre</phrase> and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
       <title>The Top Section</title>
     </info>
     <para>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </para>
     <para>
     David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will". You shall
     feel my wrath!
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</i> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
 
 <!-- David has Green hair here -->
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -48,7 +48,7 @@
 
 </ol>
 
-Goliath was insulted and told David he should use bullets for the points, 
+Goliath was insulted and told David he should use bullets for the points,
 instead:
 
 <ul>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -48,7 +48,7 @@
 
 </ol>
 
-Goliath was insulted and told David he should use bullets for the points, 
+Goliath was insulted and told David he should use bullets for the points,
 instead:
 
 <ul>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.
@@ -11,9 +11,9 @@
 
 David: yes way!
 
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
-of my sling. 
+++++: In the name of <a href="http://real-allah.tld/">Allah, the
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power
+of my sling.
 
 ++: I shall sling you and bing you till infinity.
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -46,7 +46,7 @@
 
 </ol>
 
-Goliath was insulted and told David he should use bullets for the points, 
+Goliath was insulted and told David he should use bullets for the points,
 instead:
 
 <ul>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -6,7 +6,7 @@
 
 <title>The Top Section</title>
 
-David and Goliath were standing by each other.    
+David and Goliath were standing by each other.
 
 David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
     <title>The Top Section</title>
     <!-- David has Green hair here -->
     <p>
-    King <span xlink:href="http://en.wikipedia.org/wiki/David" xml:id="david_link" xml:lang="es">David</span> and Goliath were standing by each other.    
+    King <span xlink:href="http://en.wikipedia.org/wiki/David" xml:id="david_link" xml:lang="es">David</span> and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -3,11 +3,11 @@
     <head>
     </head>
     <body xml:id="index">
-    <title>David vs. Goliath - Part I</title>        
+    <title>David vs. Goliath - Part I</title>
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-        &amp;&#32;David and Goliath were standing by each other.    
+        &amp;&#32;David and Goliath were standing by each other.
         &lt;foo&gt;
     </p>
     <section xml:id="goliath">
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
     <title>The Top Section</title>
     <!-- David has Green hair here -->
     <p>
-    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -3,11 +3,11 @@
     <head>
     </head>
     <body xml:id="index">
-    <title>David vs. Goliath - Part I</title>        
+    <title>David vs. Goliath - Part I</title>
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-        David and Goliath were standing by each other.    
+        David and Goliath were standing by each other.
     </p>
     <p>
         David said unto Goliath: "I will shoot you."
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
     <title>The Top Section</title>
     <!-- David has Green hair here -->
     <p>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
     <title>The Top Section</title>
     <!-- David has Green hair here -->
     <p>
-    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
     <title>The Top Section</title>
     <!-- David has Green hair here -->
     <p>
-    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,7 +8,7 @@
     <title>The Top Section</title>
     <!-- David has Green hair here -->
     <p>
-    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,7 +7,7 @@
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
-    David and Goliath were standing by each other.    
+    David and Goliath were standing by each other.
     </p>
     <p>
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Fri Jul 27 08:55:55 2012 +0300
@@ -51,7 +51,7 @@
     });
 
 my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/fiction-xml.rng" 
+        location => "./extradata/fiction-xml.rng"
     );
 
 my $xml_parser = XML::LibXML->new();
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t	Fri Jul 27 08:55:55 2012 +0300
@@ -44,7 +44,7 @@
     my $ret = $parser->consume(qr{[^<]});
 
     # TEST
-    is ($ret, "Hello\nvoila the row kala:\n", 
+    is ($ret, "Hello\nvoila the row kala:\n",
         "consume works for several lines");
 }
 
@@ -65,7 +65,7 @@
     my $ret = $parser->_parse_opening_tag();
 
     # TEST
-    is_deeply ($ret, 
+    is_deeply ($ret,
         {
             name => "s",
             is_standalone => 0,
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Fri Jul 27 08:55:55 2012 +0300
@@ -57,7 +57,7 @@
         );
 
     # TEST*$num_texts*2
-    
+
     my $parser = XML::LibXML->new();
 
     my $doc = $parser->parse_string($docbook_text);
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t	Fri Jul 27 08:55:55 2012 +0300
@@ -62,7 +62,7 @@
     my $xpc = XML::LibXML::XPathContext->new();
     $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
     $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
-   
+
     # This is a closure that returns a closure (like shown in "On Lisp" :
     # http://www.paulgraham.com/onlisptext.html ) for a finder in
     # one of the documents
@@ -151,7 +151,7 @@
     # TEST:$num_xhtml_top_titles=2;
     # TEST:$n=$num_texts*$num_xhtml_top_titles;
     foreach my $xpath (
-        q{//x:html/x:head/x:title}, 
+        q{//x:html/x:head/x:title},
         q{//x:html/x:body/x:div/x:h1},
     )
     {
@@ -169,7 +169,7 @@
             "XHTML <title> has good content"
         );
     }
-    
+
     # TEST*$num_texts
     ok (
         (scalar(() = $xhtml_find->(q{//x:div}))
@@ -185,7 +185,7 @@
         is (scalar(@elems), 1, "One element");
 
         # TEST*$num_texts
-        is ($elems[0]->textContent(), "The Top Section", 
+        is ($elems[0]->textContent(), "The Top Section",
             "<h2> element contains the right thing.");
     }
 
@@ -204,10 +204,10 @@
             );
 
             # TEST*$num_with_styles
-            like ($elems[0]->toString(), qr{swear}, 
+            like ($elems[0]->toString(), qr{swear},
                 "Elem[0] is the right <b> tag."
             );
-            
+
             @elems = $xhtml_find->(q{//x:div/x:p/x:i});
             # TEST*$num_with_styles
             is (
@@ -217,7 +217,7 @@
             );
 
             # TEST*$num_with_styles
-            like ($elems[0]->toString(), qr{David}, 
+            like ($elems[0]->toString(), qr{David},
                 "<i>[0] contains the right contents."
             );
         }
@@ -234,10 +234,10 @@
             );
 
             # TEST*$num_with_styles
-            is ($elems[0]->textContent(), "swear", 
+            is ($elems[0]->textContent(), "swear",
                 "Elem[0] is the right <emphasis role=bold> tag."
             );
-            
+
             @elems = $db_find->(
                 q{//db:article//db:section/db:para/db:emphasis[not(@role)]}
             );
@@ -249,7 +249,7 @@
             );
 
             # TEST*$num_with_styles
-            is ($elems[0]->textContent(), "David", 
+            is ($elems[0]->textContent(), "David",
                 "<i>[0] contains the right contents.",
             );
         }
@@ -269,7 +269,7 @@
             );
 
             # TEST*$num_with_styles
-            is ($elems[0]->textContent(), "Goliath's Response", 
+            is ($elems[0]->textContent(), "Goliath's Response",
                 "title#goliath contains the right content.",
             );
         }
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t	Fri Jul 27 08:55:55 2012 +0300
@@ -11,7 +11,7 @@
 {
     local %ENV = %ENV;
     my @p5lib = split($Config{'path_sep'}, $ENV{'PERL5LIB'});
-    $ENV{'PERL5LIB'} = join($Config{'path_sep'}, 
+    $ENV{'PERL5LIB'} = join($Config{'path_sep'},
         File::Spec->rel2abs(
             File::Spec->catdir(
                 File::Spec->curdir(),
@@ -25,7 +25,7 @@
             "-e", "run()",
             "--",
             "-o", "temp.xhtml",
-            File::Spec->catdir(File::Spec->curdir(), 
+            File::Spec->catdir(File::Spec->curdir(),
                 "t", "screenplay", "data", "xml", "nested-s.xml"
             )
         ),
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -8,11 +8,11 @@
       <section role="description" id="id2244766"><title/>
             <para>
             [
-        
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
+
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath"/>
                 are standing by each other.
-            
+
             ]
         </para>
         </section>
@@ -31,8 +31,8 @@
                 yes way!
             </para>
             <para><emphasis role="bold">David: </emphasis>
-                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
-                <phrase>[sarcastically]</phrase> power 
+                In the name of <ulink url="http://real-allah.tld"/>, I will show you the
+                <phrase>[sarcastically]</phrase> power
                 of my sling.
             </para>
             <para><emphasis role="bold">David: </emphasis>
@@ -42,9 +42,9 @@
       <section role="description" id="id2242910"><title/>
             <para>
             [
-        
+
                 David takes his sling.
-            
+
             ]
         </para>
         </section>
@@ -61,9 +61,9 @@
       <section role="description" id="id2244795"><title/>
         <para>
             [
-        
+
             David puts a stone in his sling and shoots Goliath. He hits.
-        
+
             ]
         </para>
     </section>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.<br />
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.<br />
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.
@@ -11,8 +11,8 @@
 
 David: yes way!
 
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<i>merciful</i>, real merciful</a>, I will show you the power of my sling. 
+++++: In the name of <a href="http://real-allah.tld/">Allah, the
+<i>merciful</i>, real merciful</a>, I will show you the power of my sling.
 
 ++: I shall sling you and bing you till infinity.
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.
@@ -11,9 +11,9 @@
 
 David: yes way!
 
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
-of my sling. 
+++++: In the name of <a href="http://real-allah.tld/">Allah, the
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power
+of my sling.
 
 ++: I shall sling you and bing you till infinity.
 
@@ -25,8 +25,8 @@
 
 [David puts a stone in his sling and shoots Goliath. He hits.]
 
-David: as is written in the wikipedia 
-[See <a href="http://wiki.tld/">the Wiki site</a> for more information], you 
+David: as is written in the wikipedia
+[See <a href="http://wiki.tld/">the Wiki site</a> for more information], you
 are now dead, having been shot with my sling.
 
 </s>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.
@@ -11,9 +11,9 @@
 
 David: yes way!
 
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
-of my sling. 
+++++: In the name of <a href="http://real-allah.tld/">Allah, the
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power
+of my sling.
 
 ++: I shall sling you and bing you till infinity.
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -4,7 +4,7 @@
 
 David: I will kill you.
 
-<!-- David and Goliath are Biblical characters 
+<!-- David and Goliath are Biblical characters
 
 They are nifty.
 -->
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt	Fri Jul 27 08:55:55 2012 +0300
@@ -2,7 +2,7 @@
 
 <s id="david_and_goliath">
 
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are
 standing by each other.]
 
 David: I will kill you.
@@ -11,8 +11,8 @@
 
 David: yes way!
 
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
+++++: In the name of <a href="http://real-allah.tld/">Allah, the
+<b>merciful</b>, real merciful</a>, I will show you the power of my sling.
 
 ++: I shall sling you and bing you till infinity.
 
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -22,7 +22,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -9,8 +9,8 @@
           <tei:head>david_and_goliath</tei:head>
           <tei:stage>
             <tei:p>
-                David and 
-                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                David and
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref>
                 are standing by each other.
             </tei:p>
         </tei:stage>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -27,7 +27,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -27,7 +27,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -33,7 +33,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -9,8 +9,8 @@
           <tei:head>david_and_goliath</tei:head>
           <tei:stage>
             <tei:p>
-                David and 
-                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                David and
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref>
                 are standing by each other.
             </tei:p>
         </tei:stage>
@@ -29,7 +29,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="italic">merciful</tei:hi>, real merciful</tei:ref>, I will show you the power 
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="italic">merciful</tei:hi>, real merciful</tei:ref>, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -9,8 +9,8 @@
           <tei:head>david_and_goliath</tei:head>
           <tei:stage>
             <tei:p>
-                David and 
-                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                David and
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref>
                 are standing by each other.
             </tei:p>
         </tei:stage>
@@ -29,8 +29,8 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the 
-                <tei:stage>[sarcastically]</tei:stage> power 
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the
+                <tei:stage>[sarcastically]</tei:stage> power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -9,8 +9,8 @@
           <tei:head>david_and_goliath</tei:head>
           <tei:stage>
             <tei:p>
-                David and 
-                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                David and
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref>
                 are standing by each other.
             </tei:p>
         </tei:stage>
@@ -29,8 +29,8 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the 
-                <tei:stage>[sarcastically]</tei:stage> power 
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the
+                <tei:stage>[sarcastically]</tei:stage> power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -33,7 +33,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -33,7 +33,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -9,8 +9,8 @@
           <tei:head>david_and_goliath</tei:head>
           <tei:stage>
             <tei:p>
-                David and 
-                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                David and
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref>
                 are standing by each other.
             </tei:p>
         </tei:stage>
@@ -29,7 +29,7 @@
                 yes way!
             </tei:p>
             <tei:p>
-                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the power 
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the power
                 of my sling.
             </tei:p>
             <tei:p>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -20,7 +20,7 @@
                 yes way!
             </para>
             <para>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,8 +7,8 @@
     <scene id="david_and_goliath">
         <description>
             <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink>
                 are standing by each other.
             </para>
         </description>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -25,7 +25,7 @@
                 yes way!
             </para>
             <para>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -25,7 +25,7 @@
                 yes way!
             </para>
             <para>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -31,7 +31,7 @@
                 yes way!
             </para>
             <para>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,8 +7,8 @@
     <scene id="david_and_goliath">
         <description>
             <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink>
                 are standing by each other.
             </para>
         </description>
@@ -27,7 +27,7 @@
                 yes way!
             </para>
             <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <italics>merciful</italics>, real merciful</ulink>, I will show you the power 
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <italics>merciful</italics>, real merciful</ulink>, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,8 +7,8 @@
     <scene id="david_and_goliath">
         <description>
             <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink>
                 are standing by each other.
             </para>
         </description>
@@ -27,8 +27,8 @@
                 yes way!
             </para>
             <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
-                <inlinedesc>sarcastically</inlinedesc> power 
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the
+                <inlinedesc>sarcastically</inlinedesc> power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,8 +7,8 @@
     <scene id="david_and_goliath">
         <description>
             <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink>
                 are standing by each other.
             </para>
         </description>
@@ -27,8 +27,8 @@
                 yes way!
             </para>
             <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
-                <inlinedesc>sarcastically</inlinedesc> power 
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the
+                <inlinedesc>sarcastically</inlinedesc> power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -10,7 +10,7 @@
                 I will kill you.
             </para>
         </saying>
-        <!-- David and Goliath are Biblical characters 
+        <!-- David and Goliath are Biblical characters
 
         They are nifty.
         -->
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -31,7 +31,7 @@
                 yes way!
             </para>
             <para>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -31,7 +31,7 @@
                 yes way!
             </para>
             <para>
-                In the name of Allah, the merciful, I will show you the power 
+                In the name of Allah, the merciful, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml	Fri Jul 27 08:55:55 2012 +0300
@@ -7,8 +7,8 @@
     <scene id="david_and_goliath">
         <description>
             <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                David and
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink>
                 are standing by each other.
             </para>
         </description>
@@ -27,7 +27,7 @@
                 yes way!
             </para>
             <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power
                 of my sling.
             </para>
             <para>
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t	Fri Jul 27 08:55:55 2012 +0300
@@ -44,7 +44,7 @@
     my $ret = $parser->consume(qr{[^<]});
 
     # TEST
-    is ($ret, "Hello\nvoila the row kala:\n", 
+    is ($ret, "Hello\nvoila the row kala:\n",
         "_consume works for several lines");
 }
 
@@ -65,7 +65,7 @@
     my $ret = $parser->_parse_opening_tag();
 
     # TEST
-    is_deeply ($ret, 
+    is_deeply ($ret,
         {
             name => "s",
             is_standalone => 0,
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t	Fri Jul 27 08:55:55 2012 +0300
@@ -46,7 +46,7 @@
         );
 
     # TEST*$num_texts*2
-    
+
     my $parser = XML::LibXML->new();
 
     my $doc = $parser->parse_string($docbook_text);
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/style-trailing-space.t	Fri Jul 27 08:55:55 2012 +0300
@@ -0,0 +1,49 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use autodie;
+
+use Test::More;
+
+eval "use File::Find::Object::Rule";
+if ($@)
+{
+    plan skip_all => "File::Find::Object::Rule required for trailing space test.";
+}
+else
+{
+    plan tests => 1;
+}
+
+{
+    my $num_found = 0;
+
+    my $subrule = File::Find::Object::Rule->new;
+
+    my $rule = $subrule->or(
+        $subrule->new->directory->name(qr/blib/)->prune->discard,
+        $subrule->new->file()->name(qr/(?:xslt|t|rng|dtd|pm|xml|PL|pl)\z/)
+    )->start(".");
+
+    while ( my $path = $rule->match() )
+    {
+        open my $fh, '<', $path;
+        LINES:
+        while (my $line = <$fh>)
+        {
+            chomp($line);
+            if ($line =~ /[ \t]+\r?\z/)
+            {
+                $num_found++;
+                diag ("Found trailing space in file '$path'");
+                last LINES;
+            }
+        }
+        close ($fh);
+    }
+
+    # TEST
+    is ($num_found, 0, "No trailing space found.");
+}
diff -r 29da9fd6b1aa -r 43810e1e6df9 perl/modules/XML-Grammar-Fiction/tag-release.pl
--- a/perl/modules/XML-Grammar-Fiction/tag-release.pl	Fri Jul 27 08:21:28 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/tag-release.pl	Fri Jul 27 08:55:55 2012 +0300
@@ -5,8 +5,8 @@
 
 use IO::All;
 
-my ($version) = 
-    (map { m{\$VERSION *= *'([^']+)'} ? ($1) : () } 
+my ($version) =
+    (map { m{\$VERSION *= *'([^']+)'} ? ($1) : () }
     io->file('lib/XML/Grammar/Fiction.pm')->getlines()
     )
     ;

changeset:   407:29da9fd6b1aa
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 08:21:28 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Add an item to the TODO.


diff -r 7fd792f42cc5 -r 29da9fd6b1aa perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Fri Jul 27 08:20:05 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Fri Jul 27 08:21:28 2012 +0300
@@ -1,3 +1,5 @@
+* Add a test script to test for trailing space and get rid of trailing space.
+
 * ::Fiction: Implement the correct handling of leading special characters in
 lines. Currently, they are processed as they are, without generating an error.
 

changeset:   406:7fd792f42cc5
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 08:20:05 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Remove trailing space.


diff -r 3dbe0d45c9b8 -r 7fd792f42cc5 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Fri Jul 27 08:06:05 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Fri Jul 27 08:20:05 2012 +0300
@@ -6,7 +6,7 @@
 This will allow a friendlier diagnostic. Carp::confess was implemented due to
 laziness on the programmers' part.
 
-* ::Fiction : add a feature for a formatting tag at the beginning of a 
+* ::Fiction : add a feature for a formatting tag at the beginning of a
 paragraph, that will not be mistaken for a top-level tag:
 
 [QUOTE]
@@ -28,7 +28,7 @@
 * Make the ::Screenplay exceptions contain the opening line closing line
 and generally more context (currently they are guess-work).
 
-* ::Screenplay - Fix the innerdesc on the start of the line in the middle of 
+* ::Screenplay - Fix the innerdesc on the start of the line in the middle of
 the paragraph. Like:
 
 -----------------

changeset:   405:3dbe0d45c9b8
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Fri Jul 27 08:06:05 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Remove trailing space.


diff -r c91774174ba3 -r 3dbe0d45c9b8 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Sat Jun 09 23:14:18 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Jul 27 08:06:05 2012 +0300
@@ -28,7 +28,7 @@
         'XML::LibXML' => 0,
         'XML::SemanticDiff' => '1.0000',
     },
-    requires => 
+    requires =>
     {
         'autodie' => 0,
         'Carp' => 0,

changeset:   404:c91774174ba3
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jun 09 23:14:18 2012 +0300
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.8.1


diff -r 5249a3e40681 -r c91774174ba3 .hgtags
--- a/.hgtags	Sat Jun 09 23:13:01 2012 +0300
+++ b/.hgtags	Sat Jun 09 23:14:18 2012 +0300
@@ -19,3 +19,4 @@
 fbc86b17ee9576a04a53e4ccf9870ac9290aa2c2 releases/0.6.0
 76728a39472a905f1b5fd893fe0177c798e3f454 releases/0.7.0
 eb047ae84d26100ab0d04729ee7a1abf7d63ac3c releases/0.8.0
+5249a3e406813b6a85e14745f4833ed5f26192e3 releases/0.8.1

changeset:   403:5249a3e40681
tag:         releases/0.8.1
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jun 09 23:13:01 2012 +0300
files:       .hgignore
description:
Add generated files to .hgignore.


diff -r 2ac2f1cd72b0 -r 5249a3e40681 .hgignore
--- a/.hgignore	Sat Jun 09 23:12:03 2012 +0300
+++ b/.hgignore	Sat Jun 09 23:13:01 2012 +0300
@@ -1,5 +1,8 @@
-perl/modules/XML-Grammar-Fiction/_build
 perl/modules/XML-Grammar-Fiction/Build
-perl/modules/XML-Grammar-Fiction/blib
+perl/modules/XML-Grammar-Fiction/META.json
+perl/modules/XML-Grammar-Fiction/META.yml
 perl/modules/XML-Grammar-Fiction/MYMETA.json
 perl/modules/XML-Grammar-Fiction/MYMETA.yml
+perl/modules/XML-Grammar-Fiction/Makefile.PL
+perl/modules/XML-Grammar-Fiction/_build
+perl/modules/XML-Grammar-Fiction/blib

changeset:   402:2ac2f1cd72b0
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jun 09 23:12:03 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the release number.


diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Jun 09 23:12:03 2012 +0300
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.8.1       Sat Jun  9 23:07:51 IDT 2012
     * Add t/base/line-iterator-unit.t to provide unit-tests for
         XML::Grammar::FictionBase::FromProto::Parser::LineIterator .
     * Add "use autodie" to the modules with open calls.
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Jun 09 23:12:03 2012 +0300
@@ -182,3 +182,4 @@
 t/screenplay/to-docbook.t
 t/screenplay/to-tei.t
 t/screenplay/to-xhtml.t
+META.json
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 use Exception::Class
     (
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -25,11 +25,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 AUTHOR
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head1 SYNOPSIS
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =cut
 
-our $VERSION = '0.8.0';
+our $VERSION = '0.8.1';
 
 =head2 new()
 
diff -r 7062ad99279e -r 2ac2f1cd72b0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat Jun 09 23:10:12 2012 +0300
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat Jun 09 23:12:03 2012 +0300
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.8.0
+Version 0.8.1
 
 =head1 AUTHOR
 

changeset:   401:7062ad99279e
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jun 09 23:10:12 2012 +0300
files:       .hgignore
description:
Add .hgignore.


diff -r 38da7790b708 -r 7062ad99279e .hgignore
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/.hgignore	Sat Jun 09 23:10:12 2012 +0300
@@ -0,0 +1,5 @@
+perl/modules/XML-Grammar-Fiction/_build
+perl/modules/XML-Grammar-Fiction/Build
+perl/modules/XML-Grammar-Fiction/blib
+perl/modules/XML-Grammar-Fiction/MYMETA.json
+perl/modules/XML-Grammar-Fiction/MYMETA.yml

changeset:   400:38da7790b708
user:        Shlomi Fish <shlomif@shlomifish.org>
date:        Sat Jun 09 23:07:14 2012 +0300
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
description:
Add "use autodie".


diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Sat Jun 09 23:07:14 2012 +0300
@@ -30,6 +30,7 @@
     },
     requires => 
     {
+        'autodie' => 0,
         'Carp' => 0,
         'Exporter' => 0,
         'Data::Dumper' => 0,
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
     * Add t/base/line-iterator-unit.t to provide unit-tests for
         XML::Grammar::FictionBase::FromProto::Parser::LineIterator .
+    * Add "use autodie" to the modules with open calls.
 
 0.8.0       Wed Jun  8 19:04:57 IDT 2011
     * <blockquote> now supports xml:id and xml:lang.
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use base 'Exporter';
 
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use base 'Exporter';
 
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use base 'Exporter';
 
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use Carp;
 use HTML::Entities ();
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use base 'Exporter';
 
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use base 'Exporter';
 
diff -r 993842cb3778 -r 38da7790b708 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Jul 05 15:12:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Sat Jun 09 23:07:14 2012 +0300
@@ -2,6 +2,7 @@
 
 use strict;
 use warnings;
+use autodie;
 
 use base 'Exporter';
 

changeset:   399:993842cb3778
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jul 05 15:12:30 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/00-load.t perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t
description:
Made the output of scripts/run_agg_tests.t less noisy.

1. Got rid of the diag()'s.

2. Got rid of tests inside the BEGIN { ... }.


diff -r cce8d8877a64 -r 993842cb3778 perl/modules/XML-Grammar-Fiction/t/00-load.t
--- a/perl/modules/XML-Grammar-Fiction/t/00-load.t	Mon Jun 27 19:18:48 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/00-load.t	Tue Jul 05 15:12:30 2011 +0000
@@ -2,8 +2,4 @@
 
 use Test::More tests => 1;
 
-BEGIN {
-	use_ok( 'XML::Grammar::Fiction' );
-}
-
-diag( "Testing XML::Grammar::Fiction $XML::Grammar::Fiction::VERSION, Perl $], $^X" );
+use_ok( 'XML::Grammar::Fiction' );
diff -r cce8d8877a64 -r 993842cb3778 perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t	Mon Jun 27 19:18:48 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t	Tue Jul 05 15:12:30 2011 +0000
@@ -2,8 +2,5 @@
 
 use Test::More tests => 1;
 
-BEGIN {
-	use_ok( 'XML::Grammar::Screenplay' );
-}
+use_ok( 'XML::Grammar::Screenplay' );
 
-diag( "Testing XML::Grammar::Screenplay $XML::Grammar::Screenplay::VERSION, Perl $], $^X" );

changeset:   398:cce8d8877a64
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Jun 27 19:18:48 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Check for a negative at_line_start().


diff -r 840382f3e744 -r cce8d8877a64 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Mon Jun 27 19:15:36 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Mon Jun 27 19:18:48 2011 +0000
@@ -3,7 +3,7 @@
 
 use utf8;
 
-use Test::More tests => 9;
+use Test::More tests => 10;
 
 use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
 
@@ -130,4 +130,7 @@
         qq{, Mr. Sherlock Holmes, one day in the autumn of\n},
         'curr_pos() is correct.'
     );
+
+    # TEST
+    ok (!$parser->at_line_start(), "Not at line start.");
 }

changeset:   397:840382f3e744
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Jun 27 19:15:36 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Add a description.


diff -r b04c24276277 -r 840382f3e744 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Sat Jun 25 11:44:19 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Mon Jun 27 19:15:36 2011 +0000
@@ -128,5 +128,6 @@
     # TEST
     is (substr(${$parser->curr_line_ref()}, $parser->curr_pos()),
         qq{, Mr. Sherlock Holmes, one day in the autumn of\n},
+        'curr_pos() is correct.'
     );
 }

changeset:   396:b04c24276277
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Jun 25 11:44:19 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Add more tests.


diff -r 1e8c52b5b0b0 -r b04c24276277 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:28:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Sat Jun 25 11:44:19 2011 +0000
@@ -3,7 +3,7 @@
 
 use utf8;
 
-use Test::More tests => 6;
+use Test::More tests => 9;
 
 use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
 
@@ -116,4 +116,17 @@
         # TEST
         is ($pos, 0, "Pos of ->curr_line_and_pos() is OK.")
     }
+
+    my $verdict = ${$parser->curr_line_ref()} =~ m{\G.*?(my f[^d]*d)}g;
+
+    my $match = $1;
+
+    # TEST
+    ok ($verdict, 'Matched.');
+    # TEST
+    is ($match, 'my friend', 'Match is correct');
+    # TEST
+    is (substr(${$parser->curr_line_ref()}, $parser->curr_pos()),
+        qq{, Mr. Sherlock Holmes, one day in the autumn of\n},
+    );
 }

changeset:   395:1e8c52b5b0b0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 21 20:28:45 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
More tests.


diff -r a5b25814af74 -r 1e8c52b5b0b0 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:22:34 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:28:45 2011 +0000
@@ -3,7 +3,7 @@
 
 use utf8;
 
-use Test::More tests => 4;
+use Test::More tests => 6;
 
 use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
 
@@ -103,4 +103,17 @@
     # TEST
     ok (scalar($parser->at_line_start()), 
         "Parser is at line start.");
+
+    {
+        my ($l_ref, $pos) = $parser->curr_line_and_pos();
+
+        # TEST
+        is ($$l_ref, 
+            qq{I had called upon my friend, Mr. Sherlock Holmes, one day in the autumn of\n},
+            "Line ref of ->curr_line_and_pos() is OK."
+        );
+
+        # TEST
+        is ($pos, 0, "Pos of ->curr_line_and_pos() is OK.")
+    }
 }

changeset:   394:a5b25814af74
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 21 20:22:34 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Add a test for at_line_start


diff -r ac94cd379078 -r a5b25814af74 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:17:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:22:34 2011 +0000
@@ -3,7 +3,7 @@
 
 use utf8;
 
-use Test::More tests => 3;
+use Test::More tests => 4;
 
 use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
 
@@ -99,4 +99,8 @@
 
     # TEST
     is ($parser->curr_pos(), 0, "->pos() returns the right value.");
+
+    # TEST
+    ok (scalar($parser->at_line_start()), 
+        "Parser is at line start.");
 }

changeset:   393:ac94cd379078
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 21 20:17:49 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Add another test.


diff -r 58aac09be64a -r ac94cd379078 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:15:29 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:17:49 2011 +0000
@@ -3,7 +3,7 @@
 
 use utf8;
 
-use Test::More tests => 2;
+use Test::More tests => 3;
 
 use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
 
@@ -96,4 +96,7 @@
     is (pos(${$parser->curr_line_ref()}), 0,
         "The pos() of the line is set at the right value."
     );
+
+    # TEST
+    is ($parser->curr_pos(), 0, "->pos() returns the right value.");
 }

changeset:   392:58aac09be64a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 21 20:15:29 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Add a test for pos.


diff -r 71fd7ff4b315 -r 58aac09be64a perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:12:19 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:15:29 2011 +0000
@@ -3,7 +3,7 @@
 
 use utf8;
 
-use Test::More tests => 1;
+use Test::More tests => 2;
 
 use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
 
@@ -91,4 +91,9 @@
         qq{I had called upon my friend, Mr. Sherlock Holmes, one day in the autumn of\n},
         "curr_line_ref() returns the right value.",
     );
+
+    # TEST
+    is (pos(${$parser->curr_line_ref()}), 0,
+        "The pos() of the line is set at the right value."
+    );
 }

changeset:   391:71fd7ff4b315
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 21 20:12:19 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
description:
Started adding t/base/line-iterator-unit.t to unit test LineIterator.


diff -r faea679d0d55 -r 71fd7ff4b315 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Jun 08 16:08:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Jun 21 20:12:19 2011 +0000
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add t/base/line-iterator-unit.t to provide unit-tests for
+        XML::Grammar::FictionBase::FromProto::Parser::LineIterator .
+
 0.8.0       Wed Jun  8 19:04:57 IDT 2011
     * <blockquote> now supports xml:id and xml:lang.
     * Fiction-Text: a plus sign ( + ) at the starting line of the paragraph
diff -r faea679d0d55 -r 71fd7ff4b315 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Jun 08 16:08:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Jun 21 20:12:19 2011 +0000
@@ -60,6 +60,7 @@
 t/00-load.t
 tag-release.pl
 t/app-to-html.t
+t/base/line-iterator-unit.t
 t/boilerplate.t
 t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml
 t/fiction/data/docbook/sections-a-href.docbook.xml
diff -r faea679d0d55 -r 71fd7ff4b315 perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/base/line-iterator-unit.t	Tue Jun 21 20:12:19 2011 +0000
@@ -0,0 +1,94 @@
+use strict;
+use warnings;
+
+use utf8;
+
+use Test::More tests => 1;
+
+use XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
+
+{
+    # Taken from:
+    # Project Gutenberg - The Adventures of Sherlock Holmes by
+    # Sir Arthur Conan Doyle.
+    # http://www.gutenberg.org/files/1661/1661-h/1661-h.htm#2
+    my $text = <<"EOF"; 
+I had called upon my friend, Mr. Sherlock Holmes, one day in the autumn of
+last year and found him in deep conversation with a very stout,
+florid-faced, elderly gentleman with fiery red hair. With an apology for my
+intrusion, I was about to withdraw when Holmes pulled me abruptly into the
+room and closed the door behind me.
+
+“You could not possibly have come at a better time, my dear Watson,” he said
+cordially.
+
+“I was afraid that you were engaged.”
+
+“So I am. Very much so.”
+
+“Then I can wait in the next room.”
+
+“Not at all. This gentleman, Mr. Wilson, has been my partner and helper in many
+of my most successful cases, and I have no doubt that he will be of the utmost
+use to me in yours also.”
+
+The stout gentleman half rose from his chair and gave a bob of greeting, with a
+quick little questioning glance from his small fat-encircled eyes.
+
+“Try the settee,” said Holmes, relapsing into his armchair and putting his
+fingertips together, as was his custom when in judicial moods. “I know, my dear
+Watson, that you share my love of all that is bizarre and outside the
+conventions and humdrum routine of everyday life. You have shown your relish
+for it by the enthusiasm which has prompted you to chronicle, and, if you will
+excuse my saying so, somewhat to embellish so many of my own little
+adventures.”
+
+“Your cases have indeed been of the greatest interest to me,” I observed.
+
+“You will remember that I remarked the other day, just before we went into the
+very simple problem presented by Miss Mary Sutherland, that for strange effects
+    and extraordinary combinations we must go to life itself, which is always
+far more daring than any effort of the imagination.”
+
+“A proposition which I took the liberty of doubting.”
+
+“You did, Doctor, but none the less you must come round to my view, for
+otherwise I shall keep on piling fact upon fact on you until your reason breaks
+down under them and acknowledges me to be right. Now, Mr. Jabez Wilson here has
+been good enough to call upon me this morning, and to begin a narrative which
+promises to be one of the most singular which I have listened to for some time.
+You have heard me remark that the strangest and most unique things are very
+often connected not with the larger but with the smaller crimes, and
+occasionally, indeed, where there is room for doubt whether any positive crime
+has been committed. As far as I have heard, it is impossible for me to say
+whether the present case is an instance of crime or not, but the course of
+events is certainly among the most singular that I have ever listened to.
+Perhaps, Mr. Wilson, you would have the great kindness to recommence your
+narrative. I ask you not merely because my friend Dr. Watson has not heard the
+opening part but also because the peculiar nature of the story makes me anxious
+to have every possible detail from your lips. As a rule, when I have heard some
+slight indication of the course of events, I am able to guide myself by the
+thousands of other similar cases which occur to my memory. In the present
+instance I am forced to admit that the facts are, to the best of my belief,
+unique.”
+
+The portly client puffed out his chest with an appearance of some little pride
+and pulled a dirty and wrinkled newspaper from the inside pocket of his
+greatcoat. As he glanced down the advertisement column, with his head thrust
+forward and the paper flattened out upon his knee, I took a good look at the
+man and endeavoured, after the fashion of my companion, to read the indications
+which might be presented by his dress or appearance. 
+
+EOF
+
+    my $parser =
+        XML::Grammar::FictionBase::FromProto::Parser::LineIterator->new;
+
+    $parser->setup_text($text);
+
+    # TEST
+    is (${$parser->curr_line_ref()},
+        qq{I had called upon my friend, Mr. Sherlock Holmes, one day in the autumn of\n},
+        "curr_line_ref() returns the right value.",
+    );
+}

changeset:   390:faea679d0d55
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 16:08:05 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.8.0


diff -r eb047ae84d26 -r faea679d0d55 .hgtags
--- a/.hgtags	Wed Jun 08 16:07:17 2011 +0000
+++ b/.hgtags	Wed Jun 08 16:08:05 2011 +0000
@@ -18,3 +18,4 @@
 a2590537909f3f4f7ca5cb7cb8de358e9d33af77 releases/0.5.1
 fbc86b17ee9576a04a53e4ccf9870ac9290aa2c2 releases/0.6.0
 76728a39472a905f1b5fd893fe0177c798e3f454 releases/0.7.0
+eb047ae84d26100ab0d04729ee7a1abf7d63ac3c releases/0.8.0

changeset:   389:eb047ae84d26
tag:         releases/0.8.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 16:07:17 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.8.0.


diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Jun 08 16:07:17 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.8.0       Wed Jun  8 19:04:57 IDT 2011
     * <blockquote> now supports xml:id and xml:lang.
     * Fiction-Text: a plus sign ( + ) at the starting line of the paragraph
     now indicates that the following tag is a style tag.
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 use Exception::Class
     (
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 AUTHOR
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head1 SYNOPSIS
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =cut
 
-our $VERSION = '0.7.0';
+our $VERSION = '0.8.0';
 
 =head2 new()
 
diff -r d92dcfc76f43 -r eb047ae84d26 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Jun 08 16:04:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed Jun 08 16:07:17 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.7.0
+Version 0.8.0
 
 =head1 AUTHOR
 

changeset:   388:d92dcfc76f43
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 16:04:37 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t perl/modules/XML-Grammar-Fiction/scripts/run_agg_tests.t
description:
Rename the 'script' directory into 'scripts'.


diff -r 56f0c090ce6f -r d92dcfc76f43 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Jun 08 15:40:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Jun 08 16:04:37 2011 +0000
@@ -56,7 +56,7 @@
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
-script/run_agg_tests.t
+scripts/run_agg_tests.t
 t/00-load.t
 tag-release.pl
 t/app-to-html.t
diff -r 56f0c090ce6f -r d92dcfc76f43 perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t
--- a/perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t	Wed Jun 08 15:40:58 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,20 +0,0 @@
-# run_agg_tests.t - run the tests under t/ while aggregated to make them
-# run faster.
-#
-# Moose takes a while to load sometimes and it needs to be loaded for every
-# script when ran under ./Build runtest.
-
-use strict;
-use warnings;
-use Test::Aggregate;
-use FindBin qw($Bin);
-use Path::Class;
-use lib dir($Bin)->parent->subdir(qw(t lib))->stringify;
-
-my $aggregate_test_dir = dir($Bin)->parent->subdir('t')->stringify;
-# need set_filenames to auto-load fixtures correctly
-my $tests = Test::Aggregate
-    ->new( { dirs => $aggregate_test_dir, set_filenames => 1, verbose => 0,} );
-$tests->run;
-
-done_testing;
diff -r 56f0c090ce6f -r d92dcfc76f43 perl/modules/XML-Grammar-Fiction/scripts/run_agg_tests.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/scripts/run_agg_tests.t	Wed Jun 08 16:04:37 2011 +0000
@@ -0,0 +1,20 @@
+# run_agg_tests.t - run the tests under t/ while aggregated to make them
+# run faster.
+#
+# Moose takes a while to load sometimes and it needs to be loaded for every
+# script when ran under ./Build runtest.
+
+use strict;
+use warnings;
+use Test::Aggregate;
+use FindBin qw($Bin);
+use Path::Class;
+use lib dir($Bin)->parent->subdir(qw(t lib))->stringify;
+
+my $aggregate_test_dir = dir($Bin)->parent->subdir('t')->stringify;
+# need set_filenames to auto-load fixtures correctly
+my $tests = Test::Aggregate
+    ->new( { dirs => $aggregate_test_dir, set_filenames => 1, verbose => 0,} );
+$tests->run;
+
+done_testing;

changeset:   387:56f0c090ce6f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 15:40:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
description:
Add an example to XML-Grammar-Screenplay.


diff -r 06050eb7f081 -r 56f0c090ce6f perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Jun 08 15:24:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Jun 08 15:40:58 2011 +0000
@@ -5,6 +5,9 @@
     now indicates that the following tag is a style tag.
     * lib/XML/Grammar/Fiction.pm - add a comprehensive example to the POD
     itself.
+    * Consolidated the lib/XML/Grammar/Fiction.pm 's todo into the C<TODO>
+    file.
+    * lib/XML/Grammar/Screenplay.pm - add an example in the code.
 
 0.7.0       Wed May 25 12:47:13 IDT 2011
     * Add support for the lang="..." attribute of <body> in Fiction-Text which
diff -r 06050eb7f081 -r 56f0c090ce6f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Jun 08 15:24:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Jun 08 15:40:58 2011 +0000
@@ -114,7 +114,46 @@
 
 =head2 EXAMPLES
 
-Examples can be found in the C<t/data> directory, and here:
+=head3 Comprehensive Example
+
+    <s id="top">
+
+    <s id="david_and_goliath">
+
+    [David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+    standing by each other.]
+
+    David: I will kill you.
+
+    Goliath: no way, you little idiot!
+
+    David: yes way!
+
+    ++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+    <b>merciful</b>, real merciful</a>, I will show you
+    the [sarcastically] power of my sling. 
+
+    ++: I shall sling you and bing you till infinity.
+
+    [David takes his sling.]
+
+    Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+    David: so you are.
+
+    [David puts a stone in his sling and shoots Goliath. He hits.]
+
+    David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
+    Wiki site</a> for more information], you are now dead, having been shot with
+    my sling.
+
+    </s>
+
+    </s>
+
+=head3 More Examples
+
+Other examples can be found in the C<t/data> directory, and here:
 
 =over 4
 

changeset:   386:06050eb7f081
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 15:24:37 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TODO perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Consolidated the TODOs into the "/TODO" file.


diff -r 2009c5bb190d -r 06050eb7f081 perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Wed Jun 08 15:08:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Wed Jun 08 15:24:37 2011 +0000
@@ -1,3 +1,11 @@
+* ::Fiction: Implement the correct handling of leading special characters in
+lines. Currently, they are processed as they are, without generating an error.
+
+* Convert the parsing errors from Carp::confess to Exception::Class
+
+This will allow a friendlier diagnostic. Carp::confess was implemented due to
+laziness on the programmers' part.
+
 * ::Fiction : add a feature for a formatting tag at the beginning of a 
 paragraph, that will not be mistaken for a top-level tag:
 
diff -r 2009c5bb190d -r 06050eb7f081 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Jun 08 15:08:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Jun 08 15:24:37 2011 +0000
@@ -187,30 +187,6 @@
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
-=head1 TODO
-
-=over 4
-
-=item * Implement the correct handling of leading special characters in lines.
-
-=item * Check that SGML entities work properly.
-
-=item * Convert the parsing errors from Carp::confess to Exception::Class
-
-This will allow a friendlier diagnostic. Carp::confess was implemented due to
-laziness on the programmers' part.
-
-=item * Merge the duplicate code from XML-Grammar-Fiction
-
-XML::Grammar::Fiction was forked from L<XML::Grammar::Screenplay>
-and they still share a lot of common code. This needs to be merged in time.
-
-=item * Refactor the Prototext parser and other parts.
-
-Currently the code is relatively hairy and easy-to-break. Try to refactor it.
-
-=back
-
 =head1 MOTIVATION
 
 I (= Shlomi Fish) originated this CPAN distribution (after forking 

changeset:   385:2009c5bb190d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 15:08:46 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
description:
Remove an unused TODO section.


diff -r f814296aa80c -r 2009c5bb190d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Jun 08 15:04:23 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Jun 08 15:08:46 2011 +0000
@@ -155,14 +155,6 @@
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
-=head1 TODO
-
-=over 4
-
-=item * Empty
-
-=back
-
 =head1 SUPPORT
 
 You can find documentation for this module with the perldoc command.

changeset:   384:f814296aa80c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Jun 08 15:04:23 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Add example.


diff -r 5d0ba8a4ab78 -r f814296aa80c perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Jun 07 22:30:52 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Jun 08 15:04:23 2011 +0000
@@ -3,6 +3,8 @@
     * <blockquote> now supports xml:id and xml:lang.
     * Fiction-Text: a plus sign ( + ) at the starting line of the paragraph
     now indicates that the following tag is a style tag.
+    * lib/XML/Grammar/Fiction.pm - add a comprehensive example to the POD
+    itself.
 
 0.7.0       Wed May 25 12:47:13 IDT 2011
     * Add support for the lang="..." attribute of <body> in Fiction-Text which
diff -r 5d0ba8a4ab78 -r f814296aa80c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jun 07 22:30:52 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Jun 08 15:04:23 2011 +0000
@@ -3,6 +3,8 @@
 use warnings;
 use strict;
 
+=encoding utf8
+
 =head1 NAME
 
 XML::Grammar::Fiction - CPAN distribution implementing an XML grammar 
@@ -127,6 +129,42 @@
 
 =head2 EXAMPLES
 
+=head3 Examples Document.
+
+    <body id="index" lang="en-UK">
+
+    <title>David vs. Goliath - Part I</title>
+
+    <s id="top">
+
+    <title>The Top Section</title>
+
+    <!-- David has Green hair here -->
+
+    King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath
+    were standing by each other.
+
+    David said unto Goliath: “I will shoot you. I <b>swear</b> I will”
+
+    <s id="goliath">
+
+    <title>Goliath's Response</title>
+
+    <!-- Goliath has to reply to that. -->
+
+    Goliath was not amused.
+
+    He said to David: “Oh, really. <i>David</i>, the red-headed!”.
+
+    </s>
+
+    </s>
+
+    </body>
+
+
+=head3 Other Examples
+
 Examples can be found in the C<t/data> directory, and here:
 
 =over 4

changeset:   383:5d0ba8a4ab78
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 07 22:30:52 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
description:
Add support for \n\n+<b>Style here</b> Rest of paragraph.

Opening line at the beginning .


diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Jun 07 22:30:52 2011 +0000
@@ -1,6 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
     * <blockquote> now supports xml:id and xml:lang.
+    * Fiction-Text: a plus sign ( + ) at the starting line of the paragraph
+    now indicates that the following tag is a style tag.
 
 0.7.0       Wed May 25 12:47:13 IDT 2011
     * Add support for the lang="..." attribute of <body> in Fiction-Text which
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Jun 07 22:30:52 2011 +0000
@@ -91,6 +91,7 @@
 t/fiction/data/proto-text/with-internal-description.txt
 t/fiction/data/proto-text/with-programlisting.txt
 t/fiction/data/proto-text/with-span.txt
+t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt
 t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/proto-text/with-xml-lang-attribute.txt
 t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
@@ -104,6 +105,7 @@
 t/fiction/data/xml/with-blockquote.xml
 t/fiction/data/xml/with-programlisting.xml
 t/fiction/data/xml/with-span.xml
+t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml
 t/fiction/data/xml/with-ul-ol-li.xml
 t/fiction/data/xml/with-xml-lang-attribute.xml
 t/fiction/data/xml/with-xml-lang-attr-in-section.xml
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jun 07 22:30:52 2011 +0000
@@ -114,7 +114,8 @@
 =head3 Paragraphs
 
 These are not delimited by anything - just a paragraph of text not containing
-an empty line.
+an empty line. If a paragraph starts with a Plus sign ( C<+> ) then it is 
+immediately expected to be followed by a styling tag (as opposed to a 
 
 =head3 <ol>
 
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Jun 07 22:30:52 2011 +0000
@@ -49,7 +49,11 @@
         "XML::Grammar::Fiction::Err::Parse::ProgramListingContainsTags" =>
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
-        }
+        },
+        "XML::Grammar::Fiction::Err::Parse::ParaOpenPlusNotFollowedByTag" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Parse::LineError",
+        },
     )
     ;
 1;
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Jun 07 22:30:52 2011 +0000
@@ -93,6 +93,13 @@
 
 extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
 
+sub get_text
+{
+    my ($self, $re) = @_;
+
+    return $self->children->contents->[0];
+}
+
 package XML::Grammar::Fiction::FromProto::Node::Saying;
 
 use Moose;
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Jun 07 22:30:52 2011 +0000
@@ -59,11 +59,26 @@
         $in_para = 1;
     }
 
-    $self->_enqueue_event(
-        XML::Grammar::FictionBase::Event->new(
-            {type => "elem", elem => $elem}
-        )
-    );
+    if (my ($rest) = $elem->get_text() =~ m{\A\+(.*)}ms)
+    {
+        if ( length($rest) )
+        {
+            $self->throw_text_error(
+                'XML::Grammar::Fiction::Err::Parse::ParaOpenPlusNotFollowedByTag',
+                "Got a paragraph opening plus sign not followed by a tag.",
+            );
+        }
+        # Else - do nothing - just ignore the + sign before the
+        # style tag.
+    }
+    else
+    {
+        $self->_enqueue_event(
+            XML::Grammar::FictionBase::Event->new(
+                {type => "elem", elem => $elem}
+            )
+        );
+    }
 
     if ($is_para_end && $in_para)
     {
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-style-tag-at-start-of-paragraph.txt	Tue Jun 07 22:30:52 2011 +0000
@@ -0,0 +1,27 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
++<b>He</b> said to David: "Oh, really. <i>David</i>, the red-headed!".
+And Goliath was lying.
+
+</s>
+
+</s>
+
+</body>
+
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-style-tag-at-start-of-paragraph.xml	Tue Jun 07 22:30:52 2011 +0000
@@ -0,0 +1,27 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    <b>He</b> said to David: "Oh, really. <i>David</i>, the red-headed!".
+    And Goliath was lying.
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r 688557fc30ae -r 5d0ba8a4ab78 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue Jun 07 21:47:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue Jun 07 22:30:52 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 27;
+use Test::More tests => 29;
 
 use Test::XML;
 
@@ -41,9 +41,10 @@
     with-span
     a-href-with-id-and-lang
     with-blockquote-with-lang-and-id
+    with-style-tag-at-start-of-paragraph
     ));
 
-# TEST:$num_texts=13
+# TEST:$num_texts=14
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   382:688557fc30ae
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 07 21:47:55 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Fix a typo.


diff -r 7578f083b7ce -r 688557fc30ae perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jun 07 21:38:40 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Jun 07 21:47:55 2011 +0000
@@ -152,7 +152,7 @@
 
 =over 4
 
-=item * Implement the correct handlind of leading special characters in lines.
+=item * Implement the correct handling of leading special characters in lines.
 
 =item * Check that SGML entities work properly.
 

changeset:   381:7578f083b7ce
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Jun 07 21:38:40 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TODO perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t
description:
Add an item to the TODO .


diff -r eee09ea31b19 -r 7578f083b7ce perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Sat May 28 12:35:50 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Tue Jun 07 21:38:40 2011 +0000
@@ -1,3 +1,12 @@
+* ::Fiction : add a feature for a formatting tag at the beginning of a 
+paragraph, that will not be mistaken for a top-level tag:
+
+[QUOTE]
+
++<b>Hello</b>: There.
+
+[/QUOTE]
+
 * Write unit tests for LineIterator.pm.
 
 * Add more necessary tags and features.
diff -r eee09ea31b19 -r 7578f083b7ce perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t
--- a/perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t	Sat May 28 12:35:50 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t	Tue Jun 07 21:38:40 2011 +0000
@@ -14,7 +14,7 @@
 my $aggregate_test_dir = dir($Bin)->parent->subdir('t')->stringify;
 # need set_filenames to auto-load fixtures correctly
 my $tests = Test::Aggregate
-    ->new( { dirs => $aggregate_test_dir, set_filenames => 1} );
+    ->new( { dirs => $aggregate_test_dir, set_filenames => 1, verbose => 0,} );
 $tests->run;
 
 done_testing;

changeset:   380:eee09ea31b19
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 28 12:35:50 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
[XSLT] Convert the remainaing tags to the db: prefix.


diff -r a0301c6f8a16 -r eee09ea31b19 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 28 12:34:36 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 28 12:35:50 2011 +0000
@@ -119,10 +119,10 @@
     <xsl:variable name="tag_name">
         <xsl:choose>
             <xsl:when test="@xlink:href">
-                <xsl:value-of select="'link'" />
+                <xsl:value-of select="'db:link'" />
             </xsl:when>
             <xsl:otherwise>
-                <xsl:value-of select="'phrase'" />
+                <xsl:value-of select="'db:phrase'" />
             </xsl:otherwise>
         </xsl:choose>
     </xsl:variable>

changeset:   379:a0301c6f8a16
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 28 12:34:36 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
Converted most of the DocBook 5 tags to the db: namespace.

This is in preparation of preparing a TEI stylesheet.


diff -r 6ac912176ab7 -r a0301c6f8a16 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 28 12:30:23 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 28 12:34:36 2011 +0000
@@ -22,11 +22,11 @@
             <xsl:value-of select="@xml:lang" />
         </xsl:attribute>
         <xsl:attribute name="version">5.0</xsl:attribute>
-        <info>
-            <title>
+        <db:info>
+            <db:title>
                 <xsl:value-of select="fic:title" />
-            </title>
-        </info>
+            </db:title>
+        </db:info>
         <xsl:apply-templates select="fic:section" />
     </article>
 </xsl:template>
@@ -38,32 +38,32 @@
             <xsl:copy-of select="@xml:lang" />
         </xsl:if>
         <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <info>
-        <title>
-            <xsl:choose>
-                <xsl:when test="fic:title">
-                    <xsl:value-of select="fic:title" />
-                </xsl:when>
-                <xsl:otherwise>
-                    <xsl:value-of select="@xml:id" />
-                </xsl:otherwise>
-            </xsl:choose> 
-        </title>
-    </info>
+        <db:info>
+            <db:title>
+                <xsl:choose>
+                    <xsl:when test="fic:title">
+                        <xsl:value-of select="fic:title" />
+                    </xsl:when>
+                    <xsl:otherwise>
+                        <xsl:value-of select="@xml:id" />
+                    </xsl:otherwise>
+                </xsl:choose> 
+            </db:title>
+        </db:info>
         <xsl:apply-templates select="fic:section|fic:blockquote|fic:p|fic:ol|fic:ul|fic:programlisting" />
     </section>
 </xsl:template>
 
 <xsl:template match="fic:p">
-    <para>
+    <db:para>
         <xsl:apply-templates />
-    </para>
+    </db:para>
 </xsl:template>
 
 <xsl:template match="fic:b">
-    <emphasis role="bold">
+    <db:emphasis role="bold">
         <xsl:apply-templates/>
-    </emphasis>
+    </db:emphasis>
 </xsl:template>
 
 <xsl:template name="common_attributes">
@@ -79,40 +79,40 @@
 </xsl:template>
 
 <xsl:template match="fic:blockquote">
-    <blockquote>
+    <db:blockquote>
         <xsl:call-template name="common_attributes" />
         <xsl:apply-templates/>
-    </blockquote>
+    </db:blockquote>
 </xsl:template>
 
 <xsl:template match="fic:i">
-    <emphasis>
+    <db:emphasis>
         <xsl:apply-templates/>
-    </emphasis>
+    </db:emphasis>
 </xsl:template>
 
 <xsl:template match="fic:ol">
-    <orderedlist>
+    <db:orderedlist>
         <xsl:apply-templates/>
-    </orderedlist>
+    </db:orderedlist>
 </xsl:template>
 
 <xsl:template match="fic:ul">
-    <itemizedlist>
+    <db:itemizedlist>
         <xsl:apply-templates/>
-    </itemizedlist>
+    </db:itemizedlist>
 </xsl:template>
 
 <xsl:template match="fic:programlisting">
-    <programlisting>
+    <db:programlisting>
         <xsl:apply-templates/>
-    </programlisting>
+    </db:programlisting>
 </xsl:template>
 
 <xsl:template match="fic:li">
-    <listitem>
+    <db:listitem>
         <xsl:apply-templates/>
-    </listitem>
+    </db:listitem>
 </xsl:template>
 
 <xsl:template match="fic:span">

changeset:   378:6ac912176ab7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 28 12:30:23 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
[XSLT] Add an explicit db: namespace for the DocBook.


diff -r 53f4b16f4fbe -r 6ac912176ab7 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 27 20:09:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 28 12:30:23 2011 +0000
@@ -3,6 +3,7 @@
     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
     xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
     xmlns="http://docbook.org/ns/docbook"
+    xmlns:db="http://docbook.org/ns/docbook"
     xmlns:xlink="http://www.w3.org/1999/xlink">
 
 <xsl:output method="xml" encoding="UTF-8" indent="yes"

changeset:   377:53f4b16f4fbe
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 27 20:09:37 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t
description:
Add run_agg_tests.t to run the tests using Test::Aggregate.


diff -r ebd2fe4ebe26 -r 53f4b16f4fbe perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 27 17:05:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 27 20:09:37 2011 +0000
@@ -56,6 +56,7 @@
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
+script/run_agg_tests.t
 t/00-load.t
 tag-release.pl
 t/app-to-html.t
diff -r ebd2fe4ebe26 -r 53f4b16f4fbe perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/script/run_agg_tests.t	Fri May 27 20:09:37 2011 +0000
@@ -0,0 +1,20 @@
+# run_agg_tests.t - run the tests under t/ while aggregated to make them
+# run faster.
+#
+# Moose takes a while to load sometimes and it needs to be loaded for every
+# script when ran under ./Build runtest.
+
+use strict;
+use warnings;
+use Test::Aggregate;
+use FindBin qw($Bin);
+use Path::Class;
+use lib dir($Bin)->parent->subdir(qw(t lib))->stringify;
+
+my $aggregate_test_dir = dir($Bin)->parent->subdir('t')->stringify;
+# need set_filenames to auto-load fixtures correctly
+my $tests = Test::Aggregate
+    ->new( { dirs => $aggregate_test_dir, set_filenames => 1} );
+$tests->run;
+
+done_testing;

changeset:   376:ebd2fe4ebe26
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 27 17:05:51 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
XSLT Refactoring - extract the common_atttributes <xsl:template />.


diff -r 3e593107d9e3 -r ebd2fe4ebe26 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 27 16:54:19 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 27 17:05:51 2011 +0000
@@ -65,17 +65,21 @@
     </emphasis>
 </xsl:template>
 
+<xsl:template name="common_attributes">
+    <xsl:if test="@xlink:href">
+        <xsl:copy-of select="@xlink:href" />
+    </xsl:if>
+    <xsl:if test="@xml:lang">
+        <xsl:copy-of select="@xml:lang" />
+    </xsl:if>
+    <xsl:if test="@xml:id">
+        <xsl:copy-of select="@xml:id" />
+    </xsl:if>
+</xsl:template>
+
 <xsl:template match="fic:blockquote">
     <blockquote>
-        <xsl:if test="@xlink:href">
-            <xsl:copy-of select="@xlink:href" />
-        </xsl:if>
-        <xsl:if test="@xml:lang">
-            <xsl:copy-of select="@xml:lang" />
-        </xsl:if>
-        <xsl:if test="@xml:id">
-            <xsl:copy-of select="@xml:id" />
-        </xsl:if>
+        <xsl:call-template name="common_attributes" />
         <xsl:apply-templates/>
     </blockquote>
 </xsl:template>
@@ -122,15 +126,7 @@
         </xsl:choose>
     </xsl:variable>
     <xsl:element name="{$tag_name}">
-        <xsl:if test="@xlink:href">
-            <xsl:copy-of select="@xlink:href" />
-        </xsl:if>
-        <xsl:if test="@xml:lang">
-            <xsl:copy-of select="@xml:lang" />
-        </xsl:if>
-        <xsl:if test="@xml:id">
-            <xsl:copy-of select="@xml:id" />
-        </xsl:if>
+        <xsl:call-template name="common_attributes" />
         <xsl:apply-templates/>
     </xsl:element>
 </xsl:template>

changeset:   375:3e593107d9e3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 27 16:54:19 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Add support for id=".." and lang="..." into <blockquote>.


diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri May 27 16:54:19 2011 +0000
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * <blockquote> now supports xml:id and xml:lang.
+
 0.7.0       Wed May 25 12:47:13 IDT 2011
     * Add support for the lang="..." attribute of <body> in Fiction-Text which
     would be translated to <body xml:lang=".."> attribute in Fiction-XML (and
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 27 16:54:19 2011 +0000
@@ -65,6 +65,7 @@
 t/fiction/data/docbook/sections-and-paras.docbook.xml
 t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
 t/fiction/data/docbook/with-blockquote.docbook.xml
+t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml
 t/fiction/data/docbook/with-internal-description.docbook.xml
 t/fiction/data/docbook/with-programlisting.docbook.xml
 t/fiction/data/docbook/with-span.docbook.xml
@@ -85,6 +86,7 @@
 t/fiction/data/proto-text/sections-p-b-i-comments.txt
 t/fiction/data/proto-text/sections-p-b-i.txt
 t/fiction/data/proto-text/with-blockquote.txt
+t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt
 t/fiction/data/proto-text/with-internal-description.txt
 t/fiction/data/proto-text/with-programlisting.txt
 t/fiction/data/proto-text/with-span.txt
@@ -97,6 +99,7 @@
 t/fiction/data/xml/sections-and-paras.xml
 t/fiction/data/xml/sections-p-b-i-comments.xml
 t/fiction/data/xml/sections-p-b-i.xml
+t/fiction/data/xml/with-blockquote-with-lang-and-id.xml
 t/fiction/data/xml/with-blockquote.xml
 t/fiction/data/xml/with-programlisting.xml
 t/fiction/data/xml/with-span.xml
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 27 16:54:19 2011 +0000
@@ -67,6 +67,15 @@
 
 <xsl:template match="fic:blockquote">
     <blockquote>
+        <xsl:if test="@xlink:href">
+            <xsl:copy-of select="@xlink:href" />
+        </xsl:if>
+        <xsl:if test="@xml:lang">
+            <xsl:copy-of select="@xml:lang" />
+        </xsl:if>
+        <xsl:if test="@xml:id">
+            <xsl:copy-of select="@xml:id" />
+        </xsl:if>
         <xsl:apply-templates/>
     </blockquote>
 </xsl:template>
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri May 27 16:54:19 2011 +0000
@@ -78,6 +78,7 @@
     </define>
     <define name="blockquote">
         <element name="fic:blockquote">
+            <ref name="common_attrs" />
             <ref name="several_paras"/>
         </element>
     </define>
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 27 16:54:19 2011 +0000
@@ -171,11 +171,12 @@
 {
     my ($self, $elem) = @_;
 
-    $self->_output_tag_with_childs(
+    $self->_output_tag_with_childs_and_common_attributes(
+        $elem,
+        'blockquote',
         {
-            start => ['blockquote'],
-            elem => $elem,
-        }
+            optional_id => 1,
+        },
     );
 
     return;
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote-with-lang-and-id.docbook.xml	Fri May 27 16:54:19 2011 +0000
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    <para>
+    David started listing Goliath's disadvantages:
+    </para>
+    <blockquote xml:lang="fr-FR" xml:id="my_blockquote">
+    <orderedlist>
+    <listitem>
+    <para>
+    You're slow.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    You're big.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    You're stupid.
+    </para>
+    </listitem>
+    </orderedlist>
+    <para>
+    Goliath was insulted and told David he should use bullets for the
+    points, instead:
+    </para>
+    <itemizedlist>
+    <listitem>
+    <para>
+    David.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Saul.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Jonathan.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Michal.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Meyrav.
+    </para>
+    </listitem>
+    </itemizedlist>
+    </blockquote>
+    </section>
+  </section>
+</article>
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote-with-lang-and-id.txt	Fri May 27 16:54:19 2011 +0000
@@ -0,0 +1,95 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+David started listing Goliath's disadvantages:
+
+<blockquote lang="fr-FR" id="my_blockquote">
+
+<ol>
+
+<li>
+
+You're slow.
+
+</li>
+
+<li>
+
+You're big.
+
+</li>
+
+<li>
+
+You're stupid.
+
+</li>
+
+</ol>
+
+Goliath was insulted and told David he should use bullets for the points, 
+instead:
+
+<ul>
+
+<li>
+
+David.
+
+</li>
+
+<li>
+
+Saul.
+
+</li>
+
+<li>
+
+Jonathan.
+
+</li>
+
+<li>
+
+Michal.
+
+</li>
+
+<li>
+
+Meyrav.
+
+</li>
+
+</ul>
+
+</blockquote>
+
+</s>
+
+</s>
+
+</body>
+
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote-with-lang-and-id.xml	Fri May 27 16:54:19 2011 +0000
@@ -0,0 +1,81 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    <p>
+    David started listing Goliath's disadvantages:
+    </p>
+    <blockquote xml:lang="fr-FR" xml:id="my_blockquote">
+    <ol>
+    <li>
+    <p>
+    You're slow.
+    </p>
+    </li>
+    <li>
+    <p>
+    You're big.
+    </p>
+    </li>
+    <li>
+    <p>
+    You're stupid.
+    </p>
+    </li>
+    </ol>
+    <p>
+    Goliath was insulted and told David he should use bullets for the
+    points, instead:
+    </p>
+    <ul>
+    <li>
+    <p>
+    David.
+    </p>
+    </li>
+    <li>
+    <p>
+    Saul.
+    </p>
+    </li>
+    <li>
+    <p>
+    Jonathan.
+    </p>
+    </li>
+    <li>
+    <p>
+    Michal.
+    </p>
+    </li>
+    <li>
+    <p>
+    Meyrav.
+    </p>
+    </li>
+    </ul>
+    </blockquote>
+    </section>
+    </section>
+</body>
+</document>
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Fri May 27 16:54:19 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 25;
+use Test::More tests => 27;
 
 use Test::XML;
 
@@ -40,9 +40,10 @@
     with-xml-lang-attr-in-section
     with-span
     a-href-with-id-and-lang
+    with-blockquote-with-lang-and-id
     ));
 
-# TEST:$num_texts=12
+# TEST:$num_texts=13
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
diff -r 39002c465157 -r 3e593107d9e3 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Wed May 25 09:50:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Fri May 27 16:54:19 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 30;
+use Test::XML tests => 33;
 
 use File::Spec;
 
@@ -24,6 +24,7 @@
         with-xml-lang-attr-in-section
         with-span
         a-href-with-id-and-lang
+        with-blockquote-with-lang-and-id
     ));
 
 sub load_xml
@@ -41,7 +42,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=10
+# TEST:$num_texts=11
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   374:39002c465157
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 25 09:50:44 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.7.0


diff -r 76728a39472a -r 39002c465157 .hgtags
--- a/.hgtags	Wed May 25 09:49:38 2011 +0000
+++ b/.hgtags	Wed May 25 09:50:44 2011 +0000
@@ -17,3 +17,4 @@
 b77a7f06f9fa00b284bf95607fbea5c58de1b574 releases/0.5.0
 a2590537909f3f4f7ca5cb7cb8de358e9d33af77 releases/0.5.1
 fbc86b17ee9576a04a53e4ccf9870ac9290aa2c2 releases/0.6.0
+76728a39472a905f1b5fd893fe0177c798e3f454 releases/0.7.0

changeset:   373:76728a39472a
tag:         releases/0.7.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 25 09:49:38 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.7.0.


diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed May 25 09:49:38 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.7.0       Wed May 25 12:47:13 IDT 2011
     * Add support for the lang="..." attribute of <body> in Fiction-Text which
     would be translated to <body xml:lang=".."> attribute in Fiction-XML (and
     eventually to DocBook 5/XML).
@@ -11,7 +12,7 @@
     * Bumped the testing dependencies for Test::XML version '0.08' and
     XML::SemanticDiff '1.0000' - the test failed otherwise.
 
-0.6.0      Mon May 23 22:59:05 IDT 2011
+0.6.0       Mon May 23 22:59:05 IDT 2011
     * Add the version="5.0" attribute to the top-level tag of the
     DocBook 5/XML generated by extradata/fiction-xml-to-docbook.xslt .
     * Got rid of leftover files in t/fiction/data that were not used
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed May 25 09:49:38 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed May 25 09:49:38 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed May 25 09:49:38 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed May 25 09:49:38 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed May 25 09:49:38 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 use Exception::Class
     (
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed May 25 09:49:38 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed May 25 09:49:38 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed May 25 09:49:38 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 AUTHOR
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed May 25 09:49:38 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed May 25 09:49:38 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed May 25 09:49:38 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed May 25 09:49:38 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Wed May 25 09:49:38 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Wed May 25 09:49:38 2011 +0000
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed May 25 09:49:38 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed May 25 09:49:38 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed May 25 09:49:38 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head1 SYNOPSIS
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed May 25 09:49:38 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed May 25 09:49:38 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed May 25 09:49:38 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed May 25 09:49:38 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =cut
 
-our $VERSION = '0.6.0';
+our $VERSION = '0.7.0';
 
 =head2 new()
 
diff -r aaca8156f4ed -r 76728a39472a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed May 25 09:45:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed May 25 09:49:38 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.6.0
+Version 0.7.0
 
 =head1 AUTHOR
 

changeset:   372:aaca8156f4ed
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 25 09:45:25 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
XSLT refactoring: convert more to <xsl:copy-of / >.


diff -r 58a0ab243525 -r aaca8156f4ed perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:41:19 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:45:25 2011 +0000
@@ -32,13 +32,9 @@
 
 <xsl:template match="fic:section">
     <section>
-        <xsl:attribute name="xml:id">
-            <xsl:value-of select="@xml:id" />
-        </xsl:attribute>
+        <xsl:copy-of select="@xml:id" />
         <xsl:if test="@xml:lang">
-            <xsl:attribute name="xml:lang">
-                <xsl:value-of select="@xml:lang" />
-            </xsl:attribute>
+            <xsl:copy-of select="@xml:lang" />
         </xsl:if>
         <!-- Make the title the title attribute or "ID" if does not exist. -->
         <info>

changeset:   371:58a0ab243525
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 25 09:41:19 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
XSLT Refactoring: Convert to <xsl:copy-of>.


diff -r 203e3bdb2178 -r 58a0ab243525 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:37:29 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:41:19 2011 +0000
@@ -118,19 +118,13 @@
     </xsl:variable>
     <xsl:element name="{$tag_name}">
         <xsl:if test="@xlink:href">
-            <xsl:attribute name="xlink:href">
-                <xsl:value-of select="@xlink:href" />
-            </xsl:attribute>
+            <xsl:copy-of select="@xlink:href" />
         </xsl:if>
         <xsl:if test="@xml:lang">
-            <xsl:attribute name="xml:lang">
-                <xsl:value-of select="@xml:lang" />
-            </xsl:attribute>
+            <xsl:copy-of select="@xml:lang" />
         </xsl:if>
         <xsl:if test="@xml:id">
-            <xsl:attribute name="xml:id">
-                <xsl:value-of select="@xml:id" />
-            </xsl:attribute>
+            <xsl:copy-of select="@xml:id" />
         </xsl:if>
         <xsl:apply-templates/>
     </xsl:element>

changeset:   370:203e3bdb2178
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 25 09:37:29 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
Refactored fiction-xml-to-docbook.xslt.

Now there's less duplicate code.


diff -r cebba1da5321 -r 203e3bdb2178 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:27:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:37:29 2011 +0000
@@ -106,41 +106,34 @@
 </xsl:template>
 
 <xsl:template match="fic:span">
-    <xsl:choose>
-        <xsl:when test="@xlink:href">
-            <link>
-                <xsl:attribute name="xlink:href">
-                    <xsl:value-of select="@xlink:href" />
-                </xsl:attribute>
-                <!-- TODO : Extract a common place from the other clause here. -->
-                <xsl:if test="@xml:lang">
-                    <xsl:attribute name="xml:lang">
-                        <xsl:value-of select="@xml:lang" />
-                    </xsl:attribute>
-                </xsl:if>
-                <xsl:if test="@xml:id">
-                    <xsl:attribute name="xml:id">
-                        <xsl:value-of select="@xml:id" />
-                    </xsl:attribute>
-                </xsl:if>
-                <xsl:apply-templates/>
-            </link>
-        </xsl:when>
-        <xsl:otherwise>
-            <phrase>
-                <xsl:if test="@xml:lang">
-                    <xsl:attribute name="xml:lang">
-                        <xsl:value-of select="@xml:lang" />
-                    </xsl:attribute>
-                </xsl:if>
-                <xsl:if test="@xml:id">
-                    <xsl:attribute name="xml:id">
-                        <xsl:value-of select="@xml:id" />
-                    </xsl:attribute>
-                </xsl:if>
-                <xsl:apply-templates/>
-            </phrase>
-        </xsl:otherwise>
-    </xsl:choose>
+    <xsl:variable name="tag_name">
+        <xsl:choose>
+            <xsl:when test="@xlink:href">
+                <xsl:value-of select="'link'" />
+            </xsl:when>
+            <xsl:otherwise>
+                <xsl:value-of select="'phrase'" />
+            </xsl:otherwise>
+        </xsl:choose>
+    </xsl:variable>
+    <xsl:element name="{$tag_name}">
+        <xsl:if test="@xlink:href">
+            <xsl:attribute name="xlink:href">
+                <xsl:value-of select="@xlink:href" />
+            </xsl:attribute>
+        </xsl:if>
+        <xsl:if test="@xml:lang">
+            <xsl:attribute name="xml:lang">
+                <xsl:value-of select="@xml:lang" />
+            </xsl:attribute>
+        </xsl:if>
+        <xsl:if test="@xml:id">
+            <xsl:attribute name="xml:id">
+                <xsl:value-of select="@xml:id" />
+            </xsl:attribute>
+        </xsl:if>
+        <xsl:apply-templates/>
+    </xsl:element>
 </xsl:template>
+
 </xsl:stylesheet>

changeset:   369:cebba1da5321
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 25 09:27:05 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/a-href-with-id-and-lang.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Support for xml:lang and xml:id in the <a /> element.


diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 17:17:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed May 25 09:27:05 2011 +0000
@@ -6,6 +6,8 @@
     * Add support for the lang="..." attribute in <section>/<s>.
     * Add the <span> tag for Fiction-Text (already exists in Fiction-XML).
         - supports two attributes - lang -> xml:lang and id -> xml:id.
+    * Now supporting xml:lang and xml:id in the <a /> tag in Fiction-Text
+    and Fiction-XML .
     * Bumped the testing dependencies for Test::XML version '0.08' and
     XML::SemanticDiff '1.0000' - the test failed otherwise.
 
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 17:17:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed May 25 09:27:05 2011 +0000
@@ -60,6 +60,7 @@
 tag-release.pl
 t/app-to-html.t
 t/boilerplate.t
+t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml
 t/fiction/data/docbook/sections-a-href.docbook.xml
 t/fiction/data/docbook/sections-and-paras.docbook.xml
 t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
@@ -70,6 +71,7 @@
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
 t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
 t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
+t/fiction/data/proto-text/a-href-with-id-and-lang.txt
 t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
 t/fiction/data/proto-text-invalid/leading-space.txt
@@ -89,6 +91,7 @@
 t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/proto-text/with-xml-lang-attribute.txt
 t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
+t/fiction/data/xml/a-href-with-id-and-lang.xml
 t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
 t/fiction/data/xml/sections-a-href.xml
 t/fiction/data/xml/sections-and-paras.xml
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 17:17:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 25 09:27:05 2011 +0000
@@ -112,6 +112,17 @@
                 <xsl:attribute name="xlink:href">
                     <xsl:value-of select="@xlink:href" />
                 </xsl:attribute>
+                <!-- TODO : Extract a common place from the other clause here. -->
+                <xsl:if test="@xml:lang">
+                    <xsl:attribute name="xml:lang">
+                        <xsl:value-of select="@xml:lang" />
+                    </xsl:attribute>
+                </xsl:if>
+                <xsl:if test="@xml:id">
+                    <xsl:attribute name="xml:id">
+                        <xsl:value-of select="@xml:id" />
+                    </xsl:attribute>
+                </xsl:if>
                 <xsl:apply-templates/>
             </link>
         </xsl:when>
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 17:17:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed May 25 09:27:05 2011 +0000
@@ -105,9 +105,18 @@
         push @attr, ([$xml_ns, 'lang'] => $lang);
     }
 
-    if (defined($href))
+    if (! defined($href))
     {
-        push @attr, ([$xml_ns, 'href'] => $href);
+        if ($args->{required_href})
+        {
+            Carp::confess(
+                $args->{missing_href_msg} || 'Unspecified href in tag!'
+            );
+        }
+    }
+    else
+    {
+        push @attr, ([$xlink_ns, 'href'] => $href);
     }
 
     return $self->_output_tag_with_childs(
@@ -145,15 +154,14 @@
 {
     my ($self, $elem) = @_;
 
-    $self->_output_tag_with_childs(
+    $self->_output_tag_with_childs_and_common_attributes(
+        $elem,
+        'span',
         {
-            start =>
-            [
-                "span",
-                [$xlink_ns, "href"] => $elem->lookup_attr("href"),
-            ],
-            elem => $elem,
-        }
+            optional_id => 1,
+            required_href => 1,
+            missing_href_msg => 'Unspecified href in a tag.',
+        },
     );
 
     return;
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/a-href-with-id-and-lang.docbook.xml	Wed May 25 09:27:05 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <link xlink:href="http://en.wikipedia.org/wiki/David" xml:id="david_link" xml:lang="es">David</link> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/a-href-with-id-and-lang.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/a-href-with-id-and-lang.txt	Wed May 25 09:27:05 2011 +0000
@@ -0,0 +1,30 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <a href="http://en.wikipedia.org/wiki/David" id="david_link" lang="es">David</a> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/a-href-with-id-and-lang.xml	Wed May 25 09:27:05 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xlink:href="http://en.wikipedia.org/wiki/David" xml:id="david_link" xml:lang="es">David</span> and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue May 24 17:17:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Wed May 25 09:27:05 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 23;
+use Test::More tests => 25;
 
 use Test::XML;
 
@@ -39,9 +39,10 @@
     with-xml-lang-attribute
     with-xml-lang-attr-in-section
     with-span
+    a-href-with-id-and-lang
     ));
 
-# TEST:$num_texts=11
+# TEST:$num_texts=12
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
diff -r 40d03b83c6a4 -r cebba1da5321 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 17:17:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Wed May 25 09:27:05 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 27;
+use Test::XML tests => 30;
 
 use File::Spec;
 
@@ -23,6 +23,7 @@
         with-xml-lang-attribute
         with-xml-lang-attr-in-section
         with-span
+        a-href-with-id-and-lang
     ));
 
 sub load_xml
@@ -40,7 +41,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=9
+# TEST:$num_texts=10
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   368:40d03b83c6a4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 17:17:38 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
description:
Minor: add an XML header to the other files


diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue May 24 17:17:38 2011 +0000
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
     xmlns="http://www.w3.org/1999/xhtml"
     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue May 24 17:17:38 2011 +0000
@@ -1,4 +1,4 @@
-<?xml version="1.0"?>
+<?xml version="1.0" encoding="UTF-8"?>
 <!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
 <grammar xmlns="http://relaxng.org/ns/structure/1.0"
     xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Tue May 24 17:17:38 2011 +0000
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Tue May 24 17:17:38 2011 +0000
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
      xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
      xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Tue May 24 17:17:38 2011 +0000
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
      xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
      xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt	Tue May 24 17:17:38 2011 +0000
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
     xmlns:fo='http://www.w3.org/1999/XSL/Format'
diff -r 6fd05bff839f -r 40d03b83c6a4 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Tue May 24 17:14:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Tue May 24 17:17:38 2011 +0000
@@ -1,4 +1,4 @@
-<?xml version="1.0"?>
+<?xml version="1.0" encoding="UTF-8"?>
 <!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
 <grammar xmlns="http://relaxng.org/ns/structure/1.0"
     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"

changeset:   367:6fd05bff839f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 17:14:20 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
Minor: add an XML header


diff -r 625fc4143f62 -r 6fd05bff839f perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 16:40:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 17:14:20 2011 +0000
@@ -1,3 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet version = '1.0'
     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
     xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"

changeset:   366:625fc4143f62
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 16:40:47 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes
description:
Bump the dependencies on Test::XML and XML::SemanticDiff.


diff -r 9163241b5d70 -r 625fc4143f62 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Tue May 24 15:23:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Tue May 24 16:40:47 2011 +0000
@@ -23,9 +23,10 @@
         'File::Spec' => 0,
         'strict' => 0,
         'Test::More' => 0,
-        'Test::XML' => 0,
+        'Test::XML' => '0.08',
         'warnings' => 0,
         'XML::LibXML' => 0,
+        'XML::SemanticDiff' => '1.0000',
     },
     requires => 
     {
diff -r 9163241b5d70 -r 625fc4143f62 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 15:23:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 16:40:47 2011 +0000
@@ -6,6 +6,8 @@
     * Add support for the lang="..." attribute in <section>/<s>.
     * Add the <span> tag for Fiction-Text (already exists in Fiction-XML).
         - supports two attributes - lang -> xml:lang and id -> xml:id.
+    * Bumped the testing dependencies for Test::XML version '0.08' and
+    XML::SemanticDiff '1.0000' - the test failed otherwise.
 
 0.6.0      Mon May 23 22:59:05 IDT 2011
     * Add the version="5.0" attribute to the top-level tag of the

changeset:   365:9163241b5d70
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 15:23:57 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-span.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-span.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Add the <span> tag.


diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 13:44:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 15:23:57 2011 +0000
@@ -4,6 +4,8 @@
     would be translated to <body xml:lang=".."> attribute in Fiction-XML (and
     eventually to DocBook 5/XML).
     * Add support for the lang="..." attribute in <section>/<s>.
+    * Add the <span> tag for Fiction-Text (already exists in Fiction-XML).
+        - supports two attributes - lang -> xml:lang and id -> xml:id.
 
 0.6.0      Mon May 23 22:59:05 IDT 2011
     * Add the version="5.0" attribute to the top-level tag of the
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 13:44:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 15:23:57 2011 +0000
@@ -66,6 +66,7 @@
 t/fiction/data/docbook/with-blockquote.docbook.xml
 t/fiction/data/docbook/with-internal-description.docbook.xml
 t/fiction/data/docbook/with-programlisting.docbook.xml
+t/fiction/data/docbook/with-span.docbook.xml
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
 t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
 t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
@@ -84,6 +85,7 @@
 t/fiction/data/proto-text/with-blockquote.txt
 t/fiction/data/proto-text/with-internal-description.txt
 t/fiction/data/proto-text/with-programlisting.txt
+t/fiction/data/proto-text/with-span.txt
 t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/proto-text/with-xml-lang-attribute.txt
 t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
@@ -94,6 +96,7 @@
 t/fiction/data/xml/sections-p-b-i.xml
 t/fiction/data/xml/with-blockquote.xml
 t/fiction/data/xml/with-programlisting.xml
+t/fiction/data/xml/with-span.xml
 t/fiction/data/xml/with-ul-ol-li.xml
 t/fiction/data/xml/with-xml-lang-attribute.xml
 t/fiction/data/xml/with-xml-lang-attr-in-section.xml
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 13:44:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 15:23:57 2011 +0000
@@ -115,7 +115,19 @@
             </link>
         </xsl:when>
         <xsl:otherwise>
-            <xsl:apply-templates/>
+            <phrase>
+                <xsl:if test="@xml:lang">
+                    <xsl:attribute name="xml:lang">
+                        <xsl:value-of select="@xml:lang" />
+                    </xsl:attribute>
+                </xsl:if>
+                <xsl:if test="@xml:id">
+                    <xsl:attribute name="xml:id">
+                        <xsl:value-of select="@xml:id" />
+                    </xsl:attribute>
+                </xsl:if>
+                <xsl:apply-templates/>
+            </phrase>
         </xsl:otherwise>
     </xsl:choose>
 </xsl:template>
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 13:44:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 15:23:57 2011 +0000
@@ -84,22 +84,35 @@
 
     my $id = $elem->lookup_attr("id");
     my $lang = $elem->lookup_attr("lang");
+    my $href = $elem->lookup_attr("href");
+
+    my @attr;
 
     if (!defined($id))
     {
-        Carp::confess($args->{missing_id_msg} || "Unspecified id!");
+        if (! $args->{optional_id} )
+        {
+            Carp::confess($args->{missing_id_msg} || "Unspecified id!");
+        }
     }
-
-    my @lang_attr;
+    else
+    {
+        push @attr, ([$xml_ns, "id"] => $id);
+    }
 
     if (defined($lang))
     {
-        push @lang_attr, ([$xml_ns, 'lang'] => $lang);
+        push @attr, ([$xml_ns, 'lang'] => $lang);
+    }
+
+    if (defined($href))
+    {
+        push @attr, ([$xml_ns, 'href'] => $href);
     }
 
     return $self->_output_tag_with_childs(
         {
-            'start' => [$tag_name, [$xml_ns, "id"] => $id, @lang_attr,],
+            'start' => [$tag_name, @attr,],
             elem => $elem,
         }
     );
@@ -239,6 +252,22 @@
     return;
 }
 
+sub _handle_elem_of_name_span
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs_and_common_attributes(
+        $elem,
+        'span',
+        {
+            optional_id => 1,
+            missing_id_msg => "Unspecified id for span!",
+        },
+    );
+
+    return;
+}
+
 sub _handle_elem_of_name_ul
 {
     my ($self, $elem) = @_;
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-span.docbook.xml	Tue May 24 15:23:57 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <phrase xml:lang="he-IL">דוד</phrase> and <phrase xml:id="foobar">Foobar Anchor</phrase> and <phrase xml:id="peter" xml:lang="fr-FR">Pierre</phrase> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-span.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-span.txt	Tue May 24 15:23:57 2011 +0000
@@ -0,0 +1,30 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <span lang="he-IL">דוד</span> and <span id="foobar">Foobar Anchor</span> and <span id="peter" lang="fr-FR">Pierre</span> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-span.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-span.xml	Tue May 24 15:23:57 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xml:lang="he-IL">דוד</span> and <span xml:id="foobar">Foobar Anchor</span> and <span xml:id="peter" xml:lang="fr-FR">Pierre</span> and Goliath were standing by each other.
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue May 24 13:44:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue May 24 15:23:57 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 21;
+use Test::More tests => 23;
 
 use Test::XML;
 
@@ -38,9 +38,10 @@
     paras-with-entities-at-start-of-line
     with-xml-lang-attribute
     with-xml-lang-attr-in-section
+    with-span
     ));
 
-# TEST:$num_texts=10
+# TEST:$num_texts=11
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
diff -r 7c01d8afd114 -r 9163241b5d70 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 13:44:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 15:23:57 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 24;
+use Test::XML tests => 27;
 
 use File::Spec;
 
@@ -22,6 +22,7 @@
         with-programlisting
         with-xml-lang-attribute
         with-xml-lang-attr-in-section
+        with-span
     ));
 
 sub load_xml
@@ -39,7 +40,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=8
+# TEST:$num_texts=9
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   364:7c01d8afd114
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 13:44:06 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Extract _output_tag_with_childs_and_common_attributes .


diff -r af0693af6355 -r 7c01d8afd114 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 13:32:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 13:44:06 2011 +0000
@@ -78,6 +78,33 @@
         });
 }
 
+sub _output_tag_with_childs_and_common_attributes
+{
+    my ($self, $elem, $tag_name, $args) = @_;
+
+    my $id = $elem->lookup_attr("id");
+    my $lang = $elem->lookup_attr("lang");
+
+    if (!defined($id))
+    {
+        Carp::confess($args->{missing_id_msg} || "Unspecified id!");
+    }
+
+    my @lang_attr;
+
+    if (defined($lang))
+    {
+        push @lang_attr, ([$xml_ns, 'lang'] => $lang);
+    }
+
+    return $self->_output_tag_with_childs(
+        {
+            'start' => [$tag_name, [$xml_ns, "id"] => $id, @lang_attr,],
+            elem => $elem,
+        }
+    );
+}
+
 sub _get_text_start
 {
     my ($self, $elem) = @_;
@@ -330,27 +357,10 @@
     
     if (($tag eq "s") || ($tag eq "scene"))
     {
-        # TODO : abstract with _write_body.
-        my $id = $scene->lookup_attr("id");
-        my $lang = $scene->lookup_attr("lang");
-
-        if (!defined($id))
-        {
-            Carp::confess("Unspecified id for scene!");
-        }
-
-        my @lang_attr;
-
-        if (defined($lang))
-        {
-            push @lang_attr, ([$xml_ns, 'lang'] => $lang);
-        }
-
-        $self->_output_tag_with_childs(
-            {
-                'start' => ["section", [$xml_ns, "id"] => $id, @lang_attr,],
-                elem => $scene,
-            }
+        $self->_output_tag_with_childs_and_common_attributes(
+            $scene,
+            "section",
+            { missing_id_msg => "Unspecified id for scene!", },
         );
     }
     else
@@ -401,9 +411,6 @@
         confess "Improper body tag - should be '<body>'!";
     }
 
-    # TODO : abstract with _write_scene.
-    my $id = $body->lookup_attr("id");
-    my $lang = $body->lookup_attr("lang");
 =begin foo
 
     my $title =
@@ -423,18 +430,10 @@
 
 =cut
 
-    my @lang_attr;
-
-    if (defined($lang))
-    {
-        push @lang_attr, ([$xml_ns, 'lang'] => $lang);
-    }
-
-    $self->_output_tag_with_childs(
-        {
-            'start' => ["body", [$xml_ns, "id"] => $id, @lang_attr,],
-            elem => $body,
-        }
+    $self->_output_tag_with_childs_and_common_attributes(
+        $body,
+        'body',
+        { missing_id_msg => "Unspecified id for body tag!", },
     );
 
     return;

changeset:   363:af0693af6355
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 13:32:12 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Implement the xml:lang attribute for the <section>|<s> element.


diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 12:36:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 13:32:12 2011 +0000
@@ -3,6 +3,7 @@
     * Add support for the lang="..." attribute of <body> in Fiction-Text which
     would be translated to <body xml:lang=".."> attribute in Fiction-XML (and
     eventually to DocBook 5/XML).
+    * Add support for the lang="..." attribute in <section>/<s>.
 
 0.6.0      Mon May 23 22:59:05 IDT 2011
     * Add the version="5.0" attribute to the top-level tag of the
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 12:36:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 13:32:12 2011 +0000
@@ -68,6 +68,7 @@
 t/fiction/data/docbook/with-programlisting.docbook.xml
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
 t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
+t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
 t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
 t/fiction/data/proto-text-invalid/leading-space.txt
@@ -85,6 +86,7 @@
 t/fiction/data/proto-text/with-programlisting.txt
 t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/proto-text/with-xml-lang-attribute.txt
+t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
 t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
 t/fiction/data/xml/sections-a-href.xml
 t/fiction/data/xml/sections-and-paras.xml
@@ -94,6 +96,7 @@
 t/fiction/data/xml/with-programlisting.xml
 t/fiction/data/xml/with-ul-ol-li.xml
 t/fiction/data/xml/with-xml-lang-attribute.xml
+t/fiction/data/xml/with-xml-lang-attr-in-section.xml
 t/fiction/proto-text-invalid.t
 t/fiction/proto-text-to-xml-using-custom-parser.t
 t/fiction/qnd-parser-unit.t
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 12:36:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue May 24 13:32:12 2011 +0000
@@ -34,6 +34,11 @@
         <xsl:attribute name="xml:id">
             <xsl:value-of select="@xml:id" />
         </xsl:attribute>
+        <xsl:if test="@xml:lang">
+            <xsl:attribute name="xml:lang">
+                <xsl:value-of select="@xml:lang" />
+            </xsl:attribute>
+        </xsl:if>
         <!-- Make the title the title attribute or "ID" if does not exist. -->
         <info>
         <title>
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 12:36:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 13:32:12 2011 +0000
@@ -330,16 +330,25 @@
     
     if (($tag eq "s") || ($tag eq "scene"))
     {
+        # TODO : abstract with _write_body.
         my $id = $scene->lookup_attr("id");
+        my $lang = $scene->lookup_attr("lang");
 
         if (!defined($id))
         {
             Carp::confess("Unspecified id for scene!");
         }
 
+        my @lang_attr;
+
+        if (defined($lang))
+        {
+            push @lang_attr, ([$xml_ns, 'lang'] => $lang);
+        }
+
         $self->_output_tag_with_childs(
             {
-                'start' => ["section", [$xml_ns, "id"] => $id],
+                'start' => ["section", [$xml_ns, "id"] => $id, @lang_attr,],
                 elem => $scene,
             }
         );
@@ -392,6 +401,7 @@
         confess "Improper body tag - should be '<body>'!";
     }
 
+    # TODO : abstract with _write_scene.
     my $id = $body->lookup_attr("id");
     my $lang = $body->lookup_attr("lang");
 =begin foo
@@ -419,6 +429,7 @@
     {
         push @lang_attr, ([$xml_ns, 'lang'] => $lang);
     }
+
     $self->_output_tag_with_childs(
         {
             'start' => ["body", [$xml_ns, "id"] => $id, @lang_attr,],
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attr-in-section.docbook.xml	Tue May 24 13:32:12 2011 +0000
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="en-US" version="5.0">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+    David and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+  <section xml:id="french" xml:lang="fr-FR">
+    <info>
+       <title>In French</title>
+    </info>
+    <para>
+    Je ne parle pas Français bien.
+    </para>
+  </section>
+</article>
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attr-in-section.txt	Tue May 24 13:32:12 2011 +0000
@@ -0,0 +1,34 @@
+<body id="index" lang="en-US">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+<s id="french" lang="fr-FR">
+
+<title>In French</title>
+
+Je ne parle pas Français bien.
+
+</s>
+
+</body>
+
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attr-in-section.xml	Tue May 24 13:32:12 2011 +0000
@@ -0,0 +1,32 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index" xml:lang="en-US">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+    <section xml:id="french" xml:lang="fr-FR">
+    <title>In French</title>
+    <p>
+    Je ne parle pas Français bien.
+    </p>
+    </section>
+</body>
+</document>
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue May 24 12:36:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue May 24 13:32:12 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 19;
+use Test::More tests => 21;
 
 use Test::XML;
 
@@ -37,9 +37,10 @@
     with-programlisting
     paras-with-entities-at-start-of-line
     with-xml-lang-attribute
+    with-xml-lang-attr-in-section
     ));
 
-# TEST:$num_texts=9
+# TEST:$num_texts=10
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
diff -r c25482c828a3 -r af0693af6355 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 12:36:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 13:32:12 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 21;
+use Test::XML tests => 24;
 
 use File::Spec;
 
@@ -21,6 +21,7 @@
         with-blockquote
         with-programlisting
         with-xml-lang-attribute
+        with-xml-lang-attr-in-section
     ));
 
 sub load_xml
@@ -38,7 +39,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=7
+# TEST:$num_texts=8
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   362:c25482c828a3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 12:36:10 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Add the test for the xml:lang in the DocBook 5/XML.


diff -r d7cb0313c225 -r c25482c828a3 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 12:33:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 12:36:10 2011 +0000
@@ -67,6 +67,7 @@
 t/fiction/data/docbook/with-internal-description.docbook.xml
 t/fiction/data/docbook/with-programlisting.docbook.xml
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
+t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
 t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
 t/fiction/data/proto-text-invalid/leading-space.txt
diff -r d7cb0313c225 -r c25482c828a3 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-xml-lang-attribute.docbook.xml	Tue May 24 12:36:10 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="en-US" version="5.0">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+    David and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r d7cb0313c225 -r c25482c828a3 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 12:33:37 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Tue May 24 12:36:10 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 18;
+use Test::XML tests => 21;
 
 use File::Spec;
 
@@ -20,6 +20,7 @@
         with-ul-ol-li
         with-blockquote
         with-programlisting
+        with-xml-lang-attribute
     ));
 
 sub load_xml
@@ -37,7 +38,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=6
+# TEST:$num_texts=7
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   361:d7cb0313c225
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 24 12:33:37 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
description:
lang="..." attribute in the body.


diff -r b0b2a2780dbc -r d7cb0313c225 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 20:01:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 24 12:33:37 2011 +0000
@@ -1,5 +1,9 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add support for the lang="..." attribute of <body> in Fiction-Text which
+    would be translated to <body xml:lang=".."> attribute in Fiction-XML (and
+    eventually to DocBook 5/XML).
+
 0.6.0      Mon May 23 22:59:05 IDT 2011
     * Add the version="5.0" attribute to the top-level tag of the
     DocBook 5/XML generated by extradata/fiction-xml-to-docbook.xslt .
diff -r b0b2a2780dbc -r d7cb0313c225 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 23 20:01:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 24 12:33:37 2011 +0000
@@ -83,6 +83,7 @@
 t/fiction/data/proto-text/with-internal-description.txt
 t/fiction/data/proto-text/with-programlisting.txt
 t/fiction/data/proto-text/with-ul-ol-li.txt
+t/fiction/data/proto-text/with-xml-lang-attribute.txt
 t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
 t/fiction/data/xml/sections-a-href.xml
 t/fiction/data/xml/sections-and-paras.xml
@@ -91,6 +92,7 @@
 t/fiction/data/xml/with-blockquote.xml
 t/fiction/data/xml/with-programlisting.xml
 t/fiction/data/xml/with-ul-ol-li.xml
+t/fiction/data/xml/with-xml-lang-attribute.xml
 t/fiction/proto-text-invalid.t
 t/fiction/proto-text-to-xml-using-custom-parser.t
 t/fiction/qnd-parser-unit.t
diff -r b0b2a2780dbc -r d7cb0313c225 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon May 23 20:01:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 24 12:33:37 2011 +0000
@@ -393,7 +393,7 @@
     }
 
     my $id = $body->lookup_attr("id");
-
+    my $lang = $body->lookup_attr("lang");
 =begin foo
 
     my $title =
@@ -413,9 +413,15 @@
 
 =cut
 
+    my @lang_attr;
+
+    if (defined($lang))
+    {
+        push @lang_attr, ([$xml_ns, 'lang'] => $lang);
+    }
     $self->_output_tag_with_childs(
         {
-            'start' => ["body", [$xml_ns, "id"] => $id],
+            'start' => ["body", [$xml_ns, "id"] => $id, @lang_attr,],
             elem => $body,
         }
     );
diff -r b0b2a2780dbc -r d7cb0313c225 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-xml-lang-attribute.txt	Tue May 24 12:33:37 2011 +0000
@@ -0,0 +1,26 @@
+<body id="index" lang="en-US">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r b0b2a2780dbc -r d7cb0313c225 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-xml-lang-attribute.xml	Tue May 24 12:33:37 2011 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index" xml:lang="en-US">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r b0b2a2780dbc -r d7cb0313c225 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Mon May 23 20:01:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Tue May 24 12:33:37 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 17;
+use Test::More tests => 19;
 
 use Test::XML;
 
@@ -36,9 +36,10 @@
     with-blockquote
     with-programlisting
     paras-with-entities-at-start-of-line
+    with-xml-lang-attribute
     ));
 
-# TEST:$num_texts=8
+# TEST:$num_texts=9
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   360:b0b2a2780dbc
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 20:01:55 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.6.0


diff -r fbc86b17ee95 -r b0b2a2780dbc .hgtags
--- a/.hgtags	Mon May 23 20:01:18 2011 +0000
+++ b/.hgtags	Mon May 23 20:01:55 2011 +0000
@@ -16,3 +16,4 @@
 e19eacb269e585c8c4636f11cfee1fe1115c9644 releases/0.4.1
 b77a7f06f9fa00b284bf95607fbea5c58de1b574 releases/0.5.0
 a2590537909f3f4f7ca5cb7cb8de358e9d33af77 releases/0.5.1
+fbc86b17ee9576a04a53e4ccf9870ac9290aa2c2 releases/0.6.0

changeset:   359:fbc86b17ee95
tag:         releases/0.6.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 20:01:18 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.6.0


diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 20:01:18 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.6.0      Mon May 23 22:59:05 IDT 2011
     * Add the version="5.0" attribute to the top-level tag of the
     DocBook 5/XML generated by extradata/fiction-xml-to-docbook.xslt .
     * Got rid of leftover files in t/fiction/data that were not used
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon May 23 20:01:18 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon May 23 20:01:18 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon May 23 20:01:18 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon May 23 20:01:18 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon May 23 20:01:18 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 use Exception::Class
     (
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon May 23 20:01:18 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon May 23 20:01:18 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon May 23 20:01:18 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 AUTHOR
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 20:01:18 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon May 23 20:01:18 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon May 23 20:01:18 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon May 23 20:01:18 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon May 23 20:01:18 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 20:01:18 2011 +0000
@@ -833,11 +833,11 @@
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon May 23 20:01:18 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Mon May 23 20:01:18 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon May 23 20:01:18 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head1 SYNOPSIS
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon May 23 20:01:18 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon May 23 20:01:18 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon May 23 20:01:18 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Mon May 23 20:01:18 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =cut
 
-our $VERSION = '0.5.1';
+our $VERSION = '0.6.0';
 
 =head2 new()
 
diff -r 66ce4d19baab -r fbc86b17ee95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon May 23 19:58:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Mon May 23 20:01:18 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.5.1
+Version 0.6.0
 
 =head1 AUTHOR
 

changeset:   358:66ce4d19baab
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 19:58:43 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add more


diff -r 243a9fd214c7 -r 66ce4d19baab perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 16:54:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 19:58:43 2011 +0000
@@ -4,6 +4,8 @@
     DocBook 5/XML generated by extradata/fiction-xml-to-docbook.xslt .
     * Got rid of leftover files in t/fiction/data that were not used
     by the tests.
+    * A lot of refactoring and cleanup - moved some modules from
+    XML-Grammar-Fiction to XML-Grammar-FictionBase .
     
 0.5.1       Sun May 22 09:33:43 IDT 2011
     * Fix the handling of entities at the start of the opening line of

changeset:   357:243a9fd214c7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:54:02 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Convert to a hash lookup.


diff -r 99ad6beba730 -r 243a9fd214c7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:46:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:54:02 2011 +0000
@@ -54,6 +54,21 @@
 # Whether we are inside a paragraph or not.
 has "_in_para" => (isa => "Bool", is => "rw", default => 0,);
 
+has '_tag_names_to_be_handled' =>
+(
+    is => 'ro',
+    isa => 'HashRef[Bool]',
+    lazy => 1,
+    builder => '_build_tag_names_to_be_handled',
+);
+
+sub _build_tag_names_to_be_handled
+{
+    my $self = shift;
+
+    return { map { $_ => 1 } @{$self->_list_valid_tag_events} };
+}
+
 sub _get_id_regex
 {
     return qr{[a-zA-Z_\-]+};
@@ -375,15 +390,14 @@
 {
     my ($self, $event) = @_;
 
-    foreach my $tag_name (@{$self->_list_valid_tag_events()})
+    if ($event->tag && exists($self->_tag_names_to_be_handled->{$event->tag}))
     {
-        if ($event->is_tag_of_name($tag_name))
-        {
-            return $self->_handle_specific_tag_event($event);
-        }
+        return $self->_handle_specific_tag_event($event);
     }
-
-    return;
+    else
+    {
+        return;
+    }
 }
 
 sub _handle_para_event

changeset:   356:99ad6beba730
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:46:25 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Extract a method.


diff -r 0bd3c6b76495 -r 99ad6beba730 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:38:54 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:46:25 2011 +0000
@@ -357,6 +357,20 @@
     return;
 }
 
+sub _handle_specific_tag_event
+{
+    my ($self, $event) = @_;
+
+    my $tag_name = $event->tag();
+    my $type = $event->is_open() ? "open" : "close";
+
+    my $method = "_handle_${type}_${tag_name}";
+
+    $self->$method($event);
+
+    return 1;
+}
+
 sub _check_and_handle_tag_event
 {
     my ($self, $event) = @_;
@@ -365,13 +379,7 @@
     {
         if ($event->is_tag_of_name($tag_name))
         {
-            my $type = $event->is_open() ? "open" : "close";
-            
-            my $method = "_handle_${type}_${tag_name}";
-
-            $self->$method($event);
-
-            return 1;
+            return $self->_handle_specific_tag_event($event);
         }
     }
 

changeset:   355:0bd3c6b76495
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:38:54 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Extract a common method.


diff -r c6bf4110b154 -r 0bd3c6b76495 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:34:34 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:38:54 2011 +0000
@@ -132,39 +132,40 @@
     );
 }
 
+sub _generic_para_contents_assert
+{
+    my ($self, $predicate, $message, $contents) = @_;
+
+    if (List::MoreUtils::any { $predicate->($_) } @{$contents || []})
+    {
+        Carp::confess ($message);
+    }
+
+    return;
+}
 
 sub _assert_not_contains_saying
 {
     my ($self, $contents) = @_;
 
-    if (List::MoreUtils::any 
-        { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
-        @{$contents || []}
-        )
-    {
-        Carp::confess (qq{Para contains a saying.});
-    }
-
-    return;
+    return $self->_generic_para_contents_assert(
+        sub { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") },
+        qq{Para contains a saying.},
+        $contents
+    );
 }
 
 sub _assert_not_contains_undef
 {
     my ($self, $contents) = @_;
 
-    # This is an assert
-    if (List::MoreUtils::any 
-        { !defined($_) }
-        @{$contents || []}
-        )
-    {
-        Carp::confess (qq{Para contains an undef member.});
-    }
-
-    return;
+    return $self->_generic_para_contents_assert(
+        sub { !defined($_) },
+        qq{Para contains an undef member.},
+        $contents
+    );
 }
 
-
 sub _new_para
 {
     my ($self, $contents) = @_;

changeset:   354:c6bf4110b154
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:34:34 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Extract two asserts.


diff -r f63ed32c71ef -r c6bf4110b154 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:29:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 16:34:34 2011 +0000
@@ -132,12 +132,11 @@
     );
 }
 
-sub _new_para
+
+sub _assert_not_contains_saying
 {
-    my $self = shift;
-    my $contents = shift;
+    my ($self, $contents) = @_;
 
-    # This is an assert
     if (List::MoreUtils::any 
         { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
         @{$contents || []}
@@ -146,6 +145,13 @@
         Carp::confess (qq{Para contains a saying.});
     }
 
+    return;
+}
+
+sub _assert_not_contains_undef
+{
+    my ($self, $contents) = @_;
+
     # This is an assert
     if (List::MoreUtils::any 
         { !defined($_) }
@@ -155,6 +161,16 @@
         Carp::confess (qq{Para contains an undef member.});
     }
 
+    return;
+}
+
+
+sub _new_para
+{
+    my ($self, $contents) = @_;
+
+    $self->_assert_not_contains_saying($contents);
+    $self->_assert_not_contains_undef($contents);
 
     return $self->_new_node(
         {

changeset:   353:f63ed32c71ef
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:29:02 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Add the create_start_para.


diff -r f38ede411bf5 -r f63ed32c71ef perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:27:32 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:29:02 2011 +0000
@@ -426,11 +426,11 @@
     return;
 }
 
-sub _start_para
+sub _create_start_para
 {
     my $self = shift;
 
-    my $new_elem = 
+    return
         XML::Grammar::Fiction::Struct::Tag::Para->new(
             name => "p",
             is_standalone => 0,
@@ -438,8 +438,13 @@
             attrs => [],
             children => [],
         );
+}
 
-    $self->_push_tag($new_elem);
+sub _start_para
+{
+    my $self = shift;
+
+    $self->_push_tag($self->_create_start_para());
 
     $self->_in_para(1);
 

changeset:   352:f38ede411bf5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:27:32 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Inlined the children.


diff -r d758c4655321 -r f38ede411bf5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:26:21 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:27:32 2011 +0000
@@ -431,14 +431,13 @@
     my $self = shift;
 
     my $new_elem = 
-    XML::Grammar::Fiction::Struct::Tag::Para->new(
-        name => "p",
-        is_standalone => 0,
-        line => $self->line_num(),
-        attrs => [],
-    );
-
-    $new_elem->children([]);
+        XML::Grammar::Fiction::Struct::Tag::Para->new(
+            name => "p",
+            is_standalone => 0,
+            line => $self->line_num(),
+            attrs => [],
+            children => [],
+        );
 
     $self->_push_tag($new_elem);
 

changeset:   351:d758c4655321
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:26:21 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring: extract a method.


diff -r 08c716ef075a -r d758c4655321 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:23:31 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:26:21 2011 +0000
@@ -392,13 +392,9 @@
     return;
 }
 
-sub _close_para
+sub _process_closed_para
 {
-    my $self = shift;
-
-    my $open = $self->_pop_tag();
-
-    $self->_assert_top_is_para($open);
+    my ($self, $open) = @_;
 
     my $children = $open->detach_children();
 
@@ -412,6 +408,19 @@
         );
     }
 
+    return;
+}
+
+sub _close_para
+{
+    my $self = shift;
+
+    my $open = $self->_pop_tag();
+
+    $self->_assert_top_is_para($open);
+
+    $self->_process_closed_para($open);
+
     $self->_in_para(0);
 
     return;

changeset:   350:08c716ef075a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:23:31 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Got rid of a temporary variable.


diff -r 88397ebf36e5 -r 08c716ef075a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:22:15 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:23:31 2011 +0000
@@ -405,12 +405,11 @@
     # Filter away empty paragraphs.
     if (defined($children) && @$children)
     {
-        my $new_elem =
+        $self->_add_to_top_tag(
             $self->_new_para(
                 $children
-            );
-
-        $self->_add_to_top_tag($new_elem);
+            )
+        );
     }
 
     $self->_in_para(0);

changeset:   349:88397ebf36e5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:22:15 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a method.


diff -r bdfebf664f8a -r 88397ebf36e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:18:50 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:22:15 2011 +0000
@@ -380,16 +380,25 @@
     return;
 }
 
+sub _assert_top_is_para
+{
+    my ($self, $open) = @_;
+
+    if ($open->name() ne "p")
+    {
+        Carp::confess (qq{Not a para tag.});
+    }
+
+    return;
+}
+
 sub _close_para
 {
     my $self = shift;
+
     my $open = $self->_pop_tag();
 
-    # This is an assert.
-    if ($open->name() ne "p")
-    {
-        Carp::confess (qq{Not a para tag.});    
-    }
+    $self->_assert_top_is_para($open);
 
     my $children = $open->detach_children();
 

changeset:   348:bdfebf664f8a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:18:50 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a method.


diff -r 690c6a3a49ae -r bdfebf664f8a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:13:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:18:50 2011 +0000
@@ -461,12 +461,12 @@
     return $self->_start_para();
 }
 
-sub _handle_open_saying
+sub _create_open_saying_tag
 {
     my $self = shift;
     my $event = shift;
 
-    my $new_tag =
+    return
         XML::Grammar::Fiction::Struct::Tag->new(
             {
                 name => "saying",
@@ -478,8 +478,13 @@
                 children => [],
             }
         );
+}
 
-    $self->_push_tag($new_tag);
+sub _handle_open_saying
+{
+    my ($self, $event) = @_;
+
+    $self->_push_tag($self->_create_open_saying_tag($event));
 
     $self->_in_saying(1);
 

changeset:   347:690c6a3a49ae
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:13:25 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring.


diff -r e2cf8231e7ef -r 690c6a3a49ae perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:12:14 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:13:25 2011 +0000
@@ -475,11 +475,10 @@
                 # from the called-to layers.
                 line => $self->line_num(),
                 attrs => [{key => "character", value => $event->tag_elem->character()}],
+                children => [],
             }
         );
 
-    $new_tag->children([]);
-
     $self->_push_tag($new_tag);
 
     $self->_in_saying(1);

changeset:   346:e2cf8231e7ef
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:12:14 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring: convert to a ? : ? :.


diff -r 6651cf1acc88 -r e2cf8231e7ef perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:08:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:12:14 2011 +0000
@@ -563,18 +563,14 @@
 
     my $l = $self->curr_line_ref();
 
-    if ($$l eq "\n")
-    {
-        return $self->_main_loop_iter_on_empty_line;
-    }
-    elsif ($$l =~ m{\G[ \t]+\n?\z})
-    {
-        return $self->_main_loop_iter_on_whitepsace;
-    }
-    else
-    {
-        return 1;
-    }
+    return
+    (
+        ($$l eq "\n")
+        ? $self->_main_loop_iter_on_empty_line
+        : ($$l =~ m{\G[ \t]+\n?\z})
+        ? $self->_main_loop_iter_on_whitepsace
+        : 1
+    );
 }
 
 

changeset:   345:6651cf1acc88
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:08:49 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a method.


diff -r 65bbdcd97675 -r 6651cf1acc88 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:07:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:08:49 2011 +0000
@@ -546,6 +546,17 @@
     return;
 }
 
+sub _main_loop_iter_on_whitepsace
+{
+    my $self = shift;
+
+    $self->_add_to_top_tag( $self->_new_text([" "]) );
+
+    $self->next_line_ref();
+
+    return;
+}
+
 sub _main_loop_iter_body_prelude
 {
     my $self = shift;
@@ -558,11 +569,7 @@
     }
     elsif ($$l =~ m{\G[ \t]+\n?\z})
     {
-        $self->_add_to_top_tag( $self->_new_text([" "]) );
-
-        $self->next_line_ref();
-
-        return;
+        return $self->_main_loop_iter_on_whitepsace;
     }
     else
     {

changeset:   344:65bbdcd97675
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:07:28 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring: simplified the logic.


diff -r fc75509a0daf -r 65bbdcd97675 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:06:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:07:28 2011 +0000
@@ -556,12 +556,9 @@
     {
         return $self->_main_loop_iter_on_empty_line;
     }
-    elsif ($$l =~ m{\G([ \t]+)\n?\z})
+    elsif ($$l =~ m{\G[ \t]+\n?\z})
     {
-        if (length($1))
-        {
-            $self->_add_to_top_tag( $self->_new_text([" "]) );
-        }
+        $self->_add_to_top_tag( $self->_new_text([" "]) );
 
         $self->next_line_ref();
 

changeset:   343:fc75509a0daf
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:06:10 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a method.


diff -r 564b67e7941a -r fc75509a0daf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:03:41 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:06:10 2011 +0000
@@ -532,6 +532,20 @@
     return ($is_tag_cond, $is_close);
 }
 
+sub _main_loop_iter_on_empty_line
+{
+    my $self = shift;
+
+    if ($self->_top_is_para())
+    {
+        $self->_close_para();
+    }
+
+    $self->next_line_ref();
+
+    return;
+}
+
 sub _main_loop_iter_body_prelude
 {
     my $self = shift;
@@ -540,12 +554,7 @@
 
     if ($$l eq "\n")
     {
-        if ($self->_top_is_para())
-        {
-            $self->_close_para();
-        }
-        $self->next_line_ref();
-        return;
+        return $self->_main_loop_iter_on_empty_line;
     }
     elsif ($$l =~ m{\G([ \t]+)\n?\z})
     {

changeset:   342:564b67e7941a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:03:41 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Got rid of an unused variable.


diff -r 02d8d55ca520 -r 564b67e7941a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:02:50 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:03:41 2011 +0000
@@ -536,7 +536,7 @@
 {
     my $self = shift;
 
-    my ($l, $p) = $self->curr_line_and_pos();
+    my $l = $self->curr_line_ref();
 
     if ($$l eq "\n")
     {

changeset:   341:02d8d55ca520
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:02:50 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Restructured as if/elsif/else.


diff -r 4b895a81999c -r 02d8d55ca520 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:01:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:02:50 2011 +0000
@@ -547,8 +547,7 @@
         $self->next_line_ref();
         return;
     }
-    
-    if ($$l =~ m{\G([ \t]+)\n?\z})
+    elsif ($$l =~ m{\G([ \t]+)\n?\z})
     {
         if (length($1))
         {
@@ -559,8 +558,10 @@
 
         return;
     }
-    
-    return 1;
+    else
+    {
+        return 1;
+    }
 }
 
 

changeset:   340:4b895a81999c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 16:01:17 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Got rid of a local variable in favour to a slot.


diff -r 9b242023d629 -r 4b895a81999c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:57:25 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 16:01:17 2011 +0000
@@ -16,6 +16,7 @@
 
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
+has '_is_start' => (isa => 'Bool', is => 'rw');
 
 before 'next_line_ref' => sub {
     my $self = shift;
@@ -151,10 +152,10 @@
 
 sub _create_open_desc_tag
 {
-    my ($self, $is_start) = @_;
+    my ($self) = @_;
 
     my $not_inline = 0;
-    if ($is_start && $self->_prev_line_is_empty())
+    if ($self->_is_start && $self->_prev_line_is_empty())
     {
         $self->_close_top_tags();
         $not_inline = 1;
@@ -167,14 +168,23 @@
     );
 }
 
+sub _set_is_start
+{
+    my $self = shift;
+
+    $self->_is_start($self->at_line_start);
+
+    return;
+}
+
 around '_parse_opening_tag' => sub {
     my ($orig, $self) = @_;
 
-    my $is_start = $self->at_line_start;
+    $self->_set_is_start;
 
     return 
         $self->_detect_open_desc_tag
-        ? $self->_create_open_desc_tag($is_start)
+        ? $self->_create_open_desc_tag
         : $self->$orig();
 };
 

changeset:   339:9b242023d629
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:57:25 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring: more to Screenplay-QnD.


diff -r c912c6b94b3e -r 9b242023d629 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:50:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:57:25 2011 +0000
@@ -149,30 +149,33 @@
     return (${ $self->curr_line_ref } =~ m{\G\[}cg);
 }
 
+sub _create_open_desc_tag
+{
+    my ($self, $is_start) = @_;
+
+    my $not_inline = 0;
+    if ($is_start && $self->_prev_line_is_empty())
+    {
+        $self->_close_top_tags();
+        $not_inline = 1;
+    }
+
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $not_inline ? "desc" : $self->_get_desc_name(),
+        line => $self->line_num(),
+        attrs => [],
+    );
+}
+
 around '_parse_opening_tag' => sub {
     my ($orig, $self) = @_;
 
     my $is_start = $self->at_line_start;
 
-    if ($self->_detect_open_desc_tag)
-    {
-        my $not_inline = 0;
-        if ($is_start && $self->_prev_line_is_empty())
-        {
-            $self->_close_top_tags();
-            $not_inline = 1;
-        }
-
-        return XML::Grammar::Fiction::Struct::Tag->new(
-            name => $not_inline ? "desc" : $self->_get_desc_name(),
-            line => $self->line_num(),
-            attrs => [],
-        );
-    }
-    else
-    {
-        return $self->$orig();
-    }
+    return 
+        $self->_detect_open_desc_tag
+        ? $self->_create_open_desc_tag($is_start)
+        : $self->$orig();
 };
 
 sub _parse_speech_unit

changeset:   338:c912c6b94b3e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:50:30 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a method.


diff -r 506e991cfeb2 -r c912c6b94b3e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:48:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:50:30 2011 +0000
@@ -142,14 +142,19 @@
         : $self->$orig();
 };
 
+sub _detect_open_desc_tag
+{
+    my $self = shift;
+
+    return (${ $self->curr_line_ref } =~ m{\G\[}cg);
+}
+
 around '_parse_opening_tag' => sub {
     my ($orig, $self) = @_;
 
-    my $l = $self->curr_line_ref();
-
     my $is_start = $self->at_line_start;
 
-    if ($$l =~ m{\G\[}cg)
+    if ($self->_detect_open_desc_tag)
     {
         my $not_inline = 0;
         if ($is_start && $self->_prev_line_is_empty())

changeset:   337:506e991cfeb2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:48:28 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract more methods from Screenplay::FromProto::Parser::QnD.


diff -r c8456a50f9e7 -r 506e991cfeb2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:43:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:48:28 2011 +0000
@@ -117,22 +117,29 @@
     return ($self->_in_para() ? "innerdesc" : "desc");
 }
 
+sub _create_closing_desc_tag {
+    my $self = shift;
+
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $self->_get_desc_name(),
+        line => $self->line_num(),
+    );
+}
+
+sub _detect_closing_desc_tag
+{
+    my $self = shift;
+
+    return (${ $self->curr_line_ref() } =~ m{\G\]}cg);
+}
+
 around '_parse_closing_tag' => sub {
     my ($orig, $self) = @_;
 
-    my $l = $self->curr_line_ref();
-
-    if ($$l =~ m{\G\]}cg)
-    {
-        return XML::Grammar::Fiction::Struct::Tag->new(
-            name => $self->_get_desc_name(),
-            line => $self->line_num(),
-        );
-    }
-    else
-    {
-        return $self->$orig();
-    }
+    return 
+        $self->_detect_closing_desc_tag
+        ? $self->_create_closing_desc_tag
+        : $self->$orig();
 };
 
 around '_parse_opening_tag' => sub {

changeset:   336:c8456a50f9e7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:43:12 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring: extract LineIterator::at_line_start from many places.


diff -r 6ea675bc3f72 -r c8456a50f9e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:36:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:43:12 2011 +0000
@@ -36,7 +36,7 @@
 {
     my $self = shift;
 
-    my $is_para = ($self->curr_pos() == 0);
+    my $is_para = $self->at_line_start;
 
     my $status = $self->_parse_non_tag_text_unit();
 
diff -r 6ea675bc3f72 -r c8456a50f9e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon May 23 15:36:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon May 23 15:43:12 2011 +0000
@@ -94,6 +94,19 @@
     return pos(${$self->curr_line_ref()});
 }
 
+=head2 $self->at_line_start()
+
+Returns if at start of line (curr_pos == 0).
+
+=cut
+
+sub at_line_start
+{
+    my $self = shift;
+
+    return ($self->curr_pos == 0);
+}
+
 =head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
 
 Convenience method to return the line reference and the position.
diff -r 6ea675bc3f72 -r c8456a50f9e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 15:36:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 15:43:12 2011 +0000
@@ -536,7 +536,11 @@
 
     # Demote the cursor to before the < of the tag.
     #
-    if (pos($$l) > 0)
+    if ($self->at_line_start)
+    {
+        $is_para_end = 1;
+    }
+    else
     {
         pos($$l)--;
         if (substr($$l, pos($$l), 1) eq "\n")
@@ -544,11 +548,7 @@
             $is_para_end = 1;
         }
     }
-    else
-    {
-        $is_para_end = 1;
-    }
-    
+
     if ($text !~ /\S/)
     {
         return;
diff -r 6ea675bc3f72 -r c8456a50f9e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:36:38 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:43:12 2011 +0000
@@ -140,7 +140,7 @@
 
     my $l = $self->curr_line_ref();
 
-    my $is_start = ($self->curr_pos() == 0);
+    my $is_start = $self->at_line_start;
 
     if ($$l =~ m{\G\[}cg)
     {
@@ -203,7 +203,7 @@
 
     return
     (
-           (pos($$l) == 0) 
+        $self->at_line_start()
         && (! $self->_top_is_desc())
         && ($$l =~ m{\A[^\[<][^:]*:})
     );
@@ -257,11 +257,6 @@
     my $elem = $status->{'elem'};
     my $is_para_end = $status->{'para_end'};
     my $is_saying = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying");
-    #my $is_para =
-    #    (($self->curr_pos() == 0) && 
-    #     (${$self->curr_line_ref()} =~ m{\G\n?\z})
-    #    );
-    # Trying out this one:
     my $is_para = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph");
 
     my $in_para = $self->_in_para();

changeset:   335:6ea675bc3f72
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:36:38 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _is_there_a_speech_unit.


diff -r 47f12bb7f05a -r 6ea675bc3f72 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:32:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:36:38 2011 +0000
@@ -195,19 +195,29 @@
     return qr{(?:[\<\[\]]|^\n?$)}ms;
 }
 
+sub _is_there_a_speech_unit
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    return
+    (
+           (pos($$l) == 0) 
+        && (! $self->_top_is_desc())
+        && ($$l =~ m{\A[^\[<][^:]*:})
+    );
+}
+
 around '_parse_non_tag_text_unit' => sub {
     my ($orig, $self) = @_;
 
-    my $l = $self->curr_line_ref();
-
-    if ((pos($$l) == 0) && (! $self->_top_is_desc()) && ($$l =~ m{\A[^\[<][^:]*:}))
-    {
-        return $self->_parse_speech_unit();
-    }
-    else
-    {
-        return $self->$orig();
-    }
+    return
+    (
+        $self->_is_there_a_speech_unit()
+        ? $self->_parse_speech_unit()
+        : $self->$orig()
+    );
 };
 
 sub _look_for_tag_opener

changeset:   334:47f12bb7f05a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:32:06 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Add a missing return for a sub.


diff -r 65acf3a9e369 -r 47f12bb7f05a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:29:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:32:06 2011 +0000
@@ -82,6 +82,8 @@
     my $self = shift;
 
     $self->skip_multiline_space();
+
+    return;
 };
 
 sub _calc_open_para

changeset:   333:65acf3a9e369
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:29:55 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Add an empty line space between methods.


diff -r 48b6d9246057 -r 65acf3a9e369 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:29:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:29:55 2011 +0000
@@ -83,6 +83,7 @@
 
     $self->skip_multiline_space();
 };
+
 sub _calc_open_para
 {
     my $self = shift;

changeset:   332:48b6d9246057
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:29:02 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactored a method.


diff -r e2d955b03e0f -r 48b6d9246057 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:21:34 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:29:02 2011 +0000
@@ -83,22 +83,25 @@
 
     $self->skip_multiline_space();
 };
+sub _calc_open_para
+{
+    my $self = shift;
+
+    return
+        XML::Grammar::Fiction::Struct::Tag::Para->new(
+            name => "p",
+            is_standalone => 0,
+            line => $self->line_num(),
+            attrs => [],
+            children => [],
+        );
+}
 
 sub _handle_open_para
 {
     my ($self, $event) = @_;
 
-    my $new_elem = 
-        XML::Grammar::Fiction::Struct::Tag::Para->new(
-            name => "p",
-            is_standalone => 0,
-            line => $self->line_num(),
-            attrs => [],
-        );
-
-    $new_elem->children([]);
-
-    $self->_push_tag($new_elem);
+    $self->_push_tag($self->_calc_open_para());
 
     $self->_in_para(1);
 

changeset:   331:e2d955b03e0f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:21:34 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Removed an assert that is no longer needed.


diff -r 8eb5ded40fe1 -r e2d955b03e0f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:17:26 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:21:34 2011 +0000
@@ -59,12 +59,6 @@
         $in_para = 1;
     }
 
-    # This is an assert / sanity check.
-    if (!defined($elem))
-    {
-        Carp::confess ('$elem is undefined');
-    }
-
     $self->_enqueue_event(
         XML::Grammar::FictionBase::Event->new(
             {type => "elem", elem => $elem}

changeset:   330:8eb5ded40fe1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:17:26 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
description:
Minor documentation fix.


diff -r 8d0b40366919 -r 8eb5ded40fe1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 15:14:29 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 15:17:26 2011 +0000
@@ -787,7 +787,7 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
+XML::Grammar::FictionBase::FromProto::Parser::XmlIterator - line iterator base
 class with some nested XMLisms.
 
 B<For internal use only>.

changeset:   329:8d0b40366919
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:14:29 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Refactoring - placed XmlIterator under FictionBase.


diff -r 5b009f4e8980 -r 8d0b40366919 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 23 15:07:14 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 23 15:14:29 2011 +0000
@@ -19,13 +19,13 @@
 lib/XML/Grammar/Fiction/App/ToHTML.pm
 lib/XML/Grammar/FictionBase/Event.pm
 lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
+lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
 lib/XML/Grammar/FictionBase/TagsTree2XML.pm
 lib/XML/Grammar/FictionBase/XSLT/Converter.pm
 lib/XML/Grammar/Fiction/Err.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
 lib/XML/Grammar/Fiction/RNG_Renderer.pm
diff -r 5b009f4e8980 -r 8d0b40366919 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:07:14 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon May 23 15:14:29 2011 +0000
@@ -5,7 +5,7 @@
 
 use Moose;
 
-extends("XML::Grammar::Fiction::FromProto::Parser::XmlIterator");
+extends("XML::Grammar::FictionBase::FromProto::Parser::XmlIterator");
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
diff -r 5b009f4e8980 -r 8d0b40366919 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 15:07:14 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,856 +0,0 @@
-package XML::Grammar::Fiction::FromProto::Parser::XmlIterator;
-
-use strict;
-use warnings;
-
-use Moose;
-
-use XML::Grammar::Fiction::Err;
-use XML::Grammar::Fiction::Struct::Tag;
-use XML::Grammar::FictionBase::Event;
-
-extends("XML::Grammar::FictionBase::FromProto::Parser::LineIterator");
-
-has "_tags_stack" =>
-(
-    isa => "ArrayRef",
-    is => "rw",
-    default => sub { [] },
-    traits => ['Array'],
-    handles =>
-    {
-        '_push_tag' => 'push',
-        '_grep_tags_stack' => 'grep',
-        '_tag_stack_is_empty' => 'is_empty',
-        '_pop_tag' => 'pop',
-        '_get_tag' => 'get',
-    },
-);
-
-has "_events_queue" =>
-(
-    isa => "ArrayRef[XML::Grammar::FictionBase::Event]",
-    # isa => "ArrayRef",
-    is => "rw", 
-    default => sub { []; },
-    traits => ['Array'],
-    handles =>
-    {
-        _enqueue_event => 'push',
-        _extract_event => 'shift',
-        _no_events => 'is_empty',
-        _clear_events => 'clear',
-    },
-);
-
-has '_ret_tag' =>
-(
-    is => "rw",
-    # TODO : add isa.
-    predicate => "_has_ret_tag",
-    clearer => "_clear_ret_tag",
-);
-
-# Whether we are inside a paragraph or not.
-has "_in_para" => (isa => "Bool", is => "rw", default => 0,);
-
-sub _get_id_regex
-{
-    return qr{[a-zA-Z_\-]+};
-}
-
-sub _top_tag
-{
-    my $self = shift;
-    return $self->_get_tag(-1);
-}
-
-sub _add_to_top_tag
-{
-    my ($self, $child) = @_;
-
-    $self->_top_tag->append_child($child);
-
-    return;
-}
-
-# TODO : Maybe move to a different sub-class or role.
-sub _new_empty_list
-{
-    my $self = shift;
-    return $self->_new_list([]);
-}
-
-sub _new_node
-{
-    my $self = shift;
-    my $args = shift;
-
-    # t == type
-    my $class = 
-        "XML::Grammar::Fiction::FromProto::Node::"
-        . delete($args->{'t'})
-        ;
-
-    return $class->new(%$args);
-}
-
-
-sub _create_elem
-{
-    my $self = shift;
-    my $open = shift;
-
-    my $children = @_ ? shift(@_) : $self->_new_empty_list();
-
-    return
-        $self->_new_node(
-            {
-                t => (
-                    $open->name() eq "desc" ? "Description" 
-                    : $open->name() eq "innerdesc" ? "InnerDesc"
-                    : "Element"
-                ),
-                name => $open->name(),
-                children => $children,
-                attrs => $open->attrs(),
-                open_line => $open->line(),
-            }
-        );
-}
-
-sub _new_list
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "List",
-            contents => $contents,
-        }
-    );
-}
-
-sub _new_para
-{
-    my $self = shift;
-    my $contents = shift;
-
-    # This is an assert
-    if (List::MoreUtils::any 
-        { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
-        @{$contents || []}
-        )
-    {
-        Carp::confess (qq{Para contains a saying.});
-    }
-
-    # This is an assert
-    if (List::MoreUtils::any 
-        { !defined($_) }
-        @{$contents || []}
-        )
-    {
-        Carp::confess (qq{Para contains an undef member.});
-    }
-
-
-    return $self->_new_node(
-        {
-            t => "Paragraph",
-            children => $self->_new_list($contents),
-        }
-    );
-}
-
-sub _new_text
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "Text",
-            children => $self->_new_list($contents),
-        }
-    );
-}
-
-sub _new_comment
-{
-    my $self = shift;
-    my $text = shift;
-
-    return $self->_new_node(
-        {
-            t => "Comment",
-            text => $text,
-        }
-    );
-}
-
-sub _parse_opening_tag_attrs
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    my @attrs;
-
-    my $id_regex = $self->_get_id_regex();
-
-    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-    {
-        push @attrs, { 'key' => $1, 'value' => $2, };
-    }
-
-    return \@attrs;
-}
-
-sub _opening_tag_asserts
-{
-    my $self = shift;
-
-    if ($self->eof)
-    {
-        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
-    }
-
-    if (!defined($self->curr_pos()))
-    {
-        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
-    }
-
-    return;
-}
-
-sub _parse_opening_tag
-{
-    my $self = shift;
-
-    $self->_opening_tag_asserts;
-
-    my $l = $self->curr_line_ref();
-
-    my $id_regex = $self->_get_id_regex();
-
-    if ($$l !~ m{\G<($id_regex)}cg)
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
-            "Cannot match opening tag.",
-        );
-    }
-
-    my $id = $1;
-
-    my $attrs = $self->_parse_opening_tag_attrs();
-
-    my $is_standalone = 0;
-    if ($$l =~ m{\G\s*/\s*>}cg)
-    {
-        $is_standalone = 1;
-    }
-    elsif ($$l !~ m{\G>}g)
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket',
-            "Cannot match the \">\" of the opening tag",
-        );
-    }
-    
-    return XML::Grammar::Fiction::Struct::Tag->new(
-        name => $id,
-        is_standalone => $is_standalone,
-        line => $self->line_num(),
-        attrs => $attrs,
-    );
-}
-
-sub _parse_closing_tag
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    my $id_regex = $self->_get_id_regex();
-
-    if ($$l !~ m{\G</($id_regex)>}g)
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
-            "Cannot match closing tag",
-        );
-    }
-
-    return XML::Grammar::Fiction::Struct::Tag->new(
-        name => $1,
-        line => $self->line_num(),
-    );
-}
-
-sub _check_for_open_tag
-{
-    my $self = shift;
-
-    if ($self->_tag_stack_is_empty())
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
-            "Cannot match opening tag.",
-        );
-    }
-
-    return;
-}
-
-sub _is_event_a_saying
-{
-    my ($self, $event) = @_;
-
-    return $event->is_tag_of_name("saying");
-}
-
-sub _is_event_a_para
-{
-    my ($self, $event) = @_;
-
-    return $event->is_tag_of_name("para");
-}
-
-sub _is_event_elem
-{
-    my ($self, $event) = @_;
-
-    return $event->type() eq "elem";
-}
-
-sub _handle_event
-{
-    my ($self, $event) = @_;
-
-    if ((! $self->_check_and_handle_tag_event($event))
-        && $self->_is_event_elem($event)
-    )
-    {
-        $self->_handle_elem_event($event);
-    }
-
-    return;
-}
-
-sub _check_and_handle_tag_event
-{
-    my ($self, $event) = @_;
-
-    foreach my $tag_name (@{$self->_list_valid_tag_events()})
-    {
-        if ($event->is_tag_of_name($tag_name))
-        {
-            my $type = $event->is_open() ? "open" : "close";
-            
-            my $method = "_handle_${type}_${tag_name}";
-
-            $self->$method($event);
-
-            return 1;
-        }
-    }
-
-    return;
-}
-
-sub _handle_para_event
-{
-    my ($self, $event) = @_;
-
-    return
-          $event->is_open()
-        ? $self->_handle_open_para($event)
-        : $self->_handle_close_para($event)
-        ;
-}
-
-sub _handle_elem_event
-{
-    my ($self, $event) = @_;
-
-    $self->_add_to_top_tag( $event->elem());
-
-    return;
-}
-
-sub _handle_non_tag_text
-{
-    my $self = shift;
-
-    $self->_check_for_open_tag();
-
-    my $contents = $self->_parse_text();
-
-    foreach my $event (@$contents)
-    {
-        $self->_handle_event($event);
-    }
-
-    return;
-}
-
-
-sub _look_for_and_handle_tag
-{
-    my $self = shift;
-
-    my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
-
-    # Check if it's a closing tag.
-    if ($is_close)
-    {
-        return $self->_handle_close_tag();
-    }
-    elsif ($is_tag_cond)
-    {
-        $self->_handle_open_tag();
-    }
-    else
-    {
-        $self->_handle_non_tag_text();
-    }
-    return;
-}
-
-sub _merge_tag
-{
-    my $self = shift;
-    my $open_tag = shift;
-
-    my $new_elem = 
-        $self->_create_elem(
-            $open_tag, 
-            $self->_new_list($open_tag->detach_children()),
-        );
-
-    if (! $self->_tag_stack_is_empty())
-    {
-        $self->_add_to_top_tag($new_elem);
-        return;
-    }
-    else
-    {
-        return $new_elem;
-    }
-}
-
-sub _handle_close_tag
-{
-    my $self = shift;
-
-    my $close = $self->_parse_closing_tag();
-
-    my $open = $self->_pop_tag();
-
-    if ($open->name() ne $close->name())
-    {
-        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
-            error => "Tags do not match",
-            opening_tag => $open,
-            closing_tag => $close,
-        );
-    }
-
-    return $self->_merge_tag($open);
-}
-
-sub _look_ahead_for_comment
-{
-    my $self = shift;
-
-    if ($self->curr_line_continues_with(qr{<!--}))
-    {
-        my $text = $self->consume_up_to(qr{-->});
-
-        $self->_add_to_top_tag(
-            $self->_new_comment($text),
-        );
-
-        return 1;
-    }
-    else
-    {
-        return;
-    }
-}
-
-sub _decode_entities_in_text
-{
-    my ($self, $orig_text) = @_;
-
-    my $ret = '';
-
-    # Incrementally parse $text for entities.
-    pos($orig_text) = 0;
-
-    while ($orig_text =~ m{\G(.*?)(\&|\z)}msg)
-    {
-        my ($before, $indicator) = ($1, $2);
-
-        $ret .= $before;
-
-        if ($indicator eq '&')
-        {
-            if ($orig_text =~ m{\G(\#?\w+;)}cg)
-            {
-                $ret .= HTML::Entities::decode_entities("&$1");
-            }
-            else
-            {
-                Carp::confess(
-                    sprintf(
-                        "Cannot match entity '%s' at line %d",
-                        substr($orig_text, pos($orig_text)-1, 10),
-                        $self->line_num(),
-                    )
-                );
-            }
-        }
-    }
-
-    return $ret;
-}
-
-sub _parse_non_tag_text_unit
-{
-    my $self = shift;
-
-    my $orig_text = $self->consume_up_to(
-        $self->_non_tag_text_unit_consume_regex
-    );
-
-    my $text = $self->_decode_entities_in_text($orig_text);
-
-    my $l = $self->curr_line_ref();
-
-    my $ret_elem = $self->_new_text([$text]);
-    my $is_para_end = 0;
-
-    # Demote the cursor to before the < of the tag.
-    #
-    if (pos($$l) > 0)
-    {
-        pos($$l)--;
-        if (substr($$l, pos($$l), 1) eq "\n")
-        {
-            $is_para_end = 1;
-        }
-    }
-    else
-    {
-        $is_para_end = 1;
-    }
-    
-    if ($text !~ /\S/)
-    {
-        return;
-    }
-    else
-    {
-        return
-        {
-            elem => $ret_elem,
-            para_end => $is_para_end,
-        };
-    }
-}
-
-sub _parse_text_unit
-{
-    my $self = shift;
-
-    if (defined(my $event = $self->_extract_event()))
-    {
-        return $event;
-    }
-    else
-    {
-        $self->_generate_text_unit_events();
-        return $self->_extract_event();
-    }
-}
-
-sub _flush_events 
-{
-    my $self = shift;
-
-    my @ret = @{$self->_events_queue()};
-
-    $self->_clear_events;
-
-    return \@ret;
-}
-
-sub _parse_text
-{
-    my $self = shift;
-
-    my @ret;
-
-    while (my $unit = $self->_parse_text_unit())
-    {
-        push @ret, $unit;
-
-        if ($unit->is_open_or_close)
-        {
-            return [@ret, @{$self->_flush_events()}];
-        }
-    }
-
-    return \@ret;
-}
-
-sub _look_for_tag_opener
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    if ($$l =~ m{\G(<(?:/)?)}cg)
-    {
-        return $1;
-    }
-    else
-    {
-        return;
-    }
-}
-
-sub _is_closing_tag { 
-    my $self = shift;
-    my $tag_start = shift;
-
-    return $tag_start =~ m{/};
-}
-
-sub _generate_tag_event
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-    my $orig_pos = pos($$l);
-
-    if (defined(my $tag_start = $self->_look_for_tag_opener()))
-    {
-        # If it's a tag.
-
-        # TODO : implement the comment handling.
-        # We have a tag.
-
-        pos($$l) = $orig_pos;
-
-        $self->_enqueue_event(
-            XML::Grammar::FictionBase::Event->new(
-                {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
-            ),
-        );
-
-        return 1;
-    }
-    else
-    {
-        return;
-    }
-}
-
-sub _handle_open_tag
-{
-    my $self = shift;
-
-    my $open = $self->_parse_opening_tag();
-
-    $open->children([]);
-
-    # TODO : add the check for is_standalone in XML-Grammar-Fiction
-    # too.
-    if ($open->is_standalone())
-    {
-        if (defined($self->_merge_tag($open)))
-        {
-            Carp::confess ("Top element/tag cannot be standalone.");
-        }
-        else
-        {
-            return;
-        }
-    }
-    else
-    {
-        $self->_push_tag($open);
-
-        return;
-    }
-}
-
-sub _generate_text_unit_events
-{
-    my $self = shift;
-    
-    # $self->skip_multiline_space();
-
-    if (! $self->_generate_tag_event())
-    {
-        $self->_generate_non_tag_text_event();
-    }
-
-    return;
-}
-
-sub _flush_ret_tag
-{
-    my $self = shift;
-
-    my $ret = $self->_ret_tag();
-
-    $self->_clear_ret_tag();
-
-    return $ret;
-}
-
-sub _main_loop
-{
-    my $self = shift;
-
-    while (! defined($self->_ret_tag()))
-    {
-        $self->_main_loop_iter();
-    }
-
-    return;
-}
-
-sub _parse_all
-{
-    my $self = shift;
-
-    $self->_main_loop();
-
-    return $self->_flush_ret_tag();
-}
-
-sub _assert_not_eof
-{
-    my $self = shift;
-
-    if ($self->eof() && $self->_no_events())
-    {
-        Carp::confess (qq{Reached EOF.});
-    }
-    
-    return;
-}
-
-sub _main_loop_iter
-{
-    my $self = shift;
-
-    $self->_assert_not_eof;
-
-    if ($self->_look_ahead_for_comment)
-    {
-        return;
-    }
-    else
-    {
-        return $self->_main_loop_iter_body;
-    }
-}
-
-sub _attempt_to_calc_new_ret_tag
-{
-    my $self = shift;
-    
-    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
-
-    return;
-}
-
-sub _main_loop_iter_body
-{
-    my $self = shift;
-
-    if ($self->_main_loop_iter_body_prelude())
-    {
-        $self->_attempt_to_calc_new_ret_tag();
-    }
-
-    return;
-}
-
-=head1 NAME
-
-XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
-class with some nested XMLisms.
-
-B<For internal use only>.
-
-=cut
-
-our $VERSION = '0.5.1';
-
-=head1 VERSION
-
-Version 0.5.1
-
-=head1 SYNOPSIS
-
-B<TODO:> write one.
-
-=head1 DESCRIPTION
-
-This is a line iterator with some features for parsing, nested, 
-XML-like grammars.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns the parse tree.
-
-=cut
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    $self->setup_text($text);
-
-    return $self->_parse_all();
-}
-
-=head2 $self->meta()
-
-Leftover from Moose.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 5b009f4e8980 -r 8d0b40366919 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/XmlIterator.pm	Mon May 23 15:14:29 2011 +0000
@@ -0,0 +1,856 @@
+package XML::Grammar::FictionBase::FromProto::Parser::XmlIterator;
+
+use strict;
+use warnings;
+
+use Moose;
+
+use XML::Grammar::Fiction::Err;
+use XML::Grammar::Fiction::Struct::Tag;
+use XML::Grammar::FictionBase::Event;
+
+extends("XML::Grammar::FictionBase::FromProto::Parser::LineIterator");
+
+has "_tags_stack" =>
+(
+    isa => "ArrayRef",
+    is => "rw",
+    default => sub { [] },
+    traits => ['Array'],
+    handles =>
+    {
+        '_push_tag' => 'push',
+        '_grep_tags_stack' => 'grep',
+        '_tag_stack_is_empty' => 'is_empty',
+        '_pop_tag' => 'pop',
+        '_get_tag' => 'get',
+    },
+);
+
+has "_events_queue" =>
+(
+    isa => "ArrayRef[XML::Grammar::FictionBase::Event]",
+    # isa => "ArrayRef",
+    is => "rw", 
+    default => sub { []; },
+    traits => ['Array'],
+    handles =>
+    {
+        _enqueue_event => 'push',
+        _extract_event => 'shift',
+        _no_events => 'is_empty',
+        _clear_events => 'clear',
+    },
+);
+
+has '_ret_tag' =>
+(
+    is => "rw",
+    # TODO : add isa.
+    predicate => "_has_ret_tag",
+    clearer => "_clear_ret_tag",
+);
+
+# Whether we are inside a paragraph or not.
+has "_in_para" => (isa => "Bool", is => "rw", default => 0,);
+
+sub _get_id_regex
+{
+    return qr{[a-zA-Z_\-]+};
+}
+
+sub _top_tag
+{
+    my $self = shift;
+    return $self->_get_tag(-1);
+}
+
+sub _add_to_top_tag
+{
+    my ($self, $child) = @_;
+
+    $self->_top_tag->append_child($child);
+
+    return;
+}
+
+# TODO : Maybe move to a different sub-class or role.
+sub _new_empty_list
+{
+    my $self = shift;
+    return $self->_new_list([]);
+}
+
+sub _new_node
+{
+    my $self = shift;
+    my $args = shift;
+
+    # t == type
+    my $class = 
+        "XML::Grammar::Fiction::FromProto::Node::"
+        . delete($args->{'t'})
+        ;
+
+    return $class->new(%$args);
+}
+
+
+sub _create_elem
+{
+    my $self = shift;
+    my $open = shift;
+
+    my $children = @_ ? shift(@_) : $self->_new_empty_list();
+
+    return
+        $self->_new_node(
+            {
+                t => (
+                    $open->name() eq "desc" ? "Description" 
+                    : $open->name() eq "innerdesc" ? "InnerDesc"
+                    : "Element"
+                ),
+                name => $open->name(),
+                children => $children,
+                attrs => $open->attrs(),
+                open_line => $open->line(),
+            }
+        );
+}
+
+sub _new_list
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "List",
+            contents => $contents,
+        }
+    );
+}
+
+sub _new_para
+{
+    my $self = shift;
+    my $contents = shift;
+
+    # This is an assert
+    if (List::MoreUtils::any 
+        { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
+        @{$contents || []}
+        )
+    {
+        Carp::confess (qq{Para contains a saying.});
+    }
+
+    # This is an assert
+    if (List::MoreUtils::any 
+        { !defined($_) }
+        @{$contents || []}
+        )
+    {
+        Carp::confess (qq{Para contains an undef member.});
+    }
+
+
+    return $self->_new_node(
+        {
+            t => "Paragraph",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
+sub _new_text
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "Text",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
+sub _new_comment
+{
+    my $self = shift;
+    my $text = shift;
+
+    return $self->_new_node(
+        {
+            t => "Comment",
+            text => $text,
+        }
+    );
+}
+
+sub _parse_opening_tag_attrs
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    my @attrs;
+
+    my $id_regex = $self->_get_id_regex();
+
+    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $1, 'value' => $2, };
+    }
+
+    return \@attrs;
+}
+
+sub _opening_tag_asserts
+{
+    my $self = shift;
+
+    if ($self->eof)
+    {
+        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
+    }
+
+    if (!defined($self->curr_pos()))
+    {
+        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
+    }
+
+    return;
+}
+
+sub _parse_opening_tag
+{
+    my $self = shift;
+
+    $self->_opening_tag_asserts;
+
+    my $l = $self->curr_line_ref();
+
+    my $id_regex = $self->_get_id_regex();
+
+    if ($$l !~ m{\G<($id_regex)}cg)
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
+            "Cannot match opening tag.",
+        );
+    }
+
+    my $id = $1;
+
+    my $attrs = $self->_parse_opening_tag_attrs();
+
+    my $is_standalone = 0;
+    if ($$l =~ m{\G\s*/\s*>}cg)
+    {
+        $is_standalone = 1;
+    }
+    elsif ($$l !~ m{\G>}g)
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket',
+            "Cannot match the \">\" of the opening tag",
+        );
+    }
+    
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $id,
+        is_standalone => $is_standalone,
+        line => $self->line_num(),
+        attrs => $attrs,
+    );
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    my $id_regex = $self->_get_id_regex();
+
+    if ($$l !~ m{\G</($id_regex)>}g)
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
+            "Cannot match closing tag",
+        );
+    }
+
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $1,
+        line => $self->line_num(),
+    );
+}
+
+sub _check_for_open_tag
+{
+    my $self = shift;
+
+    if ($self->_tag_stack_is_empty())
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
+            "Cannot match opening tag.",
+        );
+    }
+
+    return;
+}
+
+sub _is_event_a_saying
+{
+    my ($self, $event) = @_;
+
+    return $event->is_tag_of_name("saying");
+}
+
+sub _is_event_a_para
+{
+    my ($self, $event) = @_;
+
+    return $event->is_tag_of_name("para");
+}
+
+sub _is_event_elem
+{
+    my ($self, $event) = @_;
+
+    return $event->type() eq "elem";
+}
+
+sub _handle_event
+{
+    my ($self, $event) = @_;
+
+    if ((! $self->_check_and_handle_tag_event($event))
+        && $self->_is_event_elem($event)
+    )
+    {
+        $self->_handle_elem_event($event);
+    }
+
+    return;
+}
+
+sub _check_and_handle_tag_event
+{
+    my ($self, $event) = @_;
+
+    foreach my $tag_name (@{$self->_list_valid_tag_events()})
+    {
+        if ($event->is_tag_of_name($tag_name))
+        {
+            my $type = $event->is_open() ? "open" : "close";
+            
+            my $method = "_handle_${type}_${tag_name}";
+
+            $self->$method($event);
+
+            return 1;
+        }
+    }
+
+    return;
+}
+
+sub _handle_para_event
+{
+    my ($self, $event) = @_;
+
+    return
+          $event->is_open()
+        ? $self->_handle_open_para($event)
+        : $self->_handle_close_para($event)
+        ;
+}
+
+sub _handle_elem_event
+{
+    my ($self, $event) = @_;
+
+    $self->_add_to_top_tag( $event->elem());
+
+    return;
+}
+
+sub _handle_non_tag_text
+{
+    my $self = shift;
+
+    $self->_check_for_open_tag();
+
+    my $contents = $self->_parse_text();
+
+    foreach my $event (@$contents)
+    {
+        $self->_handle_event($event);
+    }
+
+    return;
+}
+
+
+sub _look_for_and_handle_tag
+{
+    my $self = shift;
+
+    my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
+
+    # Check if it's a closing tag.
+    if ($is_close)
+    {
+        return $self->_handle_close_tag();
+    }
+    elsif ($is_tag_cond)
+    {
+        $self->_handle_open_tag();
+    }
+    else
+    {
+        $self->_handle_non_tag_text();
+    }
+    return;
+}
+
+sub _merge_tag
+{
+    my $self = shift;
+    my $open_tag = shift;
+
+    my $new_elem = 
+        $self->_create_elem(
+            $open_tag, 
+            $self->_new_list($open_tag->detach_children()),
+        );
+
+    if (! $self->_tag_stack_is_empty())
+    {
+        $self->_add_to_top_tag($new_elem);
+        return;
+    }
+    else
+    {
+        return $new_elem;
+    }
+}
+
+sub _handle_close_tag
+{
+    my $self = shift;
+
+    my $close = $self->_parse_closing_tag();
+
+    my $open = $self->_pop_tag();
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    return $self->_merge_tag($open);
+}
+
+sub _look_ahead_for_comment
+{
+    my $self = shift;
+
+    if ($self->curr_line_continues_with(qr{<!--}))
+    {
+        my $text = $self->consume_up_to(qr{-->});
+
+        $self->_add_to_top_tag(
+            $self->_new_comment($text),
+        );
+
+        return 1;
+    }
+    else
+    {
+        return;
+    }
+}
+
+sub _decode_entities_in_text
+{
+    my ($self, $orig_text) = @_;
+
+    my $ret = '';
+
+    # Incrementally parse $text for entities.
+    pos($orig_text) = 0;
+
+    while ($orig_text =~ m{\G(.*?)(\&|\z)}msg)
+    {
+        my ($before, $indicator) = ($1, $2);
+
+        $ret .= $before;
+
+        if ($indicator eq '&')
+        {
+            if ($orig_text =~ m{\G(\#?\w+;)}cg)
+            {
+                $ret .= HTML::Entities::decode_entities("&$1");
+            }
+            else
+            {
+                Carp::confess(
+                    sprintf(
+                        "Cannot match entity '%s' at line %d",
+                        substr($orig_text, pos($orig_text)-1, 10),
+                        $self->line_num(),
+                    )
+                );
+            }
+        }
+    }
+
+    return $ret;
+}
+
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    my $orig_text = $self->consume_up_to(
+        $self->_non_tag_text_unit_consume_regex
+    );
+
+    my $text = $self->_decode_entities_in_text($orig_text);
+
+    my $l = $self->curr_line_ref();
+
+    my $ret_elem = $self->_new_text([$text]);
+    my $is_para_end = 0;
+
+    # Demote the cursor to before the < of the tag.
+    #
+    if (pos($$l) > 0)
+    {
+        pos($$l)--;
+        if (substr($$l, pos($$l), 1) eq "\n")
+        {
+            $is_para_end = 1;
+        }
+    }
+    else
+    {
+        $is_para_end = 1;
+    }
+    
+    if ($text !~ /\S/)
+    {
+        return;
+    }
+    else
+    {
+        return
+        {
+            elem => $ret_elem,
+            para_end => $is_para_end,
+        };
+    }
+}
+
+sub _parse_text_unit
+{
+    my $self = shift;
+
+    if (defined(my $event = $self->_extract_event()))
+    {
+        return $event;
+    }
+    else
+    {
+        $self->_generate_text_unit_events();
+        return $self->_extract_event();
+    }
+}
+
+sub _flush_events 
+{
+    my $self = shift;
+
+    my @ret = @{$self->_events_queue()};
+
+    $self->_clear_events;
+
+    return \@ret;
+}
+
+sub _parse_text
+{
+    my $self = shift;
+
+    my @ret;
+
+    while (my $unit = $self->_parse_text_unit())
+    {
+        push @ret, $unit;
+
+        if ($unit->is_open_or_close)
+        {
+            return [@ret, @{$self->_flush_events()}];
+        }
+    }
+
+    return \@ret;
+}
+
+sub _look_for_tag_opener
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    if ($$l =~ m{\G(<(?:/)?)}cg)
+    {
+        return $1;
+    }
+    else
+    {
+        return;
+    }
+}
+
+sub _is_closing_tag { 
+    my $self = shift;
+    my $tag_start = shift;
+
+    return $tag_start =~ m{/};
+}
+
+sub _generate_tag_event
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+    my $orig_pos = pos($$l);
+
+    if (defined(my $tag_start = $self->_look_for_tag_opener()))
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        pos($$l) = $orig_pos;
+
+        $self->_enqueue_event(
+            XML::Grammar::FictionBase::Event->new(
+                {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
+            ),
+        );
+
+        return 1;
+    }
+    else
+    {
+        return;
+    }
+}
+
+sub _handle_open_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    $open->children([]);
+
+    # TODO : add the check for is_standalone in XML-Grammar-Fiction
+    # too.
+    if ($open->is_standalone())
+    {
+        if (defined($self->_merge_tag($open)))
+        {
+            Carp::confess ("Top element/tag cannot be standalone.");
+        }
+        else
+        {
+            return;
+        }
+    }
+    else
+    {
+        $self->_push_tag($open);
+
+        return;
+    }
+}
+
+sub _generate_text_unit_events
+{
+    my $self = shift;
+    
+    # $self->skip_multiline_space();
+
+    if (! $self->_generate_tag_event())
+    {
+        $self->_generate_non_tag_text_event();
+    }
+
+    return;
+}
+
+sub _flush_ret_tag
+{
+    my $self = shift;
+
+    my $ret = $self->_ret_tag();
+
+    $self->_clear_ret_tag();
+
+    return $ret;
+}
+
+sub _main_loop
+{
+    my $self = shift;
+
+    while (! defined($self->_ret_tag()))
+    {
+        $self->_main_loop_iter();
+    }
+
+    return;
+}
+
+sub _parse_all
+{
+    my $self = shift;
+
+    $self->_main_loop();
+
+    return $self->_flush_ret_tag();
+}
+
+sub _assert_not_eof
+{
+    my $self = shift;
+
+    if ($self->eof() && $self->_no_events())
+    {
+        Carp::confess (qq{Reached EOF.});
+    }
+    
+    return;
+}
+
+sub _main_loop_iter
+{
+    my $self = shift;
+
+    $self->_assert_not_eof;
+
+    if ($self->_look_ahead_for_comment)
+    {
+        return;
+    }
+    else
+    {
+        return $self->_main_loop_iter_body;
+    }
+}
+
+sub _attempt_to_calc_new_ret_tag
+{
+    my $self = shift;
+    
+    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
+
+    return;
+}
+
+sub _main_loop_iter_body
+{
+    my $self = shift;
+
+    if ($self->_main_loop_iter_body_prelude())
+    {
+        $self->_attempt_to_calc_new_ret_tag();
+    }
+
+    return;
+}
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
+class with some nested XMLisms.
+
+B<For internal use only>.
+
+=cut
+
+our $VERSION = '0.5.1';
+
+=head1 VERSION
+
+Version 0.5.1
+
+=head1 SYNOPSIS
+
+B<TODO:> write one.
+
+=head1 DESCRIPTION
+
+This is a line iterator with some features for parsing, nested, 
+XML-like grammars.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns the parse tree.
+
+=cut
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    $self->setup_text($text);
+
+    return $self->_parse_all();
+}
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 5b009f4e8980 -r 8d0b40366919 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:07:14 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon May 23 15:14:29 2011 +0000
@@ -5,7 +5,7 @@
 
 use Moose;
 
-extends( 'XML::Grammar::Fiction::FromProto::Parser::XmlIterator' );
+extends( 'XML::Grammar::FictionBase::FromProto::Parser::XmlIterator' );
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 use XML::Grammar::Fiction::Struct::Tag;

changeset:   328:5b009f4e8980
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:07:14 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Refactoring: inlined into an else.


diff -r fe9116348dc4 -r 5b009f4e8980 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 15:03:35 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 15:07:14 2011 +0000
@@ -758,8 +758,10 @@
     {
         return;
     }
-
-    return $self->_main_loop_iter_body;
+    else
+    {
+        return $self->_main_loop_iter_body;
+    }
 }
 
 sub _attempt_to_calc_new_ret_tag

changeset:   327:fe9116348dc4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 15:03:35 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Refactoring: extract the other clause into an else.

r4777 .


diff -r 0adad877c7cd -r fe9116348dc4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:59:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 15:03:35 2011 +0000
@@ -682,10 +682,12 @@
             return;
         }
     }
+    else
+    {
+        $self->_push_tag($open);
 
-    $self->_push_tag($open);
-
-    return;
+        return;
+    }
 }
 
 sub _generate_text_unit_events

changeset:   326:0adad877c7cd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:59:47 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
description:
More refactoring.


diff -r 237a49e4d5ea -r 0adad877c7cd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:53:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:59:47 2011 +0000
@@ -599,9 +599,7 @@
     {
         push @ret, $unit;
 
-        my $type = $unit->{'type'};
-
-        if (($type eq "close") || ($type eq "open"))
+        if ($unit->is_open_or_close)
         {
             return [@ret, @{$self->_flush_events()}];
         }
diff -r 237a49e4d5ea -r 0adad877c7cd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon May 23 14:53:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Mon May 23 14:59:47 2011 +0000
@@ -31,6 +31,13 @@
     return ($self->type() eq "open");
 }
 
+sub is_open_or_close
+{
+    my $self = shift;
+
+    return (($self->type() eq "open") || ($self->type() eq "close"));
+}
+
 1;
 
 =head2 $event->is_tag_of_name($name)
@@ -41,6 +48,10 @@
 
 Returns true if the $event 's type is "open".
 
+=head2 $event->is_open_or_close()
+
+Returns true if the $event 's type is either "open" or "close".
+
 =head2 $self->meta()
 
 Leftover from Moose.

changeset:   325:237a49e4d5ea
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:53:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Simplified _parse_text .


diff -r 7dabf784b96a -r 237a49e4d5ea perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:50:09 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:53:58 2011 +0000
@@ -578,20 +578,32 @@
     }
 }
 
+sub _flush_events 
+{
+    my $self = shift;
+
+    my @ret = @{$self->_events_queue()};
+
+    $self->_clear_events;
+
+    return \@ret;
+}
+
 sub _parse_text
 {
     my $self = shift;
 
     my @ret;
+
     while (my $unit = $self->_parse_text_unit())
     {
         push @ret, $unit;
+
         my $type = $unit->{'type'};
+
         if (($type eq "close") || ($type eq "open"))
         {
-            push @ret, @{$self->_events_queue()};
-            $self->_clear_events;
-            return \@ret;
+            return [@ret, @{$self->_flush_events()}];
         }
     }
 

changeset:   324:7dabf784b96a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:50:09 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Extract two methods from _events_queue.

And r4774.


diff -r 6065580c119d -r 7dabf784b96a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:44:36 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:50:09 2011 +0000
@@ -38,6 +38,8 @@
     {
         _enqueue_event => 'push',
         _extract_event => 'shift',
+        _no_events => 'is_empty',
+        _clear_events => 'clear',
     },
 );
 
@@ -588,7 +590,7 @@
         if (($type eq "close") || ($type eq "open"))
         {
             push @ret, @{$self->_events_queue()};
-            $self->_events_queue([]);
+            $self->_clear_events;
             return \@ret;
         }
     }
@@ -726,7 +728,7 @@
 {
     my $self = shift;
 
-    if ($self->eof() && (! @{$self->_events_queue()}))
+    if ($self->eof() && $self->_no_events())
     {
         Carp::confess (qq{Reached EOF.});
     }

changeset:   323:6065580c119d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:44:36 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
description:
Extract the ->eof() method.


diff -r 517fdd3463c9 -r 6065580c119d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:38:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:44:36 2011 +0000
@@ -210,7 +210,7 @@
 {
     my $self = shift;
 
-    if (!defined(${$self->curr_line_ref}))
+    if ($self->eof)
     {
         Carp::confess (qq{Reached EOF in _parse_opening_tag.});
     }
@@ -726,7 +726,7 @@
 {
     my $self = shift;
 
-    if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
+    if ($self->eof() && (! @{$self->_events_queue()}))
     {
         Carp::confess (qq{Reached EOF.});
     }
diff -r 517fdd3463c9 -r 6065580c119d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon May 23 14:38:55 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Mon May 23 14:44:36 2011 +0000
@@ -352,6 +352,18 @@
     }
 }
 
+=head2 eof()
+
+Returns if the parser reached the end of the file.
+
+=cut
+
+sub eof
+{
+    my $self = shift;
+
+    return (!defined( ${ $self->curr_line_ref() } ));
+}
 
 =head2 $self->meta()
 

changeset:   322:517fdd3463c9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:38:55 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Extract _opening_tag_asserts.


diff -r f9822a321d5e -r 517fdd3463c9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:34:15 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:38:55 2011 +0000
@@ -206,26 +206,33 @@
     return \@attrs;
 }
 
+sub _opening_tag_asserts
+{
+    my $self = shift;
+
+    if (!defined(${$self->curr_line_ref}))
+    {
+        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
+    }
+
+    if (!defined($self->curr_pos()))
+    {
+        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
+    }
+
+    return;
+}
+
 sub _parse_opening_tag
 {
     my $self = shift;
 
+    $self->_opening_tag_asserts;
+
     my $l = $self->curr_line_ref();
 
     my $id_regex = $self->_get_id_regex();
 
-    # This is an assert
-    if (!defined($$l))
-    {
-        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
-    }
-
-    # This is an assert
-    if (!defined($self->curr_pos()))
-    {
-        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
-    }
-    
     if ($$l !~ m{\G<($id_regex)}cg)
     {
         $self->throw_text_error(

changeset:   321:f9822a321d5e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:34:15 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Extract an assert_not_eof.


diff -r d50ee6b891b4 -r f9822a321d5e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:18:41 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon May 23 14:34:15 2011 +0000
@@ -715,22 +715,30 @@
     return $self->_flush_ret_tag();
 }
 
-sub _main_loop_iter
+sub _assert_not_eof
 {
     my $self = shift;
 
-    # This is an assert.
     if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
     {
         Carp::confess (qq{Reached EOF.});
     }
     
-    if ($self->_look_ahead_for_comment())
+    return;
+}
+
+sub _main_loop_iter
+{
+    my $self = shift;
+
+    $self->_assert_not_eof;
+
+    if ($self->_look_ahead_for_comment)
     {
         return;
     }
 
-    return $self->_main_loop_iter_body();
+    return $self->_main_loop_iter_body;
 }
 
 sub _attempt_to_calc_new_ret_tag

changeset:   320:d50ee6b891b4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 14:18:41 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-description.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/nested-s.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-tags-inside-paragraphs.xml
description:
Got rid of many unused files in t/fiction/data.

They were leftovers from the XML-Grammar-Screenplay copy-and-paste.


diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 13:52:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 14:18:41 2011 +0000
@@ -2,6 +2,8 @@
 
     * Add the version="5.0" attribute to the top-level tag of the
     DocBook 5/XML generated by extradata/fiction-xml-to-docbook.xslt .
+    * Got rid of leftover files in t/fiction/data that were not used
+    by the tests.
     
 0.5.1       Sun May 22 09:33:43 IDT 2011
     * Fix the handling of entities at the start of the opening line of
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 23 13:52:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 23 14:18:41 2011 +0000
@@ -67,7 +67,6 @@
 t/fiction/data/docbook/with-internal-description.docbook.xml
 t/fiction/data/docbook/with-programlisting.docbook.xml
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
-t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
 t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
 t/fiction/data/proto-text-invalid/leading-space.txt
@@ -75,45 +74,22 @@
 t/fiction/data/proto-text-invalid/not-start-with-tag.txt
 t/fiction/data/proto-text-invalid/wrong-close-tag.txt
 t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
-t/fiction/data/proto-text/nested-s.txt
 t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt
-t/fiction/data/proto-text/scenes-with-titles.txt
 t/fiction/data/proto-text/sections-a-href.txt
 t/fiction/data/proto-text/sections-and-paras.txt
 t/fiction/data/proto-text/sections-p-b-i-comments.txt
 t/fiction/data/proto-text/sections-p-b-i.txt
-t/fiction/data/proto-text/two-nested-s.txt
 t/fiction/data/proto-text/with-blockquote.txt
-t/fiction/data/proto-text/with-brs.txt
-t/fiction/data/proto-text/with-comments.txt
-t/fiction/data/proto-text/with-description.txt
-t/fiction/data/proto-text/with-dialogue.txt
-t/fiction/data/proto-text/with-entities.txt
 t/fiction/data/proto-text/with-internal-description.txt
-t/fiction/data/proto-text/with-multi-line-comments.txt
-t/fiction/data/proto-text/with-multi-para-desc.txt
 t/fiction/data/proto-text/with-programlisting.txt
-t/fiction/data/proto-text/with-tags-inside-paragraphs.txt
 t/fiction/data/proto-text/with-ul-ol-li.txt
-t/fiction/data/xml/dialogue-with-several-paragraphs.xml
-t/fiction/data/xml/nested-s.xml
 t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
-t/fiction/data/xml/scenes-with-titles.xml
 t/fiction/data/xml/sections-a-href.xml
 t/fiction/data/xml/sections-and-paras.xml
 t/fiction/data/xml/sections-p-b-i-comments.xml
 t/fiction/data/xml/sections-p-b-i.xml
-t/fiction/data/xml/two-nested-s.xml
 t/fiction/data/xml/with-blockquote.xml
-t/fiction/data/xml/with-brs.xml
-t/fiction/data/xml/with-comments.xml
-t/fiction/data/xml/with-description.xml
-t/fiction/data/xml/with-dialogue.xml
-t/fiction/data/xml/with-entities.xml
-t/fiction/data/xml/with-multi-line-comments.xml
-t/fiction/data/xml/with-multi-para-desc.xml
 t/fiction/data/xml/with-programlisting.xml
-t/fiction/data/xml/with-tags-inside-paragraphs.xml
 t/fiction/data/xml/with-ul-ol-li.xml
 t/fiction/proto-text-invalid.t
 t/fiction/proto-text-to-xml-using-custom-parser.t
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,22 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++: I shall sling you and bing you till infinity.
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/nested-s.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/nested-s.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/scenes-with-titles.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/scenes-with-titles.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,17 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene" title="A Better Scene">
-</s>
-
-<s id="another-scene">
-</s>
-
-<s id="exodus" title="The Exodus">
-
-Moses: let us get out of here!
-
-Joshua: amen!
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/two-nested-s.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/two-nested-s.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,9 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-<s id="another-scene">
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-brs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-brs.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,21 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.<br />
-I will kill you.<br />
-You will not survive.<br />
-I will kill you.<br />
-I will kill you.<br />
-Ask Jive.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-comments.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,15 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-<!-- David and Goliath are Biblical characters -->
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-description.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-description.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and Goliath are standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-dialogue.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-dialogue.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,13 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-entities.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-entities.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David &amp; Goliath &lt;are&gt; standing by each other.
-
-David is a red-head. &quot;Hello&quot;
-
-Goliath is very tall.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-line-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-line-comments.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-<!-- David and Goliath are Biblical characters 
-
-They are nifty.
--->
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-para-desc.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-para-desc.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and Goliath are standing by each other.
-
-David is a red-head.
-
-Goliath is very tall.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-tags-inside-paragraphs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-tags-inside-paragraphs.txt	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,29 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
-
-++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/dialogue-with-several-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/dialogue-with-several-paragraphs.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,44 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                I'm still waiting.
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                so you are.
-            </para>
-        </saying>
-    </scene>
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/nested-s.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/nested-s.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,12 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene">
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/scenes-with-titles.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/scenes-with-titles.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene" title="A Better Scene">
-            </scene>
-            <scene id="another-scene">
-            </scene>
-            <scene id="exodus" title="The Exodus">
-                <saying character="Moses">
-                    <para>
-                        let us get out of here!
-                    </para>
-                </saying>
-                <saying character="Joshua">
-                    <para>
-                        amen!
-                    </para>
-                </saying>
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/two-nested-s.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/two-nested-s.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,14 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene">
-            </scene>
-            <scene id="another-scene">
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-brs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-brs.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,39 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.<br />
-                I will kill you.<br />
-                You will not survive.<br />
-                I will kill you.<br />
-                I will kill you.<br />
-                Ask Jive.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-comments.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,29 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <!-- David and Goliath are Biblical characters -->
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-description.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,59 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David and Goliath are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-dialogue.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-dialogue.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-entities.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-entities.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David &amp; Goliath &lt;are&gt; standing by each other.
-        </para>
-        <para>
-            David is a red-head. "Hello"
-        </para>
-        <para>
-            Goliath is very tall.
-        </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-line-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-line-comments.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <!-- David and Goliath are Biblical characters 
-
-        They are nifty.
-        -->
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-para-desc.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-para-desc.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David and Goliath are standing by each other.
-        </para>
-        <para>
-            David is a red-head.
-        </para>
-        <para>
-            Goliath is very tall.
-        </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r d18ce9f37312 -r d50ee6b891b4 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-tags-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-tags-inside-paragraphs.xml	Mon May 23 13:52:24 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,61 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>

changeset:   319:d18ce9f37312
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 23 13:52:24 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml
description:
Add the version attribute to the generated DocBook 5/XML.


diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add the version="5.0" attribute to the top-level tag of the
+    DocBook 5/XML generated by extradata/fiction-xml-to-docbook.xslt .
+    
 0.5.1       Sun May 22 09:33:43 IDT 2011
     * Fix the handling of entities at the start of the opening line of
     paragraphs in the Fiction-Text . See 
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Mon May 23 13:52:24 2011 +0000
@@ -19,6 +19,7 @@
         <xsl:attribute name="xml:lang">
             <xsl:value-of select="@xml:lang" />
         </xsl:attribute>
+        <xsl:attribute name="version">5.0</xsl:attribute>
         <info>
             <title>
                 <xsl:value-of select="fic:title" />
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
   <info>
     <title>David vs. Goliath - Part I</title>
   </info>
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
   <info>
     <title>David vs. Goliath - Part I</title>
   </info>
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
   <info>
     <title>David vs. Goliath - Part I</title>
   </info>
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
   <info>
     <title>David vs. Goliath - Part I</title>
   </info>
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
   <info>
     <title>David vs. Goliath - Part I</title>
   </info>
diff -r 893b17c4b533 -r d18ce9f37312 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml	Sun May 22 14:30:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml	Mon May 23 13:52:24 2011 +0000
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="" version="5.0">
   <info>
     <title>David vs. Goliath - Part I</title>
   </info>

changeset:   318:893b17c4b533
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 14:30:12 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
description:
Got rid of XML::Grammar::Fiction::Base .

It was not used.


diff -r 9bd07c22f38c -r 893b17c4b533 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 14:25:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 14:30:12 2011 +0000
@@ -19,7 +19,6 @@
 lib/XML/Grammar/Fiction/App/ToHTML.pm
 lib/XML/Grammar/FictionBase/Event.pm
 lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
-lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/FictionBase/TagsTree2XML.pm
 lib/XML/Grammar/FictionBase/XSLT/Converter.pm
 lib/XML/Grammar/Fiction/Err.pm
diff -r 9bd07c22f38c -r 893b17c4b533 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sun May 22 14:25:20 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,30 +0,0 @@
-package XML::Grammar::Fiction::Base;
-
-use strict;
-use warnings;
-
-use Moose;
-
-=head1 NAME
-
-XML::Grammar::Fiction::Base - base class for XML::Grammar::Fiction
-classes.
-
-=head1 VERSION
-
-Version 0.5.1
-
-=cut
-
-our $VERSION = '0.5.1';
-
-=head1 METHODS
-
-=head2 $package->new({%args});
-
-Constructs a new package
-
-=cut
-
-1;
-

changeset:   317:9bd07c22f38c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 14:25:20 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Renamed ::Event to under XML::Grammar::FictionBase .


diff -r dd01d3439aba -r 9bd07c22f38c perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 14:11:27 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 14:25:20 2011 +0000
@@ -17,12 +17,12 @@
 lib/XML/Grammar/Fiction/App/FromProto.pm
 lib/XML/Grammar/Fiction/App/ToDocBook.pm
 lib/XML/Grammar/Fiction/App/ToHTML.pm
+lib/XML/Grammar/FictionBase/Event.pm
 lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
 lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/FictionBase/TagsTree2XML.pm
 lib/XML/Grammar/FictionBase/XSLT/Converter.pm
 lib/XML/Grammar/Fiction/Err.pm
-lib/XML/Grammar/Fiction/Event.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
diff -r dd01d3439aba -r 9bd07c22f38c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm	Sun May 22 14:11:27 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,69 +0,0 @@
-package XML::Grammar::Fiction::Event;
-
-=head1 NAME
-
-XML::Grammar::Fiction::Event - a parser event.
-
-B<For internal use only>.
-
-=cut
-
-use Moose;
-
-use XML::Grammar::Fiction::FromProto::Nodes;
-
-has 'type' => (isa => "Str", is => "ro");
-has 'tag' => (isa => "Maybe[Str]", is => "ro", predicate => '_has_tag',);
-has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
-has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
-
-sub is_tag_of_name
-{
-    my ($self, $name) = @_;
-
-    return ($self->_has_tag() && ($self->tag() eq $name));
-}
-
-sub is_open
-{
-    my $self = shift;
-
-    return ($self->type() eq "open");
-}
-
-1;
-
-=head2 $event->is_tag_of_name($name)
-
-Determines if the $event is a tag and of name $name.
-
-=head2 $event->is_open()
-
-Returns true if the $event 's type is "open".
-
-=head2 $self->meta()
-
-Leftover from Moose.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
diff -r dd01d3439aba -r 9bd07c22f38c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun May 22 14:11:27 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun May 22 14:25:20 2011 +0000
@@ -11,6 +11,7 @@
 
 use XML::Grammar::Fiction::Struct::Tag;
 use XML::Grammar::Fiction::Err;
+use XML::Grammar::FictionBase::Event;
 
 =head1 NAME
 
@@ -51,7 +52,7 @@
     if ($is_para && !$in_para)
     {
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                { type => "open", tag => "para", }
             ),
         );
@@ -65,7 +66,7 @@
     }
 
     $self->_enqueue_event(
-        XML::Grammar::Fiction::Event->new(
+        XML::Grammar::FictionBase::Event->new(
             {type => "elem", elem => $elem}
         )
     );
@@ -73,7 +74,7 @@
     if ($is_para_end && $in_para)
     {
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 { type => "close", tag => "para" }
             )
         );
diff -r dd01d3439aba -r 9bd07c22f38c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 14:11:27 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 14:25:20 2011 +0000
@@ -7,7 +7,7 @@
 
 use XML::Grammar::Fiction::Err;
 use XML::Grammar::Fiction::Struct::Tag;
-use XML::Grammar::Fiction::Event;
+use XML::Grammar::FictionBase::Event;
 
 extends("XML::Grammar::FictionBase::FromProto::Parser::LineIterator");
 
@@ -29,7 +29,7 @@
 
 has "_events_queue" =>
 (
-    isa => "ArrayRef[XML::Grammar::Fiction::Event]",
+    isa => "ArrayRef[XML::Grammar::FictionBase::Event]",
     # isa => "ArrayRef",
     is => "rw", 
     default => sub { []; },
@@ -629,7 +629,7 @@
         pos($$l) = $orig_pos;
 
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
             ),
         );
diff -r dd01d3439aba -r 9bd07c22f38c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/Event.pm	Sun May 22 14:25:20 2011 +0000
@@ -0,0 +1,69 @@
+package XML::Grammar::FictionBase::Event;
+
+=head1 NAME
+
+XML::Grammar::FictionBase::Event - a parser event.
+
+B<For internal use only>.
+
+=cut
+
+use Moose;
+
+use XML::Grammar::Fiction::FromProto::Nodes;
+
+has 'type' => (isa => "Str", is => "ro");
+has 'tag' => (isa => "Maybe[Str]", is => "ro", predicate => '_has_tag',);
+has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
+has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
+
+sub is_tag_of_name
+{
+    my ($self, $name) = @_;
+
+    return ($self->_has_tag() && ($self->tag() eq $name));
+}
+
+sub is_open
+{
+    my $self = shift;
+
+    return ($self->type() eq "open");
+}
+
+1;
+
+=head2 $event->is_tag_of_name($name)
+
+Determines if the $event is a tag and of name $name.
+
+=head2 $event->is_open()
+
+Returns true if the $event 's type is "open".
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
diff -r dd01d3439aba -r 9bd07c22f38c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun May 22 14:11:27 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun May 22 14:25:20 2011 +0000
@@ -9,6 +9,7 @@
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 use XML::Grammar::Fiction::Struct::Tag;
+use XML::Grammar::FictionBase::Event;
 
 use List::Util ();
 use List::MoreUtils ();
@@ -259,7 +260,7 @@
     if ( ($is_saying || $is_para) && $in_para)
     {
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {type => "close", tag => "para"}
             )
         );
@@ -269,7 +270,7 @@
     if ( $is_saying && $self->_in_saying())
     {
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {type => "close", tag => "saying"}
             )
         );
@@ -278,14 +279,14 @@
     if ($is_saying)
     {
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {type => "open", tag => "saying", tag_elem => $elem, },
             ),
         );
         $was_already_enqueued = 1;
 
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {type => "open", tag => "para"}
             )
         );
@@ -294,7 +295,7 @@
     elsif ($is_para && !$in_para)
     {
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {type => "open", tag => "para"}
             ),
         );
@@ -307,14 +308,14 @@
         if (!$in_para)
         {
             $self->_enqueue_event(
-                XML::Grammar::Fiction::Event->new(
+                XML::Grammar::FictionBase::Event->new(
                     {type => "open", tag => "para"},
                 )
             );
             $in_para = 1;
         }
         $self->_enqueue_event(
-            XML::Grammar::Fiction::Event->new(
+            XML::Grammar::FictionBase::Event->new(
                 {type => "elem", elem => $elem, }
             )
         );

changeset:   316:dd01d3439aba
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 14:11:27 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
description:
Renamed ::LineIterator to under FictionBase.


diff -r 290bb218540a -r dd01d3439aba perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 14:04:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 14:11:27 2011 +0000
@@ -17,13 +17,13 @@
 lib/XML/Grammar/Fiction/App/FromProto.pm
 lib/XML/Grammar/Fiction/App/ToDocBook.pm
 lib/XML/Grammar/Fiction/App/ToHTML.pm
+lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
 lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/FictionBase/TagsTree2XML.pm
 lib/XML/Grammar/FictionBase/XSLT/Converter.pm
 lib/XML/Grammar/Fiction/Err.pm
 lib/XML/Grammar/Fiction/Event.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
-lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
diff -r 290bb218540a -r dd01d3439aba perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sun May 22 14:04:49 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,383 +0,0 @@
-package XML::Grammar::Fiction::FromProto::Parser::LineIterator;
-
-use strict;
-use warnings;
-
-use Moose;
-
-use XML::Grammar::Fiction::Err;
-
-extends("XML::Grammar::Fiction::FromProto::Parser");
-
-has "_curr_line_idx" => (isa => "Int", is => "rw", reader => "line_idx",);
-has "_lines" => (isa => "ArrayRef", is => "rw");
-
-=head1 NAME
-
-XML::Grammar::Fiction::FromProto::Parser::LineIterator - line iterator base
-class for the parser.
-
-B<For internal use only>.
-
-=cut
-
-our $VERSION = '0.5.1';
-
-=head1 VERSION
-
-Version 0.5.1
-
-=head1 SYNOPSIS
-
-B<TODO:> write one.
-
-=head1 DESCRIPTION
-
-This is a line iterator that is useful to handle text (e.g: out of a file)
-and process it incrementally.
-
-=head1 METHODS
-
-=head2 $self->setup_text($multi_line_text)
-
-Use $multi_line_text as the text to process, populate the lines array
-with it and reset the other variables.
-
-=cut
-
-sub setup_text
-{
-    my ($self, $text) = @_;
-
-    # We include the lines trailing newlines for safety.
-    $self->_lines([split(/^/, $text)]);
-
-    $self->_curr_line_idx(0);
-
-    ${$self->curr_line_ref()} =~ m{\A}g;
-
-    return;
-}
-
-=head2 $line_ref = $self->curr_line_ref()
-
-Returns a reference to the current line (a string).
-
-For example:
-
-    my $l_ref = $self->curr_line_ref();
-
-    if ($$l_ref !~ m{\G<tag>}g)
-    {
-        die "Could not match tag.";
-    }
-
-=cut
-
-sub curr_line_ref
-{
-    my $self = shift;
-
-    return \($self->_lines()->[$self->_curr_line_idx()]);
-}
-
-=head2 my $pos = $self->curr_pos()
-
-Returns the current position (using pos($$l)) of the current line.
-
-=cut
-
-sub curr_pos
-{
-    my $self = shift;
-
-    return pos(${$self->curr_line_ref()});
-}
-
-=head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
-
-Convenience method to return the line reference and the position.
-
-For example:
-
-    # Check for a tag.
-    my ($l_ref, $p) = $self->curr_line_and_pos();
-
-    my $is_tag_cond = ($$l_ref =~ m{\G<}cg);
-    my $is_close = $is_tag_cond && ($$l_ref =~ m{\G/}cg);
-
-    pos($$l) = $p;
-
-    return ($is_tag_cond, $is_close);
-
-=cut
-
-sub curr_line_and_pos
-{
-    my $self = shift;
-
-    return ($self->curr_line_ref(), $self->curr_pos());
-}
-
-=head2 my $line_copy_ref = $self->curr_line_copy()
-
-Returns a reference to a copy of the current line that is allowed to be 
-tempered with (by assigning to pos() or in a different way.). The line is
-returned as a reference so to avoid destroying its pos() value.
-
-For example:
-
-    sub _look_ahead_for_tag
-    {
-        my $self = shift;
-
-        my $l = $self->curr_line_copy();
-
-        my $is_tag_cond = ($$l =~ m{\G<}cg);
-        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
-
-        return ($is_tag_cond, $is_close);
-    }
-
-=cut
-
-sub curr_line_copy
-{
-    my $self = shift;
-
-    my $l = ${$self->curr_line_ref()} . "";
-
-    pos($l) = $self->curr_pos();
-    
-    return \$l;
-}
-
-=head2 my $line_ref = $self->next_line_ref()
-
-Advance the line pointer and return the next line.
-
-=cut
-
-sub next_line_ref
-{
-    my $self = shift;
-
-    $self->_curr_line_idx($self->_curr_line_idx()+1);
-
-    pos(${$self->curr_line_ref()}) = 0;
-
-    return $self->curr_line_ref();
-}
-
-=head2 $self->skip_space()
-
-Skip whitespace (spaces and tabs) from the current position onwards.
-
-=cut
-
-# Skip the whitespace.
-sub skip_space
-{
-    my $self = shift;
-
-    $self->consume(qr{[ \t]});
-
-    return;
-}
-
-=head2 $self->skip_multiline_space()
-
-Skip multiline space.
-
-=cut
-
-sub skip_multiline_space
-{
-    my $self = shift;
-
-    if (${$self->curr_line_ref()} =~ m{\G.*?\S})
-    {
-        return;
-    }
-
-    $self->consume(qr{\s});
-
-    return;
-}
-
-=head2 $self->curr_line_continues_with($regex)
-
-Matches the current line with $regex starting from the current position and 
-returns the result. The position remains at the original position if the 
-regular expression does not match (using C< qr//cg >).
-
-=cut
-
-sub curr_line_continues_with
-{
-    my ($self, $re) = @_;
-
-    my $l = $self->curr_line_ref();
-
-    return $$l =~ m{\G$re}cg;
-}
-
-=head2 my $line_number = $self->line_idx()
-
-Returns the line index as an integer. It starts from 0 for the 
-first line (like in Perl lines.)
-
-=head2 my $line_number = $self->line_num()
-
-Returns the line number as an integer. It starts from 1 for the 
-first line (like in file lines.)
-
-=cut
-
-sub line_num
-{
-    my $self = shift;
-
-    return $self->_curr_line_idx()+1;
-}
-
-=head2 $self->consume($regex)
-
-Consume as much text as $regex matches.
-
-=cut
-
-sub _next_line_ref_wo_leading_space
-{
-    my $self = shift;
-
-    my $l = $self->next_line_ref();
-
-    if (defined($$l))
-    {
-        $self->_check_if_line_starts_with_whitespace()
-    }
-
-    return $l;
-}
-
-sub consume
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->curr_line_ref();
-
-    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
-    {
-        $return_value .= $$l;
-    }
-    continue
-    {
-        $l = $self->_next_line_ref_wo_leading_space();
-    }
-
-    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
-    {
-        $return_value .= $1;
-    }
-
-    return $return_value;
-}
-
-=head2 $self->consume_up_to($regex)
-
-Consume up to the point where $regex matches.
-
-=cut
-
-# TODO : copied and pasted from _consume - abstract
-sub consume_up_to
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->curr_line_ref();
-
-    LINE_LOOP:
-    while (defined($$l))
-    {
-        # We assign to a scalar for scalar context, but we're not making
-        # use of the variable.
-        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
-        $return_value .= $1;
-        
-        # Find if it matched the regex.
-        if (length($2) > 0)
-        {
-            last LINE_LOOP;
-        }
-    }
-    continue
-    {
-        $l = $self->_next_line_ref_wo_leading_space();
-    }
-
-    return $return_value;
-}
-
-=head2 $self->throw_text_error($exception_class, $text)
-
-Throws the Error class $exception_class with the text $text (and the current
-line number.
-
-=cut
-
-sub throw_text_error
-{
-    my ($self, $error_class, $text) = @_;
-
-    return $error_class->throw(
-        error => $text,
-        line => $self->line_num(),
-    );
-}
-
-
-sub _check_if_line_starts_with_whitespace
-{
-    my $self = shift;
-
-    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
-            "Leading space detected in the text.",
-        );
-    }
-}
-
-
-=head2 $self->meta()
-
-Leftover from Moose.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 290bb218540a -r dd01d3439aba perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 14:04:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 14:11:27 2011 +0000
@@ -9,7 +9,7 @@
 use XML::Grammar::Fiction::Struct::Tag;
 use XML::Grammar::Fiction::Event;
 
-extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
+extends("XML::Grammar::FictionBase::FromProto::Parser::LineIterator");
 
 has "_tags_stack" =>
 (
diff -r 290bb218540a -r dd01d3439aba perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/FromProto/Parser/LineIterator.pm	Sun May 22 14:11:27 2011 +0000
@@ -0,0 +1,383 @@
+package XML::Grammar::FictionBase::FromProto::Parser::LineIterator;
+
+use strict;
+use warnings;
+
+use Moose;
+
+use XML::Grammar::Fiction::Err;
+
+extends("XML::Grammar::Fiction::FromProto::Parser");
+
+has "_curr_line_idx" => (isa => "Int", is => "rw", reader => "line_idx",);
+has "_lines" => (isa => "ArrayRef", is => "rw");
+
+=head1 NAME
+
+XML::Grammar::FictionBase::FromProto::Parser::LineIterator - line iterator base
+class for the parser.
+
+B<For internal use only>.
+
+=cut
+
+our $VERSION = '0.5.1';
+
+=head1 VERSION
+
+Version 0.5.1
+
+=head1 SYNOPSIS
+
+B<TODO:> write one.
+
+=head1 DESCRIPTION
+
+This is a line iterator that is useful to handle text (e.g: out of a file)
+and process it incrementally.
+
+=head1 METHODS
+
+=head2 $self->setup_text($multi_line_text)
+
+Use $multi_line_text as the text to process, populate the lines array
+with it and reset the other variables.
+
+=cut
+
+sub setup_text
+{
+    my ($self, $text) = @_;
+
+    # We include the lines trailing newlines for safety.
+    $self->_lines([split(/^/, $text)]);
+
+    $self->_curr_line_idx(0);
+
+    ${$self->curr_line_ref()} =~ m{\A}g;
+
+    return;
+}
+
+=head2 $line_ref = $self->curr_line_ref()
+
+Returns a reference to the current line (a string).
+
+For example:
+
+    my $l_ref = $self->curr_line_ref();
+
+    if ($$l_ref !~ m{\G<tag>}g)
+    {
+        die "Could not match tag.";
+    }
+
+=cut
+
+sub curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
+=head2 my $pos = $self->curr_pos()
+
+Returns the current position (using pos($$l)) of the current line.
+
+=cut
+
+sub curr_pos
+{
+    my $self = shift;
+
+    return pos(${$self->curr_line_ref()});
+}
+
+=head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
+
+Convenience method to return the line reference and the position.
+
+For example:
+
+    # Check for a tag.
+    my ($l_ref, $p) = $self->curr_line_and_pos();
+
+    my $is_tag_cond = ($$l_ref =~ m{\G<}cg);
+    my $is_close = $is_tag_cond && ($$l_ref =~ m{\G/}cg);
+
+    pos($$l) = $p;
+
+    return ($is_tag_cond, $is_close);
+
+=cut
+
+sub curr_line_and_pos
+{
+    my $self = shift;
+
+    return ($self->curr_line_ref(), $self->curr_pos());
+}
+
+=head2 my $line_copy_ref = $self->curr_line_copy()
+
+Returns a reference to a copy of the current line that is allowed to be 
+tempered with (by assigning to pos() or in a different way.). The line is
+returned as a reference so to avoid destroying its pos() value.
+
+For example:
+
+    sub _look_ahead_for_tag
+    {
+        my $self = shift;
+
+        my $l = $self->curr_line_copy();
+
+        my $is_tag_cond = ($$l =~ m{\G<}cg);
+        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
+
+        return ($is_tag_cond, $is_close);
+    }
+
+=cut
+
+sub curr_line_copy
+{
+    my $self = shift;
+
+    my $l = ${$self->curr_line_ref()} . "";
+
+    pos($l) = $self->curr_pos();
+    
+    return \$l;
+}
+
+=head2 my $line_ref = $self->next_line_ref()
+
+Advance the line pointer and return the next line.
+
+=cut
+
+sub next_line_ref
+{
+    my $self = shift;
+
+    $self->_curr_line_idx($self->_curr_line_idx()+1);
+
+    pos(${$self->curr_line_ref()}) = 0;
+
+    return $self->curr_line_ref();
+}
+
+=head2 $self->skip_space()
+
+Skip whitespace (spaces and tabs) from the current position onwards.
+
+=cut
+
+# Skip the whitespace.
+sub skip_space
+{
+    my $self = shift;
+
+    $self->consume(qr{[ \t]});
+
+    return;
+}
+
+=head2 $self->skip_multiline_space()
+
+Skip multiline space.
+
+=cut
+
+sub skip_multiline_space
+{
+    my $self = shift;
+
+    if (${$self->curr_line_ref()} =~ m{\G.*?\S})
+    {
+        return;
+    }
+
+    $self->consume(qr{\s});
+
+    return;
+}
+
+=head2 $self->curr_line_continues_with($regex)
+
+Matches the current line with $regex starting from the current position and 
+returns the result. The position remains at the original position if the 
+regular expression does not match (using C< qr//cg >).
+
+=cut
+
+sub curr_line_continues_with
+{
+    my ($self, $re) = @_;
+
+    my $l = $self->curr_line_ref();
+
+    return $$l =~ m{\G$re}cg;
+}
+
+=head2 my $line_number = $self->line_idx()
+
+Returns the line index as an integer. It starts from 0 for the 
+first line (like in Perl lines.)
+
+=head2 my $line_number = $self->line_num()
+
+Returns the line number as an integer. It starts from 1 for the 
+first line (like in file lines.)
+
+=cut
+
+sub line_num
+{
+    my $self = shift;
+
+    return $self->_curr_line_idx()+1;
+}
+
+=head2 $self->consume($regex)
+
+Consume as much text as $regex matches.
+
+=cut
+
+sub _next_line_ref_wo_leading_space
+{
+    my $self = shift;
+
+    my $l = $self->next_line_ref();
+
+    if (defined($$l))
+    {
+        $self->_check_if_line_starts_with_whitespace()
+    }
+
+    return $l;
+}
+
+sub consume
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->curr_line_ref();
+
+    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
+    {
+        $return_value .= $$l;
+    }
+    continue
+    {
+        $l = $self->_next_line_ref_wo_leading_space();
+    }
+
+    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
+    {
+        $return_value .= $1;
+    }
+
+    return $return_value;
+}
+
+=head2 $self->consume_up_to($regex)
+
+Consume up to the point where $regex matches.
+
+=cut
+
+# TODO : copied and pasted from _consume - abstract
+sub consume_up_to
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->curr_line_ref();
+
+    LINE_LOOP:
+    while (defined($$l))
+    {
+        # We assign to a scalar for scalar context, but we're not making
+        # use of the variable.
+        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
+        $return_value .= $1;
+        
+        # Find if it matched the regex.
+        if (length($2) > 0)
+        {
+            last LINE_LOOP;
+        }
+    }
+    continue
+    {
+        $l = $self->_next_line_ref_wo_leading_space();
+    }
+
+    return $return_value;
+}
+
+=head2 $self->throw_text_error($exception_class, $text)
+
+Throws the Error class $exception_class with the text $text (and the current
+line number.
+
+=cut
+
+sub throw_text_error
+{
+    my ($self, $error_class, $text) = @_;
+
+    return $error_class->throw(
+        error => $text,
+        line => $self->line_num(),
+    );
+}
+
+
+sub _check_if_line_starts_with_whitespace
+{
+    my $self = shift;
+
+    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
+            "Leading space detected in the text.",
+        );
+    }
+}
+
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+

changeset:   315:290bb218540a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 14:04:49 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Refactoring: extract the _decode_entities_in_text method.


diff -r 14a91e2806d1 -r 290bb218540a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 06:35:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 14:04:49 2011 +0000
@@ -473,14 +473,11 @@
     }
 }
 
-sub _parse_non_tag_text_unit
+sub _decode_entities_in_text
 {
-    my $self = shift;
+    my ($self, $orig_text) = @_;
 
-    my $orig_text = $self->consume_up_to($self->_non_tag_text_unit_consume_regex);
-
-    
-    my $text = '';
+    my $ret = '';
 
     # Incrementally parse $text for entities.
     pos($orig_text) = 0;
@@ -489,13 +486,13 @@
     {
         my ($before, $indicator) = ($1, $2);
 
-        $text .= $before;
+        $ret .= $before;
 
         if ($indicator eq '&')
         {
             if ($orig_text =~ m{\G(\#?\w+;)}cg)
             {
-                $text .= HTML::Entities::decode_entities("&$1");
+                $ret .= HTML::Entities::decode_entities("&$1");
             }
             else
             {
@@ -510,11 +507,18 @@
         }
     }
 
-    $text =~ s{(\&#?\w+;)}{HTML::Entities::decode_entities($1)}eg;
+    return $ret;
+}
 
-    if ($text =~ m{\&})
-    {
-    }
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    my $orig_text = $self->consume_up_to(
+        $self->_non_tag_text_unit_consume_regex
+    );
+
+    my $text = $self->_decode_entities_in_text($orig_text);
 
     my $l = $self->curr_line_ref();
 

changeset:   314:14a91e2806d1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 06:35:39 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.5.1


diff -r a2590537909f -r 14a91e2806d1 .hgtags
--- a/.hgtags	Sun May 22 06:34:44 2011 +0000
+++ b/.hgtags	Sun May 22 06:35:39 2011 +0000
@@ -15,3 +15,4 @@
 e48e09b9bd92ef1ea8e8130b67723010bfb13ec6 releases/0.4.0
 e19eacb269e585c8c4636f11cfee1fe1115c9644 releases/0.4.1
 b77a7f06f9fa00b284bf95607fbea5c58de1b574 releases/0.5.0
+a2590537909f3f4f7ca5cb7cb8de358e9d33af77 releases/0.5.1

changeset:   313:a2590537909f
tag:         releases/0.5.1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 06:34:44 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the XML-Grammar-Fiction version number to 0.5.1 .


diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun May 22 06:34:44 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.5.1       Sun May 22 09:33:43 IDT 2011
     * Fix the handling of entities at the start of the opening line of
     paragraphs in the Fiction-Text . See 
     t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt .
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun May 22 06:34:44 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun May 22 06:34:44 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun May 22 06:34:44 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun May 22 06:34:44 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sun May 22 06:34:44 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 METHODS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun May 22 06:34:44 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 use Exception::Class
     (
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun May 22 06:34:44 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun May 22 06:34:44 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun May 22 06:34:44 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 AUTHOR
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sun May 22 06:34:44 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun May 22 06:34:44 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<]|^\n?$)}ms;
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 06:34:44 2011 +0000
@@ -759,11 +759,11 @@
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun May 22 06:34:44 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun May 22 06:34:44 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun May 22 06:34:44 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun May 22 06:34:44 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sun May 22 06:34:44 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun May 22 06:34:44 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head1 SYNOPSIS
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun May 22 06:34:44 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun May 22 06:34:44 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun May 22 06:34:44 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sun May 22 06:34:44 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =cut
 
-our $VERSION = '0.5.0';
+our $VERSION = '0.5.1';
 
 =head2 new()
 
diff -r 43541f04f981 -r a2590537909f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun May 22 06:33:24 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sun May 22 06:34:44 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.5.0
+Version 0.5.1
 
 =head1 AUTHOR
 

changeset:   312:43541f04f981
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun May 22 06:33:24 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
description:
Handling of entities at the beginning of opening lines in paragraphs.


diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 20:22:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun May 22 06:33:24 2011 +0000
@@ -1,5 +1,9 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Fix the handling of entities at the start of the opening line of
+    paragraphs in the Fiction-Text . See 
+    t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt .
+
 0.5.0       Sat May 21 23:20:43 IDT 2011
     * Add support for the <programinglisting> tag.
     * Fix the handling of the entities ("&amp;" "&#32;" etc.) in Fiction-Text.
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat May 21 20:22:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun May 22 06:33:24 2011 +0000
@@ -77,6 +77,7 @@
 t/fiction/data/proto-text-invalid/wrong-close-tag.txt
 t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
 t/fiction/data/proto-text/nested-s.txt
+t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt
 t/fiction/data/proto-text/scenes-with-titles.txt
 t/fiction/data/proto-text/sections-a-href.txt
 t/fiction/data/proto-text/sections-and-paras.txt
@@ -97,6 +98,7 @@
 t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/xml/dialogue-with-several-paragraphs.xml
 t/fiction/data/xml/nested-s.xml
+t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
 t/fiction/data/xml/scenes-with-titles.xml
 t/fiction/data/xml/sections-a-href.xml
 t/fiction/data/xml/sections-and-paras.xml
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 20:22:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun May 22 06:33:24 2011 +0000
@@ -28,7 +28,7 @@
 our $VERSION = '0.5.0';
 
 sub _non_tag_text_unit_consume_regex {
-    return qr{(?:[\<\&]|^\n?$)}ms;
+    return qr{(?:[\<]|^\n?$)}ms;
 }
 
 sub _generate_non_tag_text_event
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 20:22:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun May 22 06:33:24 2011 +0000
@@ -477,7 +477,44 @@
 {
     my $self = shift;
 
-    my $text = $self->consume_up_to($self->_non_tag_text_unit_consume_regex);
+    my $orig_text = $self->consume_up_to($self->_non_tag_text_unit_consume_regex);
+
+    
+    my $text = '';
+
+    # Incrementally parse $text for entities.
+    pos($orig_text) = 0;
+
+    while ($orig_text =~ m{\G(.*?)(\&|\z)}msg)
+    {
+        my ($before, $indicator) = ($1, $2);
+
+        $text .= $before;
+
+        if ($indicator eq '&')
+        {
+            if ($orig_text =~ m{\G(\#?\w+;)}cg)
+            {
+                $text .= HTML::Entities::decode_entities("&$1");
+            }
+            else
+            {
+                Carp::confess(
+                    sprintf(
+                        "Cannot match entity '%s' at line %d",
+                        substr($orig_text, pos($orig_text)-1, 10),
+                        $self->line_num(),
+                    )
+                );
+            }
+        }
+    }
+
+    $text =~ s{(\&#?\w+;)}{HTML::Entities::decode_entities($1)}eg;
+
+    if ($text =~ m{\&})
+    {
+    }
 
     my $l = $self->curr_line_ref();
 
@@ -554,7 +591,7 @@
 
     my $l = $self->curr_line_ref();
 
-    if ($$l =~ m{\G(\&|<(?:/)?)}cg)
+    if ($$l =~ m{\G(<(?:/)?)}cg)
     {
         return $1;
     }
@@ -587,31 +624,6 @@
 
         pos($$l) = $orig_pos;
 
-        if ($$l =~ m{\G\&})
-        {
-            if ($$l !~ m/\G(\&#?\w+;)/g)
-            {
-                Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
-                    $self->line_num()
-                );
-            }
-
-            my $entity = $1;
-
-            $self->_enqueue_event(
-                XML::Grammar::Fiction::Event->new(
-                    {
-                        type => "elem",
-                        elem => $self->_new_text(
-                            [HTML::Entities::decode_entities($entity)]
-                        ),
-                    },
-                )
-            );
-
-            return;
-        }
-
         $self->_enqueue_event(
             XML::Grammar::Fiction::Event->new(
                 {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat May 21 20:22:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun May 22 06:33:24 2011 +0000
@@ -191,7 +191,7 @@
 
 sub _non_tag_text_unit_consume_regex
 {
-    return qr{(?:[\<\[\]\&]|^\n?$)}ms;
+    return qr{(?:[\<\[\]]|^\n?$)}ms;
 }
 
 around '_parse_non_tag_text_unit' => sub {
@@ -215,7 +215,7 @@
 
     my $l = $self->curr_line_ref();
 
-    if ($$l =~ m{\G([<\[\]\&])})
+    if ($$l =~ m{\G([<\[\]])})
     {
         return $1;
     }
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/paras-with-entities-at-start-of-line.txt	Sun May 22 06:33:24 2011 +0000
@@ -0,0 +1,25 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+&amp;&#32;David and Goliath were standing by each other.
+&lt;foo&gt;
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really".
+
+</s>
+
+</s>
+
+</body>
+
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/paras-with-entities-at-start-of-line.xml	Sun May 22 06:33:24 2011 +0000
@@ -0,0 +1,24 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>        
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+        &amp;&#32;David and Goliath were standing by each other.    
+        &lt;foo&gt;
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r 3d14ea4efefc -r 43541f04f981 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Sat May 21 20:22:45 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Sun May 22 06:33:24 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 15;
+use Test::More tests => 17;
 
 use Test::XML;
 
@@ -35,9 +35,10 @@
     with-ul-ol-li
     with-blockquote
     with-programlisting
+    paras-with-entities-at-start-of-line
     ));
 
-# TEST:$num_texts=7
+# TEST:$num_texts=8
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   311:3d14ea4efefc
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 21 20:22:45 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.5.0


diff -r b77a7f06f9fa -r 3d14ea4efefc .hgtags
--- a/.hgtags	Sat May 21 20:22:01 2011 +0000
+++ b/.hgtags	Sat May 21 20:22:45 2011 +0000
@@ -14,3 +14,4 @@
 c055805a99147f83737c1df7fe37fe42f3d484e8 releases/0.3.0
 e48e09b9bd92ef1ea8e8130b67723010bfb13ec6 releases/0.4.0
 e19eacb269e585c8c4636f11cfee1fe1115c9644 releases/0.4.1
+b77a7f06f9fa00b284bf95607fbea5c58de1b574 releases/0.5.0

changeset:   310:b77a7f06f9fa
tag:         releases/0.5.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 21 20:22:01 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.5.0.


diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 20:22:01 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.5.0       Sat May 21 23:20:43 IDT 2011
     * Add support for the <programinglisting> tag.
     * Fix the handling of the entities ("&amp;" "&#32;" etc.) in Fiction-Text.
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat May 21 20:22:01 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat May 21 20:22:01 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat May 21 20:22:01 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat May 21 20:22:01 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sat May 21 20:22:01 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 METHODS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat May 21 20:22:01 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 use Exception::Class
     (
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat May 21 20:22:01 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat May 21 20:22:01 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat May 21 20:22:01 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 AUTHOR
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat May 21 20:22:01 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 20:22:01 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:[\<\&]|^\n?$)}ms;
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 20:22:01 2011 +0000
@@ -747,11 +747,11 @@
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat May 21 20:22:01 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat May 21 20:22:01 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat May 21 20:22:01 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat May 21 20:22:01 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat May 21 20:22:01 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat May 21 20:22:01 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head1 SYNOPSIS
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat May 21 20:22:01 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat May 21 20:22:01 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat May 21 20:22:01 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat May 21 20:22:01 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =cut
 
-our $VERSION = '0.4.1';
+our $VERSION = '0.5.0';
 
 =head2 new()
 
diff -r 834eabac5de1 -r b77a7f06f9fa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat May 21 20:20:17 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat May 21 20:22:01 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.4.1
+Version 0.5.0
 
 =head1 AUTHOR
 

changeset:   309:834eabac5de1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 21 20:20:17 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Add support for <programlisting>

In the process had to fix the handling of entities in XML-Grammar-Fiction.


diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 20:20:17 2011 +0000
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add support for the <programinglisting> tag.
+    * Fix the handling of the entities ("&amp;" "&#32;" etc.) in Fiction-Text.
+
 0.4.1       Sat May 21 19:45:56 IDT 2011
     * Properly handling whitespace after a closing tag in the Fiction-Text
     proto-text. Like:
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat May 21 20:20:17 2011 +0000
@@ -66,6 +66,7 @@
 t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
 t/fiction/data/docbook/with-blockquote.docbook.xml
 t/fiction/data/docbook/with-internal-description.docbook.xml
+t/fiction/data/docbook/with-programlisting.docbook.xml
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
 t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
 t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
@@ -91,6 +92,7 @@
 t/fiction/data/proto-text/with-internal-description.txt
 t/fiction/data/proto-text/with-multi-line-comments.txt
 t/fiction/data/proto-text/with-multi-para-desc.txt
+t/fiction/data/proto-text/with-programlisting.txt
 t/fiction/data/proto-text/with-tags-inside-paragraphs.txt
 t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/xml/dialogue-with-several-paragraphs.xml
@@ -109,6 +111,7 @@
 t/fiction/data/xml/with-entities.xml
 t/fiction/data/xml/with-multi-line-comments.xml
 t/fiction/data/xml/with-multi-para-desc.xml
+t/fiction/data/xml/with-programlisting.xml
 t/fiction/data/xml/with-tags-inside-paragraphs.xml
 t/fiction/data/xml/with-ul-ol-li.xml
 t/fiction/proto-text-invalid.t
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Sat May 21 20:20:17 2011 +0000
@@ -46,7 +46,7 @@
             </xsl:choose> 
         </title>
     </info>
-        <xsl:apply-templates select="fic:section|fic:blockquote|fic:p|fic:ol|fic:ul" />
+        <xsl:apply-templates select="fic:section|fic:blockquote|fic:p|fic:ol|fic:ul|fic:programlisting" />
     </section>
 </xsl:template>
 
@@ -86,6 +86,12 @@
     </itemizedlist>
 </xsl:template>
 
+<xsl:template match="fic:programlisting">
+    <programlisting>
+        <xsl:apply-templates/>
+    </programlisting>
+</xsl:template>
+
 <xsl:template match="fic:li">
     <listitem>
         <xsl:apply-templates/>
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Sat May 21 20:20:17 2011 +0000
@@ -57,6 +57,7 @@
                 <ref name="para"/>
                 <ref name="ol"/>
                 <ref name="ul"/>
+                <ref name="programlisting"/>
             </choice>
         </zeroOrMore>
     </define>
@@ -127,5 +128,10 @@
             <text />
         </element>
     </define>
+    <define name="programlisting">
+        <element name="fic:programlisting">
+            <text />
+        </element>
+    </define>
 </grammar>
 
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat May 21 20:20:17 2011 +0000
@@ -46,6 +46,10 @@
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
         },
+        "XML::Grammar::Fiction::Err::Parse::ProgramListingContainsTags" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Parse::LineError",
+        }
     )
     ;
 1;
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat May 21 20:20:17 2011 +0000
@@ -148,6 +148,56 @@
     return;
 }
 
+sub _handle_elem_of_name_programlisting
+{
+    my ($self, $elem) = @_;
+
+    my $throw_found_tag_exception = sub {
+        XML::Grammar::Fiction::Err::Parse::ProgramListingContainsTags->throw(
+            error => "<programlisting> tag cannot contain other tags.",
+            line => $elem->open_line(),
+        );
+    };
+
+    return $self->_output_tag(
+        {
+            start => ['programlisting'],
+            elem => $elem,
+            'in' => sub {
+                foreach my $child (@{ $elem->_get_childs() })
+                {
+                    if ($child->_short_isa("Paragraph"))
+                    {
+                        foreach my $text_node (
+                            @{ $child->children()->contents() }
+                        )
+                        {
+                            if ($text_node->_short_isa("Text"))
+                            {
+                                $self->_write_elem({elem => $text_node});
+                            }
+                            else
+                            {
+                                $throw_found_tag_exception->();
+                            }
+                        }
+                    }
+                    else
+                    {
+                        $throw_found_tag_exception->();
+                    }
+                    # End of paragraph.
+                    $self->_writer->characters("\n\n");
+                }
+
+                return;
+            },
+        }
+    );
+
+    return;
+}
+
 sub _handle_elem_of_name_ol
 {
     my ($self, $elem) = @_;
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat May 21 20:20:17 2011 +0000
@@ -61,6 +61,7 @@
 
 has 'name' => (isa => 'Str', is => 'rw');
 has 'attrs' => (isa => 'ArrayRef', is => 'rw');
+has 'open_line' => (isa => 'Maybe[Int]', is => 'rw');
 
 sub lookup_attr
 {
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 20:20:17 2011 +0000
@@ -28,7 +28,7 @@
 our $VERSION = '0.4.1';
 
 sub _non_tag_text_unit_consume_regex {
-    return qr{(?:\<|^\n?$)}ms;
+    return qr{(?:[\<\&]|^\n?$)}ms;
 }
 
 sub _generate_non_tag_text_event
@@ -38,6 +38,12 @@
     my $is_para = ($self->curr_pos() == 0);
 
     my $status = $self->_parse_non_tag_text_unit();
+
+    if (!defined($status))
+    {
+        return;
+    }
+
     my $elem = $status->{'elem'};
     my $is_para_end = $status->{'para_end'};
 
@@ -52,6 +58,12 @@
         $in_para = 1;
     }
 
+    # This is an assert / sanity check.
+    if (!defined($elem))
+    {
+        Carp::confess ('$elem is undefined');
+    }
+
     $self->_enqueue_event(
         XML::Grammar::Fiction::Event->new(
             {type => "elem", elem => $elem}
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 20:20:17 2011 +0000
@@ -112,6 +112,7 @@
                 name => $open->name(),
                 children => $children,
                 attrs => $open->attrs(),
+                open_line => $open->line(),
             }
         );
 }
@@ -143,6 +144,15 @@
         Carp::confess (qq{Para contains a saying.});
     }
 
+    # This is an assert
+    if (List::MoreUtils::any 
+        { !defined($_) }
+        @{$contents || []}
+        )
+    {
+        Carp::confess (qq{Para contains an undef member.});
+    }
+
 
     return $self->_new_node(
         {
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat May 21 20:20:17 2011 +0000
@@ -35,6 +35,12 @@
 {
     my ($self, $children) = @_;
 
+    # This is an assert / sanity check.
+    if (List::MoreUtils::any { !defined ($_) } @$children)
+    {
+        Carp::confess("append_children with undef.");
+    }
+
     push @{$self->children()}, @$children;
 
     return;
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-programlisting.docbook.xml	Sat May 21 20:20:17 2011 +0000
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+    David and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    <programlisting>
+
+print "Foo Bar Baz\n";
+for (i=0;i&lt;4;i++)
+{
+   print "Foo $i\n";
+}
+
+    </programlisting>
+
+    </section>
+  </section>
+</article>
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-programlisting.txt	Sat May 21 20:20:17 2011 +0000
@@ -0,0 +1,36 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+<programlisting>
+
+print "Foo Bar Baz\n";
+for (i=0;i&lt;4;i++)
+{
+&#32;&#32;&#32;&#32;print "Foo $i\n";
+}
+
+</programlisting>
+
+</s>
+
+</s>
+
+</body>
+
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-programlisting.xml	Sat May 21 20:20:17 2011 +0000
@@ -0,0 +1,35 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+<programlisting>
+
+print "Foo Bar Baz\n";
+for (i=0;i&lt;4;i++)
+{
+   print "Foo $i\n";
+}
+
+</programlisting>
+    </section>
+    </section>
+</body>
+</document>
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Sat May 21 20:20:17 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 13;
+use Test::More tests => 15;
 
 use Test::XML;
 
@@ -34,9 +34,10 @@
     sections-a-href
     with-ul-ol-li
     with-blockquote
+    with-programlisting
     ));
 
-# TEST:$num_texts=6
+# TEST:$num_texts=7
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
diff -r 2e7a499a2388 -r 834eabac5de1 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Sat May 21 16:48:20 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Sat May 21 20:20:17 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 15;
+use Test::XML tests => 18;
 
 use File::Spec;
 
@@ -19,6 +19,7 @@
         sections-a-href
         with-ul-ol-li
         with-blockquote
+        with-programlisting
     ));
 
 sub load_xml
@@ -36,7 +37,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=5
+# TEST:$num_texts=6
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   308:2e7a499a2388
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 21 16:48:20 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.4.1


diff -r e19eacb269e5 -r 2e7a499a2388 .hgtags
--- a/.hgtags	Sat May 21 16:47:18 2011 +0000
+++ b/.hgtags	Sat May 21 16:48:20 2011 +0000
@@ -13,3 +13,4 @@
 44ce31214ad11c78bdf3cb7ee5936ccbb18cda79 releases/0.2.0
 c055805a99147f83737c1df7fe37fe42f3d484e8 releases/0.3.0
 e48e09b9bd92ef1ea8e8130b67723010bfb13ec6 releases/0.4.0
+e19eacb269e585c8c4636f11cfee1fe1115c9644 releases/0.4.1

changeset:   307:e19eacb269e5
tag:         releases/0.4.1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 21 16:47:18 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.4.1.


diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 16:47:18 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.4.1       Sat May 21 19:45:56 IDT 2011
     * Properly handling whitespace after a closing tag in the Fiction-Text
     proto-text. Like:
         - "</b> foo" should be translated "</b> foo" instead of "</b>foo".
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat May 21 16:47:18 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat May 21 16:47:18 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat May 21 16:47:18 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat May 21 16:47:18 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sat May 21 16:47:18 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 METHODS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat May 21 16:47:18 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 use Exception::Class
     (
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat May 21 16:47:18 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat May 21 16:47:18 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat May 21 16:47:18 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 AUTHOR
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat May 21 16:47:18 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 16:47:18 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat May 21 16:47:18 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat May 21 16:47:18 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat May 21 16:47:18 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat May 21 16:47:18 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat May 21 16:47:18 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Sat May 21 16:47:18 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat May 21 16:47:18 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head1 SYNOPSIS
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat May 21 16:47:18 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat May 21 16:47:18 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat May 21 16:47:18 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Sat May 21 16:47:18 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =cut
 
-our $VERSION = '0.4.0';
+our $VERSION = '0.4.1';
 
 =head2 new()
 
diff -r 4d802c9bc94e -r e19eacb269e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat May 21 16:45:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Sat May 21 16:47:18 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.4.0
+Version 0.4.1
 
 =head1 AUTHOR
 

changeset:   306:4d802c9bc94e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat May 21 16:45:02 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
description:
Properly handle whitespace after closing tag.


diff -r 3a905ae5574a -r 4d802c9bc94e perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri May 20 12:49:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat May 21 16:45:02 2011 +0000
@@ -1,5 +1,9 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Properly handling whitespace after a closing tag in the Fiction-Text
+    proto-text. Like:
+        - "</b> foo" should be translated "</b> foo" instead of "</b>foo".
+
 0.4.0       Fri May 20 15:46:18 IDT 2011
     * Updated some of the bug report URLs to read "XML-Grammar-Fiction"
     instead of "XML-Grammar-Screenplay".
diff -r 3a905ae5574a -r 4d802c9bc94e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri May 20 12:49:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat May 21 16:45:02 2011 +0000
@@ -195,6 +195,11 @@
 {
     my $self = shift;
 
+    if (${$self->curr_line_ref()} =~ m{\G.*?\S})
+    {
+        return;
+    }
+
     $self->consume(qr{\s});
 
     return;
diff -r 3a905ae5574a -r 4d802c9bc94e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri May 20 12:49:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat May 21 16:45:02 2011 +0000
@@ -74,7 +74,7 @@
 before '_generate_text_unit_events' => sub {
     my $self = shift;
 
-    $self->skip_multiline_space() 
+    $self->skip_multiline_space();
 };
 
 sub _handle_open_para
@@ -143,7 +143,7 @@
 {
     my $self = shift;
 
-    $self->skip_space();
+    # $self->skip_space();
 
     return 1;
 }
diff -r 3a905ae5574a -r 4d802c9bc94e perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Fri May 20 12:49:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Sat May 21 16:45:02 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 12;
+use Test::More tests => 13;
 
 use Test::XML;
 
@@ -60,6 +60,16 @@
         }
     );
 
+    if ($fn eq "sections-p-b-i")
+    {
+        # TEST
+        like (
+            $got_xml,
+            qr{</b> },
+            "Space after the </b>",
+        );
+    }
+
     # TEST*$num_texts
     is_xml ($got_xml, load_xml("t/fiction/data/xml/$fn.xml"),
         "Output of the Proto Text \"$fn\""

changeset:   305:3a905ae5574a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 20 12:49:18 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.4.0


diff -r e48e09b9bd92 -r 3a905ae5574a .hgtags
--- a/.hgtags	Fri May 20 12:47:58 2011 +0000
+++ b/.hgtags	Fri May 20 12:49:18 2011 +0000
@@ -12,3 +12,4 @@
 d1cdd6865b6271ed118ba0b86f3a440d5c0d8b14 releases/0.1.7
 44ce31214ad11c78bdf3cb7ee5936ccbb18cda79 releases/0.2.0
 c055805a99147f83737c1df7fe37fe42f3d484e8 releases/0.3.0
+e48e09b9bd92ef1ea8e8130b67723010bfb13ec6 releases/0.4.0

changeset:   304:e48e09b9bd92
tag:         releases/0.4.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 20 12:47:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
XML-Grammar-Fiction: bump the version number to 0.4.0


diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri May 20 12:47:58 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.4.0       Fri May 20 15:46:18 IDT 2011
     * Updated some of the bug report URLs to read "XML-Grammar-Fiction"
     instead of "XML-Grammar-Screenplay".
     * Add support for the <blockquote> tag to Fiction-XML / Fiction-Text.
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri May 20 12:47:58 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri May 20 12:47:58 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri May 20 12:47:58 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri May 20 12:47:58 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri May 20 12:47:58 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 METHODS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri May 20 12:47:58 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 use Exception::Class
     (
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 20 12:47:58 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri May 20 12:47:58 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri May 20 12:47:58 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 AUTHOR
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri May 20 12:47:58 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri May 20 12:47:58 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri May 20 12:47:58 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri May 20 12:47:58 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri May 20 12:47:58 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri May 20 12:47:58 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri May 20 12:47:58 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Fri May 20 12:47:58 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri May 20 12:47:58 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head1 SYNOPSIS
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri May 20 12:47:58 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri May 20 12:47:58 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri May 20 12:47:58 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Fri May 20 12:47:58 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =cut
 
-our $VERSION = '0.3.0';
+our $VERSION = '0.4.0';
 
 =head2 new()
 
diff -r ad2bff0712c6 -r e48e09b9bd92 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri May 20 12:16:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Fri May 20 12:47:58 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.3.0
+Version 0.4.0
 
 =head1 AUTHOR
 

changeset:   303:ad2bff0712c6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 20 12:16:39 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Add support for <blockquote> to Fiction-XML / Fiction-Text .


diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri May 20 12:16:39 2011 +0000
@@ -2,6 +2,7 @@
 
     * Updated some of the bug report URLs to read "XML-Grammar-Fiction"
     instead of "XML-Grammar-Screenplay".
+    * Add support for the <blockquote> tag to Fiction-XML / Fiction-Text.
 
 0.3.0       Tue May 17 22:59:17 IDT 2011
     * Add extradata/screenplay-xml-to-tei.xslt and 
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 20 12:16:39 2011 +0000
@@ -64,6 +64,7 @@
 t/fiction/data/docbook/sections-a-href.docbook.xml
 t/fiction/data/docbook/sections-and-paras.docbook.xml
 t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
+t/fiction/data/docbook/with-blockquote.docbook.xml
 t/fiction/data/docbook/with-internal-description.docbook.xml
 t/fiction/data/docbook/with-ul-ol-li.docbook.xml
 t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
@@ -81,6 +82,7 @@
 t/fiction/data/proto-text/sections-p-b-i-comments.txt
 t/fiction/data/proto-text/sections-p-b-i.txt
 t/fiction/data/proto-text/two-nested-s.txt
+t/fiction/data/proto-text/with-blockquote.txt
 t/fiction/data/proto-text/with-brs.txt
 t/fiction/data/proto-text/with-comments.txt
 t/fiction/data/proto-text/with-description.txt
@@ -99,6 +101,7 @@
 t/fiction/data/xml/sections-p-b-i-comments.xml
 t/fiction/data/xml/sections-p-b-i.xml
 t/fiction/data/xml/two-nested-s.xml
+t/fiction/data/xml/with-blockquote.xml
 t/fiction/data/xml/with-brs.xml
 t/fiction/data/xml/with-comments.xml
 t/fiction/data/xml/with-description.xml
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 20 12:16:39 2011 +0000
@@ -46,7 +46,7 @@
             </xsl:choose> 
         </title>
     </info>
-        <xsl:apply-templates select="fic:section|fic:p|fic:ol|fic:ul" />
+        <xsl:apply-templates select="fic:section|fic:blockquote|fic:p|fic:ol|fic:ul" />
     </section>
 </xsl:template>
 
@@ -56,13 +56,18 @@
     </para>
 </xsl:template>
 
-
 <xsl:template match="fic:b">
     <emphasis role="bold">
         <xsl:apply-templates/>
     </emphasis>
 </xsl:template>
 
+<xsl:template match="fic:blockquote">
+    <blockquote>
+        <xsl:apply-templates/>
+    </blockquote>
+</xsl:template>
+
 <xsl:template match="fic:i">
     <emphasis>
         <xsl:apply-templates/>
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri May 20 12:16:39 2011 +0000
@@ -53,6 +53,7 @@
     <define name="several_paras">
         <zeroOrMore>
             <choice>
+                <ref name="blockquote"/>
                 <ref name="para"/>
                 <ref name="ol"/>
                 <ref name="ul"/>
@@ -74,6 +75,11 @@
             <ref name="inside_list" />
         </element>
     </define>
+    <define name="blockquote">
+        <element name="fic:blockquote">
+            <ref name="several_paras"/>
+        </element>
+    </define>
     <define name="li">
         <element name="fic:li">
             <oneOrMore>
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 20 12:16:39 2011 +0000
@@ -119,6 +119,20 @@
     return;
 }
 
+sub _handle_elem_of_name_blockquote
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ['blockquote'],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
 
 sub _handle_elem_of_name_li
 {
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-blockquote.docbook.xml	Fri May 20 12:16:39 2011 +0000
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    <para>
+    David started listing Goliath's disadvantages:
+    </para>
+    <blockquote>
+    <orderedlist>
+    <listitem>
+    <para>
+    You're slow.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    You're big.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    You're stupid.
+    </para>
+    </listitem>
+    </orderedlist>
+    <para>
+    Goliath was insulted and told David he should use bullets for the
+    points, instead:
+    </para>
+    <itemizedlist>
+    <listitem>
+    <para>
+    David.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Saul.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Jonathan.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Michal.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Meyrav.
+    </para>
+    </listitem>
+    </itemizedlist>
+    </blockquote>
+    </section>
+  </section>
+</article>
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-blockquote.txt	Fri May 20 12:16:39 2011 +0000
@@ -0,0 +1,95 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+David started listing Goliath's disadvantages:
+
+<blockquote>
+
+<ol>
+
+<li>
+
+You're slow.
+
+</li>
+
+<li>
+
+You're big.
+
+</li>
+
+<li>
+
+You're stupid.
+
+</li>
+
+</ol>
+
+Goliath was insulted and told David he should use bullets for the points, 
+instead:
+
+<ul>
+
+<li>
+
+David.
+
+</li>
+
+<li>
+
+Saul.
+
+</li>
+
+<li>
+
+Jonathan.
+
+</li>
+
+<li>
+
+Michal.
+
+</li>
+
+<li>
+
+Meyrav.
+
+</li>
+
+</ul>
+
+</blockquote>
+
+</s>
+
+</s>
+
+</body>
+
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-blockquote.xml	Fri May 20 12:16:39 2011 +0000
@@ -0,0 +1,81 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    <p>
+    David started listing Goliath's disadvantages:
+    </p>
+    <blockquote>
+    <ol>
+    <li>
+    <p>
+    You're slow.
+    </p>
+    </li>
+    <li>
+    <p>
+    You're big.
+    </p>
+    </li>
+    <li>
+    <p>
+    You're stupid.
+    </p>
+    </li>
+    </ol>
+    <p>
+    Goliath was insulted and told David he should use bullets for the
+    points, instead:
+    </p>
+    <ul>
+    <li>
+    <p>
+    David.
+    </p>
+    </li>
+    <li>
+    <p>
+    Saul.
+    </p>
+    </li>
+    <li>
+    <p>
+    Jonathan.
+    </p>
+    </li>
+    <li>
+    <p>
+    Michal.
+    </p>
+    </li>
+    <li>
+    <p>
+    Meyrav.
+    </p>
+    </li>
+    </ul>
+    </blockquote>
+    </section>
+    </section>
+</body>
+</document>
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Fri May 20 12:16:39 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 10;
+use Test::More tests => 12;
 
 use Test::XML;
 
@@ -33,9 +33,10 @@
     sections-p-b-i-comments
     sections-a-href
     with-ul-ol-li
+    with-blockquote
     ));
 
-# TEST:$num_texts=5
+# TEST:$num_texts=6
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
diff -r f3ef3048c0ff -r ad2bff0712c6 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Wed May 18 03:16:47 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Fri May 20 12:16:39 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 12;
+use Test::XML tests => 15;
 
 use File::Spec;
 
@@ -18,6 +18,7 @@
         sections-p-b-i-comments
         sections-a-href
         with-ul-ol-li
+        with-blockquote
     ));
 
 sub load_xml
@@ -35,7 +36,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=4
+# TEST:$num_texts=5
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   302:f3ef3048c0ff
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed May 18 03:16:47 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bug report URLs now read XML-Grammar-Fiction.


diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed May 18 03:16:47 2011 +0000
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Updated some of the bug report URLs to read "XML-Grammar-Fiction"
+    instead of "XML-Grammar-Screenplay".
+
 0.3.0       Tue May 17 22:59:17 IDT 2011
     * Add extradata/screenplay-xml-to-tei.xslt and 
     lib/XML/Grammar/Screenplay/ToTEI.pm - add tests for them.
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed May 18 03:16:47 2011 +0000
@@ -161,7 +161,7 @@
 This will allow a friendlier diagnostic. Carp::confess was implemented due to
 laziness on the programmers' part.
 
-=item * Merge the duplicate code from XML-Grammar-Screenplay
+=item * Merge the duplicate code from XML-Grammar-Fiction
 
 XML::Grammar::Fiction was forked from L<XML::Grammar::Screenplay>
 and they still share a lot of common code. This needs to be merged in time.
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Wed May 18 03:16:47 2011 +0000
@@ -196,8 +196,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed May 18 03:16:47 2011 +0000
@@ -150,8 +150,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
@@ -175,19 +175,19 @@
 
 =item * AnnoCPAN: Annotated CPAN documentation
 
-L<http://annocpan.org/dist/XML-Grammar-Screenplay>
+L<http://annocpan.org/dist/XML-Grammar-Fiction>
 
 =item * CPAN Ratings
 
-L<http://cpanratings.perl.org/d/XML-Grammar-Screenplay>
+L<http://cpanratings.perl.org/d/XML-Grammar-Fiction>
 
 =item * RT: CPAN's request tracker
 
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay>
+L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
 
 =item * Search CPAN
 
-L<http://search.cpan.org/dist/XML-Grammar-Screenplay>
+L<http://search.cpan.org/dist/XML-Grammar-Fiction/>
 
 =back
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Wed May 18 03:16:47 2011 +0000
@@ -69,8 +69,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Wed May 18 03:16:47 2011 +0000
@@ -61,8 +61,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Wed May 18 03:16:47 2011 +0000
@@ -61,8 +61,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed May 18 03:16:47 2011 +0000
@@ -307,8 +307,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Wed May 18 03:16:47 2011 +0000
@@ -21,8 +21,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed May 18 03:16:47 2011 +0000
@@ -557,8 +557,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed May 18 03:16:47 2011 +0000
@@ -55,8 +55,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed May 18 03:16:47 2011 +0000
@@ -53,8 +53,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Wed May 18 03:16:47 2011 +0000
@@ -56,8 +56,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r d354ddae6dd5 -r f3ef3048c0ff perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue May 17 20:01:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Wed May 18 03:16:47 2011 +0000
@@ -26,8 +26,8 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 

changeset:   301:d354ddae6dd5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 20:01:51 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.3.0


diff -r c055805a9914 -r d354ddae6dd5 .hgtags
--- a/.hgtags	Tue May 17 20:01:31 2011 +0000
+++ b/.hgtags	Tue May 17 20:01:51 2011 +0000
@@ -11,3 +11,4 @@
 ba2c538c4e2daca43cb0750e40e9fd949e73066d releases/0.1.6
 d1cdd6865b6271ed118ba0b86f3a440d5c0d8b14 releases/0.1.7
 44ce31214ad11c78bdf3cb7ee5936ccbb18cda79 releases/0.2.0
+c055805a99147f83737c1df7fe37fe42f3d484e8 releases/0.3.0

changeset:   300:c055805a9914
tag:         releases/0.3.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 20:01:31 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Bump the version number to 0.3.0.


diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 20:01:31 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.3.0       Tue May 17 22:59:17 IDT 2011
     * Add extradata/screenplay-xml-to-tei.xslt and 
     lib/XML/Grammar/Screenplay/ToTEI.pm - add tests for them.
         - They convert Screenplay-XML into TEI - Text Encoding Initiative,
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue May 17 20:01:31 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue May 17 20:01:31 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue May 17 20:01:31 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue May 17 20:01:31 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Tue May 17 20:01:31 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 METHODS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue May 17 20:01:31 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 use Exception::Class
     (
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue May 17 20:01:31 2011 +0000
@@ -24,11 +24,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue May 17 20:01:31 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue May 17 20:01:31 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 AUTHOR
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Tue May 17 20:01:31 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue May 17 20:01:31 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue May 17 20:01:31 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue May 17 20:01:31 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue May 17 20:01:31 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue May 17 20:01:31 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue May 17 20:01:31 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 20:01:31 2011 +0000
@@ -28,11 +28,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue May 17 20:01:31 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head1 SYNOPSIS
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue May 17 20:01:31 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue May 17 20:01:31 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 20:01:31 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 20:01:31 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =cut
 
-our $VERSION = '0.2.0';
+our $VERSION = '0.3.0';
 
 =head2 new()
 
diff -r e572aedb31b9 -r c055805a9914 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue May 17 19:56:43 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue May 17 20:01:31 2011 +0000
@@ -17,7 +17,7 @@
 
 =head1 VERSION
 
-Version 0.2.0
+Version 0.3.0
 
 =head1 AUTHOR
 

changeset:   299:e572aedb31b9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 19:56:43 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/RendererBase.pm.2
description:
Deprecated XML::Grammar::Fiction::RendererBase .


diff -r 25ebf5680196 -r e572aedb31b9 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 18:03:31 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 19:56:43 2011 +0000
@@ -11,6 +11,11 @@
     * Got rid of the <!DOCTYPE .... > declaration in the Screenplay-XML
     output (it confused the heck out of xsltproc and was not really needed
     as we use a RELAX-NG schema instead of a DTD.)
+    * Create lib/XML/Grammar/FictionBase/XSLT/Converter.pm as a base
+    class for the converters.
+        - removed lib/XML/Grammar/Fiction/RendererBase.pm as it was no
+        longer used.
+        - Create some sub-classes.
 
 0.2.0       Fri May 13 16:56:00 IDT 2011
     * Add support for <ol>, <li> and <ul> to Fiction-Text and Fiction-XML.
diff -r 25ebf5680196 -r e572aedb31b9 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 18:03:31 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 19:56:43 2011 +0000
@@ -29,7 +29,6 @@
 lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
-lib/XML/Grammar/Fiction/RendererBase.pm
 lib/XML/Grammar/Fiction/RNG_Renderer.pm
 lib/XML/Grammar/Fiction/Struct/Tag.pm
 lib/XML/Grammar/Fiction/ToDocBook.pm
@@ -52,6 +51,7 @@
 README
 rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
 rejects/lib/XML/Grammar/Fiction/RendererBase.pm
+rejects/lib/XML/Grammar/Fiction/RendererBase.pm.2
 rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
 rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
 rejects/proto-text-to-xml.t
diff -r 25ebf5680196 -r e572aedb31b9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue May 17 18:03:31 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,254 +0,0 @@
-package XML::Grammar::Fiction::RendererBase;
-
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use File::ShareDir ':ALL';
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use Moose;
-
-has '_data_dir' =>
-(
-    isa => 'Str', 
-    is => 'rw',
-    lazy => 1,
-    init_arg => "data_dir",
-    default => sub {
-        my $self = shift;
-
-        return $self->_get_default_data_dir();
-    },
-);
-
-has '_rng' =>
-(
-    isa => 'XML::LibXML::RelaxNG', 
-    is => 'rw',
-    lazy => 1,
-    default => sub {
-        my $self = shift;
-
-        return $self->_get_rng_schema();
-    },
-);
-
-has '_xml_parser' => 
-(
-    isa => "XML::LibXML", 
-    is => 'rw',
-    lazy => 1,
-    default => sub {
-        return XML::LibXML->new();
-    },
-);
-
-has '_stylesheet' => 
-(
-    isa => "XML::LibXSLT::StylesheetWrapper", 
-    is => 'rw',
-    lazy => 1,
-    default => sub {
-        my $self = shift;
-
-        return $self->_get_stylesheet();
-    },
-);
-
-=head1 NAME
-
-XML::Grammar::Fiction::RendererBase - base module for Fiction-XML-to-something
-renderers
-
-=head1 VERSION
-
-Version 0.2.0
-
-=cut
-
-our $VERSION = '0.2.0';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _get_default_data_dir
-{
-    my $self = shift;
-
-    return dist_dir( 'XML-Grammar-Fiction' );
-}
-
-sub _get_rng_schema
-{
-    my $self = shift;
-
-    return
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                $self->_get_relaxng_base_path(),
-            ),
-        );
-}
-
-sub _get_stylesheet
-{
-    my $self = shift;
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                $self->_get_xslt_base_path(),
-            ),
-        );
-
-    return $xslt->parse_stylesheet($style_doc);
-}
-
-
-
-=head2 generic_translate
-
-=over 4
-
-=item * my $final_source = $converter->generic_translate({source => {file => $filename}, output => "string" })
-
-=item * my $final_source = $converter->generic_translate({source => {string_ref => \$buffer}, output => "string" })
-
-=item * my $final_dom = $converter->generic_translate({source => {file => $filename}, output => "dom" })
-
-=item * my $final_dom = $converter->generic_translate({source => {dom => $libxml_dom}, output => "dom" })
-
-=back
-
-Does the actual conversion. The C<'source'> argument points to a hash-ref with
-keys and values for the source. If C<'file'> is specified there it points to the
-filename to translate (currently the only available source). If 
-C<'string_ref'> is specified it points to a reference to a string, with the
-contents of the source XML. If C<'dom'> is specified then it points to an XML
-DOM as parsed or constructed by XML::LibXML.
-
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'dom'> returns the XML as an 
-L<XML::LibXML> DOM object.
-
-=cut
-
-sub _undefize
-{
-    my $v = shift;
-
-    return defined($v) ? $v : "(undef)";
-}
-
-sub _calc_and_ret_dom_without_validate
-{
-    my $self = shift;
-    my $args = shift;
-
-    my $source = $args->{source};
-
-    return
-          exists($source->{'dom'})
-        ? $source->{'dom'}
-        : exists($source->{'string_ref'})
-        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
-        : $self->_xml_parser()->parse_file($source->{'file'})
-        ;
-}
-
-sub _get_dom_from_source
-{
-    my $self = shift;
-    my $args = shift;
-  
-    my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
-
-    my $ret_code;
-
-    eval
-    {
-        $ret_code = $self->_rng()->validate($source_dom);
-    };
-
-    if (defined($ret_code) && ($ret_code == 0))
-    {
-        # It's OK.
-    }
-    else
-    {
-        confess "RelaxNG validation failed [\$ret_code == "
-            . _undefize($ret_code) . " ; $@]"
-            ;
-    }
-
-    return $source_dom;
-}
-
-sub generic_translate
-{
-    my ($self, $args) = @_;
-
-    my $source_dom = $self->_get_dom_from_source($args);
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "dom")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 25ebf5680196 -r e572aedb31b9 perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/RendererBase.pm.2
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/RendererBase.pm.2	Tue May 17 19:56:43 2011 +0000
@@ -0,0 +1,254 @@
+package XML::Grammar::Fiction::RendererBase;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use File::ShareDir ':ALL';
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use Moose;
+
+has '_data_dir' =>
+(
+    isa => 'Str', 
+    is => 'rw',
+    lazy => 1,
+    init_arg => "data_dir",
+    default => sub {
+        my $self = shift;
+
+        return $self->_get_default_data_dir();
+    },
+);
+
+has '_rng' =>
+(
+    isa => 'XML::LibXML::RelaxNG', 
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        my $self = shift;
+
+        return $self->_get_rng_schema();
+    },
+);
+
+has '_xml_parser' => 
+(
+    isa => "XML::LibXML", 
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return XML::LibXML->new();
+    },
+);
+
+has '_stylesheet' => 
+(
+    isa => "XML::LibXSLT::StylesheetWrapper", 
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        my $self = shift;
+
+        return $self->_get_stylesheet();
+    },
+);
+
+=head1 NAME
+
+XML::Grammar::Fiction::RendererBase - base module for Fiction-XML-to-something
+renderers
+
+=head1 VERSION
+
+Version 0.2.0
+
+=cut
+
+our $VERSION = '0.2.0';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _get_default_data_dir
+{
+    my $self = shift;
+
+    return dist_dir( 'XML-Grammar-Fiction' );
+}
+
+sub _get_rng_schema
+{
+    my $self = shift;
+
+    return
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                $self->_get_relaxng_base_path(),
+            ),
+        );
+}
+
+sub _get_stylesheet
+{
+    my $self = shift;
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                $self->_get_xslt_base_path(),
+            ),
+        );
+
+    return $xslt->parse_stylesheet($style_doc);
+}
+
+
+
+=head2 generic_translate
+
+=over 4
+
+=item * my $final_source = $converter->generic_translate({source => {file => $filename}, output => "string" })
+
+=item * my $final_source = $converter->generic_translate({source => {string_ref => \$buffer}, output => "string" })
+
+=item * my $final_dom = $converter->generic_translate({source => {file => $filename}, output => "dom" })
+
+=item * my $final_dom = $converter->generic_translate({source => {dom => $libxml_dom}, output => "dom" })
+
+=back
+
+Does the actual conversion. The C<'source'> argument points to a hash-ref with
+keys and values for the source. If C<'file'> is specified there it points to the
+filename to translate (currently the only available source). If 
+C<'string_ref'> is specified it points to a reference to a string, with the
+contents of the source XML. If C<'dom'> is specified then it points to an XML
+DOM as parsed or constructed by XML::LibXML.
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'dom'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub _undefize
+{
+    my $v = shift;
+
+    return defined($v) ? $v : "(undef)";
+}
+
+sub _calc_and_ret_dom_without_validate
+{
+    my $self = shift;
+    my $args = shift;
+
+    my $source = $args->{source};
+
+    return
+          exists($source->{'dom'})
+        ? $source->{'dom'}
+        : exists($source->{'string_ref'})
+        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
+        : $self->_xml_parser()->parse_file($source->{'file'})
+        ;
+}
+
+sub _get_dom_from_source
+{
+    my $self = shift;
+    my $args = shift;
+  
+    my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == "
+            . _undefize($ret_code) . " ; $@]"
+            ;
+    }
+
+    return $source_dom;
+}
+
+sub generic_translate
+{
+    my ($self, $args) = @_;
+
+    my $source_dom = $self->_get_dom_from_source($args);
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "dom")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+

changeset:   298:25ebf5680196
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 18:03:31 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
description:
Convert Screenplay::ToDocBook to this.


diff -r 3e809b2a1062 -r 25ebf5680196 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue May 17 17:51:14 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue May 17 18:03:31 2011 +0000
@@ -1,27 +1,10 @@
 package XML::Grammar::Screenplay::ToDocBook;
 
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use File::ShareDir ':ALL';
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Screenplay::Base';
-
 use Moose;
 
+extends('XML::Grammar::Screenplay::XSLT::Base');
 
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+has '+xslt_transform_basename' => (default => "screenplay-xml-to-docbook.xslt");
 
 =head1 NAME
 
@@ -47,41 +30,6 @@
 
 =cut
 
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} || dist_dir ( 'XML-Grammar-Fiction');
-
-    $self->_data_dir($data_dir);
-
-    my $dtd =
-        XML::LibXML::Dtd->new(
-            "Screenplay XML 0.1.0",
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.dtd"
-            ),
-        );
-
-    $self->_dtd($dtd);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-docbook.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
 =head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
 
 Does the actual conversion. $filename is the filename to translate (currently
@@ -97,28 +45,7 @@
 {
     my ($self, $args) = @_;
 
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
+    return $self->perform_translation($args);
 }
 
 =head1 AUTHOR

changeset:   297:3e809b2a1062
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 17:51:14 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Add the up-to-date homepage.


diff -r 5c1643e2cad1 -r 3e809b2a1062 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Tue May 17 17:46:48 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Tue May 17 17:51:14 2011 +0000
@@ -52,7 +52,7 @@
         resources =>
         {
             repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Fiction/",
-            homepage => "http://web-cpan.berlios.de/modules/XML-Grammar-Fiction/",
+            homepage => "http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/",
         },
         keywords =>
         [

changeset:   296:5c1643e2cad1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 17:46:48 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
description:
Convert Fiction::To{HTML,DocBook} to FictionBase::XSLT::Converter.

This involved implementing some missing functionality.


diff -r cd3ae36555c7 -r 5c1643e2cad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue May 17 17:20:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue May 17 17:46:48 2011 +0000
@@ -15,14 +15,9 @@
 
 use Moose;
 
-extends ("XML::Grammar::Fiction::RendererBase");
+extends ("XML::Grammar::FictionBase::XSLT::Converter");
 
-sub _get_relaxng_base_path
-{
-    my $self = shift;
-
-    return "fiction-xml.rng";
-}
+has '+rng_schema_basename' => (default => "fiction-xml.rng");
 
 =head1 AUTHOR
 
diff -r cd3ae36555c7 -r 5c1643e2cad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue May 17 17:20:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue May 17 17:46:48 2011 +0000
@@ -6,8 +6,6 @@
 use Carp;
 use File::Spec;
 
-use XML::LibXSLT;
-
 use File::ShareDir ':ALL';
 
 use XML::LibXML;
diff -r cd3ae36555c7 -r 5c1643e2cad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue May 17 17:20:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue May 17 17:46:48 2011 +0000
@@ -9,6 +9,8 @@
 
 extends ("XML::Grammar::Fiction::RNG_Renderer");
 
+has '+xslt_transform_basename' => (default => "fiction-xml-to-docbook.xslt");
+
 =head1 NAME
 
 XML::Grammar::Fiction::ToDocBook - module that converts the Fiction-XML to 
@@ -33,12 +35,7 @@
 
 =cut
 
-sub _get_xslt_base_path
-{
-    my $self = shift;
 
-    return "fiction-xml-to-docbook.xslt";
-}
 
 =head2 translate_to_docbook
 
@@ -71,7 +68,7 @@
 {
     my ($self, $args) = @_;
 
-    return $self->generic_translate($args);
+    return $self->perform_translation($args);
 }
 
 =head1 AUTHOR
diff -r cd3ae36555c7 -r 5c1643e2cad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue May 17 17:20:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue May 17 17:46:48 2011 +0000
@@ -7,7 +7,7 @@
 
 use Moose;
 
-extends( "XML::Grammar::Fiction::RNG_Renderer" );
+extends( 'XML::Grammar::Fiction::RNG_Renderer' );
 
 =head1 NAME
 
@@ -31,13 +31,7 @@
 Internal - (to settle pod-coverage.).
 
 =cut
-
-sub _get_xslt_base_path
-{
-    my $self = shift;
-
-    return "fiction-xml-to-html.xslt";
-}
+has '+xslt_transform_basename' => (default => "fiction-xml-to-html.xslt", );
 
 =head2 translate_to_html
 
@@ -70,7 +64,7 @@
 {
     my ($self, $args) = @_;
 
-    return $self->generic_translate($args);
+    return $self->perform_translation($args);
 }
 
 =head1 AUTHOR
diff -r cd3ae36555c7 -r 5c1643e2cad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 17:20:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 17:46:48 2011 +0000
@@ -85,24 +85,62 @@
     return 0;
 }
 
-=head2 $converter->perform_translation({source => {file => $filename}, output => "string" })
+=head2 $converter->perform_translation
 
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
+=over 4
+
+=item * my $final_source = $converter->perform_translation({source => {file => $filename}, output => "string" })
+
+=item * my $final_source = $converter->perform_translation({source => {string_ref => \$buffer}, output => "string" })
+
+=item * my $final_dom = $converter->perform_translation({source => {file => $filename}, output => "dom" })
+
+=item * my $final_dom = $converter->perform_translation({source => {dom => $libxml_dom}, output => "dom" })
+
+=back
+
+Does the actual conversion. The C<'source'> argument points to a hash-ref with
+keys and values for the source. If C<'file'> is specified there it points to the
+filename to translate (currently the only available source). If 
+C<'string_ref'> is specified it points to a reference to a string, with the
+contents of the source XML. If C<'dom'> is specified then it points to an XML
+DOM as parsed or constructed by XML::LibXML.
 
 The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
+the XML as a string, and a value of C<'dom'> returns the XML as an 
 L<XML::LibXML> DOM object.
 
 =cut
 
-sub perform_translation
+sub _undefize
 {
-    my ($self, $args) = @_;
+    my $v = shift;
 
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
+    return defined($v) ? $v : "(undef)";
+}
+
+sub _calc_and_ret_dom_without_validate
+{
+    my $self = shift;
+    my $args = shift;
+
+    my $source = $args->{source};
+
+    return
+          exists($source->{'dom'})
+        ? $source->{'dom'}
+        : exists($source->{'string_ref'})
+        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
+        : $self->_xml_parser()->parse_file($source->{'file'})
         ;
+}
+
+sub _get_dom_from_source
+{
+    my $self = shift;
+    my $args = shift;
+  
+    my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
 
     my $ret_code;
 
@@ -117,9 +155,20 @@
     }
     else
     {
-        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+        confess "RelaxNG validation failed [\$ret_code == "
+            . _undefize($ret_code) . " ; $@]"
+            ;
     }
 
+    return $source_dom;
+}
+
+sub perform_translation
+{
+    my ($self, $args) = @_;
+
+    my $source_dom = $self->_get_dom_from_source($args);
+
     my $stylesheet = $self->_stylesheet();
 
     my $results = $stylesheet->transform($source_dom);
@@ -130,7 +179,7 @@
     {
         return $stylesheet->output_string($results);
     }
-    elsif ($medium eq "xml")
+    elsif ($medium eq "dom")
     {
         return $results;
     }

changeset:   295:cd3ae36555c7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 17:20:57 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
description:
Extract base class XML::Grammar::Screenplay::XSLT::Base .

This is to encapsulate the common +rng_schema_basename.


diff -r eb111430cac2 -r cd3ae36555c7 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 17:01:16 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 17:20:57 2011 +0000
@@ -45,6 +45,7 @@
 lib/XML/Grammar/Screenplay/ToDocBook.pm
 lib/XML/Grammar/Screenplay/ToHTML.pm
 lib/XML/Grammar/Screenplay/ToTEI.pm
+lib/XML/Grammar/Screenplay/XSLT/Base.pm
 Makefile.PL
 MANIFEST
 META.yml # Will be created by "make dist"
diff -r eb111430cac2 -r cd3ae36555c7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 17:01:16 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 17:20:57 2011 +0000
@@ -2,9 +2,8 @@
 
 use Moose;
 
-extends('XML::Grammar::FictionBase::XSLT::Converter');
+extends('XML::Grammar::Screenplay::XSLT::Base');
 
-has '+rng_schema_basename' => (default => "screenplay-xml.rng");
 has '+xslt_transform_basename' => (default => "screenplay-xml-to-html.xslt");
 
 =head1 NAME
diff -r eb111430cac2 -r cd3ae36555c7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 17:01:16 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 17:20:57 2011 +0000
@@ -5,9 +5,8 @@
 
 use Moose;
 
-extends('XML::Grammar::FictionBase::XSLT::Converter');
+extends('XML::Grammar::Screenplay::XSLT::Base');
 
-has '+rng_schema_basename' => (default => "screenplay-xml.rng");
 has '+xslt_transform_basename' => (default => "screenplay-xml-to-tei.xslt");
 
 =head1 NAME
diff -r eb111430cac2 -r cd3ae36555c7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/XSLT/Base.pm	Tue May 17 17:20:57 2011 +0000
@@ -0,0 +1,42 @@
+package XML::Grammar::Screenplay::XSLT::Base;
+
+use Moose;
+
+extends('XML::Grammar::FictionBase::XSLT::Converter');
+
+has '+rng_schema_basename' => (default => "screenplay-xml.rng");
+
+1;
+
+__END__
+
+=head1 NAME
+
+XML::Grammar::Screenplay::XSLT::Base - base module for XML::Grammar::Screenplay
+XSLT conversions.
+
+=head1 VERSION
+
+Version 0.2.0
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut

changeset:   294:eb111430cac2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 17:01:16 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
description:
Refactoring : rename to xslt_transform_basename.


diff -r e413b3d04b66 -r eb111430cac2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 17:00:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 17:01:16 2011 +0000
@@ -19,7 +19,7 @@
 has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
 has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
 has 'rng_schema_basename' => (is => 'ro', isa => 'Str', required => 1,);
-has 'xslt_basename' => (is => 'ro', isa => 'Str', required => 1,);
+has 'xslt_transform_basename' => (is => 'ro', isa => 'Str', required => 1,);
 
 =head1 NAME
 
@@ -76,7 +76,7 @@
     my $style_doc = $self->_xml_parser()->parse_file(
             File::Spec->catfile(
                 $self->_data_dir(), 
-                $self->xslt_basename(),
+                $self->xslt_transform_basename(),
             ),
         );
 
diff -r e413b3d04b66 -r eb111430cac2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 17:00:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 17:01:16 2011 +0000
@@ -5,7 +5,7 @@
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
 has '+rng_schema_basename' => (default => "screenplay-xml.rng");
-has '+xslt_basename' => (default => "screenplay-xml-to-html.xslt");
+has '+xslt_transform_basename' => (default => "screenplay-xml-to-html.xslt");
 
 =head1 NAME
 
diff -r e413b3d04b66 -r eb111430cac2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 17:00:02 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 17:01:16 2011 +0000
@@ -8,7 +8,7 @@
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
 has '+rng_schema_basename' => (default => "screenplay-xml.rng");
-has '+xslt_basename' => (default => "screenplay-xml-to-tei.xslt");
+has '+xslt_transform_basename' => (default => "screenplay-xml-to-tei.xslt");
 
 =head1 NAME
 

changeset:   293:e413b3d04b66
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 17:00:02 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
description:
Rename rng_basename to rng_schema_basename.


diff -r f0caacffa1f5 -r e413b3d04b66 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 16:58:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 17:00:02 2011 +0000
@@ -18,7 +18,7 @@
 has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
 has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
 has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
-has 'rng_basename' => (is => 'ro', isa => 'Str', required => 1,);
+has 'rng_schema_basename' => (is => 'ro', isa => 'Str', required => 1,);
 has 'xslt_basename' => (is => 'ro', isa => 'Str', required => 1,);
 
 =head1 NAME
@@ -63,7 +63,7 @@
             location =>
             File::Spec->catfile(
                 $self->_data_dir(), 
-                $self->rng_basename(),
+                $self->rng_schema_basename(),
             ),
         );
 
diff -r f0caacffa1f5 -r e413b3d04b66 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 16:58:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 17:00:02 2011 +0000
@@ -4,7 +4,7 @@
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
-has '+rng_basename' => (default => "screenplay-xml.rng");
+has '+rng_schema_basename' => (default => "screenplay-xml.rng");
 has '+xslt_basename' => (default => "screenplay-xml-to-html.xslt");
 
 =head1 NAME
diff -r f0caacffa1f5 -r e413b3d04b66 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 16:58:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 17:00:02 2011 +0000
@@ -7,7 +7,7 @@
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
 
-has '+rng_basename' => (default => "screenplay-xml.rng");
+has '+rng_schema_basename' => (default => "screenplay-xml.rng");
 has '+xslt_basename' => (default => "screenplay-xml-to-tei.xslt");
 
 =head1 NAME

changeset:   292:f0caacffa1f5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 16:58:30 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Convert ::ToHTML to the XML::Grammar::FictionBase::XSLT::Converter base class.


diff -r 6cb3ee1ca5ce -r f0caacffa1f5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 16:55:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 17 16:58:30 2011 +0000
@@ -1,27 +1,11 @@
 package XML::Grammar::Screenplay::ToHTML;
 
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use File::ShareDir ':ALL';
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Screenplay::Base';
-
 use Moose;
 
+extends('XML::Grammar::FictionBase::XSLT::Converter');
 
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+has '+rng_basename' => (default => "screenplay-xml.rng");
+has '+xslt_basename' => (default => "screenplay-xml-to-html.xslt");
 
 =head1 NAME
 
@@ -45,44 +29,6 @@
 
 Internal - (to settle pod-coverage.).
 
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} ||
-        dist_dir( 'XML-Grammar-Fiction');
-
-    $self->_data_dir($data_dir);
-
-    my $rngschema =
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.rng"
-            ),
-        );
-
-    $self->_rng($rngschema);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-html.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
 =head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
 
 Does the actual conversion. $filename is the filename to translate (currently
@@ -98,44 +44,7 @@
 {
     my ($self, $args) = @_;
 
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $ret_code;
-
-    eval
-    {
-        $ret_code = $self->_rng()->validate($source_dom);
-    };
-
-    if (defined($ret_code) && ($ret_code == 0))
-    {
-        # It's OK.
-    }
-    else
-    {
-        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
-    }
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
+    return $self->perform_translation($args);
 }
 
 =head1 AUTHOR

changeset:   291:6cb3ee1ca5ce
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 16:55:18 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
description:
Fix the ::ToTEI class.


diff -r 05e2b70fdeab -r 6cb3ee1ca5ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 16:39:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 16:55:18 2011 +0000
@@ -11,16 +11,15 @@
 use XML::LibXML;
 use XML::LibXSLT;
 
-use base 'XML::Grammar::Screenplay::Base';
-
 use Moose;
 
 has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_data_dir_from_input' => (isa => 'Str', is => 'rw', init_arg => 'data_dir',);
 has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
 has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
 has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
-has 'rng_basename' => (is => 'ro', isa => 'Str',);
-has 'xslt_basename' => (is => 'ro', isa => 'Str',);
+has 'rng_basename' => (is => 'ro', isa => 'Str', required => 1,);
+has 'xslt_basename' => (is => 'ro', isa => 'Str', required => 1,);
 
 =head1 NAME
 
@@ -44,13 +43,17 @@
 
 Internal - (to settle pod-coverage.).
 
+=head2 BUILD()
+
+Internal - (to settle pod-coverage.).
+
 =cut
 
-sub _init
+sub BUILD
 {
-    my ($self, $args) = @_;
+    my ($self) = @_;
 
-    my $data_dir = $args->{'data_dir'} ||
+    my $data_dir = $self->_data_dir_from_input() ||
         dist_dir( 'XML-Grammar-Fiction');
 
     $self->_data_dir($data_dir);
diff -r 05e2b70fdeab -r 6cb3ee1ca5ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 16:39:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 16:55:18 2011 +0000
@@ -3,16 +3,6 @@
 use strict;
 use warnings;
 
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use File::ShareDir ':ALL';
-
-use XML::LibXML;
-use XML::LibXSLT;
-
 use Moose;
 
 extends('XML::Grammar::FictionBase::XSLT::Converter');
@@ -42,44 +32,6 @@
 
 Internal - (to settle pod-coverage.).
 
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} ||
-        dist_dir( 'XML-Grammar-Fiction');
-
-    $self->_data_dir($data_dir);
-
-    my $rngschema =
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.rng"
-            ),
-        );
-
-    $self->_rng($rngschema);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-tei.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
 =head2 $converter->translate_to_tei({source => {file => $filename}, output => "string" })
 
 Does the actual conversion. $filename is the filename to translate (currently

changeset:   290:05e2b70fdeab
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 16:39:01 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
description:
Convert XML::Grammar::Screenplay::ToTEI.pm to the new XSLT::Converter.

This is a base module for XSLT converters. We'll convert more translators
to it later on.


diff -r c2382fe668a0 -r 05e2b70fdeab perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 16:22:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 16:39:01 2011 +0000
@@ -19,6 +19,7 @@
 lib/XML/Grammar/Fiction/App/ToHTML.pm
 lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/FictionBase/TagsTree2XML.pm
+lib/XML/Grammar/FictionBase/XSLT/Converter.pm
 lib/XML/Grammar/Fiction/Err.pm
 lib/XML/Grammar/Fiction/Event.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
diff -r c2382fe668a0 -r 05e2b70fdeab perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/XSLT/Converter.pm	Tue May 17 16:39:01 2011 +0000
@@ -0,0 +1,166 @@
+package XML::Grammar::FictionBase::XSLT::Converter;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use File::ShareDir ':ALL';
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+has 'rng_basename' => (is => 'ro', isa => 'Str',);
+has 'xslt_basename' => (is => 'ro', isa => 'Str',);
+
+=head1 NAME
+
+XML::Grammar::FictionBase::XSLT::Converter - base module that converts an XML 
+file to a different XML file using an XSLT transform.
+
+=head1 VERSION
+
+Version 0.2.0
+
+=cut
+
+our $VERSION = '0.2.0';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        dist_dir( 'XML-Grammar-Fiction');
+
+    $self->_data_dir($data_dir);
+
+    my $rngschema =
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                $self->rng_basename(),
+            ),
+        );
+
+    $self->_rng($rngschema);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                $self->xslt_basename(),
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->perform_translation({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub perform_translation
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+    }
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
+1;
+
diff -r c2382fe668a0 -r 05e2b70fdeab perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 16:22:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 16:39:01 2011 +0000
@@ -13,15 +13,12 @@
 use XML::LibXML;
 use XML::LibXSLT;
 
-use base 'XML::Grammar::Screenplay::Base';
-
 use Moose;
 
+extends('XML::Grammar::FictionBase::XSLT::Converter');
 
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+has '+rng_basename' => (default => "screenplay-xml.rng");
+has '+xslt_basename' => (default => "screenplay-xml-to-tei.xslt");
 
 =head1 NAME
 
@@ -98,44 +95,7 @@
 {
     my ($self, $args) = @_;
 
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $ret_code;
-
-    eval
-    {
-        $ret_code = $self->_rng()->validate($source_dom);
-    };
-
-    if (defined($ret_code) && ($ret_code == 0))
-    {
-        # It's OK.
-    }
-    else
-    {
-        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
-    }
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
+    return $self->perform_translation($args);
 }
 
 =head1 AUTHOR

changeset:   289:c2382fe668a0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 16:22:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add the Changes.


diff -r 975bc2678b5d -r c2382fe668a0 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 15:42:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue May 17 16:22:58 2011 +0000
@@ -1,5 +1,17 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add extradata/screenplay-xml-to-tei.xslt and 
+    lib/XML/Grammar/Screenplay/ToTEI.pm - add tests for them.
+        - They convert Screenplay-XML into TEI - Text Encoding Initiative,
+        a markup language for digital representation of texts (especially 
+        artsy texts such as screenplays, prose or poems) 
+            - http://www.tei-c.org/ .
+        - This will allow for easier conversion into XSL-FO, as well as many
+        other formats.
+    * Got rid of the <!DOCTYPE .... > declaration in the Screenplay-XML
+    output (it confused the heck out of xsltproc and was not really needed
+    as we use a RELAX-NG schema instead of a DTD.)
+
 0.2.0       Fri May 13 16:56:00 IDT 2011
     * Add support for <ol>, <li> and <ul> to Fiction-Text and Fiction-XML.
 

changeset:   288:975bc2678b5d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 17 15:42:53 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/nested-s.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/scenes-with-titles.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/two-nested-s.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-comments.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-dialogue.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-line-comments.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t
description:
Add XML::Grammar::Screenplay::ToTEI. Test the conversion.

Add the class to do the converstion to TEI using the XSLT transform.

Test that it's OK using a test script.


diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 17 15:42:53 2011 +0000
@@ -43,6 +43,7 @@
 lib/XML/Grammar/Screenplay.pm
 lib/XML/Grammar/Screenplay/ToDocBook.pm
 lib/XML/Grammar/Screenplay/ToHTML.pm
+lib/XML/Grammar/Screenplay/ToTEI.pm
 Makefile.PL
 MANIFEST
 META.yml # Will be created by "make dist"
@@ -136,6 +137,23 @@
 t/screenplay/data/proto-text/with-multi-para-desc.txt
 t/screenplay/data/proto-text/with-numeric-entities.txt
 t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
+t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml
+t/screenplay/data/tei/nested-s.tei.xml
+t/screenplay/data/tei/scenes-with-titles.tei.xml
+t/screenplay/data/tei/two-nested-s.tei.xml
+t/screenplay/data/tei/with-brs.tei.xml
+t/screenplay/data/tei/with-colon-inside-description.tei.xml
+t/screenplay/data/tei/with-comments.tei.xml
+t/screenplay/data/tei/with-description.tei.xml
+t/screenplay/data/tei/with-dialogue.tei.xml
+t/screenplay/data/tei/with-entities.tei.xml
+t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml
+t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml
+t/screenplay/data/tei/with-internal-description.tei.xml
+t/screenplay/data/tei/with-multi-line-comments.tei.xml
+t/screenplay/data/tei/with-multi-para-desc.tei.xml
+t/screenplay/data/tei/with-numeric-entities.tei.xml
+t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml
 t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
 t/screenplay/data/xml/nested-s.xml
 t/screenplay/data/xml/scenes-with-titles.xml
@@ -158,4 +176,5 @@
 t/screenplay/proto-text-to-xml-using-custom-parser.t
 t/screenplay/qnd-parser-unit.t
 t/screenplay/to-docbook.t
+t/screenplay/to-tei.t
 t/screenplay/to-xhtml.t
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToTEI.pm	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,165 @@
+package XML::Grammar::Screenplay::ToTEI;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use File::ShareDir ':ALL';
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToTEI - module that converts the Screenplay
+XML to TEI (Text Encoding Initiative).
+
+=head1 VERSION
+
+Version 0.2.0
+
+=cut
+
+our $VERSION = '0.2.0';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        dist_dir( 'XML-Grammar-Fiction');
+
+    $self->_data_dir($data_dir);
+
+    my $rngschema =
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.rng"
+            ),
+        );
+
+    $self->_rng($rngschema);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-tei.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_tei({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_tei
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+    }
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/dialogue-with-several-paragraphs.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                I'm still waiting.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                so you are.
+            </tei:p>
+        </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/nested-s.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/nested-s.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="a-better-scene">
+          <tei:head>a-better-scene</tei:head>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/scenes-with-titles.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/scenes-with-titles.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="a-better-scene">
+          <tei:head>A Better Scene</tei:head>
+        </tei:div>
+        <tei:div type="scene" xml:id="another-scene">
+          <tei:head>another-scene</tei:head>
+        </tei:div>
+        <tei:div type="scene" xml:id="exodus">
+          <tei:head>The Exodus</tei:head>
+          <tei:sp><tei:speaker>Moses</tei:speaker>
+                    <tei:p>
+                        let us get out of here!
+                    </tei:p>
+                </tei:sp>
+          <tei:sp><tei:speaker>Joshua</tei:speaker>
+                    <tei:p>
+                        amen!
+                    </tei:p>
+                </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/two-nested-s.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/two-nested-s.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="a-better-scene">
+          <tei:head>a-better-scene</tei:head>
+        </tei:div>
+        <tei:div type="scene" xml:id="another-scene">
+          <tei:head>another-scene</tei:head>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-brs.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+                David and 
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.<tei:lb/>
+                I will kill you.<tei:lb/>
+                You will not survive.<tei:lb/>
+                I will kill you.<tei:lb/>
+                I will kill you.<tei:lb/>
+                Ask Jive.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+        </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-colon-inside-description.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+            David and Goliath are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+            <tei:p>
+                He looks around: there's no one there except Goliath and him.
+            </tei:p>
+            <tei:p>
+                David opens the book "Slings: The Missing Manual".
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still waiting.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-comments.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-comments.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+        </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-description.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+            David and Goliath are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still waiting.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-dialogue.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-dialogue.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+        </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-entities.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </tei:p>
+        <tei:p>
+            David is a red-head. "Hello"
+        </tei:p>
+        <tei:p>
+            Goliath is very tall.
+        </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still waiting.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-i-element-inside-paragraphs.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+                David and 
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="italic">merciful</tei:hi>, real merciful</tei:ref>, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still <tei:ref target="http://wait.tld/">waiting</tei:ref>.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description-at-start-of-line.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+                David and 
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the 
+                <tei:stage>[sarcastically]</tei:stage> power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still <tei:ref target="http://wait.tld/">waiting</tei:ref>.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            as is written in the wikipedia <tei:stage>[See <tei:ref target="http://wiki.tld/">the Wiki site</tei:ref>
+                for more information]</tei:stage>, you are now dead,
+            having been shot with my sling.
+        </tei:p>
+    </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-internal-description.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+                David and 
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the 
+                <tei:stage>[sarcastically]</tei:stage> power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still <tei:ref target="http://wait.tld/">waiting</tei:ref>.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            as is written in the wikipedia <tei:stage>[See <tei:ref target="http://wiki.tld/">the Wiki site</tei:ref>
+                for more information]</tei:stage>, you are now dead,
+            having been shot with my sling.
+        </tei:p>
+    </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-line-comments.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-line-comments.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+        </tei:sp>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-multi-para-desc.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+            David and Goliath are standing by each other.
+        </tei:p>
+        <tei:p>
+            David is a red-head.
+        </tei:p>
+        <tei:p>
+            Goliath is very tall.
+        </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still waiting.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-numeric-entities.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </tei:p>
+        <tei:p>
+            David is a red-head. "Hello"[ Something in square brackets. ]
+        </tei:p>
+        <tei:p>
+            Goliath is very tall.
+        </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still waiting.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/tei/with-tags-inside-paragraphs.tei.xml	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,63 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<tei:text xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+  <tei:body>
+    <tei:div type="act" xml:id="index">
+      <tei:head>ACT I</tei:head>
+      <tei:div type="scene" xml:id="top">
+        <tei:head>top</tei:head>
+        <tei:div type="scene" xml:id="david_and_goliath">
+          <tei:head>david_and_goliath</tei:head>
+          <tei:stage>
+            <tei:p>
+                David and 
+                <tei:ref target="http://en.wikipedia.org/wiki/Goliath">Goliath</tei:ref> 
+                are standing by each other.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                I will kill you.
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+            <tei:p>
+                no way, you little idiot!
+            </tei:p>
+        </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+            <tei:p>
+                yes way!
+            </tei:p>
+            <tei:p>
+                In the name of <tei:ref target="http://real-allah.tld/">Allah, the <tei:hi rend="bold">merciful</tei:hi>, real merciful</tei:ref>, I will show you the power 
+                of my sling.
+            </tei:p>
+            <tei:p>
+                I shall sling you and bing you till infinity.
+            </tei:p>
+        </tei:sp>
+          <tei:stage>
+            <tei:p>
+                David takes his sling.
+            </tei:p>
+        </tei:stage>
+          <tei:sp><tei:speaker>Goliath</tei:speaker>
+        <tei:p>
+            I'm still <tei:ref target="http://wait.tld/">waiting</tei:ref>.
+        </tei:p>
+    </tei:sp>
+          <tei:sp><tei:speaker>David</tei:speaker>
+        <tei:p>
+            so you are.
+        </tei:p>
+    </tei:sp>
+          <tei:stage>
+        <tei:p>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </tei:p>
+    </tei:stage>
+        </tei:div>
+      </tei:div>
+    </tei:div>
+  </tei:body>
+</tei:text>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml	Mon May 16 19:30:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml	Tue May 17 15:42:53 2011 +0000
@@ -1,5 +1,4 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
 <document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
     <head>
     </head>
diff -r 887754f6dcad -r 975bc2678b5d perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-tei.t	Tue May 17 15:42:53 2011 +0000
@@ -0,0 +1,71 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 17;
+
+use Test::XML;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToTEI;
+
+# TEST:$num_texts=17
+my @tests = (qw(
+    dialogue-with-several-paragraphs
+    nested-s
+    scenes-with-titles
+    two-nested-s
+    with-brs
+    with-colon-inside-description
+    with-comments
+    with-description
+    with-dialogue
+    with-entities
+    with-i-element-inside-paragraphs
+    with-internal-description-at-start-of-line
+    with-internal-description
+    with-multi-line-comments
+    with-multi-para-desc
+    with-numeric-entities
+    with-tags-inside-paragraphs
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+    return $contents;
+}
+
+my $converter = XML::Grammar::Screenplay::ToTEI->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $tei_text = $converter->translate_to_tei(
+        {
+            source => { file => "t/screenplay/data/xml/$fn.xml", },
+            output => "string",
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($tei_text, load_xml("t/screenplay/data/tei/$fn.tei.xml"),
+        "Output of the TEI \"$fn\"",
+    );
+}
+
+1;
+

changeset:   287:887754f6dcad
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 19:30:46 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Minor: explicitly use-ing XML::Writer.


diff -r 024ddb938bfb -r 887754f6dcad perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon May 16 18:52:29 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon May 16 19:30:46 2011 +0000
@@ -5,6 +5,7 @@
 
 use Carp;
 use HTML::Entities ();
+use XML::Writer;
 
 use Moose;
 

changeset:   286:024ddb938bfb
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 18:52:29 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Got rid of the <!DOCTYPE declaration in the output Screenplay-XML.


diff -r b96e03e188a8 -r 024ddb938bfb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon May 16 18:29:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon May 16 18:52:29 2011 +0000
@@ -1,5 +1,7 @@
 package XML::Grammar::Screenplay::FromProto;
 
+use XML::Writer;
+
 use Moose;
 
 extends("XML::Grammar::FictionBase::TagsTree2XML");
@@ -280,7 +282,6 @@
     );
 
     $writer->xmlDecl("utf-8");
-    $writer->doctype("document", undef, "screenplay-xml.dtd");
     $writer->startTag([$screenplay_ns, "document"]);
     $writer->startTag([$screenplay_ns, "head"]);
     $writer->endTag();
diff -r b96e03e188a8 -r 024ddb938bfb perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Mon May 16 18:29:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Mon May 16 18:52:29 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 34;
+use Test::XML tests => 51;
 
 use XML::LibXML;
 
@@ -72,6 +72,9 @@
     );
 
     # TEST*$num_texts
+    unlike ($got_xml, qr{^<!DOCTYPE}ms, "No doctype in \"$fn\"");
+
+    # TEST*$num_texts
     is_xml ($got_xml, load_xml("t/screenplay/data/xml/$fn.xml"),
         "Output of the Proto Text \"$fn\""
     );

changeset:   285:b96e03e188a8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 18:29:28 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
description:
Screenplay-XML-to-TEI now validate the output of Star Trek WTLD.


diff -r 2ea677b7a745 -r b96e03e188a8 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 17:21:23 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 18:29:28 2011 +0000
@@ -67,12 +67,12 @@
 </xsl:template>
 
 <xsl:template match="sp:ulink">
-    <ref>
-        <xsl:attribute name="terget">
+    <tei:ref>
+        <xsl:attribute name="target">
             <xsl:value-of select="@url" />
         </xsl:attribute>
         <xsl:apply-templates />
-    </ref>
+    </tei:ref>
 </xsl:template>
 
 <xsl:template match="sp:bold">
@@ -92,7 +92,7 @@
 </xsl:template>
 
 <xsl:template match="sp:br">
-    <lb />
+    <tei:lb />
 </xsl:template>
 
 </xsl:stylesheet>

changeset:   284:2ea677b7a745
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 17:21:23 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
description:
[Screenplay-XML] Conversion to TEI finishes fine.

TODO : test for TEI validity.


diff -r cb6a255b46f5 -r 2ea677b7a745 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 17:04:59 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 17:21:23 2011 +0000
@@ -5,8 +5,6 @@
      >
 
 <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
- doctype-public="-//W3C//DTD XHTML 1.1//EN"
- doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
  />
 
 <xsl:template match="/">
@@ -28,12 +26,12 @@
 </xsl:template>
 
 <xsl:template match="sp:scene">
-    <tei:div type="scene" xml:id="scene-{@id}">
+    <tei:div type="scene">
+        <xsl:attribute name="xml:id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
         <!-- Make the title the title attribute or "ID" if does not exist. -->
         <tei:head>
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
             <xsl:choose>
                 <xsl:when test="@title">
                     <xsl:value-of select="@title" />

changeset:   283:cb6a255b46f5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 17:04:59 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
description:
[Screenplay-XML->TEI] Stylesheet should be working now.

Thanks to Sebastian Rahtz, Efraim Feinstein and Lou Burnard from the TEI
mailing list who answered my questions.

TODO : test it.


diff -r 29a9323acb1a -r cb6a255b46f5 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 16:52:31 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 17:04:59 2011 +0000
@@ -69,32 +69,32 @@
 </xsl:template>
 
 <xsl:template match="sp:ulink">
-    <a>
-        <xsl:attribute name="href">
+    <ref>
+        <xsl:attribute name="terget">
             <xsl:value-of select="@url" />
         </xsl:attribute>
         <xsl:apply-templates />
-    </a>
+    </ref>
 </xsl:template>
 
 <xsl:template match="sp:bold">
-    <strong class="bold">
+    <tei:hi rend="bold">
         <xsl:apply-templates />
-    </strong>
+    </tei:hi>
 </xsl:template>
 
 <xsl:template match="sp:italics">
-    <em class="italics">
+    <tei:hi rend="italic">
         <xsl:apply-templates />
-    </em>
+    </tei:hi>
 </xsl:template>
 
 <xsl:template match="sp:inlinedesc">
-    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+    <tei:stage>[<xsl:apply-templates />]</tei:stage>
 </xsl:template>
 
 <xsl:template match="sp:br">
-    <br />
+    <lb />
 </xsl:template>
 
 </xsl:stylesheet>

changeset:   282:29a9323acb1a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 16:52:31 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
description:
Convert to the TEI namespace.


diff -r c1132d4a945b -r 29a9323acb1a perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 13:36:30 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 16:52:31 2011 +0000
@@ -1,6 +1,7 @@
 <xsl:stylesheet version = '1.0'
      xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
      xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     xmlns:tei="http://www.tei-c.org/ns/1.0"
      >
 
 <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
@@ -13,23 +14,23 @@
 </xsl:template>
 
 <xsl:template match="sp:body">
-    <text>
-        <body>
-            <div type="act">
+    <tei:text>
+        <tei:body>
+            <tei:div type="act">
                 <xsl:attribute name="xml:id">
                     <xsl:value-of select="@id" />
                 </xsl:attribute>
-                <head>ACT I</head>
+                <tei:head>ACT I</tei:head>
                 <xsl:apply-templates select="sp:scene" />
-            </div>
-        </body>
-    </text>
+            </tei:div>
+        </tei:body>
+    </tei:text>
 </xsl:template>
 
 <xsl:template match="sp:scene">
-    <div type="scene" xml:id="scene-{@id}">
+    <tei:div type="scene" xml:id="scene-{@id}">
         <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <head>
+        <tei:head>
             <xsl:attribute name="id">
                 <xsl:value-of select="@id" />
             </xsl:attribute>
@@ -41,30 +42,30 @@
                     <xsl:value-of select="@id" />
                 </xsl:otherwise>
             </xsl:choose>
-        </head>
+        </tei:head>
         <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
-    </div>
+    </tei:div>
 </xsl:template>
 
 <xsl:template match="sp:description">
-    <stage>
+    <tei:stage>
         <xsl:apply-templates />
-    </stage>
+    </tei:stage>
 </xsl:template>
 
 <xsl:template match="sp:saying">
-    <sp>
-        <speaker>
+    <tei:sp>
+        <tei:speaker>
             <xsl:value-of select="@character" />
-        </speaker>
+        </tei:speaker>
         <xsl:apply-templates />
-    </sp>
+    </tei:sp>
 </xsl:template>
 
 <xsl:template match="sp:para">
-    <p>
+    <tei:p>
         <xsl:apply-templates />
-    </p>
+    </tei:p>
 </xsl:template>
 
 <xsl:template match="sp:ulink">

changeset:   281:c1132d4a945b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon May 16 13:36:30 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
description:
Add the incomplete Screenplay-XML to TEI stylesheet.


diff -r b4ec571c574d -r c1132d4a945b perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 13 13:58:04 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon May 16 13:36:30 2011 +0000
@@ -9,6 +9,7 @@
 extradata/screenplay-xml.rng
 extradata/screenplay-xml-to-docbook.xslt
 extradata/screenplay-xml-to-html.xslt
+extradata/screenplay-xml-to-tei.xslt
 extradata/screenplay-xml-to-xsl-fo.xslt
 inc/Test/Run/Builder.pm
 inc/XML/Grammar/Builder.pm
diff -r b4ec571c574d -r c1132d4a945b perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-tei.xslt	Mon May 16 13:36:30 2011 +0000
@@ -0,0 +1,99 @@
+<xsl:stylesheet version = '1.0'
+     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//W3C//DTD XHTML 1.1//EN"
+ doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <text>
+        <body>
+            <div type="act">
+                <xsl:attribute name="xml:id">
+                    <xsl:value-of select="@id" />
+                </xsl:attribute>
+                <head>ACT I</head>
+                <xsl:apply-templates select="sp:scene" />
+            </div>
+        </body>
+    </text>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <div type="scene" xml:id="scene-{@id}">
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <head>
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose>
+        </head>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <stage>
+        <xsl:apply-templates />
+    </stage>
+</xsl:template>
+
+<xsl:template match="sp:saying">
+    <sp>
+        <speaker>
+            <xsl:value-of select="@character" />
+        </speaker>
+        <xsl:apply-templates />
+    </sp>
+</xsl:template>
+
+<xsl:template match="sp:para">
+    <p>
+        <xsl:apply-templates />
+    </p>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <a>
+        <xsl:attribute name="href">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:apply-templates />
+    </a>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <strong class="bold">
+        <xsl:apply-templates />
+    </strong>
+</xsl:template>
+
+<xsl:template match="sp:italics">
+    <em class="italics">
+        <xsl:apply-templates />
+    </em>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+</xsl:template>
+
+<xsl:template match="sp:br">
+    <br />
+</xsl:template>
+
+</xsl:stylesheet>

changeset:   280:b4ec571c574d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 13 13:58:04 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.2.0


diff -r 44ce31214ad1 -r b4ec571c574d .hgtags
--- a/.hgtags	Fri May 13 13:57:43 2011 +0000
+++ b/.hgtags	Fri May 13 13:58:04 2011 +0000
@@ -10,3 +10,4 @@
 159ce56f456f61b602de4154a673b89cf020d8c1 releases/0.1.5
 ba2c538c4e2daca43cb0750e40e9fd949e73066d releases/0.1.6
 d1cdd6865b6271ed118ba0b86f3a440d5c0d8b14 releases/0.1.7
+44ce31214ad11c78bdf3cb7ee5936ccbb18cda79 releases/0.2.0

changeset:   279:44ce31214ad1
tag:         releases/0.2.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 13 13:57:43 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
[XML-Grammar-Fiction] Bump the version to version 0.2.0.


diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri May 13 13:57:43 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.2.0       Fri May 13 16:56:00 IDT 2011
     * Add support for <ol>, <li> and <ul> to Fiction-Text and Fiction-XML.
 
 0.1.7       Tue Apr 19 00:55:07 IDT 2011
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri May 13 13:57:43 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri May 13 13:57:43 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri May 13 13:57:43 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri May 13 13:57:43 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri May 13 13:57:43 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 METHODS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri May 13 13:57:43 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 use Exception::Class
     (
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 13 13:57:43 2011 +0000
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri May 13 13:57:43 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri May 13 13:57:43 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 AUTHOR
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri May 13 13:57:43 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri May 13 13:57:43 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri May 13 13:57:43 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri May 13 13:57:43 2011 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri May 13 13:57:43 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri May 13 13:57:43 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri May 13 13:57:43 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri May 13 13:57:43 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri May 13 13:57:43 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head1 SYNOPSIS
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri May 13 13:57:43 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri May 13 13:57:43 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 
diff -r 4eaaeab6f975 -r 44ce31214ad1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri May 13 13:55:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri May 13 13:57:43 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.7
+Version 0.2.0
 
 =cut
 
-our $VERSION = '0.1.7';
+our $VERSION = '0.2.0';
 
 =head2 new()
 

changeset:   278:4eaaeab6f975
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 13 13:55:12 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Mention <ol>|<li>|<ul> in the Changes and revised the description.


diff -r d645f7f724c0 -r 4eaaeab6f975 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri May 13 13:49:35 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri May 13 13:55:12 2011 +0000
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add support for <ol>, <li> and <ul> to Fiction-Text and Fiction-XML.
+
 0.1.7       Tue Apr 19 00:55:07 IDT 2011
     * Add support for &#91; and other numeric entities.
 
diff -r d645f7f724c0 -r 4eaaeab6f975 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri May 13 13:49:35 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri May 13 13:55:12 2011 +0000
@@ -51,7 +51,7 @@
 
 =head1 FORMAT
 
-=head2 Scenes
+=head2 Sections
 
 Sections are placed in XML-like tags of C<< <section> ... </section> >> or
 abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
@@ -109,6 +109,21 @@
 
 =back
 
+=head2 Types of top-level items.
+
+=head3 Paragraphs
+
+These are not delimited by anything - just a paragraph of text not containing
+an empty line.
+
+=head3 <ol>
+
+This is an ordered list with <li>s, similar to its purpose in XHTML.
+
+=head3 <ul>
+
+An unordered list.
+
 =head2 EXAMPLES
 
 Examples can be found in the C<t/data> directory, and here:

changeset:   277:d645f7f724c0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 13 13:49:35 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
description:
Add <ol>,<li>,<ul> support to the -to-docbook XSLT.


diff -r 5fb950ba8c6f -r d645f7f724c0 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 13 13:21:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 13 13:49:35 2011 +0000
@@ -61,6 +61,7 @@
 t/fiction/data/docbook/sections-and-paras.docbook.xml
 t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
 t/fiction/data/docbook/with-internal-description.docbook.xml
+t/fiction/data/docbook/with-ul-ol-li.docbook.xml
 t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
 t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
diff -r 5fb950ba8c6f -r d645f7f724c0 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 13 13:21:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri May 13 13:49:35 2011 +0000
@@ -46,7 +46,7 @@
             </xsl:choose> 
         </title>
     </info>
-        <xsl:apply-templates select="fic:section|fic:p" />
+        <xsl:apply-templates select="fic:section|fic:p|fic:ol|fic:ul" />
     </section>
 </xsl:template>
 
@@ -69,6 +69,24 @@
     </emphasis>
 </xsl:template>
 
+<xsl:template match="fic:ol">
+    <orderedlist>
+        <xsl:apply-templates/>
+    </orderedlist>
+</xsl:template>
+
+<xsl:template match="fic:ul">
+    <itemizedlist>
+        <xsl:apply-templates/>
+    </itemizedlist>
+</xsl:template>
+
+<xsl:template match="fic:li">
+    <listitem>
+        <xsl:apply-templates/>
+    </listitem>
+</xsl:template>
+
 <xsl:template match="fic:span">
     <xsl:choose>
         <xsl:when test="@xlink:href">
diff -r 5fb950ba8c6f -r d645f7f724c0 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-ul-ol-li.docbook.xml	Fri May 13 13:49:35 2011 +0000
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    <para>
+    David started listing Goliath's disadvantages:
+    </para>
+    <orderedlist>
+    <listitem>
+    <para>
+    You're slow.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    You're big.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    You're stupid.
+    </para>
+    </listitem>
+    </orderedlist>
+    <para>
+    Goliath was insulted and told David he should use bullets for the
+    points, instead:
+    </para>
+    <itemizedlist>
+    <listitem>
+    <para>
+    David.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Saul.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Jonathan.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Michal.
+    </para>
+    </listitem>
+    <listitem>
+    <para>
+    Meyrav.
+    </para>
+    </listitem>
+    </itemizedlist>
+    </section>
+  </section>
+</article>
diff -r 5fb950ba8c6f -r d645f7f724c0 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Fri May 13 13:21:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Fri May 13 13:49:35 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 9;
+use Test::XML tests => 12;
 
 use File::Spec;
 
@@ -17,6 +17,7 @@
         sections-and-paras
         sections-p-b-i-comments
         sections-a-href
+        with-ul-ol-li
     ));
 
 sub load_xml
@@ -34,7 +35,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=3
+# TEST:$num_texts=4
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   276:5fb950ba8c6f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri May 13 13:21:13 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
description:
Add <ol>/<ul>/<li> to the proto-Text and XML grammar.

TODO : add them to the XSLT.


diff -r 07074e1f0a1b -r 5fb950ba8c6f perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Apr 21 12:22:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri May 13 13:21:13 2011 +0000
@@ -85,6 +85,7 @@
 t/fiction/data/proto-text/with-multi-line-comments.txt
 t/fiction/data/proto-text/with-multi-para-desc.txt
 t/fiction/data/proto-text/with-tags-inside-paragraphs.txt
+t/fiction/data/proto-text/with-ul-ol-li.txt
 t/fiction/data/xml/dialogue-with-several-paragraphs.xml
 t/fiction/data/xml/nested-s.xml
 t/fiction/data/xml/scenes-with-titles.xml
@@ -101,6 +102,7 @@
 t/fiction/data/xml/with-multi-line-comments.xml
 t/fiction/data/xml/with-multi-para-desc.xml
 t/fiction/data/xml/with-tags-inside-paragraphs.xml
+t/fiction/data/xml/with-ul-ol-li.xml
 t/fiction/proto-text-invalid.t
 t/fiction/proto-text-to-xml-using-custom-parser.t
 t/fiction/qnd-parser-unit.t
diff -r 07074e1f0a1b -r 5fb950ba8c6f perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Thu Apr 21 12:22:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri May 13 13:21:13 2011 +0000
@@ -52,9 +52,35 @@
     </define>
     <define name="several_paras">
         <zeroOrMore>
-            <ref name="para"/>
+            <choice>
+                <ref name="para"/>
+                <ref name="ol"/>
+                <ref name="ul"/>
+            </choice>
         </zeroOrMore>
     </define>
+    <define name="inside_list">
+        <oneOrMore>
+            <ref name="li" />
+        </oneOrMore>
+    </define>
+    <define name="ol">
+        <element name="fic:ol">
+            <ref name="inside_list" />
+        </element>
+    </define>
+    <define name="ul">
+        <element name="fic:ul">
+            <ref name="inside_list" />
+        </element>
+    </define>
+    <define name="li">
+        <element name="fic:li">
+            <oneOrMore>
+                <ref name="para" />
+            </oneOrMore>
+        </element>
+    </define>
     <define name="para">
         <element name="fic:p">
             <zeroOrMore>
diff -r 07074e1f0a1b -r 5fb950ba8c6f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Apr 21 12:22:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri May 13 13:21:13 2011 +0000
@@ -118,6 +118,49 @@
     return;
 }
 
+
+sub _handle_elem_of_name_li
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ['li'],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
+sub _handle_elem_of_name_ol
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ['ol'],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
+sub _handle_elem_of_name_ul
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ['ul'],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
 sub _handle_elem_of_name_title
 {
     my ($self, $elem) = @_;
diff -r 07074e1f0a1b -r 5fb950ba8c6f perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-ul-ol-li.txt	Fri May 13 13:21:13 2011 +0000
@@ -0,0 +1,92 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+David started listing Goliath's disadvantages:
+
+<ol>
+
+<li>
+
+You're slow.
+
+</li>
+
+<li>
+
+You're big.
+
+</li>
+
+<li>
+
+You're stupid.
+
+</li>
+
+</ol>
+
+Goliath was insulted and told David he should use bullets for the points, 
+instead:
+
+<ul>
+
+<li>
+
+David.
+
+</li>
+
+<li>
+
+Saul.
+
+</li>
+
+<li>
+
+Jonathan.
+
+</li>
+
+<li>
+
+Michal.
+
+</li>
+
+<li>
+
+Meyrav.
+
+</li>
+
+</ul>
+
+
+</s>
+
+</s>
+
+</body>
+
diff -r 07074e1f0a1b -r 5fb950ba8c6f perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-ul-ol-li.xml	Fri May 13 13:21:13 2011 +0000
@@ -0,0 +1,79 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    <p>
+    David started listing Goliath's disadvantages:
+    </p>
+    <ol>
+    <li>
+    <p>
+    You're slow.
+    </p>
+    </li>
+    <li>
+    <p>
+    You're big.
+    </p>
+    </li>
+    <li>
+    <p>
+    You're stupid.
+    </p>
+    </li>
+    </ol>
+    <p>
+    Goliath was insulted and told David he should use bullets for the
+    points, instead:
+    </p>
+    <ul>
+    <li>
+    <p>
+    David.
+    </p>
+    </li>
+    <li>
+    <p>
+    Saul.
+    </p>
+    </li>
+    <li>
+    <p>
+    Jonathan.
+    </p>
+    </li>
+    <li>
+    <p>
+    Michal.
+    </p>
+    </li>
+    <li>
+    <p>
+    Meyrav.
+    </p>
+    </li>
+    </ul>
+    </section>
+    </section>
+</body>
+</document>
diff -r 07074e1f0a1b -r 5fb950ba8c6f perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Thu Apr 21 12:22:10 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Fri May 13 13:21:13 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 8;
+use Test::More tests => 10;
 
 use Test::XML;
 
@@ -32,9 +32,10 @@
     sections-p-b-i
     sections-p-b-i-comments
     sections-a-href
+    with-ul-ol-li
     ));
 
-# TEST:$num_texts=4
+# TEST:$num_texts=5
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   275:07074e1f0a1b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 21 12:22:10 2011 +0000
files:       vim/syntax/screenplay-text.vim
description:
Fix based on the input from Andy Wokula here:

https://groups.google.com/group/vim_use/browse_thread/thread/6c0906617d67864e/a21938c5df1d15cb?show_docid=a21938c5df1d15cb .


diff -r 1ff0315ef9a4 -r 07074e1f0a1b vim/syntax/screenplay-text.vim
--- a/vim/syntax/screenplay-text.vim	Mon Apr 18 21:58:44 2011 +0000
+++ b/vim/syntax/screenplay-text.vim	Thu Apr 21 12:22:10 2011 +0000
@@ -8,6 +8,9 @@
 " Last Change: Thu Jul  3 00:59:42 IDT 2008
 " Version: 0.0.1
 
+" Thanks to Andy Wokula for his help on:
+" https://groups.google.com/group/vim_use/browse_thread/thread/6c0906617d67864e/a21938c5df1d15cb?show_docid=a21938c5df1d15cb
+
 " Quit if syntax file is already loaded
 if version < 600
     syntax clear
@@ -15,8 +18,13 @@
     finish
 endif
 
-syntax match screenplayTextComment /<!--\_.\{-0,}-->/
-syntax match screenplayTextDescription /^ *\[\_.\{-0,}\]/
+syntax sync minlines=50
+
+" syntax match screenplayTextComment /<!--\_.\{-0,}-->/
+" syntax match screenplayTextDescription /^ *\[\_.\{-0,}\]/
+syntax region screenplayTextComment start="<!--" end="-->"
+syntax region screenplayTextDescription start="^ *\[" end="]"
+
 syntax match screenplayTextAddress /^\(+\{2,\}\|[^[:+]*\):/ contained nextgroup=screenplayTextInnerDesc
 syntax match screenplayTextInnerDesc /\[\_.\{-0,}\]/ contained nextgroup=screenplayTextInnerDesc
 
@@ -26,7 +34,3 @@
 hi def link screenplayTextDescription PreProc
 hi def link screenplayTextInnerDesc PreProc
 hi def screenplayTextAddress      term=bold cterm=bold gui=bold
-
-let b:current_syntax="ScreenplayText"
-
-runtime! syntax/xml.vim

changeset:   274:1ff0315ef9a4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 18 21:58:44 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.7


diff -r d1cdd6865b62 -r 1ff0315ef9a4 .hgtags
--- a/.hgtags	Mon Apr 18 21:58:21 2011 +0000
+++ b/.hgtags	Mon Apr 18 21:58:44 2011 +0000
@@ -9,3 +9,4 @@
 46f1c62e5f7fdbeee830653a844c61fa32adb6ff releases/0.1.4
 159ce56f456f61b602de4154a673b89cf020d8c1 releases/0.1.5
 ba2c538c4e2daca43cb0750e40e9fd949e73066d releases/0.1.6
+d1cdd6865b6271ed118ba0b86f3a440d5c0d8b14 releases/0.1.7

changeset:   273:d1cdd6865b62
tag:         releases/0.1.7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 18 21:58:21 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bump the version to 0.1.7.


diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 18 21:58:21 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.7       Tue Apr 19 00:55:07 IDT 2011
     * Add support for &#91; and other numeric entities.
 
 0.1.6       Sat Apr  9 16:15:17 IDT 2011
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 METHODS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 use Exception::Class
     (
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 AUTHOR
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head1 SYNOPSIS
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 
diff -r 37a39f9a63f4 -r d1cdd6865b62 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 18 09:13:44 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 18 21:58:21 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.6
+Version 0.1.7
 
 =cut
 
-our $VERSION = '0.1.6';
+our $VERSION = '0.1.7';
 
 =head2 new()
 

changeset:   272:37a39f9a63f4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 18 09:13:44 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-numeric-entities.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Add support for numeric entities.

&#91; &#93; etc.


diff -r 9150edb15271 -r 37a39f9a63f4 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 09 13:35:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 18 09:13:44 2011 +0000
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add support for &#91; and other numeric entities.
+
 0.1.6       Sat Apr  9 16:15:17 IDT 2011
     * Now handling the <a /> element only in XML::Grammar::Screenplay - it
     does not exist in ::Fiction.
diff -r 9150edb15271 -r 37a39f9a63f4 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Apr 09 13:35:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 18 09:13:44 2011 +0000
@@ -130,6 +130,7 @@
 t/screenplay/data/proto-text/with-internal-description.txt
 t/screenplay/data/proto-text/with-multi-line-comments.txt
 t/screenplay/data/proto-text/with-multi-para-desc.txt
+t/screenplay/data/proto-text/with-numeric-entities.txt
 t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
 t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
 t/screenplay/data/xml/nested-s.xml
@@ -146,6 +147,7 @@
 t/screenplay/data/xml/with-internal-description.xml
 t/screenplay/data/xml/with-multi-line-comments.xml
 t/screenplay/data/xml/with-multi-para-desc.xml
+t/screenplay/data/xml/with-numeric-entities.xml
 t/screenplay/data/xml/with-tags-inside-paragraphs.xml
 t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
 t/screenplay/proto-text-invalid.t
diff -r 9150edb15271 -r 37a39f9a63f4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 09 13:35:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 18 09:13:44 2011 +0000
@@ -579,7 +579,7 @@
 
         if ($$l =~ m{\G\&})
         {
-            if ($$l !~ m{\G(\&\w+;)}g)
+            if ($$l !~ m/\G(\&#?\w+;)/g)
             {
                 Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
                     $self->line_num()
diff -r 9150edb15271 -r 37a39f9a63f4 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-numeric-entities.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-numeric-entities.txt	Mon Apr 18 09:13:44 2011 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David &amp; Goliath &lt;are&gt; standing by each other.
+
+David is a red-head. &quot;Hello&quot;&#91; Something in square brackets. &#93;
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 9150edb15271 -r 37a39f9a63f4 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-numeric-entities.xml	Mon Apr 18 09:13:44 2011 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </para>
+        <para>
+            David is a red-head. "Hello"[ Something in square brackets. ]
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 9150edb15271 -r 37a39f9a63f4 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sat Apr 09 13:35:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Mon Apr 18 09:13:44 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 32;
+use Test::XML tests => 34;
 
 use XML::LibXML;
 
@@ -44,9 +44,10 @@
         with-brs
         with-internal-description-at-start-of-line
         with-colon-inside-description
+        with-numeric-entities
     ));
 
-# TEST:$num_texts=16
+# TEST:$num_texts=17
 
 my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",

changeset:   271:9150edb15271
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 09 13:35:18 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/app-to-html.t perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-a-href.docbook.xml perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-and-paras.docbook.xml perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-p-b-i-comments.docbook.xml perl/modules/XML-Grammar-Fiction/t/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space-at-para-start.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/no-right-angle.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/not-start-with-tag.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-close-tag.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-closing-inner-tag.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-a-href.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-and-paras.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i-comments.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-description.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/data/xml/nested-s.xml perl/modules/XML-Grammar-Fiction/t/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-a-href.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i-comments.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml perl/modules/XML-Grammar-Fiction/t/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/no-right-angle.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/not-start-with-tag.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-close-tag.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-a-href.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-and-paras.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-description.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/nested-s.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-invalid.t perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/to-docbook.t perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Moved the XML-Grammar-Fiction t/*.t tests to t/fiction/*.t.


diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Apr 09 13:19:40 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Apr 09 13:35:18 2011 +0000
@@ -57,57 +57,59 @@
 tag-release.pl
 t/app-to-html.t
 t/boilerplate.t
-t/data/docbook/sections-a-href.docbook.xml
-t/data/docbook/sections-and-paras.docbook.xml
-t/data/docbook/sections-p-b-i-comments.docbook.xml
-t/data/docbook/with-internal-description.docbook.xml
-t/data/proto-text/dialogue-with-several-paragraphs.txt
-t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
-t/data/proto-text-invalid/leading-space-at-para-start.txt
-t/data/proto-text-invalid/leading-space.txt
-t/data/proto-text-invalid/no-right-angle.txt
-t/data/proto-text-invalid/not-start-with-tag.txt
-t/data/proto-text-invalid/wrong-close-tag.txt
-t/data/proto-text-invalid/wrong-closing-inner-tag.txt
-t/data/proto-text/nested-s.txt
-t/data/proto-text/scenes-with-titles.txt
-t/data/proto-text/sections-a-href.txt
-t/data/proto-text/sections-and-paras.txt
-t/data/proto-text/sections-p-b-i-comments.txt
-t/data/proto-text/sections-p-b-i.txt
-t/data/proto-text/two-nested-s.txt
-t/data/proto-text/with-brs.txt
-t/data/proto-text/with-comments.txt
-t/data/proto-text/with-description.txt
-t/data/proto-text/with-dialogue.txt
-t/data/proto-text/with-entities.txt
-t/data/proto-text/with-internal-description.txt
-t/data/proto-text/with-multi-line-comments.txt
-t/data/proto-text/with-multi-para-desc.txt
-t/data/proto-text/with-tags-inside-paragraphs.txt
-t/data/xml/dialogue-with-several-paragraphs.xml
-t/data/xml/nested-s.xml
-t/data/xml/scenes-with-titles.xml
-t/data/xml/sections-a-href.xml
-t/data/xml/sections-and-paras.xml
-t/data/xml/sections-p-b-i-comments.xml
-t/data/xml/sections-p-b-i.xml
-t/data/xml/two-nested-s.xml
-t/data/xml/with-brs.xml
-t/data/xml/with-comments.xml
-t/data/xml/with-description.xml
-t/data/xml/with-dialogue.xml
-t/data/xml/with-entities.xml
-t/data/xml/with-multi-line-comments.xml
-t/data/xml/with-multi-para-desc.xml
-t/data/xml/with-tags-inside-paragraphs.xml
+t/fiction/data/docbook/sections-a-href.docbook.xml
+t/fiction/data/docbook/sections-and-paras.docbook.xml
+t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
+t/fiction/data/docbook/with-internal-description.docbook.xml
+t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
+t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
+t/fiction/data/proto-text-invalid/leading-space.txt
+t/fiction/data/proto-text-invalid/no-right-angle.txt
+t/fiction/data/proto-text-invalid/not-start-with-tag.txt
+t/fiction/data/proto-text-invalid/wrong-close-tag.txt
+t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
+t/fiction/data/proto-text/nested-s.txt
+t/fiction/data/proto-text/scenes-with-titles.txt
+t/fiction/data/proto-text/sections-a-href.txt
+t/fiction/data/proto-text/sections-and-paras.txt
+t/fiction/data/proto-text/sections-p-b-i-comments.txt
+t/fiction/data/proto-text/sections-p-b-i.txt
+t/fiction/data/proto-text/two-nested-s.txt
+t/fiction/data/proto-text/with-brs.txt
+t/fiction/data/proto-text/with-comments.txt
+t/fiction/data/proto-text/with-description.txt
+t/fiction/data/proto-text/with-dialogue.txt
+t/fiction/data/proto-text/with-entities.txt
+t/fiction/data/proto-text/with-internal-description.txt
+t/fiction/data/proto-text/with-multi-line-comments.txt
+t/fiction/data/proto-text/with-multi-para-desc.txt
+t/fiction/data/proto-text/with-tags-inside-paragraphs.txt
+t/fiction/data/xml/dialogue-with-several-paragraphs.xml
+t/fiction/data/xml/nested-s.xml
+t/fiction/data/xml/scenes-with-titles.xml
+t/fiction/data/xml/sections-a-href.xml
+t/fiction/data/xml/sections-and-paras.xml
+t/fiction/data/xml/sections-p-b-i-comments.xml
+t/fiction/data/xml/sections-p-b-i.xml
+t/fiction/data/xml/two-nested-s.xml
+t/fiction/data/xml/with-brs.xml
+t/fiction/data/xml/with-comments.xml
+t/fiction/data/xml/with-description.xml
+t/fiction/data/xml/with-dialogue.xml
+t/fiction/data/xml/with-entities.xml
+t/fiction/data/xml/with-multi-line-comments.xml
+t/fiction/data/xml/with-multi-para-desc.xml
+t/fiction/data/xml/with-tags-inside-paragraphs.xml
+t/fiction/proto-text-invalid.t
+t/fiction/proto-text-to-xml-using-custom-parser.t
+t/fiction/qnd-parser-unit.t
+t/fiction/to-docbook.t
+t/fiction/to-xhtml.t
 t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm
 TODO
 t/pod-coverage.t
 t/pod.t
-t/proto-text-invalid.t
-t/proto-text-to-xml-using-custom-parser.t
-t/qnd-parser-unit.t
 t/screenplay/00-load.t
 t/screenplay/app-to-html.t
 t/screenplay/boilerplate.t
@@ -151,5 +153,3 @@
 t/screenplay/qnd-parser-unit.t
 t/screenplay/to-docbook.t
 t/screenplay/to-xhtml.t
-t/to-docbook.t
-t/to-xhtml.t
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Sat Apr 09 13:19:40 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Sat Apr 09 13:35:18 2011 +0000
@@ -26,7 +26,7 @@
             "--",
             "-o", "temp.xhtml",
             File::Spec->catdir(File::Spec->curdir(), 
-                "t", "data", "xml", "sections-and-paras.xml",
+                "t", "fiction", "data", "xml", "sections-and-paras.xml",
             )
         ),
         "Testing App::ToHTML",
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-a-href.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-a-href.docbook.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
-  <info>
-    <title>David vs. Goliath - Part I</title>
-  </info>
-  <section xml:id="top">
-    <info>
-      <title>The Top Section</title>
-    </info>
-    <para>
-        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
-    </para>
-    <para>
-    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
-    </para>
-    <section xml:id="goliath">
-      <info>
-        <title>Goliath's Response</title>
-      </info>
-      <para>
-    Goliath was not amused.
-    </para>
-      <para>
-    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
-    </para>
-    </section>
-  </section>
-</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-and-paras.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-and-paras.docbook.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
-  <info>
-    <title>David vs. Goliath - Part I</title>
-  </info>
-  <section xml:id="top">
-    <info>
-      <title>The Top Section</title>
-    </info>
-    <para>
-        David and Goliath were standing by each other.    
-    </para>
-    <para>
-        David said unto Goliath: "I will shoot you."
-    </para>
-    <section xml:id="goliath">
-      <info>
-        <title>Goliath's Response</title>
-      </info>
-      <para>
-    Goliath was not amused.
-    </para>
-      <para>
-    He said to David: "Oh, really".
-    </para>
-    </section>
-  </section>
-</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-p-b-i-comments.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-p-b-i-comments.docbook.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
-  <info>
-    <title>David vs. Goliath - Part I</title>
-  </info>
-  <section xml:id="top">
-    <info>
-      <title>The Top Section</title>
-    </info>
-    <para>
-    David and Goliath were standing by each other.    
-    </para>
-    <para>
-    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
-    </para>
-    <section xml:id="goliath">
-      <info>
-        <title>Goliath's Response</title>
-      </info>
-      <para>
-    Goliath was not amused.
-    </para>
-      <para>
-    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
-    </para>
-    </section>
-  </section>
-</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/docbook/with-internal-description.docbook.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/docbook/with-internal-description.docbook.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,79 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd">
-<article id="index">
-  <section id="top">
-    <title>top</title>
-    <section id="david_and_goliath">
-      <title>david_and_goliath</title>
-      <section role="description" id="id2244766"><title/>
-            <para>
-            [
-        
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
-                are standing by each other.
-            
-            ]
-        </para>
-        </section>
-      <section role="saying" id="id2244967"><title/>
-            <para><emphasis role="bold">David: </emphasis>
-                I will kill you.
-            </para>
-        </section>
-      <section role="saying" id="id2244977"><title/>
-            <para><emphasis role="bold">Goliath: </emphasis>
-                no way, you little idiot!
-            </para>
-        </section>
-      <section role="saying" id="id2244986"><title/>
-            <para><emphasis role="bold">David: </emphasis>
-                yes way!
-            </para>
-            <para><emphasis role="bold">David: </emphasis>
-                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
-                <phrase>[sarcastically]</phrase> power 
-                of my sling.
-            </para>
-            <para><emphasis role="bold">David: </emphasis>
-                I shall sling you and bing you till infinity.
-            </para>
-        </section>
-      <section role="description" id="id2242910"><title/>
-            <para>
-            [
-        
-                David takes his sling.
-            
-            ]
-        </para>
-        </section>
-      <section role="saying" id="id2242918"><title/>
-        <para><emphasis role="bold">Goliath: </emphasis>
-            I'm still <ulink url="http://wait.tld/"/>.
-        </para>
-    </section>
-      <section role="saying" id="id2244786"><title/>
-        <para><emphasis role="bold">David: </emphasis>
-            so you are.
-        </para>
-    </section>
-      <section role="description" id="id2244795"><title/>
-        <para>
-            [
-        
-            David puts a stone in his sling and shoots Goliath. He hits.
-        
-            ]
-        </para>
-    </section>
-      <section role="saying" id="id2244802"><title/>
-        <para><emphasis role="bold">David: </emphasis>
-            as is written in the wikipedia <phrase>[See <ulink url="http://wiki.tld/"/>
-                for more information]</phrase>, you are now dead,
-            having been shot with my sling.
-        </para>
-    </section>
-    </section>
-  </section>
-</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,3 +0,0 @@
-<start id="top">
-
-</wrong-finish-tag>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space-at-para-start.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space-at-para-start.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-David and Goliath were standing by each other. David did not
-like Goliath.
-
-David thought to himself: "I don't like Goliath.".
-
-   David said unto Goliath: "I will shoot you. I swear I will". You shall
-feel my wrath!
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-Goliath was not amused.
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,25 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-David and Goliath were standing by each other.    
-
-David said unto Goliath: "I will shoot you. I <b>swear</b> I will". You shall
-    feel my wrath!
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-Goliath was not amused.
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/no-right-angle.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/no-right-angle.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,3 +0,0 @@
-<start id="top" foo="bar"
-
-</start>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/not-start-with-tag.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/not-start-with-tag.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,1 +0,0 @@
-[FOOADASMCa#$#$#F#F#]
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-close-tag.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-close-tag.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,3 +0,0 @@
-<start id="top">
-
-</]^%^$%$5$]>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-closing-inner-tag.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-closing-inner-tag.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,24 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-David and Goliath were standing by each other.    
-
-David said unto Goliath: "I will shoot you. I <b>swear</i> I will"
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-Goliath was not amused.
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/dialogue-with-several-paragraphs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/dialogue-with-several-paragraphs.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,22 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++: I shall sling you and bing you till infinity.
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/nested-s.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/nested-s.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/scenes-with-titles.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/scenes-with-titles.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,17 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene" title="A Better Scene">
-</s>
-
-<s id="another-scene">
-</s>
-
-<s id="exodus" title="The Exodus">
-
-Moses: let us get out of here!
-
-Joshua: amen!
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-a-href.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-a-href.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,30 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-<!-- David has Green hair here -->
-
-King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath were standing by each other.
-
-David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-<!-- Goliath has to reply to that. -->
-
-Goliath was not amused.
-
-He said to David: "Oh, really. <i>David</i>, the red-headed!".
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-and-paras.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-and-paras.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-David and Goliath were standing by each other.
-
-David said unto Goliath: "I will shoot you."
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-Goliath was not amused.
-
-He said to David: "Oh, really".
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i-comments.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,30 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-<!-- David has Green hair here -->
-
-David and Goliath were standing by each other.    
-
-David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-<!-- Goliath has to reply to that. -->
-
-Goliath was not amused.
-
-He said to David: "Oh, really. <i>David</i>, the red-headed!".
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<body id="index">
-
-<title>David vs. Goliath - Part I</title>
-
-<s id="top">
-
-<title>The Top Section</title>
-
-David and Goliath were standing by each other.    
-
-David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
-
-<s id="goliath">
-
-<title>Goliath's Response</title>
-
-Goliath was not amused.
-
-He said to David: "Oh, really. <i>David</i>, the red-headed!".
-
-</s>
-
-</s>
-
-</body>
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/two-nested-s.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/two-nested-s.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,9 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-<s id="another-scene">
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-brs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-brs.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,21 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.<br />
-I will kill you.<br />
-You will not survive.<br />
-I will kill you.<br />
-I will kill you.<br />
-Ask Jive.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-comments.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,15 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-<!-- David and Goliath are Biblical characters -->
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-description.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-description.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and Goliath are standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-dialogue.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-dialogue.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,13 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-entities.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-entities.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David &amp; Goliath &lt;are&gt; standing by each other.
-
-David is a red-head. &quot;Hello&quot;
-
-Goliath is very tall.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-internal-description.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-internal-description.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,34 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
-of my sling. 
-
-++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
-Wiki site</a> for more information], you are now dead, having been shot with
-my sling.
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-line-comments.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-line-comments.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-<!-- David and Goliath are Biblical characters 
-
-They are nifty.
--->
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-para-desc.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-para-desc.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and Goliath are standing by each other.
-
-David is a red-head.
-
-Goliath is very tall.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-tags-inside-paragraphs.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-tags-inside-paragraphs.txt	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,29 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
-
-++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/dialogue-with-several-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/dialogue-with-several-paragraphs.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,44 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                I'm still waiting.
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                so you are.
-            </para>
-        </saying>
-    </scene>
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/nested-s.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/nested-s.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,12 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene">
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/scenes-with-titles.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/scenes-with-titles.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene" title="A Better Scene">
-            </scene>
-            <scene id="another-scene">
-            </scene>
-            <scene id="exodus" title="The Exodus">
-                <saying character="Moses">
-                    <para>
-                        let us get out of here!
-                    </para>
-                </saying>
-                <saying character="Joshua">
-                    <para>
-                        amen!
-                    </para>
-                </saying>
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-a-href.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-a-href.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
-    <head>
-    </head>
-    <body xml:id="index">
-    <title>David vs. Goliath - Part I</title>
-    <section xml:id="top">
-    <title>The Top Section</title>
-    <!-- David has Green hair here -->
-    <p>
-    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
-    </p>
-    <p>
-    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
-    </p>
-    <section xml:id="goliath">
-    <title>Goliath's Response</title>
-    <!-- Goliath has to reply to that. -->
-    <p>
-    Goliath was not amused.
-    </p>
-    <p>
-    He said to David: "Oh, really. <i>David</i>, the red-headed!".
-    </p>
-    </section>
-    </section>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
-    <head>
-    </head>
-    <body xml:id="index">
-    <title>David vs. Goliath - Part I</title>        
-    <section xml:id="top">
-    <title>The Top Section</title>
-    <p>
-        David and Goliath were standing by each other.    
-    </p>
-    <p>
-        David said unto Goliath: "I will shoot you."
-    </p>
-    <section xml:id="goliath">
-    <title>Goliath's Response</title>
-    <p>
-    Goliath was not amused.
-    </p>
-    <p>
-    He said to David: "Oh, really".
-    </p>
-    </section>
-    </section>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i-comments.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
-    <head>
-    </head>
-    <body xml:id="index">
-    <title>David vs. Goliath - Part I</title>
-    <section xml:id="top">
-    <title>The Top Section</title>
-    <!-- David has Green hair here -->
-    <p>
-    David and Goliath were standing by each other.    
-    </p>
-    <p>
-    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
-    </p>
-    <section xml:id="goliath">
-    <title>Goliath's Response</title>
-    <!-- Goliath has to reply to that. -->
-    <p>
-    Goliath was not amused.
-    </p>
-    <p>
-    He said to David: "Oh, really. <i>David</i>, the red-headed!".
-    </p>
-    </section>
-    </section>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
-    <head>
-    </head>
-    <body xml:id="index">
-    <title>David vs. Goliath - Part I</title>
-    <section xml:id="top">
-    <title>The Top Section</title>
-    <p>
-    David and Goliath were standing by each other.    
-    </p>
-    <p>
-    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
-    </p>
-    <section xml:id="goliath">
-    <title>Goliath's Response</title>
-    <p>
-    Goliath was not amused.
-    </p>
-    <p>
-    He said to David: "Oh, really. <i>David</i>, the red-headed!".
-    </p>
-    </section>
-    </section>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/two-nested-s.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/two-nested-s.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,14 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene">
-            </scene>
-            <scene id="another-scene">
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-brs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-brs.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,39 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.<br />
-                I will kill you.<br />
-                You will not survive.<br />
-                I will kill you.<br />
-                I will kill you.<br />
-                Ask Jive.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-comments.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,29 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <!-- David and Goliath are Biblical characters -->
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-description.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,59 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David and Goliath are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-dialogue.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-dialogue.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-entities.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-entities.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David &amp; Goliath &lt;are&gt; standing by each other.
-        </para>
-        <para>
-            David is a red-head. "Hello"
-        </para>
-        <para>
-            Goliath is very tall.
-        </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-line-comments.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-line-comments.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <!-- David and Goliath are Biblical characters 
-
-        They are nifty.
-        -->
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-para-desc.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-para-desc.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David and Goliath are standing by each other.
-        </para>
-        <para>
-            David is a red-head.
-        </para>
-        <para>
-            Goliath is very tall.
-        </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/data/xml/with-tags-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-tags-inside-paragraphs.xml	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,61 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-a-href.docbook.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-and-paras.docbook.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        David and Goliath were standing by each other.    
+    </para>
+    <para>
+        David said unto Goliath: "I will shoot you."
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really".
+    </para>
+    </section>
+  </section>
+</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/sections-p-b-i-comments.docbook.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+    David and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/docbook/with-internal-description.docbook.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd">
+<article id="index">
+  <section id="top">
+    <title>top</title>
+    <section id="david_and_goliath">
+      <title>david_and_goliath</title>
+      <section role="description" id="id2244766"><title/>
+            <para>
+            [
+        
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
+                are standing by each other.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2244967"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                I will kill you.
+            </para>
+        </section>
+      <section role="saying" id="id2244977"><title/>
+            <para><emphasis role="bold">Goliath: </emphasis>
+                no way, you little idiot!
+            </para>
+        </section>
+      <section role="saying" id="id2244986"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                yes way!
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
+                <phrase>[sarcastically]</phrase> power 
+                of my sling.
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                I shall sling you and bing you till infinity.
+            </para>
+        </section>
+      <section role="description" id="id2242910"><title/>
+            <para>
+            [
+        
+                David takes his sling.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2242918"><title/>
+        <para><emphasis role="bold">Goliath: </emphasis>
+            I'm still <ulink url="http://wait.tld/"/>.
+        </para>
+    </section>
+      <section role="saying" id="id2244786"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            so you are.
+        </para>
+    </section>
+      <section role="description" id="id2244795"><title/>
+        <para>
+            [
+        
+            David puts a stone in his sling and shoots Goliath. He hits.
+        
+            ]
+        </para>
+    </section>
+      <section role="saying" id="id2244802"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            as is written in the wikipedia <phrase>[See <ulink url="http://wiki.tld/"/>
+                for more information]</phrase>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </section>
+    </section>
+  </section>
+</article>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,3 @@
+<start id="top">
+
+</wrong-finish-tag>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other. David did not
+like Goliath.
+
+David thought to himself: "I don't like Goliath.".
+
+   David said unto Goliath: "I will shoot you. I swear I will". You shall
+feel my wrath!
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/leading-space.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,25 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will". You shall
+    feel my wrath!
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/no-right-angle.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/no-right-angle.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,3 @@
+<start id="top" foo="bar"
+
+</start>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/not-start-with-tag.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/not-start-with-tag.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,1 @@
+[FOOADASMCa#$#$#F#F#]
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-close-tag.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-close-tag.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,3 @@
+<start id="top">
+
+</]^%^$%$5$]>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,24 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</i> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/dialogue-with-several-paragraphs.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,22 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++: I shall sling you and bing you till infinity.
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/nested-s.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,6 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/scenes-with-titles.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/scenes-with-titles.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,17 @@
+<s id="top">
+
+<s id="a-better-scene" title="A Better Scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+<s id="exodus" title="The Exodus">
+
+Moses: let us get out of here!
+
+Joshua: amen!
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-a-href.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-a-href.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,30 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-and-paras.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-and-paras.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,26 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you."
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really".
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i-comments.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,30 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/sections-p-b-i.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,26 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/two-nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/two-nested-s.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,9 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-brs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-brs.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,21 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-comments.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,15 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters -->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-description.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-dialogue.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-dialogue.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,13 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-entities.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-entities.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David &amp; Goliath &lt;are&gt; standing by each other.
+
+David is a red-head. &quot;Hello&quot;
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-internal-description.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,34 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
+of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
+Wiki site</a> for more information], you are now dead, having been shot with
+my sling.
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-line-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-line-comments.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,18 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters 
+
+They are nifty.
+-->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-para-desc.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-multi-para-desc.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.
+
+David is a red-head.
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-tags-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/proto-text/with-tags-inside-paragraphs.txt	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/dialogue-with-several-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/dialogue-with-several-paragraphs.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,44 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                I'm still waiting.
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                so you are.
+            </para>
+        </saying>
+    </scene>
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/nested-s.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,12 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/scenes-with-titles.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/scenes-with-titles.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene" title="A Better Scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+            <scene id="exodus" title="The Exodus">
+                <saying character="Moses">
+                    <para>
+                        let us get out of here!
+                    </para>
+                </saying>
+                <saying character="Joshua">
+                    <para>
+                        amen!
+                    </para>
+                </saying>
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-a-href.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-and-paras.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>        
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+        David and Goliath were standing by each other.    
+    </p>
+    <p>
+        David said unto Goliath: "I will shoot you."
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i-comments.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/sections-p-b-i.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/two-nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/two-nested-s.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,14 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-brs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-brs.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,39 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.<br />
+                I will kill you.<br />
+                You will not survive.<br />
+                I will kill you.<br />
+                I will kill you.<br />
+                Ask Jive.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-comments.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,29 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-description.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,59 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-dialogue.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-dialogue.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-entities.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-entities.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </para>
+        <para>
+            David is a red-head. "Hello"
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-line-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-line-comments.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,32 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters 
+
+        They are nifty.
+        -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-para-desc.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-multi-para-desc.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+        </para>
+        <para>
+            David is a red-head.
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-tags-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/data/xml/with-tags-inside-paragraphs.xml	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,61 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-invalid.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-invalid.t	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,323 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 26;
+
+use XML::LibXML;
+
+use Exception::Class;
+
+use XML::Grammar::Fiction::FromProto;
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
+
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+    my $got_xml;
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
+            },
+        }
+    );
+    };
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
+    );
+
+    # TEST
+    ok ($err, "TagsMismatch was caught");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ATags do not match},
+        "Text is OK."
+    );
+
+    # TEST
+    is(
+        $err->opening_tag()->name(),
+        "start",
+        "Opening tag-name is OK.",
+    );
+
+    # TEST
+    is(
+        $err->opening_tag()->line(),
+        1,
+        "Opening line is OK.",
+    );
+
+    # TEST
+    is(
+        $err->closing_tag()->name(),
+        "wrong-finish-tag",
+        "Closing tag-name is OK.",
+    );
+
+    # TEST
+    is(
+        $err->closing_tag()->line(),
+        3,
+        "Closing line is OK.",
+    );
+}
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text-invalid/not-start-with-tag.txt",
+            },
+        }
+    );
+    };
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag"
+    );
+
+    # TEST
+    ok ($err, "CannotMatchOpeningTag was caught");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ACannot match opening tag.},
+        "Text is OK."
+    );
+}
+
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text-invalid/no-right-angle.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket"
+    );
+
+    # TEST
+    ok ($err, "NoRightAngleBracket was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ACannot match the \">\" of the opening tag},
+        "Text is OK."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        1,
+        "Line is 1 as expected."
+    );
+}
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+            {
+                source =>
+                {
+                    file => "t/fiction/data/proto-text-invalid/wrong-close-tag.txt",
+                },
+            }
+        );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax"
+    );
+
+    # TEST
+    ok ($err, "WrongClosingTagSyntax was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ACannot match closing tag},
+        "Cannot match closing tag."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        3,
+        "Line is 1 as expected."
+    );
+}
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+    eval {
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text-invalid/wrong-closing-inner-tag.txt",
+            },
+        }
+    );
+    };
+
+    my $err_raw = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
+    );
+
+    # TEST
+    ok ($err, "TagsMismatch was caught");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ATags do not match},
+        "Text is OK."
+    );
+
+    # TEST
+    is(
+        $err->opening_tag()->name(),
+        "b",
+        "Opening tag-name is OK.",
+    );
+
+    # TEST
+    is(
+        $err->opening_tag()->line(),
+        11,
+        "Opening line is OK.",
+    );
+
+    # TEST
+    is(
+        $err->closing_tag()->name(),
+        "i",
+        "closing tag.",
+    );
+
+    # TEST
+    is(
+        $err->closing_tag()->line(),
+        11,
+        "Closing tag line is OK.",
+    );
+}
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text-invalid/leading-space.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::LeadingSpace"
+    );
+
+    # TEST
+    ok ($err, "LeadingSpace was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ALeading space},
+        "Cannot match closing tag."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        12,
+        "Line is 1 as expected."
+    );
+}
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text-invalid/leading-space-at-para-start.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::LeadingSpace"
+    );
+
+    # TEST
+    ok ($err, "LeadingSpace at para start was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ALeading space},
+        "LeadingSpace at para start error."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        14,
+        "LeadingSpace Line is 14 as expected."
+    );
+}
+
+1;
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/proto-text-to-xml-using-custom-parser.t	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,77 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 8;
+
+use Test::XML;
+
+use XML::LibXML;
+
+use XML::Grammar::Fiction::FromProto;
+
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my @tests = (qw(
+    sections-and-paras
+    sections-p-b-i
+    sections-p-b-i-comments
+    sections-a-href
+    ));
+
+# TEST:$num_texts=4
+
+my $grammar = XML::Grammar::Fiction::FromProto->new({
+        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
+    });
+
+my $rngschema = XML::LibXML::RelaxNG->new(
+        location => "./extradata/fiction-xml.rng" 
+    );
+
+my $xml_parser = XML::LibXML->new();
+$xml_parser->validation(0);
+
+foreach my $fn (@tests)
+{
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/fiction/data/proto-text/$fn.txt",
+            },
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($got_xml, load_xml("t/fiction/data/xml/$fn.xml"),
+        "Output of the Proto Text \"$fn\""
+    );
+
+    my $dom = $xml_parser->parse_string($got_xml);
+
+    my $code;
+    $code = $rngschema->validate($dom);
+
+    # TEST*$num_texts
+    ok ((defined($code) && ($code == 0)),
+        "The validation of '$fn' succeeded.") ||
+        diag("\$@ == $@");
+}
+
+1;
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/qnd-parser-unit.t	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,78 @@
+use strict;
+use warnings;
+
+use Test::More tests => 3;
+
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
+
+{
+    my $text = <<"EOF";
+Hello <s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
+
+    $parser->setup_text($text);
+
+    my $ret = $parser->consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello ", "consume works for first line");
+}
+
+{
+    my $text = <<"EOF";
+Hello
+voila the row kala:
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
+
+    $parser->setup_text($text);
+
+    my $ret = $parser->consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello\nvoila the row kala:\n", 
+        "consume works for several lines");
+}
+
+{
+    my $text = <<"EOF";
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
+
+    $parser->setup_text($text);
+
+    my $ret = $parser->_parse_opening_tag();
+
+    # TEST
+    is_deeply ($ret, 
+        {
+            name => "s",
+            is_standalone => 0,
+            line => 1,
+            attrs => [ { key => "id", value => "top"}],
+        },
+        "Checking _parse_opening_tag() - #1",
+    );
+}
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-docbook.t	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,82 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 9;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Fiction::ToDocBook;
+
+my @tests = (qw(
+        sections-and-paras
+        sections-p-b-i-comments
+        sections-a-href
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path
+        or die "Cannot open '$path' for reading";
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=3
+
+my $converter = XML::Grammar::Fiction::ToDocBook->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $docbook_text = $converter->translate_to_docbook({
+            source => { file => "t/fiction/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    # TEST*$num_texts*2
+    
+    my $parser = XML::LibXML->new();
+
+    my $doc = $parser->parse_string($docbook_text);
+
+    my $xc = XML::LibXML::XPathContext->new($doc);
+
+    $xc->registerNs('db', 'http://docbook.org/ns/docbook');
+
+    is (
+        scalar(() = $xc->findnodes(q{//db:article[@xml:id='index']})),
+        1,
+        "Found one article with id index",
+    );
+
+    ok (
+        (scalar(() = $xc->findnodes(q{//db:section}))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+    # TEST*$num_texts
+    is_xml ($docbook_text, load_xml("t/fiction/data/docbook/$fn.docbook.xml"),
+        "Output of the DocBook \"$fn\"",
+    );
+}
+
+1;
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/fiction/to-xhtml.t	Sat Apr 09 13:35:18 2011 +0000
@@ -0,0 +1,280 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 34;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Fiction::ToHTML;
+use XML::Grammar::Fiction::ToDocBook;
+
+my @tests = (qw(
+        sections-and-paras
+        sections-p-b-i
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=2
+
+my %converters =
+(
+    'xhtml' =>
+    {
+        class => "XML::Grammar::Fiction::ToHTML",
+        method => "translate_to_html",
+    },
+    'db' =>
+    {
+        class => "XML::Grammar::Fiction::ToDocBook",
+        method => "translate_to_docbook",
+    },
+);
+
+foreach my $conv_id (keys(%converters))
+{
+    my $h_ref = $converters{$conv_id};
+    $h_ref->{obj} = $h_ref->{class}->new(
+        {
+            data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+        }
+    );
+}
+
+foreach my $fn (@tests)
+{
+    my $xpc = XML::LibXML::XPathContext->new();
+    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+    $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
+   
+    # This is a closure that returns a closure (like shown in "On Lisp" :
+    # http://www.paulgraham.com/onlisptext.html ) for a finder in
+    # one of the documents
+    my $create_finder = sub {
+        my $format_id = shift;
+
+        my $format_hash = $converters{$format_id};
+        my $m = $format_hash->{method};
+
+        my $xml_fn = "t/fiction/data/xml/$fn.xml";
+
+        my $text = $format_hash->{'obj'}->$m(
+            {
+                source => { file => $xml_fn, },
+                output => "string",
+            }
+        );
+        if ($format_id eq "xhtml")
+        {
+            my $file_contents = load_xml($xml_fn);
+            {
+                my $from_string_text =
+                    $format_hash->{'obj'}->$m(
+                    {
+                        source => { string_ref => \$file_contents, },
+                        output => "string",
+                    }
+                );
+
+                # TEST*$num_texts
+                is ($from_string_text, $text, "From-string-ref text is OK.")
+            }
+
+            {
+                my $parser = XML::LibXML->new();
+                my $file_dom = $parser->parse_string($file_contents);
+
+                my $from_string_text =
+                    $format_hash->{'obj'}->$m(
+                    {
+                        source => { dom => $file_dom, },
+                        output => "string",
+                    }
+                );
+
+                # TEST*$num_texts
+                is ($from_string_text, $text, "From-dom text is OK.")
+            }
+        }
+        my $parser = XML::LibXML->new();
+
+        $parser->load_ext_dtd(0);
+
+        my $doc = $parser->parse_string($text);
+
+        return sub {
+            my $xpath = shift;
+            return $xpc->findnodes($xpath, $doc);
+        };
+    };
+
+    my $xhtml_find = $create_finder->("xhtml");
+    my $db_find = $create_finder->("db");
+
+    # TEST*$num_texts
+    is (
+        scalar(() = $xhtml_find->(q{//x:html})),
+        1,
+        "Found one article with id index",
+    );
+
+    {
+        my @title = $db_find->(q{//db:article/db:info/db:title});
+
+        # TEST*$num_texts
+        is (
+            scalar(@title),
+            1,
+            "Found one global <db:title>",
+        );
+
+        # TEST*$num_texts
+        is ($title[0]->textContent(), "David vs. Goliath - Part I");
+    }
+
+    # TEST:$num_xhtml_top_titles=2;
+    # TEST:$n=$num_texts*$num_xhtml_top_titles;
+    foreach my $xpath (
+        q{//x:html/x:head/x:title}, 
+        q{//x:html/x:body/x:div/x:h1},
+    )
+    {
+        my @title = $xhtml_find->($xpath);
+
+        # TEST*$n
+        is (
+            scalar(@title),
+            1,
+            "Found one global <x:title>",
+        );
+
+        # TEST*$n
+        is ($title[0]->textContent(), "David vs. Goliath - Part I",
+            "XHTML <title> has good content"
+        );
+    }
+    
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xhtml_find->(q{//x:div}))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+    {
+        my @elems = $xhtml_find->(q{//x:div[@xml:id="top"]/x:h2});
+        # TEST*$num_texts
+        is (scalar(@elems), 1, "One element");
+
+        # TEST*$num_texts
+        is ($elems[0]->textContent(), "The Top Section", 
+            "<h2> element contains the right thing.");
+    }
+
+    # TEST:$num_with_styles=1;
+    if ($fn eq "sections-p-b-i")
+    {
+        {
+            my @elems;
+
+            @elems = $xhtml_find->(q{//x:div/x:p/x:b});
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "Found bold tag",
+            );
+
+            # TEST*$num_with_styles
+            like ($elems[0]->toString(), qr{swear}, 
+                "Elem[0] is the right <b> tag."
+            );
+            
+            @elems = $xhtml_find->(q{//x:div/x:p/x:i});
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "Found italic tag",
+            );
+
+            # TEST*$num_with_styles
+            like ($elems[0]->toString(), qr{David}, 
+                "<i>[0] contains the right contents."
+            );
+        }
+
+        {
+            my @elems;
+
+            @elems = $db_find->(q{//db:article/db:section/db:para/db:emphasis[@role="bold"]});
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "DocBook: found bold tag",
+            );
+
+            # TEST*$num_with_styles
+            is ($elems[0]->textContent(), "swear", 
+                "Elem[0] is the right <emphasis role=bold> tag."
+            );
+            
+            @elems = $db_find->(
+                q{//db:article//db:section/db:para/db:emphasis[not(@role)]}
+            );
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "Found italic tag",
+            );
+
+            # TEST*$num_with_styles
+            is ($elems[0]->textContent(), "David", 
+                "<i>[0] contains the right contents.",
+            );
+        }
+
+        # Test the DocBook/XML incorporation of the <title> tag.
+        {
+            my @elems;
+
+            @elems = $db_find->(
+                q{//db:section[@xml:id='goliath']/db:info/db:title}
+            );
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "DocBook: found one title tag",
+            );
+
+            # TEST*$num_with_styles
+            is ($elems[0]->textContent(), "Goliath's Response", 
+                "title#goliath contains the right content.",
+            );
+        }
+    }
+}
+
+1;
+
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,323 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More tests => 26;
-
-use XML::LibXML;
-
-use Exception::Class;
-
-use XML::Grammar::Fiction::FromProto;
-use XML::Grammar::Fiction::FromProto::Parser::QnD;
-
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-    my $got_xml;
-    eval {
-        $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
-            },
-        }
-    );
-    };
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
-    );
-
-    # TEST
-    ok ($err, "TagsMismatch was caught");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ATags do not match},
-        "Text is OK."
-    );
-
-    # TEST
-    is(
-        $err->opening_tag()->name(),
-        "start",
-        "Opening tag-name is OK.",
-    );
-
-    # TEST
-    is(
-        $err->opening_tag()->line(),
-        1,
-        "Opening line is OK.",
-    );
-
-    # TEST
-    is(
-        $err->closing_tag()->name(),
-        "wrong-finish-tag",
-        "Closing tag-name is OK.",
-    );
-
-    # TEST
-    is(
-        $err->closing_tag()->line(),
-        3,
-        "Closing line is OK.",
-    );
-}
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-
-    my $got_xml;
-
-    eval {
-        $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text-invalid/not-start-with-tag.txt",
-            },
-        }
-    );
-    };
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag"
-    );
-
-    # TEST
-    ok ($err, "CannotMatchOpeningTag was caught");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ACannot match opening tag.},
-        "Text is OK."
-    );
-}
-
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-
-    my $got_xml;
-
-    eval {
-        $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text-invalid/no-right-angle.txt",
-            },
-        }
-    );
-    };
-
-    my $err_proto = $@;
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket"
-    );
-
-    # TEST
-    ok ($err, "NoRightAngleBracket was matched.");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ACannot match the \">\" of the opening tag},
-        "Text is OK."
-    );
-
-    # TEST
-    is (
-        $err->line(),
-        1,
-        "Line is 1 as expected."
-    );
-}
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-
-    my $got_xml;
-
-    eval {
-        $got_xml = $grammar->convert(
-            {
-                source =>
-                {
-                    file => "t/data/proto-text-invalid/wrong-close-tag.txt",
-                },
-            }
-        );
-    };
-
-    my $err_proto = $@;
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax"
-    );
-
-    # TEST
-    ok ($err, "WrongClosingTagSyntax was matched.");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ACannot match closing tag},
-        "Cannot match closing tag."
-    );
-
-    # TEST
-    is (
-        $err->line(),
-        3,
-        "Line is 1 as expected."
-    );
-}
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-    eval {
-    my $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text-invalid/wrong-closing-inner-tag.txt",
-            },
-        }
-    );
-    };
-
-    my $err_raw = $@;
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
-    );
-
-    # TEST
-    ok ($err, "TagsMismatch was caught");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ATags do not match},
-        "Text is OK."
-    );
-
-    # TEST
-    is(
-        $err->opening_tag()->name(),
-        "b",
-        "Opening tag-name is OK.",
-    );
-
-    # TEST
-    is(
-        $err->opening_tag()->line(),
-        11,
-        "Opening line is OK.",
-    );
-
-    # TEST
-    is(
-        $err->closing_tag()->name(),
-        "i",
-        "closing tag.",
-    );
-
-    # TEST
-    is(
-        $err->closing_tag()->line(),
-        11,
-        "Closing tag line is OK.",
-    );
-}
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-
-    my $got_xml;
-
-    eval {
-        $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text-invalid/leading-space.txt",
-            },
-        }
-    );
-    };
-
-    my $err_proto = $@;
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::LeadingSpace"
-    );
-
-    # TEST
-    ok ($err, "LeadingSpace was matched.");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ALeading space},
-        "Cannot match closing tag."
-    );
-
-    # TEST
-    is (
-        $err->line(),
-        12,
-        "Line is 1 as expected."
-    );
-}
-
-{
-    my $grammar = XML::Grammar::Fiction::FromProto->new({});
-
-    my $got_xml;
-
-    eval {
-        $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text-invalid/leading-space-at-para-start.txt",
-            },
-        }
-    );
-    };
-
-    my $err_proto = $@;
-
-    my $err = Exception::Class->caught(
-        "XML::Grammar::Fiction::Err::Parse::LeadingSpace"
-    );
-
-    # TEST
-    ok ($err, "LeadingSpace at para start was matched.");
-
-    # TEST
-    like(
-        $err->error(),
-        qr{\ALeading space},
-        "LeadingSpace at para start error."
-    );
-
-    # TEST
-    is (
-        $err->line(),
-        14,
-        "LeadingSpace Line is 14 as expected."
-    );
-}
-
-1;
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,77 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More tests => 8;
-
-use Test::XML;
-
-use XML::LibXML;
-
-use XML::Grammar::Fiction::FromProto;
-
-use XML::Grammar::Fiction::FromProto::Parser::QnD;
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-my @tests = (qw(
-    sections-and-paras
-    sections-p-b-i
-    sections-p-b-i-comments
-    sections-a-href
-    ));
-
-# TEST:$num_texts=4
-
-my $grammar = XML::Grammar::Fiction::FromProto->new({
-        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
-    });
-
-my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/fiction-xml.rng" 
-    );
-
-my $xml_parser = XML::LibXML->new();
-$xml_parser->validation(0);
-
-foreach my $fn (@tests)
-{
-    my $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text/$fn.txt",
-            },
-        }
-    );
-
-    # TEST*$num_texts
-    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
-        "Output of the Proto Text \"$fn\""
-    );
-
-    my $dom = $xml_parser->parse_string($got_xml);
-
-    my $code;
-    $code = $rngschema->validate($dom);
-
-    # TEST*$num_texts
-    ok ((defined($code) && ($code == 0)),
-        "The validation of '$fn' succeeded.") ||
-        diag("\$@ == $@");
-}
-
-1;
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,78 +0,0 @@
-use strict;
-use warnings;
-
-use Test::More tests => 3;
-
-use XML::Grammar::Fiction::FromProto::Parser::QnD;
-
-{
-    my $text = <<"EOF";
-Hello <s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
-EOF
-
-    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
-
-    $parser->setup_text($text);
-
-    my $ret = $parser->consume(qr{[^<]});
-
-    # TEST
-    is ($ret, "Hello ", "consume works for first line");
-}
-
-{
-    my $text = <<"EOF";
-Hello
-voila the row kala:
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
-EOF
-
-    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
-
-    $parser->setup_text($text);
-
-    my $ret = $parser->consume(qr{[^<]});
-
-    # TEST
-    is ($ret, "Hello\nvoila the row kala:\n", 
-        "consume works for several lines");
-}
-
-{
-    my $text = <<"EOF";
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
-EOF
-
-    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
-
-    $parser->setup_text($text);
-
-    my $ret = $parser->_parse_opening_tag();
-
-    # TEST
-    is_deeply ($ret, 
-        {
-            name => "s",
-            is_standalone => 0,
-            line => 1,
-            attrs => [ { key => "id", value => "top"}],
-        },
-        "Checking _parse_opening_tag() - #1",
-    );
-}
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,82 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More;
-
-use Test::XML tests => 9;
-
-use File::Spec;
-
-use XML::LibXML;
-
-use XML::Grammar::Fiction::ToDocBook;
-
-my @tests = (qw(
-        sections-and-paras
-        sections-p-b-i-comments
-        sections-a-href
-    ));
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path
-        or die "Cannot open '$path' for reading";
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>;
-    }
-    close($in);
-    return $contents;
-}
-
-# TEST:$num_texts=3
-
-my $converter = XML::Grammar::Fiction::ToDocBook->new({
-        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
-    });
-
-foreach my $fn (@tests)
-{
-    my $docbook_text = $converter->translate_to_docbook({
-            source => { file => "t/data/xml/$fn.xml", },
-            output => "string",
-        }
-        );
-
-    # TEST*$num_texts*2
-    
-    my $parser = XML::LibXML->new();
-
-    my $doc = $parser->parse_string($docbook_text);
-
-    my $xc = XML::LibXML::XPathContext->new($doc);
-
-    $xc->registerNs('db', 'http://docbook.org/ns/docbook');
-
-    is (
-        scalar(() = $xc->findnodes(q{//db:article[@xml:id='index']})),
-        1,
-        "Found one article with id index",
-    );
-
-    ok (
-        (scalar(() = $xc->findnodes(q{//db:section}))
-            >=
-            1
-        ),
-        "Found role=description sections",
-    );
-
-    # TEST*$num_texts
-    is_xml ($docbook_text, load_xml("t/data/docbook/$fn.docbook.xml"),
-        "Output of the DocBook \"$fn\"",
-    );
-}
-
-1;
-
diff -r b95e5667aef8 -r 9150edb15271 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Sat Apr 09 13:19:40 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,280 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More tests => 34;
-
-use File::Spec;
-
-use XML::LibXML;
-
-use XML::Grammar::Fiction::ToHTML;
-use XML::Grammar::Fiction::ToDocBook;
-
-my @tests = (qw(
-        sections-and-paras
-        sections-p-b-i
-    ));
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-# TEST:$num_texts=2
-
-my %converters =
-(
-    'xhtml' =>
-    {
-        class => "XML::Grammar::Fiction::ToHTML",
-        method => "translate_to_html",
-    },
-    'db' =>
-    {
-        class => "XML::Grammar::Fiction::ToDocBook",
-        method => "translate_to_docbook",
-    },
-);
-
-foreach my $conv_id (keys(%converters))
-{
-    my $h_ref = $converters{$conv_id};
-    $h_ref->{obj} = $h_ref->{class}->new(
-        {
-            data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
-        }
-    );
-}
-
-foreach my $fn (@tests)
-{
-    my $xpc = XML::LibXML::XPathContext->new();
-    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
-    $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
-   
-    # This is a closure that returns a closure (like shown in "On Lisp" :
-    # http://www.paulgraham.com/onlisptext.html ) for a finder in
-    # one of the documents
-    my $create_finder = sub {
-        my $format_id = shift;
-
-        my $format_hash = $converters{$format_id};
-        my $m = $format_hash->{method};
-
-        my $xml_fn = "t/data/xml/$fn.xml";
-
-        my $text = $format_hash->{'obj'}->$m(
-            {
-                source => { file => $xml_fn, },
-                output => "string",
-            }
-        );
-        if ($format_id eq "xhtml")
-        {
-            my $file_contents = load_xml($xml_fn);
-            {
-                my $from_string_text =
-                    $format_hash->{'obj'}->$m(
-                    {
-                        source => { string_ref => \$file_contents, },
-                        output => "string",
-                    }
-                );
-
-                # TEST*$num_texts
-                is ($from_string_text, $text, "From-string-ref text is OK.")
-            }
-
-            {
-                my $parser = XML::LibXML->new();
-                my $file_dom = $parser->parse_string($file_contents);
-
-                my $from_string_text =
-                    $format_hash->{'obj'}->$m(
-                    {
-                        source => { dom => $file_dom, },
-                        output => "string",
-                    }
-                );
-
-                # TEST*$num_texts
-                is ($from_string_text, $text, "From-dom text is OK.")
-            }
-        }
-        my $parser = XML::LibXML->new();
-
-        $parser->load_ext_dtd(0);
-
-        my $doc = $parser->parse_string($text);
-
-        return sub {
-            my $xpath = shift;
-            return $xpc->findnodes($xpath, $doc);
-        };
-    };
-
-    my $xhtml_find = $create_finder->("xhtml");
-    my $db_find = $create_finder->("db");
-
-    # TEST*$num_texts
-    is (
-        scalar(() = $xhtml_find->(q{//x:html})),
-        1,
-        "Found one article with id index",
-    );
-
-    {
-        my @title = $db_find->(q{//db:article/db:info/db:title});
-
-        # TEST*$num_texts
-        is (
-            scalar(@title),
-            1,
-            "Found one global <db:title>",
-        );
-
-        # TEST*$num_texts
-        is ($title[0]->textContent(), "David vs. Goliath - Part I");
-    }
-
-    # TEST:$num_xhtml_top_titles=2;
-    # TEST:$n=$num_texts*$num_xhtml_top_titles;
-    foreach my $xpath (
-        q{//x:html/x:head/x:title}, 
-        q{//x:html/x:body/x:div/x:h1},
-    )
-    {
-        my @title = $xhtml_find->($xpath);
-
-        # TEST*$n
-        is (
-            scalar(@title),
-            1,
-            "Found one global <x:title>",
-        );
-
-        # TEST*$n
-        is ($title[0]->textContent(), "David vs. Goliath - Part I",
-            "XHTML <title> has good content"
-        );
-    }
-    
-    # TEST*$num_texts
-    ok (
-        (scalar(() = $xhtml_find->(q{//x:div}))
-            >=
-            1
-        ),
-        "Found role=description sections",
-    );
-
-    {
-        my @elems = $xhtml_find->(q{//x:div[@xml:id="top"]/x:h2});
-        # TEST*$num_texts
-        is (scalar(@elems), 1, "One element");
-
-        # TEST*$num_texts
-        is ($elems[0]->textContent(), "The Top Section", 
-            "<h2> element contains the right thing.");
-    }
-
-    # TEST:$num_with_styles=1;
-    if ($fn eq "sections-p-b-i")
-    {
-        {
-            my @elems;
-
-            @elems = $xhtml_find->(q{//x:div/x:p/x:b});
-            # TEST*$num_with_styles
-            is (
-                scalar(@elems),
-                1,
-                "Found bold tag",
-            );
-
-            # TEST*$num_with_styles
-            like ($elems[0]->toString(), qr{swear}, 
-                "Elem[0] is the right <b> tag."
-            );
-            
-            @elems = $xhtml_find->(q{//x:div/x:p/x:i});
-            # TEST*$num_with_styles
-            is (
-                scalar(@elems),
-                1,
-                "Found italic tag",
-            );
-
-            # TEST*$num_with_styles
-            like ($elems[0]->toString(), qr{David}, 
-                "<i>[0] contains the right contents."
-            );
-        }
-
-        {
-            my @elems;
-
-            @elems = $db_find->(q{//db:article/db:section/db:para/db:emphasis[@role="bold"]});
-            # TEST*$num_with_styles
-            is (
-                scalar(@elems),
-                1,
-                "DocBook: found bold tag",
-            );
-
-            # TEST*$num_with_styles
-            is ($elems[0]->textContent(), "swear", 
-                "Elem[0] is the right <emphasis role=bold> tag."
-            );
-            
-            @elems = $db_find->(
-                q{//db:article//db:section/db:para/db:emphasis[not(@role)]}
-            );
-            # TEST*$num_with_styles
-            is (
-                scalar(@elems),
-                1,
-                "Found italic tag",
-            );
-
-            # TEST*$num_with_styles
-            is ($elems[0]->textContent(), "David", 
-                "<i>[0] contains the right contents.",
-            );
-        }
-
-        # Test the DocBook/XML incorporation of the <title> tag.
-        {
-            my @elems;
-
-            @elems = $db_find->(
-                q{//db:section[@xml:id='goliath']/db:info/db:title}
-            );
-            # TEST*$num_with_styles
-            is (
-                scalar(@elems),
-                1,
-                "DocBook: found one title tag",
-            );
-
-            # TEST*$num_with_styles
-            is ($elems[0]->textContent(), "Goliath's Response", 
-                "title#goliath contains the right content.",
-            );
-        }
-    }
-}
-
-1;
-

changeset:   270:b95e5667aef8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 09 13:19:40 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.6


diff -r ba2c538c4e2d -r b95e5667aef8 .hgtags
--- a/.hgtags	Sat Apr 09 13:17:39 2011 +0000
+++ b/.hgtags	Sat Apr 09 13:19:40 2011 +0000
@@ -8,3 +8,4 @@
 ffce6e9082a8e6d179942b0fe343e3b8b4c97f01 releases/0.1.3
 46f1c62e5f7fdbeee830653a844c61fa32adb6ff releases/0.1.4
 159ce56f456f61b602de4154a673b89cf020d8c1 releases/0.1.5
+ba2c538c4e2daca43cb0750e40e9fd949e73066d releases/0.1.6

changeset:   269:ba2c538c4e2d
tag:         releases/0.1.6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 09 13:17:39 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bump the version number to 0.1.6.


diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Apr 09 13:17:39 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.6       Sat Apr  9 16:15:17 IDT 2011
     * Now handling the <a /> element only in XML::Grammar::Screenplay - it
     does not exist in ::Fiction.
     * Add support for the <a href="$URL">$CONTENT</a> tag in Fiction-Text 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 METHODS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 use Exception::Class
     (
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -23,11 +23,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 AUTHOR
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head1 SYNOPSIS
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 
diff -r bed71bfd79db -r ba2c538c4e2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Apr 08 16:05:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sat Apr 09 13:17:39 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.5
+Version 0.1.6
 
 =cut
 
-our $VERSION = '0.1.5';
+our $VERSION = '0.1.6';
 
 =head2 new()
 

changeset:   268:bed71bfd79db
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 08 16:05:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-a-href.docbook.xml perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-and-paras.docbook.xml perl/modules/XML-Grammar-Fiction/t/to-docbook.t
description:
Now supporting the Fiction-XML DocBook 5 output of the <span xlink:href>.


diff -r ce043262df88 -r bed71bfd79db perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 08 15:44:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 08 16:05:58 2011 +0000
@@ -57,6 +57,8 @@
 tag-release.pl
 t/app-to-html.t
 t/boilerplate.t
+t/data/docbook/sections-a-href.docbook.xml
+t/data/docbook/sections-and-paras.docbook.xml
 t/data/docbook/sections-p-b-i-comments.docbook.xml
 t/data/docbook/with-internal-description.docbook.xml
 t/data/proto-text/dialogue-with-several-paragraphs.txt
diff -r ce043262df88 -r bed71bfd79db perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri Apr 08 15:44:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri Apr 08 16:05:58 2011 +0000
@@ -69,4 +69,19 @@
     </emphasis>
 </xsl:template>
 
+<xsl:template match="fic:span">
+    <xsl:choose>
+        <xsl:when test="@xlink:href">
+            <link>
+                <xsl:attribute name="xlink:href">
+                    <xsl:value-of select="@xlink:href" />
+                </xsl:attribute>
+                <xsl:apply-templates/>
+            </link>
+        </xsl:when>
+        <xsl:otherwise>
+            <xsl:apply-templates/>
+        </xsl:otherwise>
+    </xsl:choose>
+</xsl:template>
 </xsl:stylesheet>
diff -r ce043262df88 -r bed71bfd79db perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-a-href.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-a-href.docbook.xml	Fri Apr 08 16:05:58 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        King <link xlink:href="http://en.wikipedia.org/wiki/David">David</link> and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r ce043262df88 -r bed71bfd79db perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-and-paras.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-and-paras.docbook.xml	Fri Apr 08 16:05:58 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+        David and Goliath were standing by each other.    
+    </para>
+    <para>
+        David said unto Goliath: "I will shoot you."
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really".
+    </para>
+    </section>
+  </section>
+</article>
diff -r ce043262df88 -r bed71bfd79db perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Fri Apr 08 15:44:12 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Fri Apr 08 16:05:58 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 4;
+use Test::XML tests => 9;
 
 use File::Spec;
 
@@ -16,23 +16,25 @@
 my @tests = (qw(
         sections-and-paras
         sections-p-b-i-comments
+        sections-a-href
     ));
 
 sub load_xml
 {
     my $path = shift;
 
-    open my $in, "<", $path;
+    open my $in, "<", $path
+        or die "Cannot open '$path' for reading";
     my $contents;
     {
         local $/;
-        $contents = <$in>
+        $contents = <$in>;
     }
     close($in);
     return $contents;
 }
 
-# TEST:$num_texts=2
+# TEST:$num_texts=3
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
@@ -69,6 +71,11 @@
         ),
         "Found role=description sections",
     );
+
+    # TEST*$num_texts
+    is_xml ($docbook_text, load_xml("t/data/docbook/$fn.docbook.xml"),
+        "Output of the DocBook \"$fn\"",
+    );
 }
 
 1;

changeset:   267:ce043262df88
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 08 15:44:12 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-p-b-i-comments.docbook.xml perl/modules/XML-Grammar-Fiction/t/to-docbook.t
description:
Add another test for Fiction-XML -> DocBook 5.


diff -r 40dad8df78f8 -r ce043262df88 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 08 15:37:03 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 08 15:44:12 2011 +0000
@@ -57,6 +57,7 @@
 tag-release.pl
 t/app-to-html.t
 t/boilerplate.t
+t/data/docbook/sections-p-b-i-comments.docbook.xml
 t/data/docbook/with-internal-description.docbook.xml
 t/data/proto-text/dialogue-with-several-paragraphs.txt
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
diff -r 40dad8df78f8 -r ce043262df88 perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-p-b-i-comments.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/docbook/sections-p-b-i-comments.docbook.xml	Fri Apr 08 15:44:12 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<article xmlns="http://docbook.org/ns/docbook" xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="index" xml:lang="">
+  <info>
+    <title>David vs. Goliath - Part I</title>
+  </info>
+  <section xml:id="top">
+    <info>
+      <title>The Top Section</title>
+    </info>
+    <para>
+    David and Goliath were standing by each other.    
+    </para>
+    <para>
+    David said unto Goliath: "I will shoot you. I <emphasis role="bold">swear</emphasis> I will"
+    </para>
+    <section xml:id="goliath">
+      <info>
+        <title>Goliath's Response</title>
+      </info>
+      <para>
+    Goliath was not amused.
+    </para>
+      <para>
+    He said to David: "Oh, really. <emphasis>David</emphasis>, the red-headed!".
+    </para>
+    </section>
+  </section>
+</article>
diff -r 40dad8df78f8 -r ce043262df88 perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Fri Apr 08 15:37:03 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Fri Apr 08 15:44:12 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 2;
+use Test::XML tests => 4;
 
 use File::Spec;
 
@@ -15,6 +15,7 @@
 
 my @tests = (qw(
         sections-and-paras
+        sections-p-b-i-comments
     ));
 
 sub load_xml
@@ -31,7 +32,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=1
+# TEST:$num_texts=2
 
 my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),

changeset:   266:40dad8df78f8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 08 15:37:03 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-a-href.txt perl/modules/XML-Grammar-Fiction/t/data/xml/sections-a-href.xml perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
description:
add partial support for hyperlinks to Fiction-Text/Fiction-XML.

TODO : add to the XSLT.


diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Apr 08 15:11:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Apr 08 15:37:03 2011 +0000
@@ -1,7 +1,10 @@
 Revision history for XML-Grammar-Fiction.
 
-    * Now handling the a element only in XML::Grammar::Screenplay - it
+    * Now handling the <a /> element only in XML::Grammar::Screenplay - it
     does not exist in ::Fiction.
+    * Add support for the <a href="$URL">$CONTENT</a> tag in Fiction-Text 
+    which is translated into <span xlink:href="$URL" >$CONTENT</span> in
+    the Fiction-XML grammar.
 
 0.1.5       Mon Apr  4 23:08:18 IDT 2011
 
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 08 15:11:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 08 15:37:03 2011 +0000
@@ -68,6 +68,7 @@
 t/data/proto-text-invalid/wrong-closing-inner-tag.txt
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
+t/data/proto-text/sections-a-href.txt
 t/data/proto-text/sections-and-paras.txt
 t/data/proto-text/sections-p-b-i-comments.txt
 t/data/proto-text/sections-p-b-i.txt
@@ -84,6 +85,7 @@
 t/data/xml/dialogue-with-several-paragraphs.xml
 t/data/xml/nested-s.xml
 t/data/xml/scenes-with-titles.xml
+t/data/xml/sections-a-href.xml
 t/data/xml/sections-and-paras.xml
 t/data/xml/sections-p-b-i-comments.xml
 t/data/xml/sections-p-b-i.xml
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri Apr 08 15:11:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Fri Apr 08 15:37:03 2011 +0000
@@ -2,6 +2,7 @@
 <!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
 <grammar xmlns="http://relaxng.org/ns/structure/1.0"
     xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
+    xmlns:xlink="http://www.w3.org/1999/xlink"
     datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
     >
     <start>
@@ -33,6 +34,11 @@
                 <data type="NCName" />
             </attribute>
         </optional>
+        <optional>
+            <attribute name="xlink:href">
+                <data type="anyURI"/>
+            </attribute>
+        </optional>
     </define>
     <define name="section">
         <element name="fic:section">
@@ -53,13 +59,27 @@
         <element name="fic:p">
             <zeroOrMore>
                 <choice>
-                    <ref name="b" />
-                    <ref name="i" />
-                    <text />
+                    <ref name="text_with_style" />
+                    <ref name="span" />
                 </choice>
             </zeroOrMore>
         </element>
     </define>
+    <define name="text_with_style">
+        <choice>
+            <text />
+            <ref name="b" />
+            <ref name="i" />
+        </choice>
+    </define>
+    <define name="span">
+        <element name="fic:span">
+            <ref name="common_attrs" />
+            <oneOrMore>
+                <ref name="text_with_style" />
+            </oneOrMore>
+        </element>
+    </define>
     <define name="b">
         <element name="fic:b">
             <text />
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Apr 08 15:11:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Apr 08 15:37:03 2011 +0000
@@ -14,6 +14,7 @@
 
 my $fiction_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/};
 my $xml_ns = "http://www.w3.org/XML/1998/namespace";
+my $xlink_ns = "http://www.w3.org/1999/xlink";
 
 =head1 NAME
 
@@ -99,6 +100,24 @@
     return "p";
 }
 
+sub _handle_elem_of_name_a
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start =>
+            [
+                "span",
+                [$xlink_ns, "href"] => $elem->lookup_attr("href"),
+            ],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
 sub _handle_elem_of_name_title
 {
     my ($self, $elem) = @_;
@@ -321,8 +340,9 @@
         NAMESPACES => 1,
         PREFIX_MAP =>
         {
-             $fiction_ns => "",
-             $xml_ns => "xml",
+             $fiction_ns => q{},
+             $xml_ns => 'xml',
+             $xlink_ns => 'xlink',
         }
     );
 
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Apr 08 15:11:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Apr 08 15:37:03 2011 +0000
@@ -125,6 +125,7 @@
 sub _handle_elem_of_name_a
 {
     my ($self, $elem) = @_;
+
     $self->_output_tag_with_childs(
         {
             start => ["ulink", "url" => $elem->lookup_attr("href")],
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-a-href.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-a-href.txt	Fri Apr 08 15:37:03 2011 +0000
@@ -0,0 +1,30 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+King <a href="http://en.wikipedia.org/wiki/David">David</a> and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-a-href.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-a-href.xml	Fri Apr 08 15:37:03 2011 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    King <span xlink:href="http://en.wikipedia.org/wiki/David">David</span> and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r 815b3ad87e91 -r 40dad8df78f8 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Fri Apr 08 15:11:53 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Fri Apr 08 15:37:03 2011 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 6;
+use Test::More tests => 8;
 
 use Test::XML;
 
@@ -31,9 +31,10 @@
     sections-and-paras
     sections-p-b-i
     sections-p-b-i-comments
+    sections-a-href
     ));
 
-# TEST:$num_texts=3
+# TEST:$num_texts=4
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   265:815b3ad87e91
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 08 15:11:53 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
description:
Removed old code.

There was the list of texts from the old screenplay.


diff -r 127c303dadd6 -r 815b3ad87e91 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Fri Apr 08 14:42:16 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Fri Apr 08 15:11:53 2011 +0000
@@ -28,22 +28,6 @@
 }
 
 my @tests = (qw(
-        nested-s
-        two-nested-s
-        with-dialogue
-        dialogue-with-several-paragraphs
-        with-description
-        with-tags-inside-paragraphs
-        sections-and-paras
-        with-comments
-        with-multi-para-desc
-        with-multi-line-comments
-        scenes-with-titles
-        with-entities
-        with-brs
-    ));
-
-@tests = (qw(
     sections-and-paras
     sections-p-b-i
     sections-p-b-i-comments

changeset:   264:127c303dadd6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 08 14:42:16 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Handling <a /> only in XML::Grammar::Screenplay. It's not in ::Fiction.


diff -r 5e7a08655e5f -r 127c303dadd6 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 04 21:13:04 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Apr 08 14:42:16 2011 +0000
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Now handling the a element only in XML::Grammar::Screenplay - it
+    does not exist in ::Fiction.
+
 0.1.5       Mon Apr  4 23:08:18 IDT 2011
 
     * Add the tag-release.pl script to tag a release using svn.berlios.de.
diff -r 5e7a08655e5f -r 127c303dadd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 04 21:13:04 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Apr 08 14:42:16 2011 +0000
@@ -72,19 +72,6 @@
     $self->_write_scene({scene => $elem});
 }
 
-sub _handle_elem_of_name_a
-{
-    my ($self, $elem) = @_;
-    $self->_output_tag_with_childs(
-        {
-            start => ["ulink", "url" => $elem->lookup_attr("href")],
-            elem => $elem,
-        }
-    );
-
-    return;
-}
-
 sub _handle_elem_of_name_b
 {
     my ($self, $elem) = @_;
diff -r 5e7a08655e5f -r 127c303dadd6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 04 21:13:04 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Apr 08 14:42:16 2011 +0000
@@ -122,6 +122,19 @@
     return "para";
 }
 
+sub _handle_elem_of_name_a
+{
+    my ($self, $elem) = @_;
+    $self->_output_tag_with_childs(
+        {
+            start => ["ulink", "url" => $elem->lookup_attr("href")],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
 sub _handle_elem_of_name_section
 {
     my ($self, $elem) = @_;

changeset:   263:5e7a08655e5f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 04 21:13:04 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.5


diff -r 159ce56f456f -r 5e7a08655e5f .hgtags
--- a/.hgtags	Mon Apr 04 21:11:30 2011 +0000
+++ b/.hgtags	Mon Apr 04 21:13:04 2011 +0000
@@ -7,3 +7,4 @@
 e9d9f1d6157534026a9241346183e84133053be9 releases/0.1.2
 ffce6e9082a8e6d179942b0fe343e3b8b4c97f01 releases/0.1.3
 46f1c62e5f7fdbeee830653a844c61fa32adb6ff releases/0.1.4
+159ce56f456f61b602de4154a673b89cf020d8c1 releases/0.1.5

changeset:   262:159ce56f456f
tag:         releases/0.1.5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 04 21:11:30 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bump the version number to 0.1.5.


diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 04 21:11:30 2011 +0000
@@ -1,7 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.5       Mon Apr  4 23:08:18 IDT 2011
+
     * Add the tag-release.pl script to tag a release using svn.berlios.de.
-
     * Fix the handling of a colon (":") inside a top-level description
     in XML-Grammar-Screenplay.
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 METHODS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 use Exception::Class
     (
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 AUTHOR
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head1 SYNOPSIS
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 
diff -r ed855645f2a9 -r 159ce56f456f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 04 13:28:28 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 04 21:11:30 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.4
+Version 0.1.5
 
 =cut
 
-our $VERSION = '0.1.4';
+our $VERSION = '0.1.5';
 
 =head2 new()
 

changeset:   261:ed855645f2a9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 04 13:28:28 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract the method _top_is from three places.


diff -r e3313be6e8db -r ed855645f2a9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 04 11:46:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 04 13:28:28 2011 +0000
@@ -28,7 +28,7 @@
 {
     my $self = shift;
 
-    return $self->_in_para() && ($self->_top_tag->name() eq "p");
+    return $self->_in_para() && ($self->_top_is('p'));
 }
 
 
@@ -36,14 +36,21 @@
 {
     my $self = shift;
 
-    return $self->_in_saying() && ($self->_top_tag->name() eq "saying");
+    return $self->_in_saying() && ($self->_top_is('saying'));
+}
+
+sub _top_is
+{
+    my ($self, $want_name) = @_;
+
+    return ($self->_top_tag->name eq $want_name);
 }
 
 sub _top_is_desc
 {
     my $self = shift;
 
-    return ($self->_top_tag->name() eq "desc");
+    return $self->_top_is('desc');
 }
 
 around '_pop_tag' => sub {

changeset:   260:e3313be6e8db
parent:      258:cc86ab4e551d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 04 11:46:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-colon-inside-description.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Fix handling of colon inside a top-level description.


diff -r cc86ab4e551d -r e3313be6e8db perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 22:02:11 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 04 11:46:58 2011 +0000
@@ -2,6 +2,9 @@
 
     * Add the tag-release.pl script to tag a release using svn.berlios.de.
 
+    * Fix the handling of a colon (":") inside a top-level description
+    in XML-Grammar-Screenplay.
+
 0.1.4       Mon Apr  4 00:50:07 IDT 2011
     * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
     of the paragraph. Like:
diff -r cc86ab4e551d -r e3313be6e8db perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Apr 03 22:02:11 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 04 11:46:58 2011 +0000
@@ -113,6 +113,7 @@
 t/screenplay/data/proto-text/scenes-with-titles.txt
 t/screenplay/data/proto-text/two-nested-s.txt
 t/screenplay/data/proto-text/with-brs.txt
+t/screenplay/data/proto-text/with-colon-inside-description.txt
 t/screenplay/data/proto-text/with-comments.txt
 t/screenplay/data/proto-text/with-description.txt
 t/screenplay/data/proto-text/with-dialogue.txt
@@ -128,6 +129,7 @@
 t/screenplay/data/xml/scenes-with-titles.xml
 t/screenplay/data/xml/two-nested-s.xml
 t/screenplay/data/xml/with-brs.xml
+t/screenplay/data/xml/with-colon-inside-description.xml
 t/screenplay/data/xml/with-comments.xml
 t/screenplay/data/xml/with-description.xml
 t/screenplay/data/xml/with-dialogue.xml
diff -r cc86ab4e551d -r e3313be6e8db perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Apr 03 22:02:11 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 04 11:46:58 2011 +0000
@@ -39,6 +39,13 @@
     return $self->_in_saying() && ($self->_top_tag->name() eq "saying");
 }
 
+sub _top_is_desc
+{
+    my $self = shift;
+
+    return ($self->_top_tag->name() eq "desc");
+}
+
 around '_pop_tag' => sub {
     my ($orig, $self) = @_;
 
@@ -185,7 +192,7 @@
 
     my $l = $self->curr_line_ref();
 
-    if ((pos($$l) == 0) && ($$l =~ m{\A[^\[<][^:]*:}))
+    if ((pos($$l) == 0) && (! $self->_top_is_desc()) && ($$l =~ m{\A[^\[<][^:]*:}))
     {
         return $self->_parse_speech_unit();
     }
@@ -460,7 +467,7 @@
 after '_handle_open_tag' => sub {
     my $self = shift;
 
-    if ($self->_top_tag()->name() eq "desc")
+    if ($self->_top_is_desc)
     {
         $self->_start_para();
     }
diff -r cc86ab4e551d -r e3313be6e8db perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-colon-inside-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-colon-inside-description.txt	Mon Apr 04 11:46:58 2011 +0000
@@ -0,0 +1,33 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.
+
+He looks around: there's no one there except Goliath and him.
+
+David opens the book "Slings: The Missing Manual".
+]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r cc86ab4e551d -r e3313be6e8db perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-inside-description.xml	Mon Apr 04 11:46:58 2011 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+            <para>
+                He looks around: there's no one there except Goliath and him.
+            </para>
+            <para>
+                David opens the book "Slings: The Missing Manual".
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r cc86ab4e551d -r e3313be6e8db perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Apr 03 22:02:11 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Mon Apr 04 11:46:58 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 30;
+use Test::XML tests => 32;
 
 use XML::LibXML;
 
@@ -43,9 +43,10 @@
         with-entities
         with-brs
         with-internal-description-at-start-of-line
+        with-colon-inside-description
     ));
 
-# TEST:$num_texts=15
+# TEST:$num_texts=16
 
 my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",

changeset:   259:42eb905a3de7
branch:      convert-to-Parser-MGC
parent:      253:3c1fc8a3b557
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 03 22:15:31 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/tag-release.pl
description:
Merged from trunk.


diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 22:15:31 2011 +0000
@@ -1,5 +1,11 @@
 Revision history for XML-Grammar-Fiction.
 
+    - Screenplay: fix a colon inside a description that broke the 
+    proto-text. (E.g: "[David turns towards Goliath and says:]").
+
+    * Add the tag-release.pl script to tag a release using svn.berlios.de.
+
+0.1.4       Mon Apr  4 00:50:07 IDT 2011
     * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
     of the paragraph. Like:
 
@@ -18,8 +24,8 @@
         - they cancelled each other most of the time except for in this 
         case.
 
-        - Screenplay: fix a colon inside a description that broke the 
-        proto-text. (E.g: "[David turns towards Goliath and says:]").
+    * ::Screenplay - add support for Screenplay-Text's <i> tags which get
+    translated into Screenplay-XML's <italics> tags.
 
 0.1.3       Fri Dec 17 19:38:45 IST 2010
         - Moved some unused source files to the rejects directory.
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Apr 03 22:15:31 2011 +0000
@@ -55,6 +55,7 @@
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
 t/00-load.t
+tag-release.pl
 t/app-to-html.t
 t/boilerplate.t
 t/data/docbook/with-internal-description.docbook.xml
@@ -118,6 +119,7 @@
 t/screenplay/data/proto-text/with-description.txt
 t/screenplay/data/proto-text/with-dialogue.txt
 t/screenplay/data/proto-text/with-entities.txt
+t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
 t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
 t/screenplay/data/proto-text/with-internal-description.txt
 t/screenplay/data/proto-text/with-multi-line-comments.txt
@@ -133,6 +135,7 @@
 t/screenplay/data/xml/with-description.xml
 t/screenplay/data/xml/with-dialogue.xml
 t/screenplay/data/xml/with-entities.xml
+t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
 t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
 t/screenplay/data/xml/with-internal-description.xml
 t/screenplay/data/xml/with-multi-line-comments.xml
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Sun Apr 03 22:15:31 2011 +0000
@@ -91,6 +91,12 @@
     </strong>
 </xsl:template>
 
+<xsl:template match="sp:italics">
+    <em class="italics">
+        <xsl:apply-templates />
+    </em>
+</xsl:template>
+
 <xsl:template match="sp:inlinedesc">
     <span class="inlinedesc">[<xsl:apply-templates />]</span>
 </xsl:template>
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Sun Apr 03 22:15:31 2011 +0000
@@ -29,6 +29,7 @@
             <text/>
             <ref name="ulink"/>
             <ref name="bold"/>
+            <ref name="italics"/>
         </choice>
     </define>
     <define name="scene">
@@ -82,6 +83,11 @@
             <text />
         </element>
     </define>
+    <define name="italics">
+        <element name="sp:italics">
+            <text />
+        </element>
+    </define>
     <define name="ulink">
         <element name="sp:ulink">
                 <attribute name="url">
@@ -91,6 +97,7 @@
                     <choice>
                         <text />
                         <ref name="bold"/>
+                        <ref name="italics"/>
                     </choice>
             </zeroOrMore>
         </element>
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 METHODS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 use Exception::Class
     (
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
@@ -127,21 +127,11 @@
     return "b";
 }
 
-sub _handle_elem_of_name_i
+sub _italics_tag_name
 {
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ["i"],
-            elem => $elem,
-        }
-    );
-
-    return;
+    return "i";
 }
 
-
 sub _handle_text_start
 {
     my ($self, $elem) = @_;
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 AUTHOR
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =head1 SYNOPSIS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =head1 SYNOPSIS
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
@@ -106,6 +106,19 @@
     return;
 }
 
+sub _handle_elem_of_name_i
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => [$self->_italics_tag_name],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
 =head2 meta()
 
 Internal - (to settle pod-coverage.).
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
@@ -70,8 +70,8 @@
 
 =item 2. XML-like tags.
 
-Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
-hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+Supported tags are C<< <b> >> for bold text, C<< <i> >> for italics,
+C<< <a href="..."> >> for hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
 
 =item 3. Entities
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
@@ -134,6 +134,11 @@
     return "bold";
 }
 
+sub _italics_tag_name
+{
+    return "italics";
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 03 22:15:31 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt	Sun Apr 03 22:15:31 2011 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<i>merciful</i>, real merciful</a>, I will show you the power of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml	Sun Apr 03 22:15:31 2011 +0000
@@ -0,0 +1,61 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <italics>merciful</italics>, real merciful</ulink>, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Wed Mar 23 22:36:57 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Apr 03 22:15:31 2011 +0000
@@ -34,6 +34,7 @@
         dialogue-with-several-paragraphs
         with-description
         with-tags-inside-paragraphs
+        with-i-element-inside-paragraphs
         with-internal-description
         with-comments
         with-multi-para-desc
diff -r 3c1fc8a3b557 -r 42eb905a3de7 perl/modules/XML-Grammar-Fiction/tag-release.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/tag-release.pl	Sun Apr 03 22:15:31 2011 +0000
@@ -0,0 +1,30 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use IO::All;
+
+my ($version) = 
+    (map { m{\$VERSION *= *'([^']+)'} ? ($1) : () } 
+    io->file('lib/XML/Grammar/Fiction.pm')->getlines()
+    )
+    ;
+
+if (!defined ($version))
+{
+    die "Version is undefined!";
+}
+
+my $mini_repos_base = 'https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Fiction';
+
+my @cmd = (
+    "svn", "copy", "-m",
+    "Tagging the XML-Grammar-Fiction release as $version",
+    "$mini_repos_base/trunk",
+    "$mini_repos_base/tags/releases/$version",
+);
+
+print join(" ", map { /\s/ ? qq{"$_"} : $_ } @cmd), "\n";
+exec(@cmd);
+

changeset:   258:cc86ab4e551d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 03 22:02:11 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/tag-release.pl
description:
Add the tag-release.pl script.


diff -r 92cbcda33816 -r cc86ab4e551d perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 22:00:11 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 22:02:11 2011 +0000
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+    * Add the tag-release.pl script to tag a release using svn.berlios.de.
+
 0.1.4       Mon Apr  4 00:50:07 IDT 2011
     * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
     of the paragraph. Like:
diff -r 92cbcda33816 -r cc86ab4e551d perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Apr 03 22:00:11 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Apr 03 22:02:11 2011 +0000
@@ -54,6 +54,7 @@
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
 t/00-load.t
+tag-release.pl
 t/app-to-html.t
 t/boilerplate.t
 t/data/docbook/with-internal-description.docbook.xml
diff -r 92cbcda33816 -r cc86ab4e551d perl/modules/XML-Grammar-Fiction/tag-release.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/tag-release.pl	Sun Apr 03 22:02:11 2011 +0000
@@ -0,0 +1,30 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use IO::All;
+
+my ($version) = 
+    (map { m{\$VERSION *= *'([^']+)'} ? ($1) : () } 
+    io->file('lib/XML/Grammar/Fiction.pm')->getlines()
+    )
+    ;
+
+if (!defined ($version))
+{
+    die "Version is undefined!";
+}
+
+my $mini_repos_base = 'https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Fiction';
+
+my @cmd = (
+    "svn", "copy", "-m",
+    "Tagging the XML-Grammar-Fiction release as $version",
+    "$mini_repos_base/trunk",
+    "$mini_repos_base/tags/releases/$version",
+);
+
+print join(" ", map { /\s/ ? qq{"$_"} : $_ } @cmd), "\n";
+exec(@cmd);
+

changeset:   257:92cbcda33816
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 03 22:00:11 2011 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.4


diff -r 46f1c62e5f7f -r 92cbcda33816 .hgtags
--- a/.hgtags	Sun Apr 03 21:51:05 2011 +0000
+++ b/.hgtags	Sun Apr 03 22:00:11 2011 +0000
@@ -6,3 +6,4 @@
 f687fd08c665e32f9021247ccbe6bfd548c83fc2 releases/0.1.1
 e9d9f1d6157534026a9241346183e84133053be9 releases/0.1.2
 ffce6e9082a8e6d179942b0fe343e3b8b4c97f01 releases/0.1.3
+46f1c62e5f7fdbeee830653a844c61fa32adb6ff releases/0.1.4

changeset:   256:46f1c62e5f7f
tag:         releases/0.1.4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 03 21:51:05 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bump the version number to v0.1.4.


diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 21:51:05 2011 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.4       Mon Apr  4 00:50:07 IDT 2011
     * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
     of the paragraph. Like:
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 METHODS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 use Exception::Class
     (
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 AUTHOR
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head1 SYNOPSIS
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 
diff -r 2a4b944df5b3 -r 46f1c62e5f7f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 03 16:03:05 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Sun Apr 03 21:51:05 2011 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.3
+Version 0.1.4
 
 =cut
 
-our $VERSION = '0.1.3';
+our $VERSION = '0.1.4';
 
 =head2 new()
 

changeset:   255:2a4b944df5b3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 03 16:03:05 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
description:
Add support for italics in the XSLT, Changes, etc.


diff -r ad95a957d900 -r 2a4b944df5b3 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 15:57:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sun Apr 03 16:03:05 2011 +0000
@@ -18,6 +18,9 @@
         - they cancelled each other most of the time except for in this 
         case.
 
+    * ::Screenplay - add support for Screenplay-Text's <i> tags which get
+    translated into Screenplay-XML's <italics> tags.
+
 0.1.3       Fri Dec 17 19:38:45 IST 2010
         - Moved some unused source files to the rejects directory.
         - Convert to the new XML-Grammar-Fiction-Builder which uses
diff -r ad95a957d900 -r 2a4b944df5b3 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Sun Apr 03 15:57:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Sun Apr 03 16:03:05 2011 +0000
@@ -91,6 +91,12 @@
     </strong>
 </xsl:template>
 
+<xsl:template match="sp:italics">
+    <em class="italics">
+        <xsl:apply-templates />
+    </em>
+</xsl:template>
+
 <xsl:template match="sp:inlinedesc">
     <span class="inlinedesc">[<xsl:apply-templates />]</span>
 </xsl:template>
diff -r ad95a957d900 -r 2a4b944df5b3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 03 15:57:51 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Sun Apr 03 16:03:05 2011 +0000
@@ -70,8 +70,8 @@
 
 =item 2. XML-like tags.
 
-Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
-hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+Supported tags are C<< <b> >> for bold text, C<< <i> >> for italics,
+C<< <a href="..."> >> for hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
 
 =item 3. Entities
 

changeset:   254:ad95a957d900
parent:      242:46e2aa6aab37
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 03 15:57:51 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Add the <i> tag to Screenplay-Text.

And the <italics> tag.


diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Feb 27 21:27:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Apr 03 15:57:51 2011 +0000
@@ -116,6 +116,7 @@
 t/screenplay/data/proto-text/with-description.txt
 t/screenplay/data/proto-text/with-dialogue.txt
 t/screenplay/data/proto-text/with-entities.txt
+t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
 t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
 t/screenplay/data/proto-text/with-internal-description.txt
 t/screenplay/data/proto-text/with-multi-line-comments.txt
@@ -130,6 +131,7 @@
 t/screenplay/data/xml/with-description.xml
 t/screenplay/data/xml/with-dialogue.xml
 t/screenplay/data/xml/with-entities.xml
+t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
 t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
 t/screenplay/data/xml/with-internal-description.xml
 t/screenplay/data/xml/with-multi-line-comments.xml
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Sun Feb 27 21:27:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Sun Apr 03 15:57:51 2011 +0000
@@ -29,6 +29,7 @@
             <text/>
             <ref name="ulink"/>
             <ref name="bold"/>
+            <ref name="italics"/>
         </choice>
     </define>
     <define name="scene">
@@ -82,6 +83,11 @@
             <text />
         </element>
     </define>
+    <define name="italics">
+        <element name="sp:italics">
+            <text />
+        </element>
+    </define>
     <define name="ulink">
         <element name="sp:ulink">
                 <attribute name="url">
@@ -91,6 +97,7 @@
                     <choice>
                         <text />
                         <ref name="bold"/>
+                        <ref name="italics"/>
                     </choice>
             </zeroOrMore>
         </element>
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Feb 27 21:27:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 03 15:57:51 2011 +0000
@@ -127,21 +127,11 @@
     return "b";
 }
 
-sub _handle_elem_of_name_i
+sub _italics_tag_name
 {
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ["i"],
-            elem => $elem,
-        }
-    );
-
-    return;
+    return "i";
 }
 
-
 sub _handle_text_start
 {
     my ($self, $elem) = @_;
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Feb 27 21:27:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sun Apr 03 15:57:51 2011 +0000
@@ -106,6 +106,19 @@
     return;
 }
 
+sub _handle_elem_of_name_i
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => [$self->_italics_tag_name],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
 =head2 meta()
 
 Internal - (to settle pod-coverage.).
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Feb 27 21:27:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 03 15:57:51 2011 +0000
@@ -134,6 +134,11 @@
     return "bold";
 }
 
+sub _italics_tag_name
+{
+    return "italics";
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-i-element-inside-paragraphs.txt	Sun Apr 03 15:57:51 2011 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<i>merciful</i>, real merciful</a>, I will show you the power of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-i-element-inside-paragraphs.xml	Sun Apr 03 15:57:51 2011 +0000
@@ -0,0 +1,61 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <italics>merciful</italics>, real merciful</ulink>, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 46e2aa6aab37 -r ad95a957d900 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Feb 27 21:27:01 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Apr 03 15:57:51 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 28;
+use Test::XML tests => 30;
 
 use XML::LibXML;
 
@@ -34,6 +34,7 @@
         dialogue-with-several-paragraphs
         with-description
         with-tags-inside-paragraphs
+        with-i-element-inside-paragraphs
         with-internal-description
         with-comments
         with-multi-para-desc
@@ -44,7 +45,7 @@
         with-internal-description-at-start-of-line
     ));
 
-# TEST:$num_texts=14
+# TEST:$num_texts=15
 
 my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",

changeset:   253:3c1fc8a3b557
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Mar 23 22:36:57 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm
description:
Another bug fix.


diff -r 67404c8157d7 -r 3c1fc8a3b557 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm	Tue Mar 22 14:30:18 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm	Wed Mar 23 22:36:57 2011 +0000
@@ -169,7 +169,7 @@
 {
     my ($self) = @_;
 
-    $self->expect(qr/[\s\n]*/);
+    $self->expect(qr/(?:[\s\n]*)/ms);
 
     return $self->scope_of(undef,
         sub { return $self->_open_close_tag(); },
@@ -187,7 +187,7 @@
     my ($self, $string) = @_;
 
     # Don't skip whitespace.
-    $self->{patterns}->{ws} = qr//;
+    $self->{patterns}->{ws} = qr/(?!)/;
 
     return $self->from_string($string);
 }

changeset:   252:67404c8157d7
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Mar 22 14:30:18 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/TEMP/test.fiction-text.txt perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
description:
Started writing ::FromProto::Parser::MGC.

Some tests fail.


diff -r 753bcbcd7daa -r 67404c8157d7 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Mar 22 13:09:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Mar 22 14:30:18 2011 +0000
@@ -22,6 +22,7 @@
 lib/XML/Grammar/Fiction/Event.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
+lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
diff -r 753bcbcd7daa -r 67404c8157d7 perl/modules/XML-Grammar-Fiction/TEMP/test.fiction-text.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/test.fiction-text.txt	Tue Mar 22 14:30:18 2011 +0000
@@ -0,0 +1,1 @@
+<h>Foo <b>Bar</b> Baz</h>
diff -r 753bcbcd7daa -r 67404c8157d7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/MGC.pm	Tue Mar 22 14:30:18 2011 +0000
@@ -0,0 +1,230 @@
+package XML::Grammar::Fiction::FromProto::Parser::MGC;
+
+use Moose;
+
+use XML::Grammar::Fiction::Err;
+use XML::Grammar::Fiction::Struct::Tag;
+use XML::Grammar::Fiction::Event;
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser::MGC - parser for the Fiction-Text
+proto-text based on Parser::MGC
+
+B<For internal use only>.
+
+=head1 VERSION
+
+Version 0.1.3
+
+=head1 METHODS
+
+=cut
+
+our $VERSION = '0.1.3';
+
+extends(
+    'Parser::MGC',
+    'XML::Grammar::Fiction::FromProto::Parser::XmlIterator',
+);
+
+sub new
+{
+    my $class = shift;
+
+    my $self = $class->Parser::MGC::new(patterns => { ws => qr// }, @_);
+    
+    return $self;
+}
+
+sub _get_id_regex
+{
+    return qr{[a-zA-Z_\-]+};
+}
+
+
+sub _parse_opening_tag_attrs
+{
+    my ($self, $l) = @_;
+
+    my @attrs;
+
+    my $id_regex = $self->_get_id_regex();
+
+    $l =~ m{^};
+
+    while ($l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $1, 'value' => $2, };
+    }
+
+    return \@attrs;
+}
+
+sub _parse_opening_tag
+{
+    my ($self) = @_;
+
+    my $id_regex = $self->_get_id_regex();
+
+    my (undef, $tag_name, $attrs, $trail_slash) = $self->expect( 
+        qr/<($id_regex)\s*((?:\s+${id_regex}="[^"]+")*)(?:\s*\/\s*)?>/
+    );
+
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $tag_name,
+        is_standalone => (length($trail_slash) > 0),
+        # TODO : put something meaningful here
+        line => 1,
+        attrs => $self->_parse_opening_tag_attrs($attrs),
+    );
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    my $id_regex = $self->_get_id_regex();
+
+    if (my (undef, $id) = $self->expect(qr{($id_regex)>}))
+    {
+        return XML::Grammar::Fiction::Struct::Tag->new(
+            name => $id,
+            # TODO : replace with a more meaningful line number.
+            line => 1,
+        );
+    }
+    else
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
+            "Cannot match closing tag",
+        );
+    }
+}
+
+sub _merge_tag
+{
+    my ($self, $open_tag, $inner) = @_;
+
+    my $new_elem = 
+        $self->_create_elem(
+            $open_tag, 
+            $self->_new_list($inner),
+        );
+
+    return $new_elem;
+}
+
+sub _open_close_tag
+{
+    my ($self) = @_;
+
+    my $id_regex = $self->_get_id_regex();
+
+    my $open = $self->_parse_opening_tag();
+
+    my $inner = $self->scope_of(
+        undef, sub { 
+            return $self->sequence_of(
+                sub {
+                    return $self->any_of(
+                        sub {
+                            my (undef, $text) = $self->expect(qr/([^<]+)/ms);
+
+                            $self->commit;
+
+                            return $self->_new_text([$text]);
+                        },
+                        sub {
+                            $self->_open_close_tag(),
+                        },
+                    );
+                },
+            );
+        }, qr{</}
+    );
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    return $self->_merge_tag($open, [$inner]);
+}
+
+=head2 $self->parse()
+
+Needed by L<Parser::MGC> - ignore.
+
+=cut
+
+sub parse
+{
+    my ($self) = @_;
+
+    $self->expect(qr/[\s\n]*/);
+
+    return $self->scope_of(undef,
+        sub { return $self->_open_close_tag(); },
+        qr/\s*/ms
+    );
+}
+
+=head2 $self->process_text($string)
+
+processes the text and returns the parse tree.
+=cut
+
+sub process_text
+{
+    my ($self, $string) = @_;
+
+    # Don't skip whitespace.
+    $self->{patterns}->{ws} = qr//;
+
+    return $self->from_string($string);
+}
+
+1;
+
+=head2 $self->meta()
+
+leftover from moose.
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2011 by Paul Evans. 
+Copyright 2011 by Shlomi Fish. 
+
+This program is distributed under the MIT (X11) License:
+L<http://www.opensource.org/licenses/mit-license.php>
+
+Permission is hereby granted, free of charge, to any person
+obtaining a copy of this software and associated documentation
+files (the "Software"), to deal in the Software without
+restriction, including without limitation the rights to use,
+copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the
+Software is furnished to do so, subject to the following
+conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+OTHER DEALINGS IN THE SOFTWARE.
+
+=cut
diff -r 753bcbcd7daa -r 67404c8157d7 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Mar 22 13:09:06 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Mar 22 14:30:18 2011 +0000
@@ -11,7 +11,13 @@
 
 use XML::Grammar::Fiction::FromProto;
 
-use XML::Grammar::Fiction::FromProto::Parser::QnD;
+# use XML::Grammar::Fiction::FromProto::Parser::QnD;
+use XML::Grammar::Fiction::FromProto::Parser::MGC;
+
+$SIG{__WARN__} = sub {
+    my ($warning) = @_;
+    die $warning;
+};
 
 sub load_xml
 {
@@ -52,7 +58,7 @@
 # TEST:$num_texts=3
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
-        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
+        parser_class => "XML::Grammar::Fiction::FromProto::Parser::MGC",
     });
 
 my $rngschema = XML::LibXML::RelaxNG->new(

changeset:   251:753bcbcd7daa
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Mar 22 13:09:06 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
Fixed _open_close_tag to accept an inner tag.


diff -r b0b886e10600 -r 753bcbcd7daa perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- a/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 12:53:58 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 13:09:06 2011 +0000
@@ -105,14 +105,20 @@
 
     my $inner = $self->scope_of(
         undef, sub { 
-            return $self->any_of(
+            return $self->sequence_of(
                 sub {
-                    my (undef, $text) = $self->expect(qr/([^<]*)/ms);
+                    return $self->any_of(
+                        sub {
+                            my (undef, $text) = $self->expect(qr/([^<]+)/ms);
 
-                    return $self->_new_text([$text]);
-                },
-                sub {
-                    $self->_open_close_tag(),
+                            $self->commit;
+
+                            return $self->_new_text([$text]);
+                        },
+                        sub {
+                            $self->_open_close_tag(),
+                        },
+                    );
                 },
             );
         }, qr{</}

changeset:   250:b0b886e10600
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Mar 22 12:53:58 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
Fix more bugs.

Thanks to LeoNerd.


diff -r 42ec35c84122 -r b0b886e10600 perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- a/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 10:05:31 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 12:53:58 2011 +0000
@@ -65,11 +65,12 @@
 
     my $id_regex = $self->_get_id_regex();
 
-    if (my (undef, $id) = $self->expect(qr{</($id_regex)>}))
+    if (my (undef, $id) = $self->expect(qr{($id_regex)>}))
     {
         return XML::Grammar::Fiction::Struct::Tag->new(
             name => $id,
-            line => $self->line_num(),
+            # TODO : replace with a more meaningful line number.
+            line => 1,
         );
     }
     else
@@ -83,37 +84,27 @@
 
 sub _merge_tag
 {
-    my $self = shift;
-    my $open_tag = shift;
+    my ($self, $open_tag, $inner) = @_;
 
     my $new_elem = 
         $self->_create_elem(
             $open_tag, 
-            $self->_new_list($open_tag->detach_children()),
+            $self->_new_list($inner),
         );
 
-    if (! $self->_tag_stack_is_empty())
-    {
-        $self->_add_to_top_tag($new_elem);
-        return;
-    }
-    else
-    {
-        return $new_elem;
-    }
+    return $new_elem;
 }
 
 sub _open_close_tag
 {
     my ($self) = @_;
 
-    my @ret;
+    my $id_regex = $self->_get_id_regex();
 
-    push @ret, $self->_parse_opening_tag();
+    my $open = $self->_parse_opening_tag();
 
-    push @ret, $self->sequence_of(
-        sub
-        {
+    my $inner = $self->scope_of(
+        undef, sub { 
             return $self->any_of(
                 sub {
                     my (undef, $text) = $self->expect(qr/([^<]*)/ms);
@@ -124,13 +115,10 @@
                     $self->_open_close_tag(),
                 },
             );
-        },
+        }, qr{</}
     );
 
-    push @ret, $self->_parse_closing_tag();
-
-    my $open = $ret[0];
-    my $close = $ret[-1];
+    my $close = $self->_parse_closing_tag();
 
     if ($open->name() ne $close->name())
     {
@@ -141,7 +129,7 @@
         );
     }
 
-    return $self->_merge_tag($open);
+    return $self->_merge_tag($open, [$inner]);
 }
 
 sub parse

changeset:   249:42ec35c84122
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Mar 22 10:05:31 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
Fix another bug.


diff -r fca82129786f -r 42ec35c84122 perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- a/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 06:09:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 10:05:31 2011 +0000
@@ -116,7 +116,7 @@
         {
             return $self->any_of(
                 sub {
-                    my (undef, $text) = $self->expect(qr/([^<]+)/);
+                    my (undef, $text) = $self->expect(qr/([^<]*)/ms);
 
                     return $self->_new_text([$text]);
                 },

changeset:   248:fca82129786f
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Mar 22 06:09:46 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
More fixes.


diff -r 2c83dbb435b8 -r fca82129786f perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- a/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Mon Mar 21 22:27:46 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Tue Mar 22 06:09:46 2011 +0000
@@ -24,8 +24,7 @@
 
 sub _parse_opening_tag_attrs
 {
-    my $self = shift;
-    my $l = shift;
+    my ($self, $l) = @_;
 
     my @attrs;
 
@@ -33,7 +32,7 @@
 
     $l =~ m{^};
 
-    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    while ($l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
     {
         push @attrs, { 'key' => $1, 'value' => $2, };
     }
@@ -51,12 +50,11 @@
         qr/<($id_regex)\s*((?:\s+${id_regex}="[^"]+")*)(?:\s*\/\s*)?>/
     );
 
-    $self->commit;
-
     return XML::Grammar::Fiction::Struct::Tag->new(
         name => $tag_name,
         is_standalone => (length($trail_slash) > 0),
-        line => $self->line_num(),
+        # TODO : put something meaningful here
+        line => 1,
         attrs => $self->_parse_opening_tag_attrs($attrs),
     );
 }

changeset:   247:2c83dbb435b8
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Mar 21 22:27:46 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
Some more progress with the MGC parser.


diff -r c92c352d5cd0 -r 2c83dbb435b8 perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- a/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Mon Mar 21 22:23:39 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Mon Mar 21 22:27:46 2011 +0000
@@ -197,12 +197,7 @@
 }
 
 my $input_str = do { local $/; <ARGV> };
-my $ret = eval { $parser->from_string( $input_str ) };
-
-if ($@)
-{
-    die $@;
-}
+my $ret = $parser->from_string( $input_str );
 
 print Dumper( $ret );
 

changeset:   246:c92c352d5cd0
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Mar 21 22:23:39 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
Add more.


diff -r 6efa26a6a307 -r c92c352d5cd0 perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- a/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Mon Mar 21 22:12:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Mon Mar 21 22:23:39 2011 +0000
@@ -21,7 +21,6 @@
     return qr{[a-zA-Z_\-]+};
 }
 
-my $id_regex = $self->_get_id_regex();
 
 sub _parse_opening_tag_attrs
 {
@@ -46,14 +45,17 @@
 {
     my ($self) = @_;
 
-    my (undef, $tag_name, $attrs) = $self->expect( 
-        qr/<($id_regex)\s*((?:\s+${id_regex}="[^"]+")*)>/
+    my $id_regex = $self->_get_id_regex();
+
+    my (undef, $tag_name, $attrs, $trail_slash) = $self->expect( 
+        qr/<($id_regex)\s*((?:\s+${id_regex}="[^"]+")*)(?:\s*\/\s*)?>/
     );
+
     $self->commit;
 
     return XML::Grammar::Fiction::Struct::Tag->new(
-        name => $id,
-        is_standalone => $is_standalone,
+        name => $tag_name,
+        is_standalone => (length($trail_slash) > 0),
         line => $self->line_num(),
         attrs => $self->_parse_opening_tag_attrs($attrs),
     );
@@ -63,6 +65,8 @@
 {
     my $self = shift;
 
+    my $id_regex = $self->_get_id_regex();
+
     if (my (undef, $id) = $self->expect(qr{</($id_regex)>}))
     {
         return XML::Grammar::Fiction::Struct::Tag->new(
@@ -144,11 +148,17 @@
 
 sub parse
 {
+    my ($self) = @_;
+
+    return $self->_open_close_tag();
+}
+
+=begin foo
+
+sub parse
+{
    my $self = shift;
 
-   return $self->sequence_of(
-
-   )
    $self->sequence_of(
       sub { $self->any_of(
 
@@ -161,26 +171,47 @@
    );
 }
 
+=end foo
+
+=cut
+
 package main;
 
 use Data::Dumper;
 
-if( !caller ) {
-   my $parser = PodParser->new;
+my $parser = XML::Grammar::Fiction::Parser::MGC->new;
 
-   while( defined( my $line = <> ) ) {
-      my $ret = eval { $parser->from_string( $line ) };
-      print $@ and next if $@;
+sub _slurp
+{
+    my $filename = shift;
 
-      print Dumper( $ret );
-   }
+    open my $in, "<", $filename
+        or die "Cannot open '$filename' for slurping - $!";
+
+    local $/;
+    my $contents = <$in>;
+
+    close($in);
+
+    return $contents;
 }
 
+my $input_str = do { local $/; <ARGV> };
+my $ret = eval { $parser->from_string( $input_str ) };
+
+if ($@)
+{
+    die $@;
+}
+
+print Dumper( $ret );
+
 1;
 
 =head1 COPYRIGHT & LICENSE
 
 Copyright 2011 by Paul Evans. 
+Copyright 2011 by Shlomi Fish. 
 
 This program is distributed under the MIT (X11) License:
 L<http://www.opensource.org/licenses/mit-license.php>

changeset:   245:6efa26a6a307
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Mar 21 22:12:13 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
description:
Add the new Parser-MGC parser.


diff -r 5e522371adbb -r 6efa26a6a307 perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TEMP/new-Parser-MGC-XML-Fiction-parser.pl	Mon Mar 21 22:12:13 2011 +0000
@@ -0,0 +1,209 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+package XML::Grammar::Fiction::Parser::MGC;
+
+use XML::Grammar::Fiction::Err;
+use XML::Grammar::Fiction::Struct::Tag;
+use XML::Grammar::Fiction::Event;
+
+use Moose;
+
+extends(
+    'Parser::MGC',
+    'XML::Grammar::Fiction::FromProto::Parser::XmlIterator',
+);
+
+sub _get_id_regex
+{
+    return qr{[a-zA-Z_\-]+};
+}
+
+my $id_regex = $self->_get_id_regex();
+
+sub _parse_opening_tag_attrs
+{
+    my $self = shift;
+    my $l = shift;
+
+    my @attrs;
+
+    my $id_regex = $self->_get_id_regex();
+
+    $l =~ m{^};
+
+    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $1, 'value' => $2, };
+    }
+
+    return \@attrs;
+}
+
+sub _parse_opening_tag
+{
+    my ($self) = @_;
+
+    my (undef, $tag_name, $attrs) = $self->expect( 
+        qr/<($id_regex)\s*((?:\s+${id_regex}="[^"]+")*)>/
+    );
+    $self->commit;
+
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $id,
+        is_standalone => $is_standalone,
+        line => $self->line_num(),
+        attrs => $self->_parse_opening_tag_attrs($attrs),
+    );
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    if (my (undef, $id) = $self->expect(qr{</($id_regex)>}))
+    {
+        return XML::Grammar::Fiction::Struct::Tag->new(
+            name => $id,
+            line => $self->line_num(),
+        );
+    }
+    else
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
+            "Cannot match closing tag",
+        );
+    }
+}
+
+sub _merge_tag
+{
+    my $self = shift;
+    my $open_tag = shift;
+
+    my $new_elem = 
+        $self->_create_elem(
+            $open_tag, 
+            $self->_new_list($open_tag->detach_children()),
+        );
+
+    if (! $self->_tag_stack_is_empty())
+    {
+        $self->_add_to_top_tag($new_elem);
+        return;
+    }
+    else
+    {
+        return $new_elem;
+    }
+}
+
+sub _open_close_tag
+{
+    my ($self) = @_;
+
+    my @ret;
+
+    push @ret, $self->_parse_opening_tag();
+
+    push @ret, $self->sequence_of(
+        sub
+        {
+            return $self->any_of(
+                sub {
+                    my (undef, $text) = $self->expect(qr/([^<]+)/);
+
+                    return $self->_new_text([$text]);
+                },
+                sub {
+                    $self->_open_close_tag(),
+                },
+            );
+        },
+    );
+
+    push @ret, $self->_parse_closing_tag();
+
+    my $open = $ret[0];
+    my $close = $ret[-1];
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    return $self->_merge_tag($open);
+}
+
+sub parse
+{
+   my $self = shift;
+
+   return $self->sequence_of(
+
+   )
+   $self->sequence_of(
+      sub { $self->any_of(
+
+         sub { my ( undef, $tag, $delim ) = $self->expect( qr/([A-Z])(<+)/ );
+               $self->commit;
+               +{ $tag => $self->scope_of( undef, \&parse, ">" x length $delim ) }; },
+
+         sub { $self->substring_before( qr/[A-Z]</ ) },
+      ) },
+   );
+}
+
+package main;
+
+use Data::Dumper;
+
+if( !caller ) {
+   my $parser = PodParser->new;
+
+   while( defined( my $line = <> ) ) {
+      my $ret = eval { $parser->from_string( $line ) };
+      print $@ and next if $@;
+
+      print Dumper( $ret );
+   }
+}
+
+1;
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2011 by Paul Evans. 
+
+This program is distributed under the MIT (X11) License:
+L<http://www.opensource.org/licenses/mit-license.php>
+
+Permission is hereby granted, free of charge, to any person
+obtaining a copy of this software and associated documentation
+files (the "Software"), to deal in the Software without
+restriction, including without limitation the rights to use,
+copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the
+Software is furnished to do so, subject to the following
+conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+OTHER DEALINGS IN THE SOFTWARE.
+
+=cut

changeset:   244:5e522371adbb
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Mar 12 10:36:09 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-colon-in-description.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-in-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Fix a colon (":") inside a description ("[…]").


diff -r 8fa649b2f7ee -r 5e522371adbb perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Sun Feb 27 21:32:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Sat Mar 12 10:36:09 2011 +0000
@@ -18,6 +18,9 @@
         - they cancelled each other most of the time except for in this 
         case.
 
+        - Screenplay: fix a colon inside a description that broke the 
+        proto-text. (E.g: "[David turns towards Goliath and says:]").
+
 0.1.3       Fri Dec 17 19:38:45 IST 2010
         - Moved some unused source files to the rejects directory.
         - Convert to the new XML-Grammar-Fiction-Builder which uses
diff -r 8fa649b2f7ee -r 5e522371adbb perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sun Feb 27 21:32:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Mar 12 10:36:09 2011 +0000
@@ -112,6 +112,7 @@
 t/screenplay/data/proto-text/scenes-with-titles.txt
 t/screenplay/data/proto-text/two-nested-s.txt
 t/screenplay/data/proto-text/with-brs.txt
+t/screenplay/data/proto-text/with-colon-in-description.txt
 t/screenplay/data/proto-text/with-comments.txt
 t/screenplay/data/proto-text/with-description.txt
 t/screenplay/data/proto-text/with-dialogue.txt
@@ -126,6 +127,7 @@
 t/screenplay/data/xml/scenes-with-titles.xml
 t/screenplay/data/xml/two-nested-s.xml
 t/screenplay/data/xml/with-brs.xml
+t/screenplay/data/xml/with-colon-in-description.xml
 t/screenplay/data/xml/with-comments.xml
 t/screenplay/data/xml/with-description.xml
 t/screenplay/data/xml/with-dialogue.xml
diff -r 8fa649b2f7ee -r 5e522371adbb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sun Feb 27 21:32:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Mar 12 10:36:09 2011 +0000
@@ -185,7 +185,9 @@
 
     my $l = $self->curr_line_ref();
 
-    if ((pos($$l) == 0) && ($$l =~ m{\A[^\[<][^:]*:}))
+    if ((pos($$l) == 0) && ($$l =~ m{\A[^\[<][^:]*:})
+        && (! $self->_is_in_desc)
+    )
     {
         return $self->_parse_speech_unit();
     }
@@ -457,10 +459,16 @@
     return [qw(para saying)];
 }
 
+sub _is_in_desc {
+    my $self = shift;
+
+    return $self->_top_tag()->name() eq "desc";
+}
+
 after '_handle_open_tag' => sub {
     my $self = shift;
 
-    if ($self->_top_tag()->name() eq "desc")
+    if ($self->_is_in_desc)
     {
         $self->_start_para();
     }
diff -r 8fa649b2f7ee -r 5e522371adbb perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-colon-in-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-colon-in-description.txt	Sat Mar 12 10:36:09 2011 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other. David addresses Goliath:
+]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 8fa649b2f7ee -r 5e522371adbb perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-in-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-colon-in-description.xml	Sat Mar 12 10:36:09 2011 +0000
@@ -0,0 +1,59 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other. David addresses Goliath:
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 8fa649b2f7ee -r 5e522371adbb perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Feb 27 21:32:13 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sat Mar 12 10:36:09 2011 +0000
@@ -5,7 +5,7 @@
 
 use Test::More;
 
-use Test::XML tests => 28;
+use Test::XML tests => 30;
 
 use XML::LibXML;
 
@@ -42,9 +42,10 @@
         with-entities
         with-brs
         with-internal-description-at-start-of-line
+        with-colon-in-description
     ));
 
-# TEST:$num_texts=14
+# TEST:$num_texts=15
 
 my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",

changeset:   243:8fa649b2f7ee
branch:      convert-to-Parser-MGC
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Feb 27 21:32:13 2011 +0000
description:
Branch to a branch to a convert to Parser-MGC.

This will switch the current ad-hoc parsing logic with:

http://search.cpan.org/dist/Parser-MGC/

I am not sure it will work, so it will be in a branch for the time being.



changeset:   242:46e2aa6aab37
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Feb 27 21:27:01 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Removed some trailing space.


diff -r caee3f4366b4 -r 46e2aa6aab37 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Fri Feb 11 22:16:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Sun Feb 27 21:27:01 2011 +0000
@@ -51,8 +51,8 @@
     });
 
 my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/screenplay-xml.rng" 
-    );    
+        location => "./extradata/screenplay-xml.rng"
+    );
 
 my $xml_parser = XML::LibXML->new();
 $xml_parser->validation(0);
@@ -76,7 +76,7 @@
     my $dom = $xml_parser->parse_string($got_xml);
 
     my $code;
-    eval 
+    eval
     {
     $code = $rngschema->validate($dom);
     };

changeset:   241:caee3f4366b4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Feb 11 22:16:49 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
description:
Bug fix: inner-descriptions on the beginning of the line.

Fixed it along with a test.


diff -r fcac1aa9e67e -r caee3f4366b4 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Feb 11 21:04:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Feb 11 22:16:49 2011 +0000
@@ -1,5 +1,23 @@
 Revision history for XML-Grammar-Fiction.
 
+    * ::Screenplay - Fix the innerdesc on the start of the line in the middle 
+    of the paragraph. Like:
+
+-----------------
+Hi I went to the store and
+[walks around the room, nervous] bought a chocolate bar.
+-----------------
+
+        - this was caused by two bugs here
+
+-----------------
+-$self->_prev_line_is_empty($self->curr_line_ref() =~ m{\A\s*\z});
++$self->_prev_line_is_empty(scalar(${$self->curr_line_ref()} =~ m{\A\s*\z}));
+-----------------
+
+        - they cancelled each other most of the time except for in this 
+        case.
+
 0.1.3       Fri Dec 17 19:38:45 IST 2010
         - Moved some unused source files to the rejects directory.
         - Convert to the new XML-Grammar-Fiction-Builder which uses
diff -r fcac1aa9e67e -r caee3f4366b4 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Feb 11 21:04:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Feb 11 22:16:49 2011 +0000
@@ -116,6 +116,7 @@
 t/screenplay/data/proto-text/with-description.txt
 t/screenplay/data/proto-text/with-dialogue.txt
 t/screenplay/data/proto-text/with-entities.txt
+t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
 t/screenplay/data/proto-text/with-internal-description.txt
 t/screenplay/data/proto-text/with-multi-line-comments.txt
 t/screenplay/data/proto-text/with-multi-para-desc.txt
@@ -129,6 +130,7 @@
 t/screenplay/data/xml/with-description.xml
 t/screenplay/data/xml/with-dialogue.xml
 t/screenplay/data/xml/with-entities.xml
+t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
 t/screenplay/data/xml/with-internal-description.xml
 t/screenplay/data/xml/with-multi-line-comments.xml
 t/screenplay/data/xml/with-multi-para-desc.xml
diff -r fcac1aa9e67e -r caee3f4366b4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Feb 11 21:04:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Feb 11 22:16:49 2011 +0000
@@ -19,7 +19,7 @@
 before 'next_line_ref' => sub {
     my $self = shift;
 
-    $self->_prev_line_is_empty($self->curr_line_ref() =~ m{\A\s*\z});
+    $self->_prev_line_is_empty(scalar(${$self->curr_line_ref()} =~ m{\A\s*\z}));
 
     return;
 };
diff -r fcac1aa9e67e -r caee3f4366b4 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description-at-start-of-line.txt	Fri Feb 11 22:16:49 2011 +0000
@@ -0,0 +1,34 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
+of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+David: as is written in the wikipedia 
+[See <a href="http://wiki.tld/">the Wiki site</a> for more information], you 
+are now dead, having been shot with my sling.
+
+</s>
+
+</s>
diff -r fcac1aa9e67e -r caee3f4366b4 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description-at-start-of-line.xml	Fri Feb 11 22:16:49 2011 +0000
@@ -0,0 +1,69 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
+                <inlinedesc>sarcastically</inlinedesc> power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+    <saying character="David">
+        <para>
+            as is written in the wikipedia <inlinedesc>See <ulink url="http://wiki.tld/">the Wiki site</ulink>
+                for more information</inlinedesc>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r fcac1aa9e67e -r caee3f4366b4 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Fri Feb 11 21:04:49 2011 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Fri Feb 11 22:16:49 2011 +0000
@@ -5,13 +5,13 @@
 
 use Test::More;
 
-use Test::XML tests => 26;
+use Test::XML tests => 28;
 
 use XML::LibXML;
 
-use XML::Grammar::Screenplay::FromProto;
+require XML::Grammar::Screenplay::FromProto;
 
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+require XML::Grammar::Screenplay::FromProto::Parser::QnD;
 
 sub load_xml
 {
@@ -41,9 +41,10 @@
         scenes-with-titles
         with-entities
         with-brs
+        with-internal-description-at-start-of-line
     ));
 
-# TEST:$num_texts=13
+# TEST:$num_texts=14
 
 my $grammar = XML::Grammar::Screenplay::FromProto->new({
         parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",

changeset:   240:fcac1aa9e67e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Feb 11 21:04:49 2011 +0000
files:       perl/modules/XML-Grammar-Fiction/TODO
description:
Add items to the TODO.


diff -r a31c7ad68346 -r fcac1aa9e67e perl/modules/XML-Grammar-Fiction/TODO
--- a/perl/modules/XML-Grammar-Fiction/TODO	Fri Dec 17 17:45:42 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Fri Feb 11 21:04:49 2011 +0000
@@ -7,3 +7,33 @@
 * Regularise the XML grammars of XML-Grammar-Fiction and XML-Grammar-Screenplay.
 
 * Merge more tests.
+
+* Make the ::Screenplay exceptions contain the opening line closing line
+and generally more context (currently they are guess-work).
+
+* ::Screenplay - Fix the innerdesc on the start of the line in the middle of 
+the paragraph. Like:
+
+-----------------
+Hi I went to the store and
+[walks around the room, nervous] bought a chocolate bar.
+-----------------
+
+* Can we include some stray sayings at the beginning of the scene without an
+inner wrapping scene:
+
+-----------------
+David: prepare for judgement day.
+
+Goliath: First, let's go the next scene:
+
+<s id="....>
+
+Goliath: OK, now we can continue, you were saying...
+
+David: Judgement day.
+
+Goliath: yes, what about it?
+
+</s>
+-----------------

changeset:   239:a31c7ad68346
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Dec 17 17:45:42 2010 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.3


diff -r ffce6e9082a8 -r a31c7ad68346 .hgtags
--- a/.hgtags	Fri Dec 17 17:39:33 2010 +0000
+++ b/.hgtags	Fri Dec 17 17:45:42 2010 +0000
@@ -5,3 +5,4 @@
 d8e22369198b41402603669685cb4c3da69a97e9 releases/0.1.0
 f687fd08c665e32f9021247ccbe6bfd548c83fc2 releases/0.1.1
 e9d9f1d6157534026a9241346183e84133053be9 releases/0.1.2
+ffce6e9082a8e6d179942b0fe343e3b8b4c97f01 releases/0.1.3

changeset:   238:ffce6e9082a8
tag:         releases/0.1.3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Dec 17 17:39:33 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bumped to version 0.1.3.


diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Dec 17 17:39:33 2010 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.3       Fri Dec 17 19:38:45 IST 2010
         - Moved some unused source files to the rejects directory.
         - Convert to the new XML-Grammar-Fiction-Builder which uses
         File::ShareDir, which will hopefully resolve testing and installation
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 METHODS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 use Exception::Class
     (
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 AUTHOR
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -69,11 +69,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head1 SYNOPSIS
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 
diff -r d7723e9f59d6 -r ffce6e9082a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Dec 17 17:38:03 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Dec 17 17:39:33 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.2
+Version 0.1.3
 
 =cut
 
-our $VERSION = '0.1.2';
+our $VERSION = '0.1.3';
 
 =head2 new()
 

changeset:   237:d7723e9f59d6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Dec 17 17:38:03 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Switched to File-ShareDir.


diff -r daa676dd626f -r d7723e9f59d6 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Tue May 18 22:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Fri Dec 17 17:38:03 2010 +0000
@@ -33,6 +33,7 @@
         'Exporter' => 0,
         'Data::Dumper' => 0,
         'Exception::Class' => 0,
+        'File::ShareDir' => 0,
         'Getopt::Long' => 0,
         'HTML::Entities' => 0,
         'List::Util' => 0,
diff -r daa676dd626f -r d7723e9f59d6 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue May 18 22:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Dec 17 17:38:03 2010 +0000
@@ -1,5 +1,10 @@
 Revision history for XML-Grammar-Fiction.
 
+        - Moved some unused source files to the rejects directory.
+        - Convert to the new XML-Grammar-Fiction-Builder which uses
+        File::ShareDir, which will hopefully resolve testing and installation
+        problems.
+
 0.1.2       Thu Apr 29 22:47:04 IDT 2010
         - In the Build.PL - merged 'test_requires' into 'build_requires'. 
         Turns out that 'test_requires' is a Module::Installism.
diff -r daa676dd626f -r d7723e9f59d6 perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm	Tue May 18 22:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm	Fri Dec 17 17:38:03 2010 +0000
@@ -7,7 +7,7 @@
 
 use File::Find;
 
-our $VERSION = '0.0101';
+our $VERSION = '0.0200';
 
 sub new
 {
@@ -15,44 +15,12 @@
     my %args = @_;
     my @extradata_files;
     
-    my $module_name = $args{'module_name'};
-    $module_name =~ s{::}{-}g;
-
-    my $filter_files_cb = sub {
-        my $filename = $File::Find::name;
-        if ((-f $filename) &&
-            ($filename =~ /\.(?:mod|xslt|dtd|ent|cat|jpg|rng|xcf\.bz2)$/)
-        )
-        {
-            push @extradata_files, $filename;
-        }
-    };
- 
-    find({ wanted => $filter_files_cb, no_chdir => 1}, "extradata");
-
     my $builder = $package->SUPER::new(
-        extradata_files =>
-        {
-            (map { $_ => $_ } @extradata_files)
-        },
+        share_dir => 'extradata',
+        auto_configure_requires => 1,
         @_
     );
 
-    $builder->add_build_element('extradata');
-
-    $builder->install_path()->{'extradata'} = 
-        File::Spec->catdir(
-                $builder->install_destination("lib"),
-                qw(data modules),
-                $module_name,
-                qw(data)
-        );
-
-    $builder->config_data(
-        'extradata_install_path' =>
-        [$builder->install_path()->{'extradata'}]
-    );
-
     return $builder;
 }
 
diff -r daa676dd626f -r d7723e9f59d6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue May 18 22:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Dec 17 17:38:03 2010 +0000
@@ -8,7 +8,7 @@
 
 use XML::LibXSLT;
 
-use XML::Grammar::Fiction::ConfigData;
+use File::ShareDir ':ALL';
 
 use XML::LibXML;
 use XML::LibXSLT;
@@ -27,6 +27,7 @@
         return $self->_get_default_data_dir();
     },
 );
+
 has '_rng' =>
 (
     isa => 'XML::LibXML::RelaxNG', 
@@ -89,7 +90,7 @@
 {
     my $self = shift;
 
-    return XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+    return dist_dir( 'XML-Grammar-Fiction' );
 }
 
 sub _get_rng_schema
diff -r daa676dd626f -r d7723e9f59d6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue May 18 22:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Fri Dec 17 17:38:03 2010 +0000
@@ -8,7 +8,7 @@
 
 use XML::LibXSLT;
 
-use XML::Grammar::Fiction::ConfigData;
+use File::ShareDir ':ALL';
 
 use XML::LibXML;
 use XML::LibXSLT;
@@ -51,8 +51,7 @@
 {
     my ($self, $args) = @_;
 
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+    my $data_dir = $args->{'data_dir'} || dist_dir ( 'XML-Grammar-Fiction');
 
     $self->_data_dir($data_dir);
 
diff -r daa676dd626f -r d7723e9f59d6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue May 18 22:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Fri Dec 17 17:38:03 2010 +0000
@@ -8,7 +8,7 @@
 
 use XML::LibXSLT;
 
-use XML::Grammar::Fiction::ConfigData;
+use File::ShareDir ':ALL';
 
 use XML::LibXML;
 use XML::LibXSLT;
@@ -52,7 +52,7 @@
     my ($self, $args) = @_;
 
     my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+        dist_dir( 'XML-Grammar-Fiction');
 
     $self->_data_dir($data_dir);
 

changeset:   236:daa676dd626f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 18 22:53:10 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
description:
Moved the Parse-RecDescent-based parser to the rejects.


diff -r 1346de6de0af -r daa676dd626f perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 18 22:41:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 18 22:53:10 2010 +0000
@@ -37,7 +37,6 @@
 lib/XML/Grammar/Screenplay/App/ToHTML.pm
 lib/XML/Grammar/Screenplay/Base.pm
 lib/XML/Grammar/Screenplay/FromProto/Parser.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
 lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Screenplay/FromProto.pm
 lib/XML/Grammar/Screenplay.pm
@@ -49,6 +48,7 @@
 README
 rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
 rejects/lib/XML/Grammar/Fiction/RendererBase.pm
+rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
 rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
diff -r 1346de6de0af -r daa676dd626f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Tue May 18 22:41:10 2010 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,262 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser::PRD;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::FromProto::Parser';
-
-use Parse::RecDescent;
-
-use Moose;
-
-use XML::Grammar::Screenplay::FromProto::Nodes;
-
-has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
-
-sub _init
-{
-    my $self = shift;
-
-    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
-
-    return 0;
-}
-
-sub _calc_grammar
-{
-    my $self = shift;
-
-    return <<'EOF';
-
-start : tag  {$thisparser->{ret} = $item[1]; 1 }
-
-text_unit:   tag_or_comment { $item[1] }
-           | speech_or_desc { $item[1] }
-
-tag_or_comment:   tag
-                | comment
-
-comment:    /<!--(.*?)-->/ms para_sep {
-    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
-        text => $1
-    )
-    }
-
-para_sep:      /(\n\s*)+/
-
-speech_or_desc:   speech_unit
-                | desc_unit
-
-plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
-
-inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
-    {
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $item[2],
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => []
-            ),
-            attrs => $item[3]
-            );
-    }
-
-
-inner_tag:         opening_tag  inner_text closing_tag {
-        my ($open, $inside, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            attrs => $open->{attrs},
-            )
-    }
-
-inner_desc:      /\[/ inner_text /\]/ {
-        my $inside = $item[2];
-        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            )
-    }
-
-inner_tag_or_desc:    inner_tag
-                   |  inner_desc
-
-inner_entity:      /\&\w+;/ {
-        my $inside = $item[1];
-        HTML::Entities::decode_entities($inside)
-    }
-
-inner_text_unit:    plain_inner_text  { [ $item[1] ] }
-                 |  inner_tag_or_desc { [ $item[1] ] }
-                 |  inner_entity      { [ $item[1] ] }
-                 |  inner_standalone_tag { [ $item[1] ] }
-
-inner_text:       inner_text_unit(s) {
-        [ map { @{$_} } @{$item[1]} ]
-        }
-
-addressing: /^([^:\n\+]+): /ms { $1 }
-
-saying_first_para: addressing inner_text para_sep {
-            my ($sayer, $what) = ($item[1], $item[2]);
-            +{
-             character => $sayer,
-             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                children =>
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => $what,
-                    )
-                ),
-            }
-            }
-
-saying_other_para: /^\++: /ms inner_text para_sep {
-        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => $item[2],
-                    ),
-        )
-    }
-
-speech_unit:  saying_first_para saying_other_para(s?)
-    {
-    my $first = $item[1];
-    my $others = $item[2] || [];
-        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => [ $first->{para}, @{$others} ],
-                ),
-        )
-    }
-
-desc_para:  inner_text para_sep { $item[1] }
-
-desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
-
-desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
-        my $paragraphs = $item[2];
-
-        XML::Grammar::Screenplay::FromProto::Node::Description->new(
-            children => 
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents =>
-                [
-                map { 
-                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                    children =>
-                        XML::Grammar::Screenplay::FromProto::Node::List->new(
-                            contents => $_,
-                            ),
-                        )
-                } @$paragraphs
-                ],
-            ),
-        )
-    }
-
-text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => $item[1]
-        ) }
-      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => []
-        ) }
-
-tag: space opening_tag space text space closing_tag space
-     {
-        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => $inside,
-            attrs => $open->{attrs},
-            );
-     }
-
-opening_tag: '<' id attribute(s?) '>'
-    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
-
-closing_tag: '</' id '>'
-    { $item[0] = { 'name' => $item[2], }; }
-
-attribute: space id '="' attributevalue '"' space
-    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
-
-attributevalue: /[^"]+/
-    { $item[0] = HTML::Entities::decode_entities($item[1]); }
-
-space: /\s*/
-
-id: /[a-zA-Z_\-]+/
-
-EOF
-}
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    my $rv = $self->_p_rd()->start($text);
-
-    if (!defined($rv))
-    {
-        return;
-    }
-    else
-    {
-        return $self->_p_rd->{ret};
-    }
-}
-
-1;
-
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
-
-B<For internal use only>.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns it.
-
-=head2 $self->meta()
-
-Something that L<Moose> adds.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
diff -r 1346de6de0af -r daa676dd626f perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Tue May 18 22:53:10 2010 +0000
@@ -0,0 +1,262 @@
+package XML::Grammar::Screenplay::FromProto::Parser::PRD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::FromProto::Parser';
+
+use Parse::RecDescent;
+
+use Moose;
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
+
+sub _init
+{
+    my $self = shift;
+
+    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
+
+    return 0;
+}
+
+sub _calc_grammar
+{
+    my $self = shift;
+
+    return <<'EOF';
+
+start : tag  {$thisparser->{ret} = $item[1]; 1 }
+
+text_unit:   tag_or_comment { $item[1] }
+           | speech_or_desc { $item[1] }
+
+tag_or_comment:   tag
+                | comment
+
+comment:    /<!--(.*?)-->/ms para_sep {
+    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
+        text => $1
+    )
+    }
+
+para_sep:      /(\n\s*)+/
+
+speech_or_desc:   speech_unit
+                | desc_unit
+
+plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
+
+inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
+    {
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $item[2],
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => []
+            ),
+            attrs => $item[3]
+            );
+    }
+
+
+inner_tag:         opening_tag  inner_text closing_tag {
+        my ($open, $inside, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            attrs => $open->{attrs},
+            )
+    }
+
+inner_desc:      /\[/ inner_text /\]/ {
+        my $inside = $item[2];
+        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            )
+    }
+
+inner_tag_or_desc:    inner_tag
+                   |  inner_desc
+
+inner_entity:      /\&\w+;/ {
+        my $inside = $item[1];
+        HTML::Entities::decode_entities($inside)
+    }
+
+inner_text_unit:    plain_inner_text  { [ $item[1] ] }
+                 |  inner_tag_or_desc { [ $item[1] ] }
+                 |  inner_entity      { [ $item[1] ] }
+                 |  inner_standalone_tag { [ $item[1] ] }
+
+inner_text:       inner_text_unit(s) {
+        [ map { @{$_} } @{$item[1]} ]
+        }
+
+addressing: /^([^:\n\+]+): /ms { $1 }
+
+saying_first_para: addressing inner_text para_sep {
+            my ($sayer, $what) = ($item[1], $item[2]);
+            +{
+             character => $sayer,
+             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $what,
+                    )
+                ),
+            }
+            }
+
+saying_other_para: /^\++: /ms inner_text para_sep {
+        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $item[2],
+                    ),
+        )
+    }
+
+speech_unit:  saying_first_para saying_other_para(s?)
+    {
+    my $first = $item[1];
+    my $others = $item[2] || [];
+        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => [ $first->{para}, @{$others} ],
+                ),
+        )
+    }
+
+desc_para:  inner_text para_sep { $item[1] }
+
+desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
+
+desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
+        my $paragraphs = $item[2];
+
+        XML::Grammar::Screenplay::FromProto::Node::Description->new(
+            children => 
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents =>
+                [
+                map { 
+                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                    children =>
+                        XML::Grammar::Screenplay::FromProto::Node::List->new(
+                            contents => $_,
+                            ),
+                        )
+                } @$paragraphs
+                ],
+            ),
+        )
+    }
+
+text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => $item[1]
+        ) }
+      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => []
+        ) }
+
+tag: space opening_tag space text space closing_tag space
+     {
+        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => $inside,
+            attrs => $open->{attrs},
+            );
+     }
+
+opening_tag: '<' id attribute(s?) '>'
+    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
+
+closing_tag: '</' id '>'
+    { $item[0] = { 'name' => $item[2], }; }
+
+attribute: space id '="' attributevalue '"' space
+    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
+
+attributevalue: /[^"]+/
+    { $item[0] = HTML::Entities::decode_entities($item[1]); }
+
+space: /\s*/
+
+id: /[a-zA-Z_\-]+/
+
+EOF
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    my $rv = $self->_p_rd()->start($text);
+
+    if (!defined($rv))
+    {
+        return;
+    }
+    else
+    {
+        return $self->_p_rd->{ret};
+    }
+}
+
+1;
+
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns it.
+
+=head2 $self->meta()
+
+Something that L<Moose> adds.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut

changeset:   235:1346de6de0af
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue May 18 22:41:10 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
description:
Moved away XML/Grammar/Screenplay/Struct/Tag.pm to the rejects.

It was an unused module.


diff -r 89b343662203 -r 1346de6de0af perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Apr 29 19:51:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue May 18 22:41:10 2010 +0000
@@ -41,7 +41,6 @@
 lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Screenplay/FromProto.pm
 lib/XML/Grammar/Screenplay.pm
-lib/XML/Grammar/Screenplay/Struct/Tag.pm
 lib/XML/Grammar/Screenplay/ToDocBook.pm
 lib/XML/Grammar/Screenplay/ToHTML.pm
 Makefile.PL
@@ -50,6 +49,7 @@
 README
 rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
 rejects/lib/XML/Grammar/Fiction/RendererBase.pm
+rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
 rejects/Screenplay_Parser_QnD.pm
diff -r 89b343662203 -r 1346de6de0af perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Thu Apr 29 19:51:02 2010 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,122 +0,0 @@
-package XML::Grammar::Screenplay::Struct::Tag;
-
-use strict;
-use warnings;
-
-use Moose;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::Struct::Tag - information about an XML/SGML opening or 
-closing tag.
-
-B<For internal use only>.
-
-=head1 VERSION
-
-Version 0.1.2
-
-=cut
-
-our $VERSION = '0.1.2';
-
-has 'name' => (is => "rw", isa => "Str");
-has 'line' => (is => "rw", isa => "Int");
-has 'is_standalone' => (is => "rw", isa => "Bool");
-has 'attrs' => (is => "rw", isa => "ArrayRef");
-has 'children' => (
-    is => "rw", 
-    isa => "Maybe[ArrayRef]",
-);
-
-sub append_children
-{
-    my ($self, $children) = @_;
-
-    push @{$self->children()}, @$children;
-
-    return;
-}
-
-sub append_child
-{
-    my ($self, $child) = @_;
-
-    return $self->append_children( [ $child ] );
-}
-
-sub detach_children
-{
-    my $self = shift;
-
-    my $children = $self->children();
-
-    $self->children(undef);
-
-    return $children;
-}
-
-package XML::Grammar::Screenplay::Struct::Tag::Para;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::Struct::Tag");
-
-=head1 METHODS
-
-=head2 $self->name()
-
-The tag's name.
-
-=head2 $self->line()
-
-The tag's line number.
-
-=head2 $self->is_standalone()
-
-Determines whether it's a standalone tag or not. (if it's an opening tag).
-
-=head2 $self->attrs()
-
-The attributes of the opening tag in an array.
-
-=head2 $self->children()
-
-A placeholder for the element's children.
-
-=head2 $self->append_children(\@children)
-
-Append more elements to the children.
-
-=head2 $self->append_child($child)
-
-Appends a single child. Uses C<append_children()> .
-
-=head2 my $children = $self->detach_children()
-
-Detaches the children and returns them as an array reference.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 89b343662203 -r 1346de6de0af perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Tue May 18 22:41:10 2010 +0000
@@ -0,0 +1,122 @@
+package XML::Grammar::Screenplay::Struct::Tag;
+
+use strict;
+use warnings;
+
+use Moose;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::Struct::Tag - information about an XML/SGML opening or 
+closing tag.
+
+B<For internal use only>.
+
+=head1 VERSION
+
+Version 0.1.2
+
+=cut
+
+our $VERSION = '0.1.2';
+
+has 'name' => (is => "rw", isa => "Str");
+has 'line' => (is => "rw", isa => "Int");
+has 'is_standalone' => (is => "rw", isa => "Bool");
+has 'attrs' => (is => "rw", isa => "ArrayRef");
+has 'children' => (
+    is => "rw", 
+    isa => "Maybe[ArrayRef]",
+);
+
+sub append_children
+{
+    my ($self, $children) = @_;
+
+    push @{$self->children()}, @$children;
+
+    return;
+}
+
+sub append_child
+{
+    my ($self, $child) = @_;
+
+    return $self->append_children( [ $child ] );
+}
+
+sub detach_children
+{
+    my $self = shift;
+
+    my $children = $self->children();
+
+    $self->children(undef);
+
+    return $children;
+}
+
+package XML::Grammar::Screenplay::Struct::Tag::Para;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::Struct::Tag");
+
+=head1 METHODS
+
+=head2 $self->name()
+
+The tag's name.
+
+=head2 $self->line()
+
+The tag's line number.
+
+=head2 $self->is_standalone()
+
+Determines whether it's a standalone tag or not. (if it's an opening tag).
+
+=head2 $self->attrs()
+
+The attributes of the opening tag in an array.
+
+=head2 $self->children()
+
+A placeholder for the element's children.
+
+=head2 $self->append_children(\@children)
+
+Append more elements to the children.
+
+=head2 $self->append_child($child)
+
+Appends a single child. Uses C<append_children()> .
+
+=head2 my $children = $self->detach_children()
+
+Detaches the children and returns them as an array reference.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+

changeset:   234:89b343662203
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 29 19:51:02 2010 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.2


diff -r e9d9f1d61575 -r 89b343662203 .hgtags
--- a/.hgtags	Thu Apr 29 19:49:42 2010 +0000
+++ b/.hgtags	Thu Apr 29 19:51:02 2010 +0000
@@ -4,3 +4,4 @@
 49dc229d825121cec0850330fcc079c16b62441e releases/0.0.4
 d8e22369198b41402603669685cb4c3da69a97e9 releases/0.1.0
 f687fd08c665e32f9021247ccbe6bfd548c83fc2 releases/0.1.1
+e9d9f1d6157534026a9241346183e84133053be9 releases/0.1.2

changeset:   233:e9d9f1d61575
tag:         releases/0.1.2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 29 19:49:42 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bumped the version number to 0.1.2.


diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Apr 29 19:49:42 2010 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.2       Thu Apr 29 22:47:04 IDT 2010
         - In the Build.PL - merged 'test_requires' into 'build_requires'. 
         Turns out that 'test_requires' is a Module::Installism.
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 METHODS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 use Exception::Class
     (
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 AUTHOR
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -68,11 +68,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head1 SYNOPSIS
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 
diff -r 95286e7d8c16 -r e9d9f1d61575 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Thu Apr 29 19:41:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Thu Apr 29 19:49:42 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.1
+Version 0.1.2
 
 =cut
 
-our $VERSION = '0.1.1';
+our $VERSION = '0.1.2';
 
 =head2 new()
 

changeset:   232:95286e7d8c16
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 29 19:41:58 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes
description:
Merge test_requires into build_requires.


diff -r 71bcc54da148 -r 95286e7d8c16 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Tue Apr 27 07:16:24 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Thu Apr 29 19:41:58 2010 +0000
@@ -22,16 +22,10 @@
         'File::Find' => 0,
         'File::Spec' => 0,
         'strict' => 0,
-        'warnings' => 0,
-        'XML::LibXML' => 0,
-    },
-    test_requires => {
         'Test::More' => 0,
-        'strict' => 0,
         'Test::XML' => 0,
         'warnings' => 0,
         'XML::LibXML' => 0,
-        'File::Spec' => 0,
     },
     requires => 
     {
diff -r 71bcc54da148 -r 95286e7d8c16 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 27 07:16:24 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Apr 29 19:41:58 2010 +0000
@@ -1,5 +1,8 @@
 Revision history for XML-Grammar-Fiction.
 
+        - In the Build.PL - merged 'test_requires' into 'build_requires'. 
+        Turns out that 'test_requires' is a Module::Installism.
+
 0.1.1       Tue Apr 27 10:11:00 IDT 2010
         - Made sure XML-Grammar-Screenplay used
         XML::Grammar::Fiction::ConfigData instead of 

changeset:   231:71bcc54da148
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 27 07:16:24 2010 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.1


diff -r f687fd08c665 -r 71bcc54da148 .hgtags
--- a/.hgtags	Tue Apr 27 07:11:46 2010 +0000
+++ b/.hgtags	Tue Apr 27 07:16:24 2010 +0000
@@ -3,3 +3,4 @@
 6d3466b50b95657e6843536f6a6fb6aa19956e00 releases/0.0.3
 49dc229d825121cec0850330fcc079c16b62441e releases/0.0.4
 d8e22369198b41402603669685cb4c3da69a97e9 releases/0.1.0
+f687fd08c665e32f9021247ccbe6bfd548c83fc2 releases/0.1.1

changeset:   230:f687fd08c665
tag:         releases/0.1.1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 27 07:11:46 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Bump the version number to 0.1.1.


diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 27 07:11:46 2010 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.1       Tue Apr 27 10:11:00 IDT 2010
         - Made sure XML-Grammar-Screenplay used
         XML::Grammar::Fiction::ConfigData instead of 
         XML::Grammar::Screenplay::ConfigData . This broke the installation
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 METHODS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 use Exception::Class
     (
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 AUTHOR
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -68,11 +68,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head1 SYNOPSIS
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 
diff -r 1136746c9b3f -r f687fd08c665 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Apr 27 07:09:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Apr 27 07:11:46 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.1.0
+Version 0.1.1
 
 =cut
 
-our $VERSION = '0.1.0';
+our $VERSION = '0.1.1';
 
 =head2 new()
 

changeset:   229:1136746c9b3f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 27 07:09:53 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t
description:
Fix ::ConfigData to the right location.


diff -r 9782c49e6e5a -r 1136746c9b3f perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 26 16:54:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Apr 27 07:09:53 2010 +0000
@@ -1,5 +1,13 @@
 Revision history for XML-Grammar-Fiction.
 
+        - Made sure XML-Grammar-Screenplay used
+        XML::Grammar::Fiction::ConfigData instead of 
+        XML::Grammar::Screenplay::ConfigData . This broke the installation
+        and tests on the following test reports:
+            - http://www.cpantesters.org/cpan/report/7167671
+            - http://www.cpantesters.org/cpan/report/7167759
+            - http://www.cpantesters.org/cpan/report/7167134
+        
 0.1.0       Mon Apr 26 19:25:55 IDT 2010
         - Merged in the XML-Grammar-Screenplay into this module.
         - Converted XML-Grammar-Screenplay to a non-procedurally-recursive
diff -r 9782c49e6e5a -r 1136746c9b3f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 26 16:54:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Apr 27 07:09:53 2010 +0000
@@ -8,7 +8,7 @@
 
 use XML::LibXSLT;
 
-use XML::Grammar::Screenplay::ConfigData;
+use XML::Grammar::Fiction::ConfigData;
 
 use XML::LibXML;
 use XML::LibXSLT;
@@ -52,7 +52,7 @@
     my ($self, $args) = @_;
 
     my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
 
     $self->_data_dir($data_dir);
 
diff -r 9782c49e6e5a -r 1136746c9b3f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 26 16:54:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Apr 27 07:09:53 2010 +0000
@@ -8,7 +8,7 @@
 
 use XML::LibXSLT;
 
-use XML::Grammar::Screenplay::ConfigData;
+use XML::Grammar::Fiction::ConfigData;
 
 use XML::LibXML;
 use XML::LibXSLT;
@@ -52,7 +52,7 @@
     my ($self, $args) = @_;
 
     my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
 
     $self->_data_dir($data_dir);
 
diff -r 9782c49e6e5a -r 1136746c9b3f perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t	Mon Apr 26 16:54:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t	Tue Apr 27 07:09:53 2010 +0000
@@ -15,7 +15,7 @@
         File::Spec->rel2abs(
             File::Spec->catdir(
                 File::Spec->curdir(),
-                "t", "screenplay", "lib", "run-test-1",
+                "t", "lib", "run-test-1",
             )
         ), @p5lib);
 

changeset:   228:9782c49e6e5a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 16:54:14 2010 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.1.0


diff -r d8e22369198b -r 9782c49e6e5a .hgtags
--- a/.hgtags	Mon Apr 26 16:52:55 2010 +0000
+++ b/.hgtags	Mon Apr 26 16:54:14 2010 +0000
@@ -2,3 +2,4 @@
 3a19663be777fe65d8b41aa7219e5c36b8848771 releases/0.0.2
 6d3466b50b95657e6843536f6a6fb6aa19956e00 releases/0.0.3
 49dc229d825121cec0850330fcc079c16b62441e releases/0.0.4
+d8e22369198b41402603669685cb4c3da69a97e9 releases/0.1.0

changeset:   227:d8e22369198b
tag:         releases/0.1.0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 16:52:55 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Organised the _requires better.


diff -r 566584f066ff -r d8e22369198b perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Mon Apr 26 16:26:26 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Mon Apr 26 16:52:55 2010 +0000
@@ -11,19 +11,32 @@
     license             => 'mit',
     dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
     dist_version_from   => 'lib/XML/Grammar/Fiction.pm',
+    configure_requires => {
+        'strict' => 0,
+        'warnings' => 0,
+        'File::Spec' => 0,
+        'Module::Build' => 0,
+    },
     build_requires => {
         'Config' => 0,
         'File::Find' => 0,
         'File::Spec' => 0,
         'strict' => 0,
+        'warnings' => 0,
+        'XML::LibXML' => 0,
+    },
+    test_requires => {
         'Test::More' => 0,
+        'strict' => 0,
         'Test::XML' => 0,
         'warnings' => 0,
         'XML::LibXML' => 0,
+        'File::Spec' => 0,
     },
     requires => 
     {
         'Carp' => 0,
+        'Exporter' => 0,
         'Data::Dumper' => 0,
         'Exception::Class' => 0,
         'Getopt::Long' => 0,

changeset:   226:566584f066ff
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 16:26:26 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Add the date.


diff -r 1ab0858f589e -r 566584f066ff perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 26 16:10:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 26 16:26:26 2010 +0000
@@ -1,6 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
-0.1.0 
+0.1.0       Mon Apr 26 19:25:55 IDT 2010
         - Merged in the XML-Grammar-Screenplay into this module.
         - Converted XML-Grammar-Screenplay to a non-procedurally-recursive
         parser.

changeset:   225:1ab0858f589e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 16:10:02 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/README
description:
Add the README.


diff -r f82461915d89 -r 1ab0858f589e perl/modules/XML-Grammar-Fiction/README
--- a/perl/modules/XML-Grammar-Fiction/README	Mon Apr 26 16:06:43 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/README	Mon Apr 26 16:10:02 2010 +0000
@@ -1,10 +1,12 @@
-XML-Grammar-Screenplay
+XML-Grammar-Fiction / XML-Grammar-Screenplay
 
-This is a module implementing an XML grammar for screenplays. It contains:
+This is a module implementing two XML grammars and two corresponding
+well-formed text-based languages - one for screenplays and one for free-form
+fiction. It contains:
 
-1. A converter from a well-formed plain text format to its custom XML format.
+1. Converters from a well-formed plain text format to its custom XML format.
 
-2. A converter from its custom XML format to DocBook/XML.
+2. Converters from its custom XML format to DocBook/XML.
 
 INSTALLATION
 
@@ -21,20 +23,24 @@
 After installing, you can find documentation for this module with the perldoc command.
 
     perldoc XML::Grammar::Screenplay
+    perldoc XML::Grammar::Fiction
 
 You can also look for information at:
 
+    The XML-Grammar-Fiction Homepage:
+        http://www.shlomifish.org/open-source/projects/XML-Grammar/Fiction/
+
     Search CPAN
-        http://search.cpan.org/dist/XML-Grammar-Screenplay
+        http://search.cpan.org/dist/XML-Grammar-Fiction
 
     CPAN Request Tracker:
-        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay
+        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction
 
     AnnoCPAN, annotated CPAN documentation:
-        http://annocpan.org/dist/XML-Grammar-Screenplay
+        http://annocpan.org/dist/XML-Grammar-Fiction
 
     CPAN Ratings:
-        http://cpanratings.perl.org/d/XML-Grammar-Screenplay
+        http://cpanratings.perl.org/d/XML-Grammar-Fiction
 
 COPYRIGHT AND LICENCE
 

changeset:   224:f82461915d89
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 16:06:43 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Add XML-Grammar-Screenplay to the POD.


diff -r 6be330066969 -r f82461915d89 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 26 15:58:01 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 26 16:06:43 2010 +0000
@@ -41,6 +41,12 @@
 L<XML::Grammar::Fiction::App::ToHTML>, which are modules implementing
 command line applications for their processing.
 
+In order to be able to share the common code and functionality more easily, 
+then L<XML::Grammar::Screenplay>, which provides similar XML grammar and 
+text-based markup language for writing screenplays, is now included in this 
+CPAN distribution, and you can refer to its documentation as well:
+L<XML::Grammar::Screenplay> .
+
 The rest of this page will document the syntax of the custom textual format.
 
 =head1 FORMAT

changeset:   223:6be330066969
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 15:58:01 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/TODO perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
description:
Add the TODO file, document the changes in the "Changes" and bump the version.


diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Mon Apr 26 15:58:01 2010 +0000
@@ -1,5 +1,17 @@
 Revision history for XML-Grammar-Fiction.
 
+0.1.0 
+        - Merged in the XML-Grammar-Screenplay into this module.
+        - Converted XML-Grammar-Screenplay to a non-procedurally-recursive
+        parser.
+        - Created some base classes:
+            - lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
+            - lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
+            - lib/XML/Grammar/FictionBase/TagsTree2XML.pm
+        - Made XML-Grammar-Screenplay use some of the XML-Grammar-Fiction
+        classes instead of having duplicate copies.
+        - Add the TODO file.
+
 0.0.4       Sat Mar 13 00:28:52 IST 2010
         - Implemented better error handling and presentation in 
         ::App::FromProto.
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 26 15:58:01 2010 +0000
@@ -96,6 +96,7 @@
 t/data/xml/with-multi-para-desc.xml
 t/data/xml/with-tags-inside-paragraphs.xml
 t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm
+TODO
 t/pod-coverage.t
 t/pod.t
 t/proto-text-invalid.t
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/TODO
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/TODO	Mon Apr 26 15:58:01 2010 +0000
@@ -0,0 +1,9 @@
+* Write unit tests for LineIterator.pm.
+
+* Add more necessary tags and features.
+
+* Convert the XML grammar to use the xlink namespace for links.
+
+* Regularise the XML grammars of XML-Grammar-Fiction and XML-Grammar-Screenplay.
+
+* Merge more tests.
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 METHODS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 use Exception::Class
     (
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head2 new()
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 AUTHOR
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -21,11 +21,11 @@
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -21,11 +21,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 sub _non_tag_text_unit_consume_regex {
     return qr{(?:\<|^\n?$)}ms;
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -737,11 +737,11 @@
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -68,11 +68,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head2 new()
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head2 new()
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 =head2 new()
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -15,7 +15,7 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.1.0';
 
 =head1 SYNOPSIS
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -13,11 +13,11 @@
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.1.0';
 
 =head2 new()
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.0.4
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0.4';
+our $VERSION = '0.1.0';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.1.0';
 
 =head2 new()
 
diff -r 80a4a6baf0ed -r 6be330066969 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 26 15:46:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 26 15:58:01 2010 +0000
@@ -30,11 +30,11 @@
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.1.0
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.1.0';
 
 =head2 new()
 

changeset:   222:80a4a6baf0ed
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 15:46:53 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Add the 'test_files' glob pattern for ./Build test.


diff -r 135230f7e1f8 -r 80a4a6baf0ed perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Mon Apr 26 15:35:55 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Mon Apr 26 15:46:53 2010 +0000
@@ -68,6 +68,8 @@
             "xslt",
         ],
     },
+    # In order to run the screenplay tests.
+    test_files => "t/*.t t/*/*.t",
 );
 
 $builder->create_build_script();

changeset:   221:135230f7e1f8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 15:35:55 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Moved up _handle_elem_of_name_b.


diff -r aa8ce957bf95 -r 135230f7e1f8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:31:01 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:35:55 2010 +0000
@@ -122,16 +122,9 @@
     return;
 }
 
-sub _handle_elem_of_name_b
+sub _bold_tag_name
 {
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ["b"],
-            elem => $elem,
-        }
-    );
+    return "b";
 }
 
 sub _handle_elem_of_name_i
diff -r aa8ce957bf95 -r 135230f7e1f8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 26 15:31:01 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 26 15:35:55 2010 +0000
@@ -85,6 +85,18 @@
     return;
 }
 
+sub _handle_elem_of_name_b
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => [$self->_bold_tag_name()],
+            elem => $elem,
+        }
+    );
+}
+
 sub _handle_elem_of_name_br
 {
     my ($self, $elem) = @_;
diff -r aa8ce957bf95 -r 135230f7e1f8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:31:01 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:35:55 2010 +0000
@@ -129,19 +129,9 @@
     return $self->_handle_elem_of_name_s($elem);
 }
 
-# TODO : extract a common method with different class constants.
-sub _handle_elem_of_name_b
+sub _bold_tag_name
 {
-    my ($self, $elem) = @_;
-
-    $self->_output_tag_with_childs(
-        {
-            start => ["bold"],
-            elem => $elem,
-        }
-    );
-
-    return;
+    return "bold";
 }
 
 sub _write_elem

changeset:   220:aa8ce957bf95
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 15:31:01 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Convert Screenplay to a named-method-dispatch and extract some common methods.


diff -r 12969c17a653 -r aa8ce957bf95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:20:26 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:31:01 2010 +0000
@@ -99,30 +99,6 @@
     return "p";
 }
 
-sub _write_Element_elem
-{
-    my ($self, $elem) = @_;
-
-    if ($elem->_short_isa("InnerDesc"))
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["inlinedesc"],
-                elem => $elem,
-            }
-        );
-        return;
-    }
-    else
-    {
-        my $method = "_handle_elem_of_name_" . $elem->name();
-
-        $self->$method($elem);
-
-        return;
-    }
-}
-
 sub _handle_elem_of_name_title
 {
     my ($self, $elem) = @_;
@@ -146,26 +122,6 @@
     return;
 }
 
-sub _handle_elem_of_name_s
-{
-    my ($self, $elem) = @_;
-
-    $self->_write_scene({scene => $elem});
-}
-
-sub _handle_elem_of_name_a
-{
-    my ($self, $elem) = @_;
-    $self->_output_tag_with_childs(
-        {
-            start => ["ulink", "url" => $elem->lookup_attr("href")],
-            elem => $elem,
-        }
-    );
-
-    return;
-}
-
 sub _handle_elem_of_name_b
 {
     my ($self, $elem) = @_;
@@ -192,14 +148,6 @@
     return;
 }
 
-sub _handle_elem_of_name_br
-{
-    my ($self, $elem) = @_;
-
-    $self->_writer->emptyTag("br");
-
-    return;
-}
 
 sub _handle_text_start
 {
diff -r 12969c17a653 -r aa8ce957bf95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 26 15:20:26 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Mon Apr 26 15:31:01 2010 +0000
@@ -41,6 +41,58 @@
 
 has '_buffer' => ('isa' => "ScalarRef[Str]", is => "rw");
 
+sub _write_Element_elem
+{
+    my ($self, $elem) = @_;
+
+    if ($elem->_short_isa("InnerDesc"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["inlinedesc"],
+                elem => $elem,
+            }
+        );
+        return;
+    }
+    else
+    {
+        my $method = "_handle_elem_of_name_" . $elem->name();
+
+        $self->$method($elem);
+
+        return;
+    }
+}
+    
+sub _handle_elem_of_name_s
+{
+    my ($self, $elem) = @_;
+
+    $self->_write_scene({scene => $elem});
+}
+
+sub _handle_elem_of_name_a
+{
+    my ($self, $elem) = @_;
+    $self->_output_tag_with_childs(
+        {
+            start => ["ulink", "url" => $elem->lookup_attr("href")],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
+sub _handle_elem_of_name_br
+{
+    my ($self, $elem) = @_;
+
+    $self->_writer->emptyTag("br");
+
+    return;
+}
 
 =head2 meta()
 
diff -r 12969c17a653 -r aa8ce957bf95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:20:26 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:31:01 2010 +0000
@@ -122,45 +122,24 @@
     return "para";
 }
 
-sub _write_Element_elem
+sub _handle_elem_of_name_section
 {
     my ($self, $elem) = @_;
 
-    if ($elem->_short_isa("InnerDesc"))
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["inlinedesc"],
-                elem => $elem,
-            }
-        );
-    }
-    elsif (($elem->name() eq "s") || ($elem->name() eq "section"))
-    {
-        $self->_write_scene({scene => $elem});
-    }
-    elsif ($elem->name() eq "a")
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["ulink", "url" => $elem->lookup_attr("href")],
-                elem => $elem,
-            }
-        );
-    }
-    elsif ($elem->name() eq "b")
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["bold"],
-                elem => $elem,
-            }
-        );
-    }
-    elsif ($elem->name() eq "br")
-    {
-        $self->_writer->emptyTag("br");
-    }
+    return $self->_handle_elem_of_name_s($elem);
+}
+
+# TODO : extract a common method with different class constants.
+sub _handle_elem_of_name_b
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ["bold"],
+            elem => $elem,
+        }
+    );
 
     return;
 }

changeset:   219:12969c17a653
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 15:20:26 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Convert Fiction::FromProto to a named-method-dispatch.


diff -r cf363935fc7b -r 12969c17a653 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:10:55 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:20:26 2010 +0000
@@ -111,60 +111,92 @@
                 elem => $elem,
             }
         );
+        return;
     }
-    elsif ($elem->name() eq "title")
+    else
     {
-        # TODO :
-        # Eliminate the Law-of-Demeter-syndrome here.
-        my $list = $elem->_get_childs()->[0];
-        $self->_output_tag(
-            {
-                start => ["title"],
-                in => sub {
-                    $self->_write_elem(
-                        {
-                            elem => $list,
-                        }                            
-                    ),
-                },
+        my $method = "_handle_elem_of_name_" . $elem->name();
+
+        $self->$method($elem);
+
+        return;
+    }
+}
+
+sub _handle_elem_of_name_title
+{
+    my ($self, $elem) = @_;
+
+    # TODO :
+    # Eliminate the Law-of-Demeter-syndrome here.
+    my $list = $elem->_get_childs()->[0];
+    $self->_output_tag(
+        {
+            start => ["title"],
+            in => sub {
+                $self->_write_elem(
+                    {
+                        elem => $list,
+                    }                            
+                ),
             },
-        );
-    }
-    elsif ($elem->name() eq "s")
-    {
-        $self->_write_scene({scene => $elem});
-    }
-    elsif ($elem->name() eq "a")
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["ulink", "url" => $elem->lookup_attr("href")],
-                elem => $elem,
-            }
-        );
-    }
-    elsif ($elem->name() eq "b")
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["b"],
-                elem => $elem,
-            }
-        );
-    }
-    elsif ($elem->name() eq "i")
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["i"],
-                elem => $elem,
-            }
-        );
-    }        
-    elsif ($elem->name() eq "br")
-    {
-        $self->_writer->emptyTag("br");
-    }
+        },
+    );
+
+    return;
+}
+
+sub _handle_elem_of_name_s
+{
+    my ($self, $elem) = @_;
+
+    $self->_write_scene({scene => $elem});
+}
+
+sub _handle_elem_of_name_a
+{
+    my ($self, $elem) = @_;
+    $self->_output_tag_with_childs(
+        {
+            start => ["ulink", "url" => $elem->lookup_attr("href")],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
+sub _handle_elem_of_name_b
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ["b"],
+            elem => $elem,
+        }
+    );
+}
+
+sub _handle_elem_of_name_i
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => ["i"],
+            elem => $elem,
+        }
+    );
+
+    return;
+}
+
+sub _handle_elem_of_name_br
+{
+    my ($self, $elem) = @_;
+
+    $self->_writer->emptyTag("br");
 
     return;
 }

changeset:   218:cf363935fc7b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 26 15:10:55 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Restructred the ->_short_isa_ call, so the func will be easier to modify.

This is part of the ongoing refactorings of the FromProto modules.


diff -r 4d9c6951c0b5 -r cf363935fc7b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 25 13:39:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Mon Apr 26 15:10:55 2010 +0000
@@ -103,7 +103,16 @@
 {
     my ($self, $elem) = @_;
 
-    if ($elem->name() eq "title")
+    if ($elem->_short_isa("InnerDesc"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["inlinedesc"],
+                elem => $elem,
+            }
+        );
+    }
+    elsif ($elem->name() eq "title")
     {
         # TODO :
         # Eliminate the Law-of-Demeter-syndrome here.
@@ -156,15 +165,6 @@
     {
         $self->_writer->emptyTag("br");
     }
-    elsif ($elem->_short_isa("InnerDesc"))
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["inlinedesc"],
-                elem => $elem,
-            }
-        );
-    }
 
     return;
 }
diff -r 4d9c6951c0b5 -r cf363935fc7b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 25 13:39:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 26 15:10:55 2010 +0000
@@ -126,7 +126,16 @@
 {
     my ($self, $elem) = @_;
 
-    if (($elem->name() eq "s") || ($elem->name() eq "section"))
+    if ($elem->_short_isa("InnerDesc"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["inlinedesc"],
+                elem => $elem,
+            }
+        );
+    }
+    elsif (($elem->name() eq "s") || ($elem->name() eq "section"))
     {
         $self->_write_scene({scene => $elem});
     }
@@ -152,15 +161,6 @@
     {
         $self->_writer->emptyTag("br");
     }
-    elsif ($elem->_short_isa("InnerDesc"))
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => ["inlinedesc"],
-                elem => $elem,
-            }
-        );
-    }
 
     return;
 }

changeset:   217:4d9c6951c0b5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 25 13:39:37 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Extract a method in order to merge it.


diff -r 0f4c08c5e241 -r 4d9c6951c0b5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 25 13:31:01 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 25 13:39:37 2010 +0000
@@ -169,6 +169,20 @@
     return;
 }
 
+sub _handle_text_start
+{
+    my ($self, $elem) = @_;
+
+    $self->_output_tag_with_childs(
+        {
+            start => $self->_get_text_start($elem),
+            elem => $elem,
+        },
+    );
+
+    return;
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
@@ -208,12 +222,7 @@
     }
     elsif ($elem->_short_isa("Text"))
     {
-        $self->_output_tag_with_childs(
-            {
-                start => $self->_get_text_start($elem),
-                elem => $elem,
-            },
-        );
+        $self->_handle_text_start($elem);
     }
     elsif ($elem->_short_isa("Comment"))
     {

changeset:   216:0f4c08c5e241
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Apr 25 13:31:01 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Extract the _write_Element_elem method from both classes.


diff -r 4affaafa6c5a -r 0f4c08c5e241 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 24 19:39:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sun Apr 25 13:31:01 2010 +0000
@@ -99,6 +99,76 @@
     return "p";
 }
 
+sub _write_Element_elem
+{
+    my ($self, $elem) = @_;
+
+    if ($elem->name() eq "title")
+    {
+        # TODO :
+        # Eliminate the Law-of-Demeter-syndrome here.
+        my $list = $elem->_get_childs()->[0];
+        $self->_output_tag(
+            {
+                start => ["title"],
+                in => sub {
+                    $self->_write_elem(
+                        {
+                            elem => $list,
+                        }                            
+                    ),
+                },
+            },
+        );
+    }
+    elsif ($elem->name() eq "s")
+    {
+        $self->_write_scene({scene => $elem});
+    }
+    elsif ($elem->name() eq "a")
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["ulink", "url" => $elem->lookup_attr("href")],
+                elem => $elem,
+            }
+        );
+    }
+    elsif ($elem->name() eq "b")
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["b"],
+                elem => $elem,
+            }
+        );
+    }
+    elsif ($elem->name() eq "i")
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["i"],
+                elem => $elem,
+            }
+        );
+    }        
+    elsif ($elem->name() eq "br")
+    {
+        $self->_writer->emptyTag("br");
+    }
+    elsif ($elem->_short_isa("InnerDesc"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["inlinedesc"],
+                elem => $elem,
+            }
+        );
+    }
+
+    return;
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
@@ -134,68 +204,7 @@
     }
     elsif ($elem->_short_isa("Element"))
     {
-        if ($elem->name() eq "title")
-        {
-            # TODO :
-            # Eliminate the Law-of-Demeter-syndrome here.
-            my $list = $elem->_get_childs()->[0];
-            $self->_output_tag(
-                {
-                    start => ["title"],
-                    in => sub {
-                        $self->_write_elem(
-                            {
-                                elem => $list,
-                            }                            
-                        ),
-                    },
-                },
-            );
-        }
-        elsif ($elem->name() eq "s")
-        {
-            $self->_write_scene({scene => $elem});
-        }
-        elsif ($elem->name() eq "a")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["ulink", "url" => $elem->lookup_attr("href")],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "b")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["b"],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "i")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["i"],
-                    elem => $elem,
-                }
-            );
-        }        
-        elsif ($elem->name() eq "br")
-        {
-            $self->_writer->emptyTag("br");
-        }
-        elsif ($elem->_short_isa("InnerDesc"))
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["inlinedesc"],
-                    elem => $elem,
-                }
-            );
-        }
+        $self->_write_Element_elem($elem);
     }
     elsif ($elem->_short_isa("Text"))
     {
diff -r 4affaafa6c5a -r 0f4c08c5e241 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 19:39:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sun Apr 25 13:31:01 2010 +0000
@@ -122,6 +122,49 @@
     return "para";
 }
 
+sub _write_Element_elem
+{
+    my ($self, $elem) = @_;
+
+    if (($elem->name() eq "s") || ($elem->name() eq "section"))
+    {
+        $self->_write_scene({scene => $elem});
+    }
+    elsif ($elem->name() eq "a")
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["ulink", "url" => $elem->lookup_attr("href")],
+                elem => $elem,
+            }
+        );
+    }
+    elsif ($elem->name() eq "b")
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["bold"],
+                elem => $elem,
+            }
+        );
+    }
+    elsif ($elem->name() eq "br")
+    {
+        $self->_writer->emptyTag("br");
+    }
+    elsif ($elem->_short_isa("InnerDesc"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["inlinedesc"],
+                elem => $elem,
+            }
+        );
+    }
+
+    return;
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
@@ -143,41 +186,7 @@
     }
     elsif ($elem->_short_isa("Element"))
     {
-        if (($elem->name() eq "s") || ($elem->name() eq "section"))
-        {
-            $self->_write_scene({scene => $elem});
-        }
-        elsif ($elem->name() eq "a")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["ulink", "url" => $elem->lookup_attr("href")],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "b")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["bold"],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "br")
-        {
-            $self->_writer->emptyTag("br");
-        }
-        elsif ($elem->_short_isa("InnerDesc"))
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["inlinedesc"],
-                    elem => $elem,
-                }
-            );
-        }
+        $self->_write_Element_elem($elem);
     }
     elsif ($elem->_short_isa("Text"))
     {

changeset:   215:4affaafa6c5a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 19:39:19 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Extract a method - _paragraph_tag() to abstract differences in classes.


diff -r 24980b2a991d -r 4affaafa6c5a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 24 18:47:32 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 24 19:39:19 2010 +0000
@@ -94,6 +94,11 @@
     }
 }
 
+sub _paragraph_tag
+{
+    return "p";
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
@@ -115,7 +120,7 @@
     {
         $self->_output_tag_with_childs(
             {
-               start => ["p"],
+                start => [$self->_paragraph_tag()],
                 elem => $elem,
             },
         );
diff -r 24980b2a991d -r 4affaafa6c5a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 18:47:32 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 19:39:19 2010 +0000
@@ -117,6 +117,11 @@
     }
 }
 
+sub _paragraph_tag
+{
+    return "para";
+}
+
 sub _write_elem
 {
     my ($self, $args) = @_;
@@ -131,7 +136,7 @@
     {
         $self->_output_tag_with_childs(
             {
-               start => ["para"],
+               start => [$self->_paragraph_tag()],
                 elem => $elem,
             },
         );

changeset:   214:24980b2a991d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 18:47:32 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Extract a common base class - XML/Grammar/FictionBase/TagsTree2XML .


diff -r 4c8fcafb1375 -r 24980b2a991d perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Apr 24 18:13:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Sat Apr 24 18:47:32 2010 +0000
@@ -17,6 +17,7 @@
 lib/XML/Grammar/Fiction/App/ToDocBook.pm
 lib/XML/Grammar/Fiction/App/ToHTML.pm
 lib/XML/Grammar/Fiction/Base.pm
+lib/XML/Grammar/FictionBase/TagsTree2XML.pm
 lib/XML/Grammar/Fiction/Err.pm
 lib/XML/Grammar/Fiction/Event.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
diff -r 4c8fcafb1375 -r 24980b2a991d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 24 18:13:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Sat Apr 24 18:47:32 2010 +0000
@@ -4,36 +4,14 @@
 use warnings;
 
 use Carp;
-
-use XML::Writer;
 use HTML::Entities ();
 
-use XML::Grammar::Fiction::FromProto::Nodes;
-
 use Moose;
 
+extends("XML::Grammar::FictionBase::TagsTree2XML");
+
 use List::Util (qw(first));
 
-has '_parser_class' =>
-(
-    is => "ro",
-    isa => "Str",
-    init_arg => "parser_class",
-    default => "XML::Grammar::Fiction::FromProto::Parser::QnD",
-);
-
-has "_parser" => (
-    'isa' => "XML::Grammar::Fiction::FromProto::Parser", 
-    'is' => "rw",
-    lazy => 1,
-    default => sub { 
-        my $self = shift; 
-        return $self->_parser_class->new();
-    },
-);
-
-has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
-
 my $fiction_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/};
 my $xml_ns = "http://www.w3.org/XML/1998/namespace";
 
diff -r 4c8fcafb1375 -r 24980b2a991d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/FictionBase/TagsTree2XML.pm	Sat Apr 24 18:47:32 2010 +0000
@@ -0,0 +1,73 @@
+package XML::Grammar::FictionBase::TagsTree2XML;
+
+use Moose;
+
+use XML::Writer;
+use HTML::Entities ();
+
+use XML::Grammar::Fiction::FromProto::Nodes;
+
+
+=head1 NAME
+
+XML::Grammar::FictionBase::TagsTree2XML - base class for the tags-tree
+to XML converters.
+
+=head1 VERSION
+
+Version 0.0.4
+
+=cut
+
+has '_parser_class' =>
+(
+    is => "ro",
+    isa => "Str",
+    init_arg => "parser_class",
+    default => "XML::Grammar::Fiction::FromProto::Parser::QnD",
+);
+
+has "_parser" => (
+    'isa' => "XML::Grammar::Fiction::FromProto::Parser", 
+    'is' => "rw",
+    lazy => 1,
+    default => sub { 
+        my $self = shift; 
+        return $self->_parser_class->new();
+    },
+);
+
+has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
+
+has '_buffer' => ('isa' => "ScalarRef[Str]", is => "rw");
+
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2010, Shlomi Fish.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 4c8fcafb1375 -r 24980b2a991d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 18:13:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 18:47:32 2010 +0000
@@ -1,23 +1,8 @@
 package XML::Grammar::Screenplay::FromProto;
 
-use strict;
-use warnings;
-
-use Carp;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use XML::Writer;
-use HTML::Entities ();
-
-use XML::Grammar::Fiction::FromProto::Nodes;
-
 use Moose;
 
-has "_parser" => ('is' => "rw");
-has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
-
-has '_buffer' => ('isa' => "ScalarRef[Str]", is => "rw");
+extends("XML::Grammar::FictionBase::TagsTree2XML");
 
 my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
 

changeset:   213:4c8fcafb1375
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 18:13:02 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Add a commented isa for debugging (per #moose).


diff -r 21f8f711bfd9 -r 4c8fcafb1375 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 15:10:23 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 18:13:02 2010 +0000
@@ -30,6 +30,7 @@
 has "_events_queue" =>
 (
     isa => "ArrayRef[XML::Grammar::Fiction::Event]",
+    # isa => "ArrayRef",
     is => "rw", 
     default => sub { []; },
     traits => ['Array'],

changeset:   212:21f8f711bfd9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 15:10:23 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
description:
Convert Screenplay::FromProto to _short_isa in order to normalise.


diff -r ec2b5a691880 -r 21f8f711bfd9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 14:27:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Sat Apr 24 15:10:23 2010 +0000
@@ -101,7 +101,7 @@
 {
     my ($self, $elem) = @_;
 
-    if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying"))
+    if ($elem->_short_isa("Saying"))
     {
         $self->_output_tag_with_childs(
             {
@@ -110,7 +110,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Description"))
+    elsif ($elem->_short_isa("Description"))
     {
         $self->_output_tag_with_childs(
             {
@@ -119,7 +119,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
+    elsif ($elem->_short_isa("Text"))
     {
         foreach my $child (@{$elem->_get_childs()})
         {
@@ -142,7 +142,7 @@
     {
         $self->_writer->characters($elem);
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph"))
+    elsif ($elem->_short_isa("Paragraph"))
     {
         $self->_output_tag_with_childs(
             {
@@ -151,7 +151,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Element"))
+    elsif ($elem->_short_isa("Element"))
     {
         if (($elem->name() eq "s") || ($elem->name() eq "section"))
         {
@@ -179,7 +179,7 @@
         {
             $self->_writer->emptyTag("br");
         }
-        elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::InnerDesc"))
+        elsif ($elem->_short_isa("InnerDesc"))
         {
             $self->_output_tag_with_childs(
                 {
@@ -189,11 +189,11 @@
             );
         }
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
+    elsif ($elem->_short_isa("Text"))
     {
         $self->_handle_text_start($elem);
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Comment"))
+    elsif ($elem->_short_isa("Comment"))
     {
         $self->_writer->comment($elem->text());
     }

changeset:   211:ec2b5a691880
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 14:27:31 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _main_loop_iter_body_prelude .


diff -r f015d79f8892 -r ec2b5a691880 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 24 10:44:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 24 14:27:31 2010 +0000
@@ -139,15 +139,13 @@
     return ($is_tag_cond, $is_close);
 }
 
-sub _main_loop_iter_body
+sub _main_loop_iter_body_prelude
 {
     my $self = shift;
 
     $self->skip_space();
 
-    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
-
-    return;
+    return 1;
 }
 
 before '_parse_all' => sub {
diff -r f015d79f8892 -r ec2b5a691880 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 10:44:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 14:27:31 2010 +0000
@@ -706,6 +706,27 @@
     return $self->_main_loop_iter_body();
 }
 
+sub _attempt_to_calc_new_ret_tag
+{
+    my $self = shift;
+    
+    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
+
+    return;
+}
+
+sub _main_loop_iter_body
+{
+    my $self = shift;
+
+    if ($self->_main_loop_iter_body_prelude())
+    {
+        $self->_attempt_to_calc_new_ret_tag();
+    }
+
+    return;
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r f015d79f8892 -r ec2b5a691880 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 24 10:44:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 24 14:27:31 2010 +0000
@@ -487,7 +487,7 @@
     return ($is_tag_cond, $is_close);
 }
 
-sub _main_loop_iter_body
+sub _main_loop_iter_body_prelude
 {
     my $self = shift;
 
@@ -515,9 +515,7 @@
         return;
     }
     
-    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
-
-    return;
+    return 1;
 }
 
 

changeset:   210:f015d79f8892
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 10:44:37 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract the _main_loop_iter into XmlIterator.

We defined another function - _main_loop_iter_body with the specialised logic.


diff -r 2f0bcebff098 -r f015d79f8892 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 24 10:23:33 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 24 10:44:37 2010 +0000
@@ -139,15 +139,10 @@
     return ($is_tag_cond, $is_close);
 }
 
-sub _main_loop_iter
+sub _main_loop_iter_body
 {
     my $self = shift;
 
-    if ($self->_look_ahead_for_comment())
-    {
-        return;
-    }
-
     $self->skip_space();
 
     $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
diff -r 2f0bcebff098 -r f015d79f8892 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 10:23:33 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 10:44:37 2010 +0000
@@ -688,6 +688,24 @@
     return $self->_flush_ret_tag();
 }
 
+sub _main_loop_iter
+{
+    my $self = shift;
+
+    # This is an assert.
+    if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
+    {
+        Carp::confess (qq{Reached EOF.});
+    }
+    
+    if ($self->_look_ahead_for_comment())
+    {
+        return;
+    }
+
+    return $self->_main_loop_iter_body();
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r 2f0bcebff098 -r f015d79f8892 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 24 10:23:33 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 24 10:44:37 2010 +0000
@@ -487,21 +487,10 @@
     return ($is_tag_cond, $is_close);
 }
 
-sub _main_loop_iter
+sub _main_loop_iter_body
 {
     my $self = shift;
 
-    # This is an assert.
-    if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
-    {
-        Carp::confess (qq{Reached EOF.});
-    }
-    
-    if ($self->_look_ahead_for_comment())
-    {
-        return;
-    }
-
     my ($l, $p) = $self->curr_line_and_pos();
 
     if ($$l eq "\n")

changeset:   209:2f0bcebff098
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 24 10:23:33 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Create _check_and_handle_tag_event with a loop over the tag names.


diff -r 855836607b64 -r 2f0bcebff098 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 23 15:24:44 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 24 10:23:33 2010 +0000
@@ -116,20 +116,9 @@
     return;
 }
 
-sub _handle_event
+sub _list_valid_tag_events
 {
-    my ($self, $event) = @_;
-
-    if ($self->_is_event_a_para($event))
-    {
-        $self->_handle_para_event($event);
-    }
-    elsif ($self->_is_event_elem($event))
-    {
-        $self->_handle_elem_event($event);
-    }
-
-    return;
+    return [qw(para)];
 }
 
 before '_handle_close_tag' => sub { 
diff -r 855836607b64 -r 2f0bcebff098 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 15:24:44 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Sat Apr 24 10:23:33 2010 +0000
@@ -306,6 +306,41 @@
     return $event->type() eq "elem";
 }
 
+sub _handle_event
+{
+    my ($self, $event) = @_;
+
+    if ((! $self->_check_and_handle_tag_event($event))
+        && $self->_is_event_elem($event)
+    )
+    {
+        $self->_handle_elem_event($event);
+    }
+
+    return;
+}
+
+sub _check_and_handle_tag_event
+{
+    my ($self, $event) = @_;
+
+    foreach my $tag_name (@{$self->_list_valid_tag_events()})
+    {
+        if ($event->is_tag_of_name($tag_name))
+        {
+            my $type = $event->is_open() ? "open" : "close";
+            
+            my $method = "_handle_${type}_${tag_name}";
+
+            $self->$method($event);
+
+            return 1;
+        }
+    }
+
+    return;
+}
+
 sub _handle_para_event
 {
     my ($self, $event) = @_;
diff -r 855836607b64 -r 2f0bcebff098 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 15:24:44 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Sat Apr 24 10:23:33 2010 +0000
@@ -452,24 +452,9 @@
         : $self->_handle_close_saying();
 }
 
-sub _handle_event
+sub _list_valid_tag_events
 {
-    my ($self, $event) = @_;
-
-    if ($self->_is_event_a_para($event))
-    {
-        $self->_handle_para_event($event);
-    }
-    elsif ($self->_is_event_a_saying($event))
-    {
-        $self->_handle_saying_event($event);
-    }
-    elsif ($self->_is_event_elem($event))
-    {
-        $self->_handle_elem_event($event);
-    }
-
-    return;
+    return [qw(para saying)];
 }
 
 after '_handle_open_tag' => sub {

changeset:   208:855836607b64
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 23 15:24:44 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Renamed two methods to make them more consistent.


diff -r 764c2a0e1822 -r 855836607b64 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 14:58:27 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 15:24:44 2010 +0000
@@ -310,7 +310,7 @@
     return;
 }
 
-sub _close_saying
+sub _handle_close_saying
 {
     my $self = shift;
     my $open = $self->_pop_tag();
@@ -396,7 +396,7 @@
 
     if ($self->_top_is_saying())
     {
-        $self->_close_saying();
+        $self->_handle_close_saying();
     }
 
     return;
@@ -416,7 +416,7 @@
     return $self->_start_para();
 }
 
-sub _open_saying
+sub _handle_open_saying
 {
     my $self = shift;
     my $event = shift;
@@ -448,8 +448,8 @@
 
     return
         $event->is_open()
-        ? $self->_open_saying($event)
-        : $self->_close_saying();
+        ? $self->_handle_open_saying($event)
+        : $self->_handle_close_saying();
 }
 
 sub _handle_event

changeset:   207:764c2a0e1822
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 23 14:58:27 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Renamed _handle_paragraph_event to _handle_para_event to make it more consistent.


diff -r d7715374af2a -r 764c2a0e1822 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 23 14:45:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 23 14:58:27 2010 +0000
@@ -122,7 +122,7 @@
 
     if ($self->_is_event_a_para($event))
     {
-        $self->_handle_paragraph_event($event);
+        $self->_handle_para_event($event);
     }
     elsif ($self->_is_event_elem($event))
     {
diff -r d7715374af2a -r 764c2a0e1822 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 14:45:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 14:58:27 2010 +0000
@@ -306,7 +306,7 @@
     return $event->type() eq "elem";
 }
 
-sub _handle_paragraph_event
+sub _handle_para_event
 {
     my ($self, $event) = @_;
 
diff -r d7715374af2a -r 764c2a0e1822 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 14:45:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 14:58:27 2010 +0000
@@ -458,7 +458,7 @@
 
     if ($self->_is_event_a_para($event))
     {
-        $self->_handle_paragraph_event($event);
+        $self->_handle_para_event($event);
     }
     elsif ($self->_is_event_a_saying($event))
     {

changeset:   206:d7715374af2a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 23 14:45:53 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract is_open().


diff -r fc4131216a97 -r d7715374af2a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm	Fri Apr 23 11:46:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm	Fri Apr 23 14:45:53 2010 +0000
@@ -24,12 +24,23 @@
     return ($self->_has_tag() && ($self->tag() eq $name));
 }
 
+sub is_open
+{
+    my $self = shift;
+
+    return ($self->type() eq "open");
+}
+
 1;
 
 =head2 $event->is_tag_of_name($name)
 
 Determines if the $event is a tag and of name $name.
 
+=head2 $event->is_open()
+
+Returns true if the $event 's type is "open".
+
 =head2 $self->meta()
 
 Leftover from Moose.
diff -r fc4131216a97 -r d7715374af2a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 11:46:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 14:45:53 2010 +0000
@@ -311,7 +311,7 @@
     my ($self, $event) = @_;
 
     return
-          $event->type() eq "open"
+          $event->is_open()
         ? $self->_handle_open_para($event)
         : $self->_handle_close_para($event)
         ;
diff -r fc4131216a97 -r d7715374af2a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 11:46:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 14:45:53 2010 +0000
@@ -447,7 +447,7 @@
     my ($self, $event) = @_;
 
     return
-        $event->type() eq "open"
+        $event->is_open()
         ? $self->_open_saying($event)
         : $self->_close_saying();
 }

changeset:   205:fc4131216a97
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 23 11:46:09 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Convert the ${event}S field accesses to accessors.


diff -r b6ff2f997baf -r fc4131216a97 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm	Fri Apr 23 11:21:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm	Fri Apr 23 11:46:09 2010 +0000
@@ -13,12 +13,23 @@
 use XML::Grammar::Fiction::FromProto::Nodes;
 
 has 'type' => (isa => "Str", is => "ro");
-has 'tag' => (isa => "Maybe[Str]", is => "ro");
+has 'tag' => (isa => "Maybe[Str]", is => "ro", predicate => '_has_tag',);
 has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
 
+sub is_tag_of_name
+{
+    my ($self, $name) = @_;
+
+    return ($self->_has_tag() && ($self->tag() eq $name));
+}
+
 1;
 
+=head2 $event->is_tag_of_name($name)
+
+Determines if the $event is a tag and of name $name.
+
 =head2 $self->meta()
 
 Leftover from Moose.
diff -r b6ff2f997baf -r fc4131216a97 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 11:21:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 11:46:09 2010 +0000
@@ -289,21 +289,21 @@
 {
     my ($self, $event) = @_;
 
-    return exists($event->{'tag'}) && ($event->{'tag'} eq "saying");
+    return $event->is_tag_of_name("saying");
 }
 
 sub _is_event_a_para
 {
     my ($self, $event) = @_;
 
-    return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
+    return $event->is_tag_of_name("para");
 }
 
 sub _is_event_elem
 {
     my ($self, $event) = @_;
 
-    return $event->{'type'} eq "elem";
+    return $event->type() eq "elem";
 }
 
 sub _handle_paragraph_event
@@ -311,7 +311,7 @@
     my ($self, $event) = @_;
 
     return
-          $event->{'type'} eq "open"
+          $event->type() eq "open"
         ? $self->_handle_open_para($event)
         : $self->_handle_close_para($event)
         ;
@@ -321,7 +321,7 @@
 {
     my ($self, $event) = @_;
 
-    $self->_add_to_top_tag( $event->{'elem'});
+    $self->_add_to_top_tag( $event->elem());
 
     return;
 }
diff -r b6ff2f997baf -r fc4131216a97 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 11:21:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 11:46:09 2010 +0000
@@ -447,7 +447,7 @@
     my ($self, $event) = @_;
 
     return
-        $event->{'type'} eq "open"
+        $event->type() eq "open"
         ? $self->_open_saying($event)
         : $self->_close_saying();
 }

changeset:   204:b6ff2f997baf
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 23 11:21:18 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a class for the event objects.

TODO : convert all direct field dereferences (e.g: $event->{type}) to
accessor calls.


diff -r 559f5f39e093 -r b6ff2f997baf perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 23 09:39:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 23 11:21:18 2010 +0000
@@ -18,6 +18,7 @@
 lib/XML/Grammar/Fiction/App/ToHTML.pm
 lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/Fiction/Err.pm
+lib/XML/Grammar/Fiction/Event.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
diff -r 559f5f39e093 -r b6ff2f997baf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Event.pm	Fri Apr 23 11:21:18 2010 +0000
@@ -0,0 +1,47 @@
+package XML::Grammar::Fiction::Event;
+
+=head1 NAME
+
+XML::Grammar::Fiction::Event - a parser event.
+
+B<For internal use only>.
+
+=cut
+
+use Moose;
+
+use XML::Grammar::Fiction::FromProto::Nodes;
+
+has 'type' => (isa => "Str", is => "ro");
+has 'tag' => (isa => "Maybe[Str]", is => "ro");
+has 'elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
+has 'tag_elem' => (isa => "Maybe[XML::Grammar::Fiction::FromProto::Node]", is => "ro");
+
+1;
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
diff -r 559f5f39e093 -r b6ff2f997baf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 23 09:39:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 23 11:21:18 2010 +0000
@@ -44,15 +44,27 @@
     my $in_para = $self->_in_para();
     if ($is_para && !$in_para)
     {
-        $self->_enqueue_event({type => "open", tag => "para"});
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+               { type => "open", tag => "para", }
+            ),
+        );
         $in_para = 1;
     }
 
-    $self->_enqueue_event({type => "elem", elem => $elem});
+    $self->_enqueue_event(
+        XML::Grammar::Fiction::Event->new(
+            {type => "elem", elem => $elem}
+        )
+    );
 
     if ($is_para_end && $in_para)
     {
-        $self->_enqueue_event({ type => "close", tag => "para" });
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+                { type => "close", tag => "para" }
+            )
+        );
         $in_para = 0;
     }
 
diff -r 559f5f39e093 -r b6ff2f997baf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 09:39:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 11:21:18 2010 +0000
@@ -7,6 +7,7 @@
 
 use XML::Grammar::Fiction::Err;
 use XML::Grammar::Fiction::Struct::Tag;
+use XML::Grammar::Fiction::Event;
 
 extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
 
@@ -28,7 +29,7 @@
 
 has "_events_queue" =>
 (
-    isa => "ArrayRef",
+    isa => "ArrayRef[XML::Grammar::Fiction::Event]",
     is => "rw", 
     default => sub { []; },
     traits => ['Array'],
@@ -552,19 +553,23 @@
             my $entity = $1;
 
             $self->_enqueue_event(
-                {
-                    type => "elem",
-                    elem => $self->_new_text(
-                        [HTML::Entities::decode_entities($entity)]
-                    ),
-                },
+                XML::Grammar::Fiction::Event->new(
+                    {
+                        type => "elem",
+                        elem => $self->_new_text(
+                            [HTML::Entities::decode_entities($entity)]
+                        ),
+                    },
+                )
             );
 
             return;
         }
 
         $self->_enqueue_event(
-            {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
+            XML::Grammar::Fiction::Event->new(
+                {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
+            ),
         );
 
         return 1;
diff -r 559f5f39e093 -r b6ff2f997baf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 09:39:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 11:21:18 2010 +0000
@@ -244,28 +244,46 @@
 
     if ( ($is_saying || $is_para) && $in_para)
     {
-        $self->_enqueue_event({type => "close", tag => "para"});
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+                {type => "close", tag => "para"}
+            )
+        );
         $in_para = 0;
     }
     
     if ( $is_saying && $self->_in_saying())
     {
-        $self->_enqueue_event({type => "close", tag => "saying"});
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+                {type => "close", tag => "saying"}
+            )
+        );
     }
 
     if ($is_saying)
     {
         $self->_enqueue_event(
-            {type => "open", tag => "saying", _elem => $elem, },
+            XML::Grammar::Fiction::Event->new(
+                {type => "open", tag => "saying", tag_elem => $elem, },
+            ),
         );
         $was_already_enqueued = 1;
 
-        $self->_enqueue_event({type => "open", tag => "para"});
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+                {type => "open", tag => "para"}
+            )
+        );
         $in_para = 1;
     }
     elsif ($is_para && !$in_para)
     {
-        $self->_enqueue_event({type => "open", tag => "para"});
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+                {type => "open", tag => "para"}
+            ),
+        );
         $in_para = 1;
     }
 
@@ -274,10 +292,18 @@
     {
         if (!$in_para)
         {
-            $self->_enqueue_event({type => "open", tag => "para"});
+            $self->_enqueue_event(
+                XML::Grammar::Fiction::Event->new(
+                    {type => "open", tag => "para"},
+                )
+            );
             $in_para = 1;
         }
-        $self->_enqueue_event({type => "elem", elem => $elem, });
+        $self->_enqueue_event(
+            XML::Grammar::Fiction::Event->new(
+                {type => "elem", elem => $elem, }
+            )
+        );
         $was_already_enqueued = 1;
     }
 
@@ -403,7 +429,7 @@
                 # TODO : propagate the correct line_num
                 # from the called-to layers.
                 line => $self->line_num(),
-                attrs => [{key => "character", value => $event->{_elem}->character()}],
+                attrs => [{key => "character", value => $event->tag_elem->character()}],
             }
         );
 

changeset:   203:559f5f39e093
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 23 09:39:09 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _handle_open_tag to the XmlIterator base class.


diff -r 7a673ef612ec -r 559f5f39e093 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 18:45:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 23 09:39:09 2010 +0000
@@ -120,19 +120,6 @@
     return;
 }
 
-sub _handle_open_tag
-{
-    my $self = shift;
-
-    my $open = $self->_parse_opening_tag();
-
-    $open->children([]);
-
-    $self->_push_tag($open);
-
-    return;
-}
-
 before '_handle_close_tag' => sub { 
     my $self = shift;
 
diff -r 7a673ef612ec -r 559f5f39e093 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 18:45:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Fri Apr 23 09:39:09 2010 +0000
@@ -575,6 +575,33 @@
     }
 }
 
+sub _handle_open_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    $open->children([]);
+
+    # TODO : add the check for is_standalone in XML-Grammar-Fiction
+    # too.
+    if ($open->is_standalone())
+    {
+        if (defined($self->_merge_tag($open)))
+        {
+            Carp::confess ("Top element/tag cannot be standalone.");
+        }
+        else
+        {
+            return;
+        }
+    }
+
+    $self->_push_tag($open);
+
+    return;
+}
+
 sub _generate_text_unit_events
 {
     my $self = shift;
diff -r 7a673ef612ec -r 559f5f39e093 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 18:45:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Fri Apr 23 09:39:09 2010 +0000
@@ -446,36 +446,16 @@
     return;
 }
 
-sub _handle_open_tag
-{
+after '_handle_open_tag' => sub {
     my $self = shift;
 
-    my $open = $self->_parse_opening_tag();
-
-    $open->children([]);
-
-    # TODO : add the check for is_standalone in XML-Grammar-Fiction
-    # too.
-    if ($open->is_standalone())
-    {
-        if (defined($self->_merge_tag($open)))
-        {
-            Carp::confess ("Top element/tag cannot be standalone.");
-        }
-        else
-        {
-            return;
-        }
-    }
-    $self->_push_tag($open);
-
-    if ($open->name() eq "desc")
+    if ($self->_top_tag()->name() eq "desc")
     {
         $self->_start_para();
     }
 
     return;
-}
+};
 
 before '_handle_close_tag' => sub { 
     my $self = shift;

changeset:   202:7a673ef612ec
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 22 18:45:35 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a base class method.


diff -r af713b728f43 -r 7a673ef612ec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 18:02:59 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 18:45:35 2010 +0000
@@ -31,38 +31,40 @@
     return qr{(?:\<|^\n?$)}ms;
 }
 
-sub _generate_text_unit_events
+sub _generate_non_tag_text_event
 {
     my $self = shift;
 
-    $self->skip_multiline_space();
+    my $is_para = ($self->curr_pos() == 0);
 
-    if (! $self->_generate_tag_event())
+    my $status = $self->_parse_non_tag_text_unit();
+    my $elem = $status->{'elem'};
+    my $is_para_end = $status->{'para_end'};
+
+    my $in_para = $self->_in_para();
+    if ($is_para && !$in_para)
     {
-        my $is_para = ($self->curr_pos() == 0);
+        $self->_enqueue_event({type => "open", tag => "para"});
+        $in_para = 1;
+    }
 
-        my $status = $self->_parse_non_tag_text_unit();
-        my $elem = $status->{'elem'};
-        my $is_para_end = $status->{'para_end'};
+    $self->_enqueue_event({type => "elem", elem => $elem});
 
-        my $in_para = $self->_in_para();
-        if ($is_para && !$in_para)
-        {
-            $self->_enqueue_event({type => "open", tag => "para"});
-            $in_para = 1;
-        }
+    if ($is_para_end && $in_para)
+    {
+        $self->_enqueue_event({ type => "close", tag => "para" });
+        $in_para = 0;
+    }
 
-        $self->_enqueue_event({type => "elem", elem => $elem});
-
-        if ($is_para_end && $in_para)
-        {
-            $self->_enqueue_event({ type => "close", tag => "para" });
-            $in_para = 0;
-        }
-    }
     return;
 }
 
+before '_generate_text_unit_events' => sub {
+    my $self = shift;
+
+    $self->skip_multiline_space() 
+};
+
 sub _handle_open_para
 {
     my ($self, $event) = @_;
diff -r af713b728f43 -r 7a673ef612ec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 18:02:59 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 18:45:35 2010 +0000
@@ -575,6 +575,20 @@
     }
 }
 
+sub _generate_text_unit_events
+{
+    my $self = shift;
+    
+    # $self->skip_multiline_space();
+
+    if (! $self->_generate_tag_event())
+    {
+        $self->_generate_non_tag_text_event();
+    }
+
+    return;
+}
+
 sub _flush_ret_tag
 {
     my $self = shift;
diff -r af713b728f43 -r 7a673ef612ec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 18:02:59 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 18:45:35 2010 +0000
@@ -219,76 +219,69 @@
     return (${$self->curr_line_ref()} =~ m{\G(</|\])});
 }
 
-
-sub _generate_text_unit_events
+sub _generate_non_tag_text_event
 {
     my $self = shift;
+    my $status = $self->_parse_non_tag_text_unit();
+
+    if (!defined($status))
+    {
+        return;
+    }
+
+    my $elem = $status->{'elem'};
+    my $is_para_end = $status->{'para_end'};
+    my $is_saying = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying");
+    #my $is_para =
+    #    (($self->curr_pos() == 0) && 
+    #     (${$self->curr_line_ref()} =~ m{\G\n?\z})
+    #    );
+    # Trying out this one:
+    my $is_para = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph");
+
+    my $in_para = $self->_in_para();
+    my $was_already_enqueued = 0;
+
+    if ( ($is_saying || $is_para) && $in_para)
+    {
+        $self->_enqueue_event({type => "close", tag => "para"});
+        $in_para = 0;
+    }
     
-    # $self->skip_multiline_space();
+    if ( $is_saying && $self->_in_saying())
+    {
+        $self->_enqueue_event({type => "close", tag => "saying"});
+    }
 
-    if (! $self->_generate_tag_event())
+    if ($is_saying)
     {
-        my $status = $self->_parse_non_tag_text_unit();
+        $self->_enqueue_event(
+            {type => "open", tag => "saying", _elem => $elem, },
+        );
+        $was_already_enqueued = 1;
 
-        if (!defined($status))
-        {
-            return;
-        }
+        $self->_enqueue_event({type => "open", tag => "para"});
+        $in_para = 1;
+    }
+    elsif ($is_para && !$in_para)
+    {
+        $self->_enqueue_event({type => "open", tag => "para"});
+        $in_para = 1;
+    }
 
-        my $elem = $status->{'elem'};
-        my $is_para_end = $status->{'para_end'};
-        my $is_saying = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying");
-        #my $is_para =
-        #    (($self->curr_pos() == 0) && 
-        #     (${$self->curr_line_ref()} =~ m{\G\n?\z})
-        #    );
-        # Trying out this one:
-        my $is_para = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph");
-
-        my $in_para = $self->_in_para();
-        my $was_already_enqueued = 0;
-
-        if ( ($is_saying || $is_para) && $in_para)
-        {
-            $self->_enqueue_event({type => "close", tag => "para"});
-            $in_para = 0;
-        }
-        
-        if ( $is_saying && $self->_in_saying())
-        {
-            $self->_enqueue_event({type => "close", tag => "saying"});
-        }
-
-        if ($is_saying)
-        {
-            $self->_enqueue_event(
-                {type => "open", tag => "saying", _elem => $elem, },
-            );
-            $was_already_enqueued = 1;
-
-            $self->_enqueue_event({type => "open", tag => "para"});
-            $in_para = 1;
-        }
-        elsif ($is_para && !$in_para)
+    if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text") &&
+        !$was_already_enqueued)
+    {
+        if (!$in_para)
         {
             $self->_enqueue_event({type => "open", tag => "para"});
             $in_para = 1;
         }
+        $self->_enqueue_event({type => "elem", elem => $elem, });
+        $was_already_enqueued = 1;
+    }
 
-        if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text") &&
-            !$was_already_enqueued)
-        {
-            if (!$in_para)
-            {
-                $self->_enqueue_event({type => "open", tag => "para"});
-                $in_para = 1;
-            }
-            $self->_enqueue_event({type => "elem", elem => $elem, });
-            $was_already_enqueued = 1;
-        }
-
-        return;
-    }
+    return;
 }
 
 sub _close_saying

changeset:   201:af713b728f43
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 22 18:02:59 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _generate_tag_event to the base class and extracted it from Screenplay.


diff -r 8a08d5f7ef50 -r af713b728f43 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 17:05:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 18:02:59 2010 +0000
@@ -31,36 +31,6 @@
     return qr{(?:\<|^\n?$)}ms;
 }
 
-sub _generate_tag_event
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-    my $orig_pos = pos($$l);
-
-    if (my ($tag_opener) = $$l =~ m{\G(<(?:/)?)}cg)
-    {
-        # If it's a tag.
-
-        # TODO : implement the comment handling.
-        # We have a tag.
-
-        my $is_closing_tag = $tag_opener =~ m{/};
-
-        pos($$l) = $orig_pos;
-
-        $self->_enqueue_event(
-            {'type' => ($is_closing_tag ? "close" : "open")}
-        );
-
-        return 1;
-    }
-    else
-    {
-        return;
-    }
-}
-
 sub _generate_text_unit_events
 {
     my $self = shift;
diff -r 8a08d5f7ef50 -r af713b728f43 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 17:05:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 18:02:59 2010 +0000
@@ -501,6 +501,80 @@
     return \@ret;
 }
 
+sub _look_for_tag_opener
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    if ($$l =~ m{\G(\&|<(?:/)?)}cg)
+    {
+        return $1;
+    }
+    else
+    {
+        return;
+    }
+}
+
+sub _is_closing_tag { 
+    my $self = shift;
+    my $tag_start = shift;
+
+    return $tag_start =~ m{/};
+}
+
+sub _generate_tag_event
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+    my $orig_pos = pos($$l);
+
+    if (defined(my $tag_start = $self->_look_for_tag_opener()))
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        pos($$l) = $orig_pos;
+
+        if ($$l =~ m{\G\&})
+        {
+            if ($$l !~ m{\G(\&\w+;)}g)
+            {
+                Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                    $self->line_num()
+                );
+            }
+
+            my $entity = $1;
+
+            $self->_enqueue_event(
+                {
+                    type => "elem",
+                    elem => $self->_new_text(
+                        [HTML::Entities::decode_entities($entity)]
+                    ),
+                },
+            );
+
+            return;
+        }
+
+        $self->_enqueue_event(
+            {'type' => ($self->_is_closing_tag($tag_start) ? "close" : "open")}
+        );
+
+        return 1;
+    }
+    else
+    {
+        return;
+    }
+}
+
 sub _flush_ret_tag
 {
     my $self = shift;
diff -r 8a08d5f7ef50 -r af713b728f43 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 17:05:14 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 18:02:59 2010 +0000
@@ -195,58 +195,39 @@
     }
 };
 
+sub _look_for_tag_opener
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    if ($$l =~ m{\G([<\[\]\&])})
+    {
+        return $1;
+    }
+    else
+    {
+        return;
+    }
+}
+
+
+sub _is_closing_tag { 
+    my $self = shift;
+    my $tag_start = shift;
+
+    return (${$self->curr_line_ref()} =~ m{\G(</|\])});
+}
+
+
 sub _generate_text_unit_events
 {
     my $self = shift;
     
     # $self->skip_multiline_space();
 
-    my $l = $self->curr_line_ref();
-    if ($$l =~ m{\G[<\[\]\&]})
+    if (! $self->_generate_tag_event())
     {
-        # If it's a tag.
-
-        # TODO : implement the comment handling.
-        # We have a tag.
-
-        # If it's an entity, then parse it.
-        if ($$l =~ m{\G\&})
-        {
-            if ($$l !~ m{\G(\&\w+;)}g)
-            {
-                Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
-                    $self->line_num()
-                );
-            }
-
-            my $entity = $1;
-
-            $self->_enqueue_event(
-                {
-                    type => "elem",
-                    elem => $self->_new_text(
-                        [HTML::Entities::decode_entities($entity)]
-                    ),
-                },
-            );
-
-            return;
-        }
-        # If it's a closing tag - then backtrack.
-        if ($$l =~ m{\G(</|\])})
-        {
-            $self->_enqueue_event({'type' => "close"});
-            return;
-        }
-        else
-        {
-            $self->_enqueue_event({'type' => "open"});
-            return;
-        }
-    }
-    else
-    {
-
         my $status = $self->_parse_non_tag_text_unit();
 
         if (!defined($status))

changeset:   200:8a08d5f7ef50
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 22 17:05:14 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _parse_text_unit to the base XmlIterator class.


diff -r c63f3192735c -r 8a08d5f7ef50 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 09:08:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 17:05:14 2010 +0000
@@ -31,21 +31,6 @@
     return qr{(?:\<|^\n?$)}ms;
 }
 
-sub _parse_text_unit
-{
-    my $self = shift;
-
-    if (defined(my $event  = $self->_extract_event()))
-    {
-        return $event;
-    }
-    else
-    {
-        $self->_generate_text_unit_events();
-        return $self->_extract_event();
-    }
-}
-
 sub _generate_tag_event
 {
     my $self = shift;
diff -r c63f3192735c -r 8a08d5f7ef50 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 09:08:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 17:05:14 2010 +0000
@@ -466,6 +466,21 @@
     }
 }
 
+sub _parse_text_unit
+{
+    my $self = shift;
+
+    if (defined(my $event = $self->_extract_event()))
+    {
+        return $event;
+    }
+    else
+    {
+        $self->_generate_text_unit_events();
+        return $self->_extract_event();
+    }
+}
+
 sub _parse_text
 {
     my $self = shift;
diff -r c63f3192735c -r 8a08d5f7ef50 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 09:08:58 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 17:05:14 2010 +0000
@@ -195,21 +195,6 @@
     }
 };
 
-sub _parse_text_unit
-{
-    my $self = shift;
-
-    if (defined(my $event = $self->_extract_event()))
-    {
-        return $event;
-    }
-    else
-    {
-        $self->_generate_text_unit_events();
-        return $self->_extract_event();
-    }
-}
-
 sub _generate_text_unit_events
 {
     my $self = shift;

changeset:   199:c63f3192735c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 22 09:08:58 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Merged _parse_non_tag_text_unit into XmlIterator.


diff -r 9e904c458e5f -r c63f3192735c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 08:46:00 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 09:08:58 2010 +0000
@@ -27,39 +27,8 @@
 
 our $VERSION = '0.0.4';
 
-sub _parse_non_tag_text_unit
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    my $text = $self->consume_up_to(qr{(?:\<|^\n?$)}ms);
-
-    $l = $self->curr_line_ref();
-
-    my $ret_elem = $self->_new_text([$text]);
-    my $is_para_end = 0;
-
-    # Demote the cursor to before the < of the tag.
-    #
-    if (pos($$l) > 0)
-    {
-        pos($$l)--;
-        if (substr($$l, pos($$l), 1) eq "\n")
-        {
-            $is_para_end = 1;
-        }
-    }
-    else
-    {
-        $is_para_end = 1;
-    }
-
-    return
-    {
-        elem => $ret_elem,
-        para_end => $is_para_end,
-    };
+sub _non_tag_text_unit_consume_regex {
+    return qr{(?:\<|^\n?$)}ms;
 }
 
 sub _parse_text_unit
diff -r 9e904c458e5f -r c63f3192735c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 08:46:00 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Thu Apr 22 09:08:58 2010 +0000
@@ -426,6 +426,46 @@
     }
 }
 
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    my $text = $self->consume_up_to($self->_non_tag_text_unit_consume_regex);
+
+    my $l = $self->curr_line_ref();
+
+    my $ret_elem = $self->_new_text([$text]);
+    my $is_para_end = 0;
+
+    # Demote the cursor to before the < of the tag.
+    #
+    if (pos($$l) > 0)
+    {
+        pos($$l)--;
+        if (substr($$l, pos($$l), 1) eq "\n")
+        {
+            $is_para_end = 1;
+        }
+    }
+    else
+    {
+        $is_para_end = 1;
+    }
+    
+    if ($text !~ /\S/)
+    {
+        return;
+    }
+    else
+    {
+        return
+        {
+            elem => $ret_elem,
+            para_end => $is_para_end,
+        };
+    }
+}
+
 sub _parse_text
 {
     my $self = shift;
diff -r 9e904c458e5f -r c63f3192735c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 08:46:00 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Thu Apr 22 09:08:58 2010 +0000
@@ -175,9 +175,13 @@
     }
 }
 
-sub _parse_non_tag_text_unit
+sub _non_tag_text_unit_consume_regex
 {
-    my $self = shift;
+    return qr{(?:[\<\[\]\&]|^\n?$)}ms;
+}
+
+around '_parse_non_tag_text_unit' => sub {
+    my ($orig, $self) = @_;
 
     my $l = $self->curr_line_ref();
 
@@ -185,42 +189,11 @@
     {
         return $self->_parse_speech_unit();
     }
-
-    my $text = $self->consume_up_to(qr{(?:[\<\[\]\&]|^\n?$)}ms);
-
-    $l = $self->curr_line_ref();
-
-    my $ret_elem = $self->_new_text([$text]);
-    my $is_para_end = 0;
-
-    # Demote the cursor to before the < of the tag.
-    #
-    if (pos($$l) > 0)
-    {
-        pos($$l)--;
-        if (substr($$l, pos($$l), 1) eq "\n")
-        {
-            $is_para_end = 1;
-        }
-    }
     else
     {
-        $is_para_end = 1;
+        return $self->$orig();
     }
-
-    if ($text !~ /\S/)
-    {
-        return;
-    }
-    else
-    {
-        return
-        {
-            elem => $ret_elem,
-            para_end => $is_para_end,
-        };
-    }
-}
+};
 
 sub _parse_text_unit
 {

changeset:   198:9e904c458e5f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 22 08:46:00 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/screenplay/pod-coverage.t perl/modules/XML-Grammar-Fiction/t/screenplay/pod.t
description:
Got rid of the duplicate Test-Pod and Test-Pod-Coverage tests.

This may make running the tests suite somewhat faster.


diff -r e9c0c5fae2a1 -r 9e904c458e5f perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Apr 22 07:33:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Apr 22 08:46:00 2010 +0000
@@ -131,8 +131,6 @@
 t/screenplay/data/xml/with-multi-para-desc.xml
 t/screenplay/data/xml/with-tags-inside-paragraphs.xml
 t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
-t/screenplay/pod-coverage.t
-t/screenplay/pod.t
 t/screenplay/proto-text-invalid.t
 t/screenplay/proto-text-to-xml-using-custom-parser.t
 t/screenplay/qnd-parser-unit.t
diff -r e9c0c5fae2a1 -r 9e904c458e5f perl/modules/XML-Grammar-Fiction/t/screenplay/pod-coverage.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/pod-coverage.t	Thu Apr 22 07:33:18 2010 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-#!perl -T
-
-use Test::More;
-eval "use Test::Pod::Coverage 1.04";
-plan skip_all => "Test::Pod::Coverage 1.04 required for testing POD coverage" if $@;
-all_pod_coverage_ok();
diff -r e9c0c5fae2a1 -r 9e904c458e5f perl/modules/XML-Grammar-Fiction/t/screenplay/pod.t
--- a/perl/modules/XML-Grammar-Fiction/t/screenplay/pod.t	Thu Apr 22 07:33:18 2010 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-#!perl -T
-
-use Test::More;
-eval "use Test::Pod 1.14";
-plan skip_all => "Test::Pod 1.14 required for testing POD" if $@;
-all_pod_files_ok();

changeset:   197:e9c0c5fae2a1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Apr 22 07:33:18 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Moved an unused subroutine to the rejects.


diff -r c55223bffb89 -r e9c0c5fae2a1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 21:23:40 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Apr 22 07:33:18 2010 +0000
@@ -27,38 +27,6 @@
 
 our $VERSION = '0.0.4';
 
-sub _find_next_inner_text
-{
-    my $self = shift;
-
-    my $which_tag;
-    my $text = "";
-
-    my $l = $self->curr_line_ref();
-
-    # Apparently, perl does not always returns true in this
-    # case, so we need the defined($1) ? $1 : "" workaround.
-    $$l =~ m{\G([^\<\[\]\&]*)}cgms;
-
-    $text .= (defined($1) ? $1 : "");
-
-    if ($$l =~ m{\G\&})
-    {
-        $which_tag = "entity";
-    }                
-    elsif ($$l =~ m{\G(?:</|\])})
-    {
-        $which_tag = "close";
-    }
-    elsif ($$l =~ m{\G<})
-    {
-        $which_tag = "open_tag";
-    }
-
-    return ($which_tag, $text);
-}
-
-
 sub _parse_non_tag_text_unit
 {
     my $self = shift;
diff -r c55223bffb89 -r e9c0c5fae2a1 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Wed Apr 21 21:23:40 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Thu Apr 22 07:33:18 2010 +0000
@@ -292,3 +292,33 @@
 
 =cut
 
+sub _find_next_inner_text
+{
+    my $self = shift;
+
+    my $which_tag;
+    my $text = "";
+
+    my $l = $self->curr_line_ref();
+
+    # Apparently, perl does not always returns true in this
+    # case, so we need the defined($1) ? $1 : "" workaround.
+    $$l =~ m{\G([^\<\[\]\&]*)}cgms;
+
+    $text .= (defined($1) ? $1 : "");
+
+    if ($$l =~ m{\G\&})
+    {
+        $which_tag = "entity";
+    }                
+    elsif ($$l =~ m{\G(?:</|\])})
+    {
+        $which_tag = "close";
+    }
+    elsif ($$l =~ m{\G<})
+    {
+        $which_tag = "open_tag";
+    }
+
+    return ($which_tag, $text);
+}

changeset:   196:c55223bffb89
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 21:23:40 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Merged _parse_text upwards.


diff -r d2ffc9d79c78 -r c55223bffb89 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 21:02:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 21:23:40 2010 +0000
@@ -27,39 +27,6 @@
 
 our $VERSION = '0.0.4';
 
-sub _parse_text
-{
-    my $self = shift;
-
-    my @ret;
-    while (my $unit = $self->_parse_text_unit())
-    {
-        push @ret, $unit;
-        my $type = $unit->{'type'};
-        if (($type eq "close") || ($type eq "open"))
-        {
-            push @ret, @{$self->_events_queue()};
-            $self->_events_queue([]);
-            return \@ret;
-        }
-    }
-
-=begin Removed
-
-    # If it's whitespace - return an empty list.
-    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
-    {
-        return $self->_new_empty_list();
-    }
-
-    return $self->_new_list(\@ret);
-
-=end Removed
-
-=cut
-
-}
-
 sub _find_next_inner_text
 {
     my $self = shift;
diff -r d2ffc9d79c78 -r c55223bffb89 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 21:02:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 21:23:40 2010 +0000
@@ -426,6 +426,26 @@
     }
 }
 
+sub _parse_text
+{
+    my $self = shift;
+
+    my @ret;
+    while (my $unit = $self->_parse_text_unit())
+    {
+        push @ret, $unit;
+        my $type = $unit->{'type'};
+        if (($type eq "close") || ($type eq "open"))
+        {
+            push @ret, @{$self->_events_queue()};
+            $self->_events_queue([]);
+            return \@ret;
+        }
+    }
+
+    return \@ret;
+}
+
 sub _flush_ret_tag
 {
     my $self = shift;
diff -r d2ffc9d79c78 -r c55223bffb89 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 21:02:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 21:23:40 2010 +0000
@@ -120,26 +120,6 @@
     }
 };
 
-sub _parse_text
-{
-    my $self = shift;
-
-    my @ret;
-    while (defined(my $unit = $self->_parse_text_unit()))
-    {
-        push @ret, $unit;
-        my $type = $unit->{'type'};
-        if (($type eq "close") || ($type eq "open"))
-        {
-            push @ret, @{$self->_events_queue()};
-            $self->_events_queue([]);
-            return \@ret;
-        }
-    }
-
-    return \@ret;
-}
-
 around '_parse_opening_tag' => sub {
     my ($orig, $self) = @_;
 
diff -r d2ffc9d79c78 -r c55223bffb89 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Wed Apr 21 21:02:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Wed Apr 21 21:23:40 2010 +0000
@@ -277,4 +277,18 @@
     return ($$l =~ $re);
 }
 
+=begin Removed
+    This was a removed part of _parse_text.
 
+    # If it's whitespace - return an empty list.
+    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
+    {
+        return $self->_new_empty_list();
+    }
+
+    return $self->_new_list(\@ret);
+
+=end Removed
+
+=cut
+

changeset:   195:d2ffc9d79c78
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 21:02:19 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Removed the functions for real this time - forgot to save the file. :-S.


diff -r 0de51853a412 -r d2ffc9d79c78 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 20:53:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 21:02:19 2010 +0000
@@ -168,48 +168,6 @@
     }
 };
 
-sub _parse_inner_tag
-{
-    my $self = shift;
-
-    my $open = $self->_parse_opening_tag();
-
-    if ($open->is_standalone())
-    {
-        # $self->skip_multiline_space();
-
-        return $self->_create_elem($open);
-    }
-
-    my $inside = $self->_parse_inner_text();
-
-    my $close = $self->_parse_closing_tag();
-
-    if ($open->{name} ne $close->{name})
-    {
-        Carp::confess("Opening and closing tags do not match: " 
-            . "$open->{name} and $close->{name} on element starting at "
-            . "line $open->{line}"
-        );
-    }
-    return $self->_create_elem($open, $self->_new_list($inside));
-}
-
-sub _determine_tag
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    return
-          ($$l =~ m{\G\[}) ? "open_desc"
-        : ($$l =~ m{\G\&}) ? "entity"
-        : ($$l =~ m{\G(?:</|\])}) ? "close"
-        : ($$l =~ m{\G<}) ? "open_tag"
-        : undef
-        ;
-}
-
 sub _parse_speech_unit
 {
     my $self = shift;

changeset:   194:0de51853a412
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 20:53:49 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm
description:
Moved some unused functions to the rejects.


diff -r bed33d7d89e5 -r 0de51853a412 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Apr 21 20:43:17 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Apr 21 20:53:49 2010 +0000
@@ -50,6 +50,7 @@
 rejects/lib/XML/Grammar/Fiction/RendererBase.pm
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
+rejects/Screenplay_Parser_QnD.pm
 t/00-load.t
 t/app-to-html.t
 t/boilerplate.t
diff -r bed33d7d89e5 -r 0de51853a412 perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/Screenplay_Parser_QnD.pm	Wed Apr 21 20:53:49 2010 +0000
@@ -0,0 +1,47 @@
+package rejects::Screenplay_Parser_QnD;
+
+use strict;
+use warnings;
+
+sub _parse_inner_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    if ($open->is_standalone())
+    {
+        # $self->skip_multiline_space();
+
+        return $self->_create_elem($open);
+    }
+
+    my $inside = $self->_parse_inner_text();
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Opening and closing tags do not match: " 
+            . "$open->{name} and $close->{name} on element starting at "
+            . "line $open->{line}"
+        );
+    }
+    return $self->_create_elem($open, $self->_new_list($inside));
+}
+
+sub _determine_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    return
+          ($$l =~ m{\G\[}) ? "open_desc"
+        : ($$l =~ m{\G\&}) ? "entity"
+        : ($$l =~ m{\G(?:</|\])}) ? "close"
+        : ($$l =~ m{\G<}) ? "open_tag"
+        : undef
+        ;
+}
+

changeset:   193:bed33d7d89e5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 20:43:17 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Convert a field access to an accessor.


diff -r 37e42674461f -r bed33d7d89e5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 20:14:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 20:43:17 2010 +0000
@@ -174,7 +174,7 @@
 
     my $open = $self->_parse_opening_tag();
 
-    if ($open->{is_standalone})
+    if ($open->is_standalone())
     {
         # $self->skip_multiline_space();
 

changeset:   192:37e42674461f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 20:14:50 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Merged up _parse_closing_tag into Parser::XmlIterator


diff -r 4dc0c5d7f391 -r 37e42674461f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 14:22:46 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 20:14:50 2010 +0000
@@ -27,28 +27,6 @@
 
 our $VERSION = '0.0.4';
 
-sub _parse_closing_tag
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    my $id_regex = $self->_get_id_regex();
-
-    if ($$l !~ m{\G</($id_regex)>}g)
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
-            "Cannot match closing tag",
-        );
-    }
-
-    return XML::Grammar::Fiction::Struct::Tag->new(
-        name => $1,
-        line => $self->line_num(),
-    );
-}
-
 sub _parse_text
 {
     my $self = shift;
diff -r 4dc0c5d7f391 -r 37e42674461f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 14:22:46 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 20:14:50 2010 +0000
@@ -247,6 +247,28 @@
     );
 }
 
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    my $id_regex = $self->_get_id_regex();
+
+    if ($$l !~ m{\G</($id_regex)>}g)
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
+            "Cannot match closing tag",
+        );
+    }
+
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $1,
+        line => $self->line_num(),
+    );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r 4dc0c5d7f391 -r 37e42674461f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 14:22:46 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 20:14:50 2010 +0000
@@ -102,14 +102,11 @@
     return ($self->_in_para() ? "innerdesc" : "desc");
 }
 
-sub _parse_closing_tag
-{
-    my $self = shift;
+around '_parse_closing_tag' => sub {
+    my ($orig, $self) = @_;
 
     my $l = $self->curr_line_ref();
 
-    my $id_regex = $self->_get_id_regex();
-
     if ($$l =~ m{\G\]}cg)
     {
         return XML::Grammar::Fiction::Struct::Tag->new(
@@ -117,18 +114,11 @@
             line => $self->line_num(),
         );
     }
-    elsif ($$l =~ m{\G</($id_regex)>}g)
-    {
-        return XML::Grammar::Fiction::Struct::Tag->new(
-            name => $1,
-            line => $self->line_num(),
-        );
-    }
     else
     {
-        Carp::confess("Cannot match closing tag at line ". $self->line_num());
+        return $self->$orig();
     }
-}
+};
 
 sub _parse_text
 {

changeset:   191:4dc0c5d7f391
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 14:22:46 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _parse_opening_tag to the XmlIterator base class.

This involved inheriting from it in the Screenplay class.


diff -r 79bf4707d27e -r 4dc0c5d7f391 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 13:11:47 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 14:22:46 2010 +0000
@@ -27,68 +27,13 @@
 
 our $VERSION = '0.0.4';
 
-my $id_regex = '[a-zA-Z_\-]+';
-
-sub _parse_opening_tag_attrs
+sub _parse_closing_tag
 {
     my $self = shift;
 
     my $l = $self->curr_line_ref();
 
-    my @attrs;
-
-    while (my ($name, $val) = $$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-    {
-        push @attrs, { 'key' => $name, 'value' => $val, };
-    }
-
-    return \@attrs;
-}
-
-sub _parse_opening_tag
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    if ($$l !~ m{\G<($id_regex)}cg)
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
-            "Cannot match opening tag.",
-        );
-    }
-
-    my $id = $1;
-
-    my $attrs = $self->_parse_opening_tag_attrs();
-
-    my $is_standalone = 0;
-    if ($$l =~ m{\G\s*/\s*>}cg)
-    {
-        $is_standalone = 1;
-    }
-    elsif ($$l !~ m{\G>}g)
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket',
-            "Cannot match the \">\" of the opening tag",
-        );
-    }
-    
-    return XML::Grammar::Fiction::Struct::Tag->new(
-        name => $id,
-        is_standalone => $is_standalone,
-        line => $self->line_num(),
-        attrs => $attrs,
-    );
-}
-
-sub _parse_closing_tag
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
+    my $id_regex = $self->_get_id_regex();
 
     if ($$l !~ m{\G</($id_regex)>}g)
     {
diff -r 79bf4707d27e -r 4dc0c5d7f391 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 13:11:47 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 14:22:46 2010 +0000
@@ -6,6 +6,7 @@
 use Moose;
 
 use XML::Grammar::Fiction::Err;
+use XML::Grammar::Fiction::Struct::Tag;
 
 extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
 
@@ -49,6 +50,11 @@
 # Whether we are inside a paragraph or not.
 has "_in_para" => (isa => "Bool", is => "rw", default => 0,);
 
+sub _get_id_regex
+{
+    return qr{[a-zA-Z_\-]+};
+}
+
 sub _top_tag
 {
     my $self = shift;
@@ -170,6 +176,77 @@
     );
 }
 
+sub _parse_opening_tag_attrs
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    my @attrs;
+
+    my $id_regex = $self->_get_id_regex();
+
+    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $1, 'value' => $2, };
+    }
+
+    return \@attrs;
+}
+
+sub _parse_opening_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    my $id_regex = $self->_get_id_regex();
+
+    # This is an assert
+    if (!defined($$l))
+    {
+        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
+    }
+
+    # This is an assert
+    if (!defined($self->curr_pos()))
+    {
+        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
+    }
+    
+    if ($$l !~ m{\G<($id_regex)}cg)
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
+            "Cannot match opening tag.",
+        );
+    }
+
+    my $id = $1;
+
+    my $attrs = $self->_parse_opening_tag_attrs();
+
+    my $is_standalone = 0;
+    if ($$l =~ m{\G\s*/\s*>}cg)
+    {
+        $is_standalone = 1;
+    }
+    elsif ($$l !~ m{\G>}g)
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket',
+            "Cannot match the \">\" of the opening tag",
+        );
+    }
+    
+    return XML::Grammar::Fiction::Struct::Tag->new(
+        name => $id,
+        is_standalone => $is_standalone,
+        line => $self->line_num(),
+        attrs => $attrs,
+    );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r 79bf4707d27e -r 4dc0c5d7f391 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 13:11:47 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 14:22:46 2010 +0000
@@ -8,7 +8,7 @@
 extends( 'XML::Grammar::Fiction::FromProto::Parser::XmlIterator' );
 
 use XML::Grammar::Fiction::FromProto::Nodes;
-use XML::Grammar::Screenplay::Struct::Tag;
+use XML::Grammar::Fiction::Struct::Tag;
 
 use List::Util ();
 use List::MoreUtils ();
@@ -80,8 +80,6 @@
     return;
 };
 
-my $id_regex = '[a-zA-Z_\-]+';
-
 sub _new_saying
 {
     my $self = shift;
@@ -104,94 +102,24 @@
     return ($self->_in_para() ? "innerdesc" : "desc");
 }
 
-sub _parse_opening_tag
-{
-    my $self = shift;
-
-    my $l = $self->curr_line_ref();
-
-    # This is an assert
-    if (!defined($$l))
-    {
-        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
-    }
-
-    # This is an assert
-    if (!defined($self->curr_pos()))
-    {
-        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
-    }
-
-    my $is_start = ($self->curr_pos() == 0);
-
-    if ($$l =~ m{\G\[}cg)
-    {
-        my $not_inline = 0;
-        if ($is_start && $self->_prev_line_is_empty())
-        {
-            $self->_close_top_tags();
-            $not_inline = 1;
-        }
-
-        return XML::Grammar::Screenplay::Struct::Tag->new(
-            name => $not_inline ? "desc" : $self->_get_desc_name(),
-            line => $self->line_num(),
-            attrs => [],
-        );
-    }
-
-    if ($$l !~ m{\G<($id_regex)}g)
-    {
-        Carp::confess("Cannot match opening tag at line " . $self->line_num());
-    }
-
-    my $id = $1;
-
-    my @attrs;
-
-    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-    {
-        push @attrs, { 'key' => $1, 'value' => $2, };
-    }
-
-    my $is_standalone = 0;
-
-    if ($$l =~ m{\G\s*/\s*>}cg)
-    {
-        $is_standalone = 1;
-    }
-    elsif ($$l !~ m{\G>}g)
-    {
-        Carp::confess (
-            "Cannot match the \">\" of the opening tag at line " 
-            . $self->line_num()
-        );
-    }
-     
-    return XML::Grammar::Screenplay::Struct::Tag->new(
-        name => $id,
-        is_standalone => $is_standalone,
-        line => $self->line_num(),
-        attrs => \@attrs,
-    );
-}
-
 sub _parse_closing_tag
 {
     my $self = shift;
 
     my $l = $self->curr_line_ref();
 
+    my $id_regex = $self->_get_id_regex();
+
     if ($$l =~ m{\G\]}cg)
     {
-        return XML::Grammar::Screenplay::Struct::Tag->new(
+        return XML::Grammar::Fiction::Struct::Tag->new(
             name => $self->_get_desc_name(),
             line => $self->line_num(),
         );
     }
     elsif ($$l =~ m{\G</($id_regex)>}g)
     {
-        return XML::Grammar::Screenplay::Struct::Tag->new(
+        return XML::Grammar::Fiction::Struct::Tag->new(
             name => $1,
             line => $self->line_num(),
         );
@@ -200,7 +128,6 @@
     {
         Carp::confess("Cannot match closing tag at line ". $self->line_num());
     }
-
 }
 
 sub _parse_text
@@ -221,8 +148,35 @@
     }
 
     return \@ret;
+}
 
-}
+around '_parse_opening_tag' => sub {
+    my ($orig, $self) = @_;
+
+    my $l = $self->curr_line_ref();
+
+    my $is_start = ($self->curr_pos() == 0);
+
+    if ($$l =~ m{\G\[}cg)
+    {
+        my $not_inline = 0;
+        if ($is_start && $self->_prev_line_is_empty())
+        {
+            $self->_close_top_tags();
+            $not_inline = 1;
+        }
+
+        return XML::Grammar::Fiction::Struct::Tag->new(
+            name => $not_inline ? "desc" : $self->_get_desc_name(),
+            line => $self->line_num(),
+            attrs => [],
+        );
+    }
+    else
+    {
+        return $self->$orig();
+    }
+};
 
 sub _parse_inner_tag
 {
@@ -529,7 +483,7 @@
     my $self = shift;
 
     my $new_elem = 
-    XML::Grammar::Screenplay::Struct::Tag::Para->new(
+    XML::Grammar::Fiction::Struct::Tag::Para->new(
         name => "p",
         is_standalone => 0,
         line => $self->line_num(),
@@ -582,7 +536,7 @@
     my $event = shift;
 
     my $new_tag =
-        XML::Grammar::Screenplay::Struct::Tag->new(
+        XML::Grammar::Fiction::Struct::Tag->new(
             {
                 name => "saying",
                 is_standalone => 0,

changeset:   190:79bf4707d27e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 13:11:47 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Made the inheritance graph saner.


diff -r d8cf0a6a77a1 -r 79bf4707d27e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 21 13:09:08 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 21 13:11:47 2010 +0000
@@ -14,7 +14,7 @@
 
 use Moose;
 
-has "_parser" => ('isa' => "XML::Grammar::Screenplay::FromProto::Parser", 'is' => "rw");
+has "_parser" => ('is' => "rw");
 has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
 
 has '_buffer' => ('isa' => "ScalarRef[Str]", is => "rw");
diff -r d8cf0a6a77a1 -r 79bf4707d27e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 13:09:08 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 13:11:47 2010 +0000
@@ -5,10 +5,7 @@
 
 use Moose;
 
-extends(
-    'XML::Grammar::Screenplay::FromProto::Parser',
-    'XML::Grammar::Fiction::FromProto::Parser::XmlIterator',
-);
+extends( 'XML::Grammar::Fiction::FromProto::Parser::XmlIterator' );
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 use XML::Grammar::Screenplay::Struct::Tag;

changeset:   189:d8cf0a6a77a1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 13:09:08 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _new_comment to ::XmlIterator.


diff -r e8bf6ee24fc5 -r d8cf0a6a77a1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:56:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 13:09:08 2010 +0000
@@ -29,19 +29,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_comment
-{
-    my $self = shift;
-    my $text = shift;
-
-    return $self->_new_node(
-        {
-            t => "Comment",
-            text => $text,
-        }
-    );
-}
-
 sub _parse_opening_tag_attrs
 {
     my $self = shift;
diff -r e8bf6ee24fc5 -r d8cf0a6a77a1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:56:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 13:09:08 2010 +0000
@@ -157,6 +157,19 @@
     );
 }
 
+sub _new_comment
+{
+    my $self = shift;
+    my $text = shift;
+
+    return $self->_new_node(
+        {
+            t => "Comment",
+            text => $text,
+        }
+    );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r e8bf6ee24fc5 -r d8cf0a6a77a1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:56:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 13:09:08 2010 +0000
@@ -85,20 +85,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-
-sub _new_comment
-{
-    my $self = shift;
-    my $text = shift;
-
-    return $self->_new_node(
-        {
-            t => "Comment",
-            text => $text,
-        }
-    );
-}
-
 sub _new_saying
 {
     my $self = shift;

changeset:   188:e8bf6ee24fc5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 12:56:31 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Move _new_text to the base class.


diff -r 1af830fcc750 -r e8bf6ee24fc5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:47:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:56:31 2010 +0000
@@ -7,7 +7,6 @@
 
 extends("XML::Grammar::Fiction::FromProto::Parser::XmlIterator");
 
-
 use XML::Grammar::Fiction::FromProto::Nodes;
 
 use XML::Grammar::Fiction::Struct::Tag;
@@ -30,19 +29,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_text
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "Text",
-            children => $self->_new_list($contents),
-        }
-    );
-}
-
 sub _new_comment
 {
     my $self = shift;
diff -r 1af830fcc750 -r e8bf6ee24fc5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:47:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:56:31 2010 +0000
@@ -144,6 +144,19 @@
     );
 }
 
+sub _new_text
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "Text",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r 1af830fcc750 -r e8bf6ee24fc5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:47:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:56:31 2010 +0000
@@ -121,19 +121,6 @@
     return ($self->_in_para() ? "innerdesc" : "desc");
 }
 
-sub _new_text
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "Text",
-            children => $self->_new_list($contents),
-        }
-    );
-}
-
 sub _parse_opening_tag
 {
     my $self = shift;

changeset:   187:1af830fcc750
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 12:47:37 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Move _new_para to the base class.


diff -r 5a0febda4e84 -r 1af830fcc750 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:29:04 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:47:37 2010 +0000
@@ -30,19 +30,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_para
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "Paragraph",
-            children => $self->_new_list($contents),
-        }
-    );
-}
-
 sub _new_text
 {
     my $self = shift;
diff -r 5a0febda4e84 -r 1af830fcc750 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:29:04 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:47:37 2010 +0000
@@ -121,6 +121,29 @@
     );
 }
 
+sub _new_para
+{
+    my $self = shift;
+    my $contents = shift;
+
+    # This is an assert
+    if (List::MoreUtils::any 
+        { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
+        @{$contents || []}
+        )
+    {
+        Carp::confess (qq{Para contains a saying.});
+    }
+
+
+    return $self->_new_node(
+        {
+            t => "Paragraph",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r 5a0febda4e84 -r 1af830fcc750 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:29:04 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:47:37 2010 +0000
@@ -85,28 +85,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_para
-{
-    my $self = shift;
-    my $contents = shift;
-
-    # This is an assert
-    if (List::MoreUtils::any 
-        { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
-        @{$contents || []}
-        )
-    {
-        Carp::confess (qq{Para contains a saying.});
-    }
-
-
-    return $self->_new_node(
-        {
-            t => "Paragraph",
-            children => $self->_new_list($contents),
-        }
-    );
-}
 
 sub _new_comment
 {

changeset:   186:5a0febda4e84
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 12:29:04 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _new_list to XmlIterator.


diff -r a07a4a644119 -r 5a0febda4e84 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:04:07 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:29:04 2010 +0000
@@ -30,19 +30,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_list
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "List",
-            contents => $contents,
-        }
-    );
-}
-
 sub _new_para
 {
     my $self = shift;
diff -r a07a4a644119 -r 5a0febda4e84 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:04:07 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:29:04 2010 +0000
@@ -108,6 +108,19 @@
         );
 }
 
+sub _new_list
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "List",
+            contents => $contents,
+        }
+    );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r a07a4a644119 -r 5a0febda4e84 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:04:07 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:29:04 2010 +0000
@@ -85,19 +85,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_list
-{
-    my $self = shift;
-    my $contents = shift;
-
-    return $self->_new_node(
-        {
-            t => "List",
-            contents => $contents,
-        }
-    );
-}
-
 sub _new_para
 {
     my $self = shift;

changeset:   185:a07a4a644119
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 12:04:07 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _create_elem to the base class.


diff -r 2735210915d6 -r a07a4a644119 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 11:56:21 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 12:04:07 2010 +0000
@@ -30,23 +30,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _create_elem
-{
-    my $self = shift;
-    my $open = shift;
-    my $children = shift || $self->_new_empty_list();
-
-    return
-        $self->_new_node(
-            {
-                t => "Element",
-                name => $open->name(),
-                children => $children,
-                attrs => $open->attrs(),
-            }
-        );
-}
-
 sub _new_list
 {
     my $self = shift;
diff -r 2735210915d6 -r a07a4a644119 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 11:56:21 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 12:04:07 2010 +0000
@@ -85,6 +85,29 @@
     return $class->new(%$args);
 }
 
+
+sub _create_elem
+{
+    my $self = shift;
+    my $open = shift;
+
+    my $children = @_ ? shift(@_) : $self->_new_empty_list();
+
+    return
+        $self->_new_node(
+            {
+                t => (
+                    $open->name() eq "desc" ? "Description" 
+                    : $open->name() eq "innerdesc" ? "InnerDesc"
+                    : "Element"
+                ),
+                name => $open->name(),
+                children => $children,
+                attrs => $open->attrs(),
+            }
+        );
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r 2735210915d6 -r a07a4a644119 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 11:56:21 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 12:04:07 2010 +0000
@@ -85,28 +85,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _create_elem
-{
-    my $self = shift;
-    my $open = shift;
-
-    my $children = @_ ? shift(@_) : $self->_new_empty_list();
-
-    return
-        $self->_new_node(
-            {
-                t => (
-                    $open->name() eq "desc" ? "Description" 
-                    : $open->name() eq "innerdesc" ? "InnerDesc"
-                    : "Element"
-                ),
-                name => $open->{name},
-                children => $children,
-                attrs => $open->{attrs},
-            }
-        );
-}
-
 sub _new_list
 {
     my $self = shift;

changeset:   184:2735210915d6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 11:56:21 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
description:
Got rid of an unused module.


diff -r 451b2c95f9a7 -r 2735210915d6 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Apr 21 11:52:55 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Apr 21 11:56:21 2010 +0000
@@ -34,7 +34,6 @@
 lib/XML/Grammar/Screenplay/App/ToDocBook.pm
 lib/XML/Grammar/Screenplay/App/ToHTML.pm
 lib/XML/Grammar/Screenplay/Base.pm
-lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
 lib/XML/Grammar/Screenplay/FromProto/Parser.pm
 lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
 lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
diff -r 451b2c95f9a7 -r 2735210915d6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm	Wed Apr 21 11:52:55 2010 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,120 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Nodes;
-
-use strict;
-use warnings;
-
-use List::Util ();
-
-package XML::Grammar::Screenplay::FromProto::Node;
-
-use Moose;
-
-package XML::Grammar::Screenplay::FromProto::Node::WithContent;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node");
-
-has 'children' => (
-    isa => 'XML::Grammar::Screenplay::FromProto::Node::List', 
-    is => 'rw'
-);
-
-sub _get_childs
-{
-    my $self = shift;
-
-    my $childs = $self->children->contents();
-
-    return $childs || [];
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::Element;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
-
-has 'name' => (isa => 'Str', is => 'rw');
-has 'attrs' => (isa => 'ArrayRef', is => 'rw');
-
-sub lookup_attr
-{
-    my ($self, $attr_name) = @_;
-
-    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
-
-    if (!defined($pair))
-    {
-        return undef;
-    }
-    else
-    {
-        return $pair->{value};
-    }
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::List;
-
-use Moose;
-
-has 'contents' => (isa => "ArrayRef", is => "rw");
-
-package XML::Grammar::Screenplay::FromProto::Node::Text;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
-
-package XML::Grammar::Screenplay::FromProto::Node::Saying;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Text");
-
-has 'character' => (isa => "Str", is => "rw", required => 1,);
-
-package XML::Grammar::Screenplay::FromProto::Node::Description;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Text");
-
-package XML::Grammar::Screenplay::FromProto::Node::Paragraph;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Element");
-
-package XML::Grammar::Screenplay::FromProto::Node::InnerDesc;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Element");
-
-sub name
-{
-    return "inlinedesc";
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::Comment;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node");
-
-has "text" => (isa => "Str", is => "rw");
-
-1;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Screenplay::FromProto.
-
-=head1 DESCRIPTION
-
-Contains several nodes.
-
-=cut
-

changeset:   183:451b2c95f9a7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 11:52:55 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
description:
Merged the ::Screenplay::FromProto::Node classes into ::Fiction..Node.


diff -r efc616376301 -r 451b2c95f9a7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 11:31:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 11:52:55 2010 +0000
@@ -30,20 +30,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_node
-{
-    my $self = shift;
-    my $args = shift;
-
-    # t == type
-    my $class = 
-        "XML::Grammar::Fiction::FromProto::Node::"
-        . delete($args->{'t'})
-        ;
-
-    return $class->new(%$args);
-}
-
 sub _create_elem
 {
     my $self = shift;
diff -r efc616376301 -r 451b2c95f9a7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 11:31:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 11:52:55 2010 +0000
@@ -71,6 +71,20 @@
     return $self->_new_list([]);
 }
 
+sub _new_node
+{
+    my $self = shift;
+    my $args = shift;
+
+    # t == type
+    my $class = 
+        "XML::Grammar::Fiction::FromProto::Node::"
+        . delete($args->{'t'})
+        ;
+
+    return $class->new(%$args);
+}
+
 sub _check_for_open_tag
 {
     my $self = shift;
diff -r efc616376301 -r 451b2c95f9a7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 21 11:31:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Wed Apr 21 11:52:55 2010 +0000
@@ -10,7 +10,7 @@
 use XML::Writer;
 use HTML::Entities ();
 
-use XML::Grammar::Screenplay::FromProto::Nodes;
+use XML::Grammar::Fiction::FromProto::Nodes;
 
 use Moose;
 
@@ -101,7 +101,7 @@
 {
     my ($self, $elem) = @_;
 
-    if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying"))
+    if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying"))
     {
         $self->_output_tag_with_childs(
             {
@@ -110,7 +110,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Description"))
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Description"))
     {
         $self->_output_tag_with_childs(
             {
@@ -119,7 +119,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
     {
         foreach my $child (@{$elem->_get_childs()})
         {
@@ -142,7 +142,7 @@
     {
         $self->_writer->characters($elem);
     }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph"))
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph"))
     {
         $self->_output_tag_with_childs(
             {
@@ -151,7 +151,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Element"))
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Element"))
     {
         if (($elem->name() eq "s") || ($elem->name() eq "section"))
         {
@@ -179,7 +179,7 @@
         {
             $self->_writer->emptyTag("br");
         }
-        elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::InnerDesc"))
+        elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::InnerDesc"))
         {
             $self->_output_tag_with_childs(
                 {
@@ -189,11 +189,11 @@
             );
         }
     }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
     {
         $self->_handle_text_start($elem);
     }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Comment"))
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Comment"))
     {
         $self->_writer->comment($elem->text());
     }
diff -r efc616376301 -r 451b2c95f9a7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 11:31:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 11:52:55 2010 +0000
@@ -10,7 +10,7 @@
     'XML::Grammar::Fiction::FromProto::Parser::XmlIterator',
 );
 
-use XML::Grammar::Screenplay::FromProto::Nodes;
+use XML::Grammar::Fiction::FromProto::Nodes;
 use XML::Grammar::Screenplay::Struct::Tag;
 
 use List::Util ();
@@ -85,20 +85,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-sub _new_node
-{
-    my $self = shift;
-    my $args = shift;
-
-    # t == type
-    my $class = 
-        "XML::Grammar::Screenplay::FromProto::Node::"
-        . delete($args->{'t'})
-        ;
-
-    return $class->new(%$args);
-}
-
 sub _create_elem
 {
     my $self = shift;
@@ -141,7 +127,7 @@
 
     # This is an assert
     if (List::MoreUtils::any 
-        { ref($_) ne "" && $_->isa("XML::Grammar::Screenplay::FromProto::Node::Saying") }
+        { ref($_) ne "" && $_->isa("XML::Grammar::Fiction::FromProto::Node::Saying") }
         @{$contents || []}
         )
     {
@@ -517,13 +503,13 @@
 
         my $elem = $status->{'elem'};
         my $is_para_end = $status->{'para_end'};
-        my $is_saying = $elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying");
+        my $is_saying = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying");
         #my $is_para =
         #    (($self->curr_pos() == 0) && 
         #     (${$self->curr_line_ref()} =~ m{\G\n?\z})
         #    );
         # Trying out this one:
-        my $is_para = $elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph");
+        my $is_para = $elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph");
 
         my $in_para = $self->_in_para();
         my $was_already_enqueued = 0;
@@ -555,7 +541,7 @@
             $in_para = 1;
         }
 
-        if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text") &&
+        if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text") &&
             !$was_already_enqueued)
         {
             if (!$in_para)
diff -r efc616376301 -r 451b2c95f9a7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Wed Apr 21 11:31:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Wed Apr 21 11:52:55 2010 +0000
@@ -5,8 +5,6 @@
 
 use Moose;
 
-use XML::Grammar::Screenplay::FromProto::Nodes;
-
 =head1 NAME
 
 XML::Grammar::Screenplay::Struct::Tag - information about an XML/SGML opening or 

changeset:   182:efc616376301
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 11:31:49 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Remove an unused method.


diff -r 915d144433e7 -r efc616376301 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 11:29:12 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 11:31:49 2010 +0000
@@ -83,16 +83,8 @@
     return;
 };
 
-sub _init
-{
-    my $self = shift;
-
-    return 0;
-}
-
 my $id_regex = '[a-zA-Z_\-]+';
 
-
 sub _new_node
 {
     my $self = shift;

changeset:   181:915d144433e7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 11:29:12 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _in_para to XmlIterator.


diff -r 4a71f1fc06e6 -r 915d144433e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 09:26:12 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 11:29:12 2010 +0000
@@ -7,7 +7,6 @@
 
 extends("XML::Grammar::Fiction::FromProto::Parser::XmlIterator");
 
-has "_in_para" => (isa => "Bool", is => "rw");
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
diff -r 4a71f1fc06e6 -r 915d144433e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 09:26:12 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 11:29:12 2010 +0000
@@ -46,6 +46,9 @@
     clearer => "_clear_ret_tag",
 );
 
+# Whether we are inside a paragraph or not.
+has "_in_para" => (isa => "Bool", is => "rw", default => 0,);
+
 sub _top_tag
 {
     my $self = shift;
@@ -252,8 +255,6 @@
 {
     my $self = shift;
 
-    $self->_in_para(0);
-
     $self->_main_loop();
 
     return $self->_flush_ret_tag();
diff -r 4a71f1fc06e6 -r 915d144433e7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 09:26:12 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 11:29:12 2010 +0000
@@ -16,7 +16,6 @@
 use List::Util ();
 use List::MoreUtils ();
 
-has "_in_para" => (isa => "Bool", is => "rw");
 has "_in_saying" => (isa => "Bool", is => "rw");
 has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
 

changeset:   180:4a71f1fc06e6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 09:26:12 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _parse_all to the base class.


diff -r b85b1cb64a25 -r 4a71f1fc06e6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 09:16:20 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 09:26:12 2010 +0000
@@ -468,18 +468,13 @@
     return;
 }
 
-sub _parse_all
-{
+before '_parse_all' => sub {
     my $self = shift;
 
     $self->skip_space();
 
-    $self->_in_para(0);
-
-    $self->_main_loop();
-
-    return $self->_flush_ret_tag();
-}
+    return;
+};
 
 =head1 METHODS
 
diff -r b85b1cb64a25 -r 4a71f1fc06e6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 09:16:20 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 09:26:12 2010 +0000
@@ -248,6 +248,17 @@
     return;
 }
 
+sub _parse_all
+{
+    my $self = shift;
+
+    $self->_in_para(0);
+
+    $self->_main_loop();
+
+    return $self->_flush_ret_tag();
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r b85b1cb64a25 -r 4a71f1fc06e6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 09:16:20 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 09:26:12 2010 +0000
@@ -837,19 +837,6 @@
 }
 
 
-sub _parse_all
-{
-    my $self = shift;
-
-    # $self->skip_multiline_space();
-
-    $self->_in_para(0);
-
-    $self->_main_loop();
-
-    return $self->_flush_ret_tag();
-}
-
 =head1 NAME
 
 XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser

changeset:   179:b85b1cb64a25
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 09:16:20 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _main_loop and _main_loop_iter.


diff -r c82c44b811c8 -r b85b1cb64a25 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 09:15:56 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Apr 21 09:16:20 2010 +0000
@@ -452,6 +452,22 @@
     return ($is_tag_cond, $is_close);
 }
 
+sub _main_loop_iter
+{
+    my $self = shift;
+
+    if ($self->_look_ahead_for_comment())
+    {
+        return;
+    }
+
+    $self->skip_space();
+
+    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
+
+    return;
+}
+
 sub _parse_all
 {
     my $self = shift;
@@ -460,21 +476,9 @@
 
     $self->_in_para(0);
 
-    my $ret_tag;
+    $self->_main_loop();
 
-    TAGS_LOOP:
-    while (!defined($ret_tag))
-    {
-        if ($self->_look_ahead_for_comment())
-        {
-            redo TAGS_LOOP;
-        }
-        $self->skip_space();
-
-        $ret_tag = $self->_look_for_and_handle_tag();
-    }
-
-    return $ret_tag;
+    return $self->_flush_ret_tag();
 }
 
 =head1 METHODS
diff -r c82c44b811c8 -r b85b1cb64a25 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 09:15:56 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Wed Apr 21 09:16:20 2010 +0000
@@ -38,6 +38,14 @@
     },
 );
 
+has '_ret_tag' =>
+(
+    is => "rw",
+    # TODO : add isa.
+    predicate => "_has_ret_tag",
+    clearer => "_clear_ret_tag",
+);
+
 sub _top_tag
 {
     my $self = shift;
@@ -217,6 +225,29 @@
     }
 }
 
+sub _flush_ret_tag
+{
+    my $self = shift;
+
+    my $ret = $self->_ret_tag();
+
+    $self->_clear_ret_tag();
+
+    return $ret;
+}
+
+sub _main_loop
+{
+    my $self = shift;
+
+    while (! defined($self->_ret_tag()))
+    {
+        $self->_main_loop_iter();
+    }
+
+    return;
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r c82c44b811c8 -r b85b1cb64a25 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 09:15:56 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 09:16:20 2010 +0000
@@ -792,6 +792,51 @@
     return ($is_tag_cond, $is_close);
 }
 
+sub _main_loop_iter
+{
+    my $self = shift;
+
+    # This is an assert.
+    if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
+    {
+        Carp::confess (qq{Reached EOF.});
+    }
+    
+    if ($self->_look_ahead_for_comment())
+    {
+        return;
+    }
+
+    my ($l, $p) = $self->curr_line_and_pos();
+
+    if ($$l eq "\n")
+    {
+        if ($self->_top_is_para())
+        {
+            $self->_close_para();
+        }
+        $self->next_line_ref();
+        return;
+    }
+    
+    if ($$l =~ m{\G([ \t]+)\n?\z})
+    {
+        if (length($1))
+        {
+            $self->_add_to_top_tag( $self->_new_text([" "]) );
+        }
+
+        $self->next_line_ref();
+
+        return;
+    }
+    
+    $self->_ret_tag(scalar($self->_look_for_and_handle_tag()));
+
+    return;
+}
+
+
 sub _parse_all
 {
     my $self = shift;
@@ -800,50 +845,9 @@
 
     $self->_in_para(0);
 
-    my $ret_tag;
+    $self->_main_loop();
 
-    TAGS_LOOP:
-    while (!defined($ret_tag))
-    {
-        # This is an assert.
-        if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
-        {
-            Carp::confess (qq{Reached EOF.});
-        }
-        
-        if ($self->_look_ahead_for_comment())
-        {
-            redo TAGS_LOOP;
-        }
-
-        my ($l, $p) = $self->curr_line_and_pos();
-
-        if ($$l eq "\n")
-        {
-            if ($self->_top_is_para())
-            {
-                $self->_close_para();
-            }
-            $self->next_line_ref();
-            next TAGS_LOOP;
-        }
-        
-        if ($$l =~ m{\G([ \t]+)\n?\z})
-        {
-            if (length($1))
-            {
-                $self->_add_to_top_tag( $self->_new_text([" "]) );
-            }
-
-            $self->next_line_ref();
-
-            next TAGS_LOOP;            
-        }
-        
-        $ret_tag = $self->_look_for_and_handle_tag();
-    }
-
-    return $ret_tag;
+    return $self->_flush_ret_tag();
 }
 
 =head1 NAME

changeset:   178:c82c44b811c8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 09:15:56 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Made future debugging easier.


diff -r 9aec4c144f87 -r c82c44b811c8 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Apr 21 08:36:25 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Apr 21 09:15:56 2010 +0000
@@ -15,8 +15,9 @@
 
 {
     my $grammar = XML::Grammar::Fiction::FromProto->new({});
+    my $got_xml;
     eval {
-    my $got_xml = $grammar->convert(
+        $got_xml = $grammar->convert(
         {
             source =>
             {

changeset:   177:9aec4c144f87
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Apr 21 08:36:25 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Removed some unused condition in Screenplay to normalize with Fiction.


diff -r 0caeff35dc6b -r 9aec4c144f87 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 18:38:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Wed Apr 21 08:36:25 2010 +0000
@@ -803,7 +803,7 @@
     my $ret_tag;
 
     TAGS_LOOP:
-    while (!defined($ret_tag) || @{$self->_tags_stack()})
+    while (!defined($ret_tag))
     {
         # This is an assert.
         if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))

changeset:   176:0caeff35dc6b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 18:38:35 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Move the common _handle_close_tag functionality to XmlIterator.


diff -r d244b0eefbe9 -r 0caeff35dc6b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 18:30:55 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 18:38:35 2010 +0000
@@ -434,27 +434,11 @@
     return;
 }
 
-sub _handle_close_tag
-{
+before '_handle_close_tag' => sub { 
     my $self = shift;
 
-    my $close = $self->_parse_closing_tag();
-
     $self->skip_space();
-
-    my $open = $self->_pop_tag;
-
-    if ($open->name() ne $close->name())
-    {
-        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
-            error => "Tags do not match",
-            opening_tag => $open,
-            closing_tag => $close,
-        );
-    }
-
-    return $self->_merge_tag($open);
-}
+};
 
 sub _look_ahead_for_tag
 {
diff -r d244b0eefbe9 -r 0caeff35dc6b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 18:30:55 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 18:38:35 2010 +0000
@@ -177,6 +177,26 @@
     }
 }
 
+sub _handle_close_tag
+{
+    my $self = shift;
+
+    my $close = $self->_parse_closing_tag();
+
+    my $open = $self->_pop_tag();
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    return $self->_merge_tag($open);
+}
+
 sub _look_ahead_for_comment
 {
     my $self = shift;
diff -r d244b0eefbe9 -r 0caeff35dc6b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 18:30:55 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 18:38:35 2010 +0000
@@ -773,27 +773,11 @@
     return;
 }
 
-sub _handle_close_tag
-{
+before '_handle_close_tag' => sub { 
     my $self = shift;
 
     $self->_close_top_tags();
-
-    my $close = $self->_parse_closing_tag();
-
-    my $open = $self->_pop_tag();
-
-    if ($open->name() ne $close->name())
-    {
-        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
-            error => "Tags do not match",
-            opening_tag => $open,
-            closing_tag => $close,
-        );
-    }
-
-    return $self->_merge_tag($open);
-}
+};
 
 sub _look_ahead_for_tag
 {

changeset:   175:d244b0eefbe9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 18:30:55 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _merge_tag in the base class and simplified the logic.


diff -r 8f8e598799aa -r d244b0eefbe9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 13:48:08 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 18:30:55 2010 +0000
@@ -453,22 +453,7 @@
         );
     }
 
-    my $new_elem = 
-        $self->_create_elem(
-            $open, 
-            $self->_new_list($open->detach_children()),
-        );
-
-    if (@{$self->_tags_stack()})
-    {
-        $self->_add_to_top_tag($new_elem);
-
-        return;
-    }
-    else
-    {
-        return $new_elem;
-    }
+    return $self->_merge_tag($open);
 }
 
 sub _look_ahead_for_tag
diff -r 8f8e598799aa -r d244b0eefbe9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 13:48:08 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 18:30:55 2010 +0000
@@ -155,6 +155,28 @@
     return;
 }
 
+sub _merge_tag
+{
+    my $self = shift;
+    my $open_tag = shift;
+
+    my $new_elem = 
+        $self->_create_elem(
+            $open_tag, 
+            $self->_new_list($open_tag->detach_children()),
+        );
+
+    if (! $self->_tag_stack_is_empty())
+    {
+        $self->_add_to_top_tag($new_elem);
+        return;
+    }
+    else
+    {
+        return $new_elem;
+    }
+}
+
 sub _look_ahead_for_comment
 {
     my $self = shift;
diff -r 8f8e598799aa -r d244b0eefbe9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:48:08 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 18:30:55 2010 +0000
@@ -580,28 +580,6 @@
     }
 }
 
-sub _merge_tag
-{
-    my $self = shift;
-    my $open_tag = shift;
-
-    my $new_elem = 
-        $self->_create_elem(
-            $open_tag, 
-            $self->_new_list($open_tag->detach_children()),
-        );
-
-    if (@{$self->_tags_stack()})
-    {
-        $self->_add_to_top_tag($new_elem);
-        return;
-    }
-    else
-    {
-        return $new_elem;
-    }
-}
-
 sub _close_saying
 {
     my $self = shift;
@@ -814,14 +792,7 @@
         );
     }
 
-    if (defined(my $top_elem = $self->_merge_tag($open)))
-    {
-        return $top_elem;
-    }
-    else
-    {
-        return;
-    }
+    return $self->_merge_tag($open);
 }
 
 sub _look_ahead_for_tag

changeset:   174:8f8e598799aa
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 13:48:08 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _look_ahead_for_comment into XmlIterator.

This placed it in the base class with calls from the two sub-classes.


diff -r 388632b8827f -r 8f8e598799aa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 13:23:52 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 13:48:08 2010 +0000
@@ -483,26 +483,6 @@
     return ($is_tag_cond, $is_close);
 }
 
-sub _look_ahead_for_comment
-{
-    my $self = shift;
-
-    if ($self->curr_line_continues_with(qr{<!--}))
-    {
-        my $text = $self->consume_up_to(qr{-->});
-
-        $self->_add_to_top_tag(
-            $self->_new_comment($text),
-        );
-
-        return 1;
-    }
-    else
-    {
-        return;
-    }
-}
-
 sub _parse_all
 {
     my $self = shift;
diff -r 388632b8827f -r 8f8e598799aa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 13:23:52 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 13:48:08 2010 +0000
@@ -155,6 +155,26 @@
     return;
 }
 
+sub _look_ahead_for_comment
+{
+    my $self = shift;
+
+    if ($self->curr_line_continues_with(qr{<!--}))
+    {
+        my $text = $self->consume_up_to(qr{-->});
+
+        $self->_add_to_top_tag(
+            $self->_new_comment($text),
+        );
+
+        return 1;
+    }
+    else
+    {
+        return;
+    }
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r 388632b8827f -r 8f8e598799aa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:23:52 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:48:08 2010 +0000
@@ -856,16 +856,11 @@
             Carp::confess (qq{Reached EOF.});
         }
         
-
-        if ($self->curr_line_continues_with(qr{<!--}))
+        if ($self->_look_ahead_for_comment())
         {
-            my $text = $self->consume_up_to(qr{-->});
-
-            $self->_add_to_top_tag( $self->_new_comment($text) );
             redo TAGS_LOOP;
         }
 
-
         my ($l, $p) = $self->curr_line_and_pos();
 
         if ($$l eq "\n")

changeset:   173:388632b8827f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 13:23:52 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract the _look_for_and_handle_tag common code into XmlIterator.


diff -r 77b006cb70a1 -r 388632b8827f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 13:18:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 13:23:52 2010 +0000
@@ -514,7 +514,7 @@
     my $ret_tag;
 
     TAGS_LOOP:
-    while (1)
+    while (!defined($ret_tag))
     {
         if ($self->_look_ahead_for_comment())
         {
@@ -522,24 +522,7 @@
         }
         $self->skip_space();
 
-        my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
-
-        # Check if it's a closing tag.
-        if ($is_close)
-        {
-            if ($ret_tag = $self->_handle_close_tag())
-            {
-                last TAGS_LOOP;
-            }
-        }
-        elsif ($is_tag_cond)
-        {
-            $self->_handle_open_tag();
-        }
-        else
-        {
-            $self->_handle_non_tag_text();
-        }
+        $ret_tag = $self->_look_for_and_handle_tag();
     }
 
     return $ret_tag;
diff -r 77b006cb70a1 -r 388632b8827f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 13:18:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 13:23:52 2010 +0000
@@ -131,6 +131,30 @@
 
     return;
 }
+
+
+sub _look_for_and_handle_tag
+{
+    my $self = shift;
+
+    my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
+
+    # Check if it's a closing tag.
+    if ($is_close)
+    {
+        return $self->_handle_close_tag();
+    }
+    elsif ($is_tag_cond)
+    {
+        $self->_handle_open_tag();
+    }
+    else
+    {
+        $self->_handle_non_tag_text();
+    }
+    return;
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r 77b006cb70a1 -r 388632b8827f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:18:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:23:52 2010 +0000
@@ -845,16 +845,11 @@
 
     $self->_in_para(0);
 
-    my $run_once = 1;
-
     my $ret_tag;
 
-
     TAGS_LOOP:
-    while ($run_once || @{$self->_tags_stack()})
+    while (!defined($ret_tag) || @{$self->_tags_stack()})
     {
-        $run_once = 0;
-
         # This is an assert.
         if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
         {
@@ -895,24 +890,7 @@
             next TAGS_LOOP;            
         }
         
-        my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
-
-        # Check if it's a closing tag.
-        if ($is_close)
-        {
-            if ($ret_tag = $self->_handle_close_tag())
-            {
-                last TAGS_LOOP;
-            }
-        }
-        elsif ($is_tag_cond)
-        {
-            $self->_handle_open_tag();
-        }
-        else
-        {
-            $self->_handle_non_tag_text();
-        }
+        $ret_tag = $self->_look_for_and_handle_tag();
     }
 
     return $ret_tag;

changeset:   172:77b006cb70a1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 13:18:50 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _look_ahead_for_tag.


diff -r f30f4b84ccde -r 77b006cb70a1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:14:36 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:18:50 2010 +0000
@@ -824,6 +824,19 @@
     }
 }
 
+sub _look_ahead_for_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_copy();
+
+    my $is_tag_cond = ($$l =~ m{\G([<\[\]])});
+
+    my $is_close = $is_tag_cond && ($$l =~ m{\G(?:</|\])});
+
+    return ($is_tag_cond, $is_close);
+}
+
 sub _parse_all
 {
     my $self = shift;
@@ -882,9 +895,7 @@
             next TAGS_LOOP;            
         }
         
-        my $is_tag_cond = ($$l =~ m{\G([<\[\]])});
-
-        my $is_close = $is_tag_cond && ($$l =~ m{\G(?:</|\])});
+        my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
 
         # Check if it's a closing tag.
         if ($is_close)

changeset:   171:f30f4b84ccde
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 13:14:36 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _handle_close_tag.


diff -r 47dddac302dd -r f30f4b84ccde perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:08:44 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:14:36 2010 +0000
@@ -795,6 +795,35 @@
     return;
 }
 
+sub _handle_close_tag
+{
+    my $self = shift;
+
+    $self->_close_top_tags();
+
+    my $close = $self->_parse_closing_tag();
+
+    my $open = $self->_pop_tag();
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    if (defined(my $top_elem = $self->_merge_tag($open)))
+    {
+        return $top_elem;
+    }
+    else
+    {
+        return;
+    }
+}
+
 sub _parse_all
 {
     my $self = shift;
@@ -860,30 +889,10 @@
         # Check if it's a closing tag.
         if ($is_close)
         {
-            $self->_close_top_tags();
-
-            my $close = $self->_parse_closing_tag();
-
-            my $open = $self->_pop_tag();
-    
-            if ($open->name() ne $close->name())
+            if ($ret_tag = $self->_handle_close_tag())
             {
-                XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
-                    error => "Tags do not match",
-                    opening_tag => $open,
-                    closing_tag => $close,
-                );
-            }
-
-            if (defined(my $top_elem = $self->_merge_tag($open)))
-            {
-                $ret_tag = $top_elem;
                 last TAGS_LOOP;
             }
-            else
-            {
-                redo TAGS_LOOP;
-            }
         }
         elsif ($is_tag_cond)
         {

changeset:   170:47dddac302dd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 13:08:44 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Fix a bug.


diff -r 89e9277321dc -r 47dddac302dd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 12:56:34 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 13:08:44 2010 +0000
@@ -534,10 +534,7 @@
         }
         elsif ($is_tag_cond)
         {
-            if ($ret_tag = $self->_handle_open_tag())
-            {
-                last TAGS_LOOP;
-            }
+            $self->_handle_open_tag();
         }
         else
         {
diff -r 89e9277321dc -r 47dddac302dd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 12:56:34 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 13:08:44 2010 +0000
@@ -776,9 +776,9 @@
     # too.
     if ($open->is_standalone())
     {
-        if (defined(my $top_elem = $self->_merge_tag($open)))
+        if (defined($self->_merge_tag($open)))
         {
-            return $top_elem;
+            Carp::confess ("Top element/tag cannot be standalone.");
         }
         else
         {

changeset:   169:89e9277321dc
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 12:56:34 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _handle_open_tag .


diff -r 4c5dd4c53f2d -r 89e9277321dc perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 12:14:33 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 12:56:34 2010 +0000
@@ -534,7 +534,10 @@
         }
         elsif ($is_tag_cond)
         {
-            $self->_handle_open_tag();
+            if ($ret_tag = $self->_handle_open_tag())
+            {
+                last TAGS_LOOP;
+            }
         }
         else
         {
diff -r 4c5dd4c53f2d -r 89e9277321dc perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 12:14:33 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 12:56:34 2010 +0000
@@ -764,6 +764,37 @@
     return;
 }
 
+sub _handle_open_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    $open->children([]);
+
+    # TODO : add the check for is_standalone in XML-Grammar-Fiction
+    # too.
+    if ($open->is_standalone())
+    {
+        if (defined(my $top_elem = $self->_merge_tag($open)))
+        {
+            return $top_elem;
+        }
+        else
+        {
+            return;
+        }
+    }
+    $self->_push_tag($open);
+
+    if ($open->name() eq "desc")
+    {
+        $self->_start_para();
+    }
+
+    return;
+}
+
 sub _parse_all
 {
     my $self = shift;
@@ -856,30 +887,7 @@
         }
         elsif ($is_tag_cond)
         {
-            my $open = $self->_parse_opening_tag();
-
-            $open->children([]);
-
-            # TODO : add the check for is_standalone in XML-Grammar-Fiction
-            # too.
-            if ($open->is_standalone())
-            {
-                if (defined(my $top_elem = $self->_merge_tag($open)))
-                {
-                    $ret_tag = $top_elem;
-                    last TAGS_LOOP;
-                }
-                else
-                {
-                    redo TAGS_LOOP;
-                }
-            }
-            $self->_push_tag($open);
-
-            if ($open->name() eq "desc")
-            {
-                $self->_start_para();
-            }
+            $self->_handle_open_tag();
         }
         else
         {

changeset:   168:4c5dd4c53f2d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 12:14:33 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Removed some unused code.


diff -r 48a7190e02bd -r 4c5dd4c53f2d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 10:17:21 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 12:14:33 2010 +0000
@@ -576,12 +576,6 @@
             $was_already_enqueued = 1;
         }
 
-        if ($is_para_end && $in_para)
-        {
-            # $self->_enqueue_event({ type => "close", tag => "para" });
-            $in_para = 0;
-        }
-
         return;
     }
 }

changeset:   167:48a7190e02bd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 10:17:21 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract more methods in the base class.


diff -r 6d9b069729d4 -r 48a7190e02bd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 10:03:23 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 10:17:21 2010 +0000
@@ -405,15 +405,6 @@
     return;
 }
 
-sub _handle_elem_event
-{
-    my ($self, $event) = @_;
-
-    $self->_add_to_top_tag( $event->{'elem'});
-
-    return;
-}
-
 sub _handle_event
 {
     my ($self, $event) = @_;
@@ -422,7 +413,7 @@
     {
         $self->_handle_paragraph_event($event);
     }
-    elsif ($event->{'type'} eq "elem")
+    elsif ($self->_is_event_elem($event))
     {
         $self->_handle_elem_event($event);
     }
diff -r 6d9b069729d4 -r 48a7190e02bd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 10:03:23 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 10:17:21 2010 +0000
@@ -89,6 +89,13 @@
     return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
 }
 
+sub _is_event_elem
+{
+    my ($self, $event) = @_;
+
+    return $event->{'type'} eq "elem";
+}
+
 sub _handle_paragraph_event
 {
     my ($self, $event) = @_;
@@ -100,6 +107,15 @@
         ;
 }
 
+sub _handle_elem_event
+{
+    my ($self, $event) = @_;
+
+    $self->_add_to_top_tag( $event->{'elem'});
+
+    return;
+}
+
 sub _handle_non_tag_text
 {
     my $self = shift;
diff -r 6d9b069729d4 -r 48a7190e02bd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 10:03:23 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 10:17:21 2010 +0000
@@ -762,9 +762,9 @@
     {
         $self->_handle_saying_event($event);
     }
-    elsif ($event->{'type'} eq "elem")
+    elsif ($self->_is_event_elem($event))
     {
-        $self->_add_to_top_tag( $event->{'elem'} );
+        $self->_handle_elem_event($event);
     }
 
     return;

changeset:   166:6d9b069729d4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 10:03:23 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a few methods from the Screenplay Parser QnD .


diff -r c67bd7f3eb22 -r 6d9b069729d4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 09:23:13 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 10:03:23 2010 +0000
@@ -714,6 +714,42 @@
     return $self->_start_para();
 }
 
+sub _open_saying
+{
+    my $self = shift;
+    my $event = shift;
+
+    my $new_tag =
+        XML::Grammar::Screenplay::Struct::Tag->new(
+            {
+                name => "saying",
+                is_standalone => 0,
+                # TODO : propagate the correct line_num
+                # from the called-to layers.
+                line => $self->line_num(),
+                attrs => [{key => "character", value => $event->{_elem}->character()}],
+            }
+        );
+
+    $new_tag->children([]);
+
+    $self->_push_tag($new_tag);
+
+    $self->_in_saying(1);
+
+    return;
+}
+
+sub _handle_saying_event
+{
+    my ($self, $event) = @_;
+
+    return
+        $event->{'type'} eq "open"
+        ? $self->_open_saying($event)
+        : $self->_close_saying();
+}
+
 sub _handle_event
 {
     my ($self, $event) = @_;
@@ -724,30 +760,7 @@
     }
     elsif ($self->_is_event_a_saying($event))
     {
-        if ($event->{'type'} eq "open")
-        {
-            my $new_tag =
-                XML::Grammar::Screenplay::Struct::Tag->new(
-                    {
-                        name => "saying",
-                        is_standalone => 0,
-                        # TODO : propagate the correct line_num
-                        # from the called-to layers.
-                        line => $self->line_num(),
-                        attrs => [{key => "character", value => $event->{_elem}->character()}],
-                    }
-                );
-
-            $new_tag->children([]);
-
-            $self->_push_tag($new_tag);
-
-            $self->_in_saying(1);
-        }
-        else
-        {
-            $self->_close_saying();
-        }
+        $self->_handle_saying_event($event);
     }
     elsif ($event->{'type'} eq "elem")
     {

changeset:   165:c67bd7f3eb22
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 09:23:13 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Add _is_event_is_saying.


diff -r bf26b8d4941c -r c67bd7f3eb22 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 09:12:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 09:23:13 2010 +0000
@@ -75,6 +75,13 @@
     return;
 }
 
+sub _is_event_a_saying
+{
+    my ($self, $event) = @_;
+
+    return exists($event->{'tag'}) && ($event->{'tag'} eq "saying");
+}
+
 sub _is_event_a_para
 {
     my ($self, $event) = @_;
@@ -86,7 +93,7 @@
 {
     my ($self, $event) = @_;
 
-    return 
+    return
           $event->{'type'} eq "open"
         ? $self->_handle_open_para($event)
         : $self->_handle_close_para($event)
diff -r bf26b8d4941c -r c67bd7f3eb22 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 09:12:49 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 09:23:13 2010 +0000
@@ -722,9 +722,7 @@
     {
         $self->_handle_paragraph_event($event);
     }
-    elsif (  exists($event->{'tag'})
-        && $event->{'tag'} eq "saying"
-    )
+    elsif ($self->_is_event_a_saying($event))
     {
         if ($event->{'type'} eq "open")
         {

changeset:   164:bf26b8d4941c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 09:12:49 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _handle_paragraph_event in the base class.


diff -r 66d250eac06e -r bf26b8d4941c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 09:04:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 09:12:49 2010 +0000
@@ -405,17 +405,6 @@
     return;
 }
 
-sub _handle_paragraph_event
-{
-    my ($self, $event) = @_;
-
-    return 
-          $event->{'type'} eq "open"
-        ? $self->_handle_open_para($event)
-        : $self->_handle_close_para($event)
-        ;
-}
-
 sub _handle_elem_event
 {
     my ($self, $event) = @_;
diff -r 66d250eac06e -r bf26b8d4941c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 09:04:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 09:12:49 2010 +0000
@@ -82,6 +82,17 @@
     return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
 }
 
+sub _handle_paragraph_event
+{
+    my ($self, $event) = @_;
+
+    return 
+          $event->{'type'} eq "open"
+        ? $self->_handle_open_para($event)
+        : $self->_handle_close_para($event)
+        ;
+}
+
 sub _handle_non_tag_text
 {
     my $self = shift;
diff -r 66d250eac06e -r bf26b8d4941c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 09:04:18 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 09:12:49 2010 +0000
@@ -700,20 +700,27 @@
     return;
 }
 
+sub _handle_close_para
+{
+    my ($self, $event) = @_;
+
+    return $self->_close_para();
+}
+
+sub _handle_open_para
+{
+    my ($self, $event) = @_;
+
+    return $self->_start_para();
+}
+
 sub _handle_event
 {
     my ($self, $event) = @_;
 
     if ($self->_is_event_a_para($event))
     {
-        if ($event->{'type'} eq "open")
-        {
-            $self->_start_para();
-        }
-        else
-        {
-            $self->_close_para();
-        }
+        $self->_handle_paragraph_event($event);
     }
     elsif (  exists($event->{'tag'})
         && $event->{'tag'} eq "saying"

changeset:   163:66d250eac06e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 09:04:18 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _is_event_a_para.


diff -r c1d015aa16dd -r 66d250eac06e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:55:38 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 09:04:18 2010 +0000
@@ -416,13 +416,6 @@
         ;
 }
 
-sub _is_event_a_para
-{
-    my ($self, $event) = @_;
-
-    return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
-}
-
 sub _handle_elem_event
 {
     my ($self, $event) = @_;
diff -r c1d015aa16dd -r 66d250eac06e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:55:38 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 09:04:18 2010 +0000
@@ -75,6 +75,13 @@
     return;
 }
 
+sub _is_event_a_para
+{
+    my ($self, $event) = @_;
+
+    return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
+}
+
 sub _handle_non_tag_text
 {
     my $self = shift;
diff -r c1d015aa16dd -r 66d250eac06e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:55:38 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 09:04:18 2010 +0000
@@ -704,9 +704,7 @@
 {
     my ($self, $event) = @_;
 
-    if (  exists($event->{'tag'})
-        && $event->{'tag'} eq "para"
-    )
+    if ($self->_is_event_a_para($event))
     {
         if ($event->{'type'} eq "open")
         {

changeset:   162:c1d015aa16dd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:55:38 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _handle_non_tag_text to XmlIterator.


diff -r 94efb17abc6b -r c1d015aa16dd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:47:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:55:38 2010 +0000
@@ -448,22 +448,6 @@
     return;
 }
 
-sub _handle_non_tag_text
-{
-    my $self = shift;
-
-    $self->_check_for_open_tag();
-
-    my $contents = $self->_parse_text();
-
-    foreach my $event (@$contents)
-    {
-        $self->_handle_event($event);
-    }
-
-    return;
-}
-
 sub _handle_open_tag
 {
     my $self = shift;
diff -r 94efb17abc6b -r c1d015aa16dd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:47:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:55:38 2010 +0000
@@ -75,6 +75,21 @@
     return;
 }
 
+sub _handle_non_tag_text
+{
+    my $self = shift;
+
+    $self->_check_for_open_tag();
+
+    my $contents = $self->_parse_text();
+
+    foreach my $event (@$contents)
+    {
+        $self->_handle_event($event);
+    }
+
+    return;
+}
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r 94efb17abc6b -r c1d015aa16dd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:47:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:55:38 2010 +0000
@@ -754,22 +754,6 @@
     return;
 }
 
-sub _handle_non_tag_text
-{
-    my $self = shift;
-
-    $self->_check_for_open_tag();
-
-    my $contents = $self->_parse_text();
-
-    foreach my $event (@$contents)
-    {
-        $self->_handle_event($event);
-    }
-
-    return;
-}
-
 sub _parse_all
 {
     my $self = shift;

changeset:   161:94efb17abc6b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:47:10 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract _handle_event.


diff -r cefbe810795a -r 94efb17abc6b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:40:19 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:47:10 2010 +0000
@@ -700,6 +700,60 @@
     return;
 }
 
+sub _handle_event
+{
+    my ($self, $event) = @_;
+
+    if (  exists($event->{'tag'})
+        && $event->{'tag'} eq "para"
+    )
+    {
+        if ($event->{'type'} eq "open")
+        {
+            $self->_start_para();
+        }
+        else
+        {
+            $self->_close_para();
+        }
+    }
+    elsif (  exists($event->{'tag'})
+        && $event->{'tag'} eq "saying"
+    )
+    {
+        if ($event->{'type'} eq "open")
+        {
+            my $new_tag =
+                XML::Grammar::Screenplay::Struct::Tag->new(
+                    {
+                        name => "saying",
+                        is_standalone => 0,
+                        # TODO : propagate the correct line_num
+                        # from the called-to layers.
+                        line => $self->line_num(),
+                        attrs => [{key => "character", value => $event->{_elem}->character()}],
+                    }
+                );
+
+            $new_tag->children([]);
+
+            $self->_push_tag($new_tag);
+
+            $self->_in_saying(1);
+        }
+        else
+        {
+            $self->_close_saying();
+        }
+    }
+    elsif ($event->{'type'} eq "elem")
+    {
+        $self->_add_to_top_tag( $event->{'elem'} );
+    }
+
+    return;
+}
+
 sub _handle_non_tag_text
 {
     my $self = shift;
@@ -710,52 +764,7 @@
 
     foreach my $event (@$contents)
     {
-        if (  exists($event->{'tag'})
-            && $event->{'tag'} eq "para"
-        )
-        {
-            if ($event->{'type'} eq "open")
-            {
-                $self->_start_para();
-            }
-            else
-            {
-                $self->_close_para();
-            }
-        }
-        elsif (  exists($event->{'tag'})
-            && $event->{'tag'} eq "saying"
-        )
-        {
-            if ($event->{'type'} eq "open")
-            {
-                my $new_tag =
-                    XML::Grammar::Screenplay::Struct::Tag->new(
-                        {
-                            name => "saying",
-                            is_standalone => 0,
-                            # TODO : propagate the correct line_num
-                            # from the called-to layers.
-                            line => $self->line_num(),
-                            attrs => [{key => "character", value => $event->{_elem}->character()}],
-                        }
-                    );
-
-                $new_tag->children([]);
-
-                $self->_push_tag($new_tag);
-
-                $self->_in_saying(1);
-            }
-            else
-            {
-                $self->_close_saying();
-            }
-        }
-        elsif ($event->{'type'} eq "elem")
-        {
-            $self->_add_to_top_tag( $event->{'elem'} );
-        }
+        $self->_handle_event($event);
     }
 
     return;

changeset:   160:cefbe810795a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:40:19 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract the _top_tag method.


diff -r 8ec16aafb535 -r cefbe810795a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:31:28 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:40:19 2010 +0000
@@ -21,6 +21,7 @@
         '_grep_tags_stack' => 'grep',
         '_tag_stack_is_empty' => 'is_empty',
         '_pop_tag' => 'pop',
+        '_get_tag' => 'get',
     },
 );
 
@@ -37,11 +38,17 @@
     },
 );
 
+sub _top_tag
+{
+    my $self = shift;
+    return $self->_get_tag(-1);
+}
+
 sub _add_to_top_tag
 {
     my ($self, $child) = @_;
 
-    $self->_tags_stack->[-1]->append_child($child);
+    $self->_top_tag->append_child($child);
 
     return;
 }
diff -r 8ec16aafb535 -r cefbe810795a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:31:28 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:40:19 2010 +0000
@@ -32,7 +32,7 @@
 {
     my $self = shift;
 
-    return $self->_in_para() && ($self->_tags_stack->[-1]->name() eq "p");
+    return $self->_in_para() && ($self->_top_tag->name() eq "p");
 }
 
 
@@ -40,7 +40,7 @@
 {
     my $self = shift;
 
-    return $self->_in_saying() && ($self->_tags_stack->[-1]->name() eq "saying");
+    return $self->_in_saying() && ($self->_top_tag->name() eq "saying");
 }
 
 around '_pop_tag' => sub {

changeset:   159:8ec16aafb535
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:31:28 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a _pop_tag method in the base class.

In Screenplay it was enhanced using a method modifier.


diff -r bf46d701faa3 -r 8ec16aafb535 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:23:07 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:31:28 2010 +0000
@@ -391,7 +391,7 @@
 {
     my ($self, $event) = @_;
 
-    my $open = pop(@{$self->_tags_stack()});
+    my $open = $self->_pop_tag;
 
     my $new_elem =
         $self->_new_para(
@@ -485,7 +485,7 @@
 
     $self->skip_space();
 
-    my $open = pop(@{$self->_tags_stack()});
+    my $open = $self->_pop_tag;
 
     if ($open->name() ne $close->name())
     {
diff -r bf46d701faa3 -r 8ec16aafb535 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:23:07 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:31:28 2010 +0000
@@ -20,6 +20,7 @@
         '_push_tag' => 'push',
         '_grep_tags_stack' => 'grep',
         '_tag_stack_is_empty' => 'is_empty',
+        '_pop_tag' => 'pop',
     },
 );
 
diff -r bf46d701faa3 -r 8ec16aafb535 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:23:07 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:31:28 2010 +0000
@@ -43,11 +43,10 @@
     return $self->_in_saying() && ($self->_tags_stack->[-1]->name() eq "saying");
 }
 
-sub _pop_tag
-{
-    my $self = shift;
+around '_pop_tag' => sub {
+    my ($orig, $self) = @_;
 
-    my $open = pop(@{$self->_tags_stack()});
+    my $open = $self->$orig();
 
     if ($open->name() eq "saying")
     {
@@ -55,7 +54,7 @@
     }
 
     return $open;
-}
+};
 
 sub _count_tags_in_stack
 {

changeset:   158:bf46d701faa3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:23:07 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Extract a method.


diff -r 81db678b2367 -r bf46d701faa3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:16:51 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:23:07 2010 +0000
@@ -19,6 +19,7 @@
     {
         '_push_tag' => 'push',
         '_grep_tags_stack' => 'grep',
+        '_tag_stack_is_empty' => 'is_empty',
     },
 );
 
@@ -55,7 +56,7 @@
 {
     my $self = shift;
 
-    if (! @{$self->_tags_stack()} )
+    if ($self->_tag_stack_is_empty())
     {
         $self->throw_text_error(
             'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',

changeset:   157:81db678b2367
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:16:51 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract a function in the base class - _check_for_open_tag .


diff -r f6d7296ecc37 -r 81db678b2367 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:02:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 08:16:51 2010 +0000
@@ -452,13 +452,7 @@
 {
     my $self = shift;
 
-    if (! @{$self->_tags_stack()} )
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
-            "Cannot match opening tag.",
-        );
-    }
+    $self->_check_for_open_tag();
 
     my $contents = $self->_parse_text();
 
diff -r f6d7296ecc37 -r 81db678b2367 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:02:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 08:16:51 2010 +0000
@@ -51,6 +51,21 @@
     return $self->_new_list([]);
 }
 
+sub _check_for_open_tag
+{
+    my $self = shift;
+
+    if (! @{$self->_tags_stack()} )
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
+            "Cannot match opening tag.",
+        );
+    }
+
+    return;
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r f6d7296ecc37 -r 81db678b2367 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:02:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:16:51 2010 +0000
@@ -705,13 +705,7 @@
 {
     my $self = shift;
 
-    if (! @{$self->_tags_stack()} )
-    {
-        XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
-            error => "Cannot match opening tag.",
-            'line' => $self->line_num(),
-        );
-    }
+    $self->_check_for_open_tag();
 
     my $contents = $self->_parse_text();
 

changeset:   156:f6d7296ecc37
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 08:02:53 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Extract Screenplay::QnD->_handle_non_tag_text() .


diff -r 41eae50a77ce -r f6d7296ecc37 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 07:56:54 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 08:02:53 2010 +0000
@@ -701,6 +701,73 @@
     return;
 }
 
+sub _handle_non_tag_text
+{
+    my $self = shift;
+
+    if (! @{$self->_tags_stack()} )
+    {
+        XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
+            error => "Cannot match opening tag.",
+            'line' => $self->line_num(),
+        );
+    }
+
+    my $contents = $self->_parse_text();
+
+    foreach my $event (@$contents)
+    {
+        if (  exists($event->{'tag'})
+            && $event->{'tag'} eq "para"
+        )
+        {
+            if ($event->{'type'} eq "open")
+            {
+                $self->_start_para();
+            }
+            else
+            {
+                $self->_close_para();
+            }
+        }
+        elsif (  exists($event->{'tag'})
+            && $event->{'tag'} eq "saying"
+        )
+        {
+            if ($event->{'type'} eq "open")
+            {
+                my $new_tag =
+                    XML::Grammar::Screenplay::Struct::Tag->new(
+                        {
+                            name => "saying",
+                            is_standalone => 0,
+                            # TODO : propagate the correct line_num
+                            # from the called-to layers.
+                            line => $self->line_num(),
+                            attrs => [{key => "character", value => $event->{_elem}->character()}],
+                        }
+                    );
+
+                $new_tag->children([]);
+
+                $self->_push_tag($new_tag);
+
+                $self->_in_saying(1);
+            }
+            else
+            {
+                $self->_close_saying();
+            }
+        }
+        elsif ($event->{'type'} eq "elem")
+        {
+            $self->_add_to_top_tag( $event->{'elem'} );
+        }
+    }
+
+    return;
+}
+
 sub _parse_all
 {
     my $self = shift;
@@ -820,68 +887,8 @@
         }
         else
         {
-            if (! @{$self->_tags_stack()} )
-            {
-                XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
-                    error => "Cannot match opening tag.",
-                    'line' => $self->line_num(),
-                );
-            }
-
-            my $contents = $self->_parse_text();
-
-            foreach my $event (@$contents)
-            {
-                if (  exists($event->{'tag'})
-                    && $event->{'tag'} eq "para"
-                )
-                {
-                    if ($event->{'type'} eq "open")
-                    {
-                        $self->_start_para();
-                    }
-                    else
-                    {
-                        $self->_close_para();
-                    }
-                }
-                elsif (  exists($event->{'tag'})
-                    && $event->{'tag'} eq "saying"
-                )
-                {
-                    if ($event->{'type'} eq "open")
-                    {
-                        my $new_tag =
-                            XML::Grammar::Screenplay::Struct::Tag->new(
-                                {
-                                    name => "saying",
-                                    is_standalone => 0,
-                                    # TODO : propagate the correct line_num
-                                    # from the called-to layers.
-                                    line => $self->line_num(),
-                                    attrs => [{key => "character", value => $event->{_elem}->character()}],
-                                }
-                            );
-
-                        $new_tag->children([]);
-
-                        $self->_push_tag($new_tag);
-
-                        $self->_in_saying(1);
-                    }
-                    else
-                    {
-                        $self->_close_saying();
-                    }
-                }
-                elsif ($event->{'type'} eq "elem")
-                {
-                    $self->_add_to_top_tag( $event->{'elem'} );
-                }
-            }
+            $self->_handle_non_tag_text();
         }
-
-
     }
 
     return $ret_tag;

changeset:   155:41eae50a77ce
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 07:56:54 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Move process_text to the base class XmlIterator - to avoid duplicate code.


diff -r 52952ea445bf -r 41eae50a77ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 07:52:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 07:56:54 2010 +0000
@@ -594,15 +594,6 @@
     return $ret_tag;
 }
 
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    $self->setup_text($text);
-
-    return $self->_parse_all();
-}
-
 =head1 METHODS
 
 =head2 $self->process_text($string)
diff -r 52952ea445bf -r 41eae50a77ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 07:52:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Tue Apr 20 07:56:54 2010 +0000
@@ -77,6 +77,20 @@
 
 =head1 METHODS
 
+=head2 $self->process_text($string)
+
+Processes the text and returns the parse tree.
+
+=cut
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    $self->setup_text($text);
+
+    return $self->_parse_all();
+}
 
 =head2 $self->meta()
 
diff -r 52952ea445bf -r 41eae50a77ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 07:52:02 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 07:56:54 2010 +0000
@@ -887,15 +887,6 @@
     return $ret_tag;
 }
 
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    $self->setup_text($text);
-
-    return $self->_parse_all();
-}
-
 =head1 NAME
 
 XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser

changeset:   154:52952ea445bf
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Apr 20 07:52:02 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Merged some recursion.


diff -r c95998579529 -r 52952ea445bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 18:53:13 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Apr 20 07:52:02 2010 +0000
@@ -29,13 +29,6 @@
 
 our $VERSION = '0.0.4';
 
-sub _start
-{
-    my $self = shift;
-
-    return $self->_parse_tags();
-}
-
 my $id_regex = '[a-zA-Z_\-]+';
 
 sub _new_node
@@ -559,7 +552,7 @@
     }
 }
 
-sub _parse_tags
+sub _parse_all
 {
     my $self = shift;
 
@@ -607,7 +600,7 @@
 
     $self->setup_text($text);
 
-    return $self->_start();
+    return $self->_parse_all();
 }
 
 =head1 METHODS
diff -r c95998579529 -r 52952ea445bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 19 18:53:13 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Apr 20 07:52:02 2010 +0000
@@ -92,13 +92,6 @@
     return 0;
 }
 
-sub _start
-{
-    my $self = shift;
-
-    return $self->_parse_top_level_tag();
-}
-
 my $id_regex = '[a-zA-Z_\-]+';
 
 
@@ -708,7 +701,7 @@
     return;
 }
 
-sub _parse_top_level_tag
+sub _parse_all
 {
     my $self = shift;
 
@@ -900,7 +893,7 @@
 
     $self->setup_text($text);
 
-    return $self->_start();
+    return $self->_parse_all();
 }
 
 =head1 NAME

changeset:   153:c95998579529
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 19 18:53:13 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
description:
Moved _new_empty_list to the base class.


diff -r e75e2f6a21e1 -r c95998579529 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 16:32:48 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 18:53:13 2010 +0000
@@ -69,12 +69,6 @@
         );
 }
 
-sub _new_empty_list
-{
-    my $self = shift;
-    return $self->_new_list([]);
-}
-
 sub _new_list
 {
     my $self = shift;
diff -r e75e2f6a21e1 -r c95998579529 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 16:32:48 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 18:53:13 2010 +0000
@@ -44,6 +44,13 @@
     return;
 }
 
+# TODO : Maybe move to a different sub-class or role.
+sub _new_empty_list
+{
+    my $self = shift;
+    return $self->_new_list([]);
+}
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
diff -r e75e2f6a21e1 -r c95998579529 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 19 16:32:48 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 19 18:53:13 2010 +0000
@@ -138,12 +138,6 @@
         );
 }
 
-sub _new_empty_list
-{
-    my $self = shift;
-    return $self->_new_list([]);
-}
-
 sub _new_list
 {
     my $self = shift;

changeset:   152:e75e2f6a21e1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 19 16:32:48 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Fiction/Builder.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t perl/modules/XML-Grammar-Fiction/t/screenplay/boilerplate.t perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-description.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm perl/modules/XML-Grammar-Fiction/t/screenplay/pod-coverage.t perl/modules/XML-Grammar-Fiction/t/screenplay/pod.t perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
description:
Merge in XML-Grammar-Screenplay so it will be easier to refactor.

We are going to refactor both XML-G-Screenplay and XML-G-Fiction because
they are closely related and hopefully merge more and more stuff from them.


diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Mon Apr 19 15:00:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Mon Apr 19 16:32:48 2010 +0000
@@ -4,9 +4,9 @@
 use File::Spec;
 use lib File::Spec->catdir(File::Spec->curdir(), "inc");
 
-use XML::Grammar::Builder;
+use XML::Grammar::Fiction::Builder;
 
-my $builder = XML::Grammar::Builder->new(
+my $builder = XML::Grammar::Fiction::Builder->new(
     module_name         => 'XML::Grammar::Fiction',
     license             => 'mit',
     dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 19 15:00:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 19 16:32:48 2010 +0000
@@ -6,9 +6,13 @@
 extradata/fiction-xml-to-docbook.xslt
 extradata/fiction-xml-to-html.xslt
 extradata/screenplay-xml.dtd
+extradata/screenplay-xml.rng
+extradata/screenplay-xml-to-docbook.xslt
+extradata/screenplay-xml-to-html.xslt
 extradata/screenplay-xml-to-xsl-fo.xslt
 inc/Test/Run/Builder.pm
 inc/XML/Grammar/Builder.pm
+inc/XML/Grammar/Fiction/Builder.pm
 lib/XML/Grammar/Fiction/App/FromProto.pm
 lib/XML/Grammar/Fiction/App/ToDocBook.pm
 lib/XML/Grammar/Fiction/App/ToHTML.pm
@@ -26,6 +30,19 @@
 lib/XML/Grammar/Fiction/Struct/Tag.pm
 lib/XML/Grammar/Fiction/ToDocBook.pm
 lib/XML/Grammar/Fiction/ToHTML.pm
+lib/XML/Grammar/Screenplay/App/FromProto.pm
+lib/XML/Grammar/Screenplay/App/ToDocBook.pm
+lib/XML/Grammar/Screenplay/App/ToHTML.pm
+lib/XML/Grammar/Screenplay/Base.pm
+lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
+lib/XML/Grammar/Screenplay/FromProto.pm
+lib/XML/Grammar/Screenplay.pm
+lib/XML/Grammar/Screenplay/Struct/Tag.pm
+lib/XML/Grammar/Screenplay/ToDocBook.pm
+lib/XML/Grammar/Screenplay/ToHTML.pm
 Makefile.PL
 MANIFEST
 META.yml # Will be created by "make dist"
@@ -82,5 +99,44 @@
 t/proto-text-invalid.t
 t/proto-text-to-xml-using-custom-parser.t
 t/qnd-parser-unit.t
+t/screenplay/00-load.t
+t/screenplay/app-to-html.t
+t/screenplay/boilerplate.t
+t/screenplay/data/docbook/with-internal-description.docbook.xml
+t/screenplay/data/proto-text/dialogue-with-several-paragraphs.txt
+t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/screenplay/data/proto-text/nested-s.txt
+t/screenplay/data/proto-text/scenes-with-titles.txt
+t/screenplay/data/proto-text/two-nested-s.txt
+t/screenplay/data/proto-text/with-brs.txt
+t/screenplay/data/proto-text/with-comments.txt
+t/screenplay/data/proto-text/with-description.txt
+t/screenplay/data/proto-text/with-dialogue.txt
+t/screenplay/data/proto-text/with-entities.txt
+t/screenplay/data/proto-text/with-internal-description.txt
+t/screenplay/data/proto-text/with-multi-line-comments.txt
+t/screenplay/data/proto-text/with-multi-para-desc.txt
+t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
+t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
+t/screenplay/data/xml/nested-s.xml
+t/screenplay/data/xml/scenes-with-titles.xml
+t/screenplay/data/xml/two-nested-s.xml
+t/screenplay/data/xml/with-brs.xml
+t/screenplay/data/xml/with-comments.xml
+t/screenplay/data/xml/with-description.xml
+t/screenplay/data/xml/with-dialogue.xml
+t/screenplay/data/xml/with-entities.xml
+t/screenplay/data/xml/with-internal-description.xml
+t/screenplay/data/xml/with-multi-line-comments.xml
+t/screenplay/data/xml/with-multi-para-desc.xml
+t/screenplay/data/xml/with-tags-inside-paragraphs.xml
+t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
+t/screenplay/pod-coverage.t
+t/screenplay/pod.t
+t/screenplay/proto-text-invalid.t
+t/screenplay/proto-text-to-xml-using-custom-parser.t
+t/screenplay/qnd-parser-unit.t
+t/screenplay/to-docbook.t
+t/screenplay/to-xhtml.t
 t/to-docbook.t
 t/to-xhtml.t
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,91 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
+ doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <article>
+        <xsl:attribute name="id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
+        <xsl:apply-templates select="sp:scene" />
+    </article>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <section>
+        <xsl:attribute name="id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <title>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose> 
+        </title>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </section>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <section role="description" id="{generate-id()}">
+        <title></title>
+            <xsl:apply-templates />
+    </section>
+</xsl:template>
+
+<xsl:template match="saying">
+    <section role="sp:saying" id="{generate-id()}">
+        <title></title>
+        <xsl:apply-templates />
+    </section>
+</xsl:template>
+
+<xsl:template match="para">
+    <para>
+        <xsl:if test="local-name(..) = 'saying'">
+            <emphasis role="bold"><xsl:value-of select="../@character" />: </emphasis>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </para>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <ulink>
+        <xsl:attribute name="url">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+    </ulink>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <emphasis role="bold">
+        <xsl:apply-templates />
+    </emphasis>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <phrase>[<xsl:apply-templates />]</phrase>
+</xsl:template>
+
+</xsl:stylesheet>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,102 @@
+<xsl:stylesheet version = '1.0'
+     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//W3C//DTD XHTML 1.1//EN"
+ doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <html>
+        <head>
+            <title>My Screenplay</title>
+        </head>
+        <body>
+            <div class="screenplay">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:apply-templates select="sp:scene" />
+            </div>
+        </body>
+    </html>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <div class="scene" id="scene-{@id}">
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <xsl:element name="h{count(ancestor-or-self::sp:scene)}">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose>
+        </xsl:element>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <div class="description">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:saying">
+    <div class="saying">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:para">
+    <p>
+        <xsl:if test="local-name(..) = 'saying'">
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <xsl:text> </xsl:text>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </p>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <a>
+        <xsl:attribute name="href">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:apply-templates />
+    </a>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <strong class="bold">
+        <xsl:apply-templates />
+    </strong>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+</xsl:template>
+
+<xsl:template match="sp:br">
+    <br />
+</xsl:template>
+
+</xsl:stylesheet>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,99 @@
+<?xml version="1.0"?>
+<!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
+<grammar xmlns="http://relaxng.org/ns/structure/1.0"
+    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
+    >
+    <start>
+        <element name="sp:document">
+            <element name="sp:head">
+                <empty/>
+            </element>
+            <element name="sp:body">
+                <attribute name="id">
+                    <data type="ID"/>
+                </attribute>
+                <oneOrMore>
+                    <ref name="scene" />
+                </oneOrMore>
+            </element>
+        </element>
+    </start>
+    <define name="several_paras">
+        <oneOrMore>
+            <ref name="para"/>
+        </oneOrMore>
+    </define>
+    <define name="single_inline_elem">
+        <choice>
+            <text/>
+            <ref name="ulink"/>
+            <ref name="bold"/>
+        </choice>
+    </define>
+    <define name="scene">
+        <element name="sp:scene">
+            <attribute name="id">
+                <data type="ID"/>
+            </attribute>
+            <optional>
+                <attribute name="title">
+                    <text/>
+                </attribute>
+            </optional>
+            <zeroOrMore>
+                <choice>
+                    <element name="sp:description">
+                        <ref name="several_paras"/>
+                    </element>
+                    <element name="sp:saying">
+                        <attribute name="character">
+                            <text/>
+                        </attribute>
+                        <ref name="several_paras"/>
+                    </element>
+                </choice>
+            </zeroOrMore>
+            <zeroOrMore>
+                <ref name="scene" />
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="para">
+        <element name="sp:para">
+            <zeroOrMore>
+                <choice>
+                    <text/>
+                    <element name="sp:inlinedesc">
+                        <zeroOrMore>
+                            <ref name="single_inline_elem"/>
+                        </zeroOrMore>
+                    </element>
+                    <ref name="single_inline_elem"/>
+                    <element name="sp:br">
+                        <empty/>
+                    </element>
+                </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="bold">
+        <element name="sp:bold">
+            <text />
+        </element>
+    </define>
+    <define name="ulink">
+        <element name="sp:ulink">
+                <attribute name="url">
+                    <text/>
+                </attribute>
+                <zeroOrMore>
+                    <choice>
+                        <text />
+                        <ref name="bold"/>
+                    </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+</grammar>
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Mon Apr 19 15:00:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -44,6 +44,11 @@
   chdir $start_dir;
 }
 
+sub get_test_run_test_files
+{
+    return [glob("t/*.t")]
+}
+
 sub do_test_run_tests
 {
     my $self = shift;
@@ -53,7 +58,7 @@
     my $test_run =
         Test::Run::CmdLine::Iface->new(
             {
-                'test_files' => [glob("t/*.t")],
+                'test_files' => $self->get_test_run_test_files(),
             }   
             # 'backend_params' => $self->_get_backend_params(),
         );
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Fiction/Builder.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Fiction/Builder.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,13 @@
+package XML::Grammar::Fiction::Builder;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Builder';
+
+sub get_test_run_test_files
+{
+    return [glob("t/*.t t/*/*.t")]
+}
+
+1;
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,205 @@
+package XML::Grammar::Screenplay;
+
+use warnings;
+use strict;
+
+=head1 NAME
+
+XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for 
+screenplays.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head1 SYNOPSIS
+
+See L<XML::Grammar::Screenplay::FromProto>, 
+L<XML::Grammar::Screenplay::ToDocBook> and
+L<XML::Grammar::Screenplay::ToHTML>.
+
+=head1 DESCRIPTION
+
+XML::Grammar::Screenplay is a Perl module for:
+
+=over 4
+
+=item 1. Converting a well-formed plain text format to a specialized XML format.
+
+=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
+
+=back
+
+The best way to use it non-programatically is using
+L<XML::Grammar::Screenplay::App::FromProto>,
+L<XML::Grammar::Screenplay::App::ToDocBook> and
+L<XML::Grammar::Screenplay::App::ToHTML>, which are modules implementing
+command line applications for their processing.
+
+The rest of this page will document the syntax of the custom textual format.
+
+=head1 FORMAT
+
+=head2 Scenes
+
+Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
+abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
+attributes whose keys are plaintext and whose values are surrounded by
+double quotes. (Single-quotes are not supported).
+
+The scene tag must have an C<id> attribute (for anchors, etc.) and could
+have an optional C<title> attribute. If the title is not specified, it will
+default to the ID.
+
+Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
+except inside scenes.
+
+=head2 Text
+
+Text is any of:
+
+=over 4
+
+=item 1. Plaintext
+
+Regular text
+
+=item 2. XML-like tags.
+
+Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
+hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+
+=item 3. Entities
+
+The text format supports SGML-like entities such as C<< &amp; >>,
+C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
+L<HTML::Entities>.
+
+=item 4. Text between [ ... ]
+
+Text between square brackets (C<[ ... ]>) is reserved for descriptions
+or inline descriptions (see below).
+
+=back 
+
+=head2 Sayings
+
+The first paragraph when a character talks starts with the name of the
+character followed by a colon (C<:>) and the rest of the text. Like this:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+If a character says more than one paragraph, the next paragraph should start
+with any number of "+"-signs followed by a colon:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+    ++++: I will sling you and bing you till infinity!
+
+=head2 Descriptions.
+
+Descriptions that are not part of saying start with a C<[> at the first
+character of a line and extend till the next C<]>. They can span several
+paragraphs.
+
+There are also internal descriptions to the saying which are placed
+inside the paragraph of the saying and describe what happens while the
+character talks. 
+
+=head2 EXAMPLES
+
+Examples can be found in the C<t/data> directory, and here:
+
+=over 4
+
+=item * The One with the Fountainhead
+
+L<http://www.shlomifish.org/humour/TOWTF/>
+
+=item * Humanity - The Movie
+
+L<http://www.shlomifish.org/humour/humanity/>
+
+=item * Star Trek - "We The Living Dead"
+
+L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
+
+=back
+
+=head1 DEBUGGING
+
+When trying to convert the well-formed text to XML, one will often 
+encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
+which is used for parsing. The best way I found to deal with it is to
+gradually eliminate parts of the document until the offending markup is
+isolated.
+
+In the future, I plan on writing a custom parser that will provide better
+diagnostics and will hopefully also be faster.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 TODO
+
+=over 4
+
+=item * Empty
+
+=back
+
+=head1 SUPPORT
+
+You can find documentation for this module with the perldoc command.
+
+    perldoc XML::Grammar::Screenplay
+
+You can also look for information at:
+
+=over 4
+
+=item * AnnoCPAN: Annotated CPAN documentation
+
+L<http://annocpan.org/dist/XML-Grammar-Screenplay>
+
+=item * CPAN Ratings
+
+L<http://cpanratings.perl.org/d/XML-Grammar-Screenplay>
+
+=item * RT: CPAN's request tracker
+
+L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay>
+
+=item * Search CPAN
+
+L<http://search.cpan.org/dist/XML-Grammar-Screenplay>
+
+=back
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,89 @@
+package XML::Grammar::Screenplay::App::FromProto;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::FromProto - module implementing
+a command line application to convert a well-formed text to
+Screenplay XML.
+
+=head1 SYNOPSIS
+
+    perl -MXML::Grammar::Screenplay::App::FromProto -e 'run()' -- \
+	-o $@ $<
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+    my $output_xml = $converter->convert({
+            source => { file => shift(@ARGV), },
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_xml;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Screenplay::App::ToDocBook;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::ToDocBook;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::ToDocBook - module implementing
+a command line application to convert a Screenplay XML file to docbook.
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::ToDocBook->new();
+
+    my $output_text = $converter->translate_to_docbook({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Screenplay::App::ToHTML;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::ToHTML;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::ToHTML - module implementing
+a command line application to convert a Screenplay XML file to HTML
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::ToHTML->new();
+
+    my $output_text = $converter->translate_to_html({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,32 @@
+package XML::Grammar::Screenplay::Base;
+
+use strict;
+use warnings;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
+classes.
+
+=head1 METHODS
+
+=head2 $package->new({%args});
+
+Constructs a new package
+
+=cut
+
+sub new
+{
+    my $class = shift;
+    my $self = {};
+
+    bless $self, $class;
+
+    $self->_init(@_);
+
+    return $self;
+}
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,339 @@
+package XML::Grammar::Screenplay::FromProto;
+
+use strict;
+use warnings;
+
+use Carp;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use XML::Writer;
+use HTML::Entities ();
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+use Moose;
+
+has "_parser" => ('isa' => "XML::Grammar::Screenplay::FromProto::Parser", 'is' => "rw");
+has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
+
+has '_buffer' => ('isa' => "ScalarRef[Str]", is => "rw");
+
+my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto - module that converts well-formed
+text representing a screenplay to an XML format.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    local $Parse::RecDescent::skip = "";
+
+    my $parser_class = 
+        ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
+
+    $self->_parser(
+        $parser_class->new()
+    );
+
+    return 0;
+}
+
+=head2 $self->convert({ source => { file => $path_to_file } })
+
+Converts the file $path_to_file to XML and returns it.
+
+=cut
+
+use Data::Dumper;
+
+sub _output_tag
+{
+    my ($self, $args) = @_;
+
+    my @start = @{$args->{start}};
+    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
+
+    $args->{in}->($self, $args);
+
+    $self->_writer->endTag();
+}
+
+sub _output_tag_with_childs
+{
+    my ($self, $args) = @_;
+
+    return 
+        $self->_output_tag({
+            %$args,
+            'in' => sub {
+                foreach my $child (@{$args->{elem}->_get_childs()})
+                {
+                    $self->_write_elem({elem => $child,});
+                }
+            },
+        });
+}
+
+sub _handle_text_start
+{
+    my ($self, $elem) = @_;
+
+    if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["saying", 'character' => $elem->character()],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Description"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => ["description"],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
+    {
+        foreach my $child (@{$elem->_get_childs()})
+        {
+            $self->_write_elem({ elem => $child,},);
+        }
+    }
+    else
+    {
+        Carp::confess ("Unknown element class - " . ref($elem) . "!");
+    }
+}
+
+sub _write_elem
+{
+    my ($self, $args) = @_;
+
+    my $elem = $args->{elem};
+
+    if (ref($elem) eq "")
+    {
+        $self->_writer->characters($elem);
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph"))
+    {
+        $self->_output_tag_with_childs(
+            {
+               start => ["para"],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Element"))
+    {
+        if (($elem->name() eq "s") || ($elem->name() eq "section"))
+        {
+            $self->_write_scene({scene => $elem});
+        }
+        elsif ($elem->name() eq "a")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["ulink", "url" => $elem->lookup_attr("href")],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "b")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["bold"],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "br")
+        {
+            $self->_writer->emptyTag("br");
+        }
+        elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::InnerDesc"))
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["inlinedesc"],
+                    elem => $elem,
+                }
+            );
+        }
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
+    {
+        $self->_handle_text_start($elem);
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Comment"))
+    {
+        $self->_writer->comment($elem->text());
+    }
+}
+
+sub _write_scene
+{
+    my ($self, $args) = @_;
+
+    my $scene = $args->{scene};
+
+    my $tag = $scene->name;
+    
+    if (($tag eq "s") || ($tag eq "scene"))
+    {
+        my $id = $scene->lookup_attr("id");
+
+        if (!defined($id))
+        {
+            Carp::confess("Unspecified id for scene!");
+        }
+
+        my $title = $scene->lookup_attr("title");
+        my @t = (defined($title) ? (title => $title) : ());
+
+        $self->_output_tag_with_childs(
+            {
+                'start' => ["scene", id => $id, @t],
+                elem => $scene,
+            }
+        );
+    }
+    else
+    {
+        confess "Improper scene tag - should be '<s>' or '<scene>'!";
+    }
+
+    return;
+}
+
+sub _read_file
+{
+    my ($self, $filename) = @_;
+
+    open my $in, "<", $filename or
+        confess "Could not open the file \"$filename\" for slurping.";
+    binmode $in, ":utf8";
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+    
+    return $contents;
+}
+
+sub _calc_tree
+{
+    my ($self, $args) = @_;
+
+    my $filename = $args->{source}->{file} or
+        confess "Wrong filename given.";
+
+    return $self->_parser->process_text($self->_read_file($filename));
+}
+
+sub convert
+{
+    my ($self, $args) = @_;
+
+    # These should be un-commented for debugging.
+    # local $::RD_HINT = 1;
+    # local $::RD_TRACE = 1;
+    
+    # We need this so P::RD won't skip leading whitespace at lines
+    # which are siginificant.  
+
+    my $tree = $self->_calc_tree($args);
+
+    if (!defined($tree))
+    {
+        Carp::confess("Parsing failed.");
+    }
+
+    my $buffer = "";
+    $self->_buffer(\$buffer);
+    
+    my $writer = XML::Writer->new(
+        OUTPUT => $self->_buffer(), 
+        ENCODING => "utf-8",
+        NAMESPACES => 1,
+        PREFIX_MAP =>
+        {
+             $screenplay_ns => "",
+        }
+    );
+
+    $writer->xmlDecl("utf-8");
+    $writer->doctype("document", undef, "screenplay-xml.dtd");
+    $writer->startTag([$screenplay_ns, "document"]);
+    $writer->startTag([$screenplay_ns, "head"]);
+    $writer->endTag();
+    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
+
+    # Now we're inside the body.
+    $self->_writer($writer);
+
+    $self->_write_scene({scene => $tree});
+
+    # Ending the body
+    $writer->endTag();
+
+    $writer->endTag();
+    
+    return ${$self->_buffer()};
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,120 @@
+package XML::Grammar::Screenplay::FromProto::Nodes;
+
+use strict;
+use warnings;
+
+use List::Util ();
+
+package XML::Grammar::Screenplay::FromProto::Node;
+
+use Moose;
+
+package XML::Grammar::Screenplay::FromProto::Node::WithContent;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node");
+
+has 'children' => (
+    isa => 'XML::Grammar::Screenplay::FromProto::Node::List', 
+    is => 'rw'
+);
+
+sub _get_childs
+{
+    my $self = shift;
+
+    my $childs = $self->children->contents();
+
+    return $childs || [];
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::Element;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
+
+has 'name' => (isa => 'Str', is => 'rw');
+has 'attrs' => (isa => 'ArrayRef', is => 'rw');
+
+sub lookup_attr
+{
+    my ($self, $attr_name) = @_;
+
+    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
+
+    if (!defined($pair))
+    {
+        return undef;
+    }
+    else
+    {
+        return $pair->{value};
+    }
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::List;
+
+use Moose;
+
+has 'contents' => (isa => "ArrayRef", is => "rw");
+
+package XML::Grammar::Screenplay::FromProto::Node::Text;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
+
+package XML::Grammar::Screenplay::FromProto::Node::Saying;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Text");
+
+has 'character' => (isa => "Str", is => "rw", required => 1,);
+
+package XML::Grammar::Screenplay::FromProto::Node::Description;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Text");
+
+package XML::Grammar::Screenplay::FromProto::Node::Paragraph;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Element");
+
+package XML::Grammar::Screenplay::FromProto::Node::InnerDesc;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Element");
+
+sub name
+{
+    return "inlinedesc";
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::Comment;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node");
+
+has "text" => (isa => "Str", is => "rw");
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Screenplay::FromProto.
+
+=head1 DESCRIPTION
+
+Contains several nodes.
+
+=cut
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,37 @@
+package XML::Grammar::Screenplay::FromProto::Parser;
+
+use strict;
+use warnings;
+
+use Moose;
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,262 @@
+package XML::Grammar::Screenplay::FromProto::Parser::PRD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::FromProto::Parser';
+
+use Parse::RecDescent;
+
+use Moose;
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
+
+sub _init
+{
+    my $self = shift;
+
+    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
+
+    return 0;
+}
+
+sub _calc_grammar
+{
+    my $self = shift;
+
+    return <<'EOF';
+
+start : tag  {$thisparser->{ret} = $item[1]; 1 }
+
+text_unit:   tag_or_comment { $item[1] }
+           | speech_or_desc { $item[1] }
+
+tag_or_comment:   tag
+                | comment
+
+comment:    /<!--(.*?)-->/ms para_sep {
+    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
+        text => $1
+    )
+    }
+
+para_sep:      /(\n\s*)+/
+
+speech_or_desc:   speech_unit
+                | desc_unit
+
+plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
+
+inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
+    {
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $item[2],
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => []
+            ),
+            attrs => $item[3]
+            );
+    }
+
+
+inner_tag:         opening_tag  inner_text closing_tag {
+        my ($open, $inside, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            attrs => $open->{attrs},
+            )
+    }
+
+inner_desc:      /\[/ inner_text /\]/ {
+        my $inside = $item[2];
+        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            )
+    }
+
+inner_tag_or_desc:    inner_tag
+                   |  inner_desc
+
+inner_entity:      /\&\w+;/ {
+        my $inside = $item[1];
+        HTML::Entities::decode_entities($inside)
+    }
+
+inner_text_unit:    plain_inner_text  { [ $item[1] ] }
+                 |  inner_tag_or_desc { [ $item[1] ] }
+                 |  inner_entity      { [ $item[1] ] }
+                 |  inner_standalone_tag { [ $item[1] ] }
+
+inner_text:       inner_text_unit(s) {
+        [ map { @{$_} } @{$item[1]} ]
+        }
+
+addressing: /^([^:\n\+]+): /ms { $1 }
+
+saying_first_para: addressing inner_text para_sep {
+            my ($sayer, $what) = ($item[1], $item[2]);
+            +{
+             character => $sayer,
+             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $what,
+                    )
+                ),
+            }
+            }
+
+saying_other_para: /^\++: /ms inner_text para_sep {
+        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $item[2],
+                    ),
+        )
+    }
+
+speech_unit:  saying_first_para saying_other_para(s?)
+    {
+    my $first = $item[1];
+    my $others = $item[2] || [];
+        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => [ $first->{para}, @{$others} ],
+                ),
+        )
+    }
+
+desc_para:  inner_text para_sep { $item[1] }
+
+desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
+
+desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
+        my $paragraphs = $item[2];
+
+        XML::Grammar::Screenplay::FromProto::Node::Description->new(
+            children => 
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents =>
+                [
+                map { 
+                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                    children =>
+                        XML::Grammar::Screenplay::FromProto::Node::List->new(
+                            contents => $_,
+                            ),
+                        )
+                } @$paragraphs
+                ],
+            ),
+        )
+    }
+
+text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => $item[1]
+        ) }
+      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => []
+        ) }
+
+tag: space opening_tag space text space closing_tag space
+     {
+        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => $inside,
+            attrs => $open->{attrs},
+            );
+     }
+
+opening_tag: '<' id attribute(s?) '>'
+    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
+
+closing_tag: '</' id '>'
+    { $item[0] = { 'name' => $item[2], }; }
+
+attribute: space id '="' attributevalue '"' space
+    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
+
+attributevalue: /[^"]+/
+    { $item[0] = HTML::Entities::decode_entities($item[1]); }
+
+space: /\s*/
+
+id: /[a-zA-Z_\-]+/
+
+EOF
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    my $rv = $self->_p_rd()->start($text);
+
+    if (!defined($rv))
+    {
+        return;
+    }
+    else
+    {
+        return $self->_p_rd->{ret};
+    }
+}
+
+1;
+
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns it.
+
+=head2 $self->meta()
+
+Something that L<Moose> adds.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,952 @@
+package XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+use strict;
+use warnings;
+
+use Moose;
+
+extends(
+    'XML::Grammar::Screenplay::FromProto::Parser',
+    'XML::Grammar::Fiction::FromProto::Parser::XmlIterator',
+);
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+use XML::Grammar::Screenplay::Struct::Tag;
+
+use List::Util ();
+use List::MoreUtils ();
+
+has "_in_para" => (isa => "Bool", is => "rw");
+has "_in_saying" => (isa => "Bool", is => "rw");
+has "_prev_line_is_empty" => (isa => "Bool", is => "rw", default => 1);
+
+before 'next_line_ref' => sub {
+    my $self = shift;
+
+    $self->_prev_line_is_empty($self->curr_line_ref() =~ m{\A\s*\z});
+
+    return;
+};
+
+sub _top_is_para
+{
+    my $self = shift;
+
+    return $self->_in_para() && ($self->_tags_stack->[-1]->name() eq "p");
+}
+
+
+sub _top_is_saying
+{
+    my $self = shift;
+
+    return $self->_in_saying() && ($self->_tags_stack->[-1]->name() eq "saying");
+}
+
+sub _pop_tag
+{
+    my $self = shift;
+
+    my $open = pop(@{$self->_tags_stack()});
+
+    if ($open->name() eq "saying")
+    {
+        $self->_in_saying(0);
+    }
+
+    return $open;
+}
+
+sub _count_tags_in_stack
+{
+    my $self = shift;
+    my $name = shift;
+
+    my @tags = $self->_grep_tags_stack(sub { $_->name() eq $name; });
+
+    return scalar(@tags);
+}
+
+after '_push_tag' => sub {
+    my $self = shift;
+
+    # This is an assert - it must never happen.
+    if ($self->_count_tags_in_stack("p") == 2)
+    {
+        Carp::confess (qq{Two paragraphs in the tags stack.});
+    }
+
+    # This is an assert - it must never happen.
+    if ($self->_count_tags_in_stack("saying") == 2)
+    {
+        Carp::confess (qq{Two sayings in the tags stack at the same time.});
+    }
+    
+    return;
+};
+
+sub _init
+{
+    my $self = shift;
+
+    return 0;
+}
+
+sub _start
+{
+    my $self = shift;
+
+    return $self->_parse_top_level_tag();
+}
+
+my $id_regex = '[a-zA-Z_\-]+';
+
+
+sub _new_node
+{
+    my $self = shift;
+    my $args = shift;
+
+    # t == type
+    my $class = 
+        "XML::Grammar::Screenplay::FromProto::Node::"
+        . delete($args->{'t'})
+        ;
+
+    return $class->new(%$args);
+}
+
+sub _create_elem
+{
+    my $self = shift;
+    my $open = shift;
+
+    my $children = @_ ? shift(@_) : $self->_new_empty_list();
+
+    return
+        $self->_new_node(
+            {
+                t => (
+                    $open->name() eq "desc" ? "Description" 
+                    : $open->name() eq "innerdesc" ? "InnerDesc"
+                    : "Element"
+                ),
+                name => $open->{name},
+                children => $children,
+                attrs => $open->{attrs},
+            }
+        );
+}
+
+sub _new_empty_list
+{
+    my $self = shift;
+    return $self->_new_list([]);
+}
+
+sub _new_list
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "List",
+            contents => $contents,
+        }
+    );
+}
+
+sub _new_para
+{
+    my $self = shift;
+    my $contents = shift;
+
+    # This is an assert
+    if (List::MoreUtils::any 
+        { ref($_) ne "" && $_->isa("XML::Grammar::Screenplay::FromProto::Node::Saying") }
+        @{$contents || []}
+        )
+    {
+        Carp::confess (qq{Para contains a saying.});
+    }
+
+
+    return $self->_new_node(
+        {
+            t => "Paragraph",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
+sub _new_comment
+{
+    my $self = shift;
+    my $text = shift;
+
+    return $self->_new_node(
+        {
+            t => "Comment",
+            text => $text,
+        }
+    );
+}
+
+sub _new_saying
+{
+    my $self = shift;
+    my $sayer = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "Saying",
+            character => $sayer,
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
+sub _get_desc_name
+{
+    my $self = shift;
+
+    return ($self->_in_para() ? "innerdesc" : "desc");
+}
+
+sub _new_text
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "Text",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
+sub _parse_opening_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    # This is an assert
+    if (!defined($$l))
+    {
+        Carp::confess (qq{Reached EOF in _parse_opening_tag.});
+    }
+
+    # This is an assert
+    if (!defined($self->curr_pos()))
+    {
+        Carp::confess (qq{curr_pos is not defined in _parse_opening_tag.});
+    }
+
+    my $is_start = ($self->curr_pos() == 0);
+
+    if ($$l =~ m{\G\[}cg)
+    {
+        my $not_inline = 0;
+        if ($is_start && $self->_prev_line_is_empty())
+        {
+            $self->_close_top_tags();
+            $not_inline = 1;
+        }
+
+        return XML::Grammar::Screenplay::Struct::Tag->new(
+            name => $not_inline ? "desc" : $self->_get_desc_name(),
+            line => $self->line_num(),
+            attrs => [],
+        );
+    }
+
+    if ($$l !~ m{\G<($id_regex)}g)
+    {
+        Carp::confess("Cannot match opening tag at line " . $self->line_num());
+    }
+
+    my $id = $1;
+
+    my @attrs;
+
+    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $1, 'value' => $2, };
+    }
+
+    my $is_standalone = 0;
+
+    if ($$l =~ m{\G\s*/\s*>}cg)
+    {
+        $is_standalone = 1;
+    }
+    elsif ($$l !~ m{\G>}g)
+    {
+        Carp::confess (
+            "Cannot match the \">\" of the opening tag at line " 
+            . $self->line_num()
+        );
+    }
+     
+    return XML::Grammar::Screenplay::Struct::Tag->new(
+        name => $id,
+        is_standalone => $is_standalone,
+        line => $self->line_num(),
+        attrs => \@attrs,
+    );
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    if ($$l =~ m{\G\]}cg)
+    {
+        return XML::Grammar::Screenplay::Struct::Tag->new(
+            name => $self->_get_desc_name(),
+            line => $self->line_num(),
+        );
+    }
+    elsif ($$l =~ m{\G</($id_regex)>}g)
+    {
+        return XML::Grammar::Screenplay::Struct::Tag->new(
+            name => $1,
+            line => $self->line_num(),
+        );
+    }
+    else
+    {
+        Carp::confess("Cannot match closing tag at line ". $self->line_num());
+    }
+
+}
+
+sub _parse_text
+{
+    my $self = shift;
+
+    my @ret;
+    while (defined(my $unit = $self->_parse_text_unit()))
+    {
+        push @ret, $unit;
+        my $type = $unit->{'type'};
+        if (($type eq "close") || ($type eq "open"))
+        {
+            push @ret, @{$self->_events_queue()};
+            $self->_events_queue([]);
+            return \@ret;
+        }
+    }
+
+    return \@ret;
+
+}
+
+sub _parse_inner_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    if ($open->{is_standalone})
+    {
+        # $self->skip_multiline_space();
+
+        return $self->_create_elem($open);
+    }
+
+    my $inside = $self->_parse_inner_text();
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Opening and closing tags do not match: " 
+            . "$open->{name} and $close->{name} on element starting at "
+            . "line $open->{line}"
+        );
+    }
+    return $self->_create_elem($open, $self->_new_list($inside));
+}
+
+sub _determine_tag
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    return
+          ($$l =~ m{\G\[}) ? "open_desc"
+        : ($$l =~ m{\G\&}) ? "entity"
+        : ($$l =~ m{\G(?:</|\])}) ? "close"
+        : ($$l =~ m{\G<}) ? "open_tag"
+        : undef
+        ;
+}
+
+sub _parse_speech_unit
+{
+    my $self = shift;
+
+    if (${$self->curr_line_ref()} !~ /\G([^:\n]+): /cgms)
+    {
+        Carp::confess("Cannot match addressing at line " . $self->line_num());
+    }
+
+    my $sayer = $1;
+
+    if ($sayer =~ m{[\[\]]})
+    {
+        Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->line_num());
+    }    
+
+    # All pluses
+    if ($sayer =~ m{\A\++\z})
+    {
+        return { elem => $self->_new_para([]), para_end => 0 };
+    }
+    else
+    {
+        return { elem => $self->_new_saying($sayer, []), sayer => $sayer, para_end => 0};
+    }
+}
+
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    my $l = $self->curr_line_ref();
+
+    if ((pos($$l) == 0) && ($$l =~ m{\A[^\[<][^:]*:}))
+    {
+        return $self->_parse_speech_unit();
+    }
+
+    my $text = $self->consume_up_to(qr{(?:[\<\[\]\&]|^\n?$)}ms);
+
+    $l = $self->curr_line_ref();
+
+    my $ret_elem = $self->_new_text([$text]);
+    my $is_para_end = 0;
+
+    # Demote the cursor to before the < of the tag.
+    #
+    if (pos($$l) > 0)
+    {
+        pos($$l)--;
+        if (substr($$l, pos($$l), 1) eq "\n")
+        {
+            $is_para_end = 1;
+        }
+    }
+    else
+    {
+        $is_para_end = 1;
+    }
+
+    if ($text !~ /\S/)
+    {
+        return;
+    }
+    else
+    {
+        return
+        {
+            elem => $ret_elem,
+            para_end => $is_para_end,
+        };
+    }
+}
+
+sub _parse_text_unit
+{
+    my $self = shift;
+
+    if (defined(my $event = $self->_extract_event()))
+    {
+        return $event;
+    }
+    else
+    {
+        $self->_generate_text_unit_events();
+        return $self->_extract_event();
+    }
+}
+
+sub _generate_text_unit_events
+{
+    my $self = shift;
+    
+    # $self->skip_multiline_space();
+
+    my $l = $self->curr_line_ref();
+    if ($$l =~ m{\G[<\[\]\&]})
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        # If it's an entity, then parse it.
+        if ($$l =~ m{\G\&})
+        {
+            if ($$l !~ m{\G(\&\w+;)}g)
+            {
+                Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                    $self->line_num()
+                );
+            }
+
+            my $entity = $1;
+
+            $self->_enqueue_event(
+                {
+                    type => "elem",
+                    elem => $self->_new_text(
+                        [HTML::Entities::decode_entities($entity)]
+                    ),
+                },
+            );
+
+            return;
+        }
+        # If it's a closing tag - then backtrack.
+        if ($$l =~ m{\G(</|\])})
+        {
+            $self->_enqueue_event({'type' => "close"});
+            return;
+        }
+        else
+        {
+            $self->_enqueue_event({'type' => "open"});
+            return;
+        }
+    }
+    else
+    {
+
+        my $status = $self->_parse_non_tag_text_unit();
+
+        if (!defined($status))
+        {
+            return;
+        }
+
+        my $elem = $status->{'elem'};
+        my $is_para_end = $status->{'para_end'};
+        my $is_saying = $elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying");
+        #my $is_para =
+        #    (($self->curr_pos() == 0) && 
+        #     (${$self->curr_line_ref()} =~ m{\G\n?\z})
+        #    );
+        # Trying out this one:
+        my $is_para = $elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph");
+
+        my $in_para = $self->_in_para();
+        my $was_already_enqueued = 0;
+
+        if ( ($is_saying || $is_para) && $in_para)
+        {
+            $self->_enqueue_event({type => "close", tag => "para"});
+            $in_para = 0;
+        }
+        
+        if ( $is_saying && $self->_in_saying())
+        {
+            $self->_enqueue_event({type => "close", tag => "saying"});
+        }
+
+        if ($is_saying)
+        {
+            $self->_enqueue_event(
+                {type => "open", tag => "saying", _elem => $elem, },
+            );
+            $was_already_enqueued = 1;
+
+            $self->_enqueue_event({type => "open", tag => "para"});
+            $in_para = 1;
+        }
+        elsif ($is_para && !$in_para)
+        {
+            $self->_enqueue_event({type => "open", tag => "para"});
+            $in_para = 1;
+        }
+
+        if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text") &&
+            !$was_already_enqueued)
+        {
+            if (!$in_para)
+            {
+                $self->_enqueue_event({type => "open", tag => "para"});
+                $in_para = 1;
+            }
+            $self->_enqueue_event({type => "elem", elem => $elem, });
+            $was_already_enqueued = 1;
+        }
+
+        if ($is_para_end && $in_para)
+        {
+            # $self->_enqueue_event({ type => "close", tag => "para" });
+            $in_para = 0;
+        }
+
+        return;
+    }
+}
+
+sub _merge_tag
+{
+    my $self = shift;
+    my $open_tag = shift;
+
+    my $new_elem = 
+        $self->_create_elem(
+            $open_tag, 
+            $self->_new_list($open_tag->detach_children()),
+        );
+
+    if (@{$self->_tags_stack()})
+    {
+        $self->_add_to_top_tag($new_elem);
+        return;
+    }
+    else
+    {
+        return $new_elem;
+    }
+}
+
+sub _close_saying
+{
+    my $self = shift;
+    my $open = $self->_pop_tag();
+
+    # This is an assert.
+    if ($open->name() ne "saying")
+    {
+        Carp::confess (qq{Not a saying tag.});    
+    }
+    
+    my $new_elem =
+        $self->_new_saying(
+            (List::Util::first
+                { $_->{key} eq "character"}
+                @{$open->attrs()}
+            )->{value},
+            $open->detach_children(),
+        );
+
+    $self->_add_to_top_tag($new_elem);
+
+    return;
+}
+
+sub _close_para
+{
+    my $self = shift;
+    my $open = $self->_pop_tag();
+
+    # This is an assert.
+    if ($open->name() ne "p")
+    {
+        Carp::confess (qq{Not a para tag.});    
+    }
+
+    my $children = $open->detach_children();
+
+    # Filter away empty paragraphs.
+    if (defined($children) && @$children)
+    {
+        my $new_elem =
+            $self->_new_para(
+                $children
+            );
+
+        $self->_add_to_top_tag($new_elem);
+    }
+
+    $self->_in_para(0);
+
+    return;
+}
+
+sub _start_para
+{
+    my $self = shift;
+
+    my $new_elem = 
+    XML::Grammar::Screenplay::Struct::Tag::Para->new(
+        name => "p",
+        is_standalone => 0,
+        line => $self->line_num(),
+        attrs => [],
+    );
+
+    $new_elem->children([]);
+
+    $self->_push_tag($new_elem);
+
+    $self->_in_para(1);
+
+    return;
+}
+
+sub _close_top_tags
+{
+    my $self = shift;
+
+    if ($self->_top_is_para())
+    {
+        $self->_close_para();
+    }
+
+    if ($self->_top_is_saying())
+    {
+        $self->_close_saying();
+    }
+
+    return;
+}
+
+sub _parse_top_level_tag
+{
+    my $self = shift;
+
+    # $self->skip_multiline_space();
+
+    $self->_in_para(0);
+
+    my $run_once = 1;
+
+    my $ret_tag;
+
+
+    TAGS_LOOP:
+    while ($run_once || @{$self->_tags_stack()})
+    {
+        $run_once = 0;
+
+        # This is an assert.
+        if (!defined(${$self->curr_line_ref()}) && (! @{$self->_events_queue()}))
+        {
+            Carp::confess (qq{Reached EOF.});
+        }
+        
+
+        if ($self->curr_line_continues_with(qr{<!--}))
+        {
+            my $text = $self->consume_up_to(qr{-->});
+
+            $self->_add_to_top_tag( $self->_new_comment($text) );
+            redo TAGS_LOOP;
+        }
+
+
+        my ($l, $p) = $self->curr_line_and_pos();
+
+        if ($$l eq "\n")
+        {
+            if ($self->_top_is_para())
+            {
+                $self->_close_para();
+            }
+            $self->next_line_ref();
+            next TAGS_LOOP;
+        }
+        
+        if ($$l =~ m{\G([ \t]+)\n?\z})
+        {
+            if (length($1))
+            {
+                $self->_add_to_top_tag( $self->_new_text([" "]) );
+            }
+
+            $self->next_line_ref();
+
+            next TAGS_LOOP;            
+        }
+        
+        my $is_tag_cond = ($$l =~ m{\G([<\[\]])});
+
+        my $is_close = $is_tag_cond && ($$l =~ m{\G(?:</|\])});
+
+        # Check if it's a closing tag.
+        if ($is_close)
+        {
+            $self->_close_top_tags();
+
+            my $close = $self->_parse_closing_tag();
+
+            my $open = $self->_pop_tag();
+    
+            if ($open->name() ne $close->name())
+            {
+                XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+                    error => "Tags do not match",
+                    opening_tag => $open,
+                    closing_tag => $close,
+                );
+            }
+
+            if (defined(my $top_elem = $self->_merge_tag($open)))
+            {
+                $ret_tag = $top_elem;
+                last TAGS_LOOP;
+            }
+            else
+            {
+                redo TAGS_LOOP;
+            }
+        }
+        elsif ($is_tag_cond)
+        {
+            my $open = $self->_parse_opening_tag();
+
+            $open->children([]);
+
+            # TODO : add the check for is_standalone in XML-Grammar-Fiction
+            # too.
+            if ($open->is_standalone())
+            {
+                if (defined(my $top_elem = $self->_merge_tag($open)))
+                {
+                    $ret_tag = $top_elem;
+                    last TAGS_LOOP;
+                }
+                else
+                {
+                    redo TAGS_LOOP;
+                }
+            }
+            $self->_push_tag($open);
+
+            if ($open->name() eq "desc")
+            {
+                $self->_start_para();
+            }
+        }
+        else
+        {
+            if (! @{$self->_tags_stack()} )
+            {
+                XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
+                    error => "Cannot match opening tag.",
+                    'line' => $self->line_num(),
+                );
+            }
+
+            my $contents = $self->_parse_text();
+
+            foreach my $event (@$contents)
+            {
+                if (  exists($event->{'tag'})
+                    && $event->{'tag'} eq "para"
+                )
+                {
+                    if ($event->{'type'} eq "open")
+                    {
+                        $self->_start_para();
+                    }
+                    else
+                    {
+                        $self->_close_para();
+                    }
+                }
+                elsif (  exists($event->{'tag'})
+                    && $event->{'tag'} eq "saying"
+                )
+                {
+                    if ($event->{'type'} eq "open")
+                    {
+                        my $new_tag =
+                            XML::Grammar::Screenplay::Struct::Tag->new(
+                                {
+                                    name => "saying",
+                                    is_standalone => 0,
+                                    # TODO : propagate the correct line_num
+                                    # from the called-to layers.
+                                    line => $self->line_num(),
+                                    attrs => [{key => "character", value => $event->{_elem}->character()}],
+                                }
+                            );
+
+                        $new_tag->children([]);
+
+                        $self->_push_tag($new_tag);
+
+                        $self->_in_saying(1);
+                    }
+                    else
+                    {
+                        $self->_close_saying();
+                    }
+                }
+                elsif ($event->{'type'} eq "elem")
+                {
+                    $self->_add_to_top_tag( $event->{'elem'} );
+                }
+            }
+        }
+
+
+    }
+
+    return $ret_tag;
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    $self->setup_text($text);
+
+    return $self->_start();
+}
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser
+for the Screenplay-XML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns the parse tree.
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Struct/Tag.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,124 @@
+package XML::Grammar::Screenplay::Struct::Tag;
+
+use strict;
+use warnings;
+
+use Moose;
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::Struct::Tag - information about an XML/SGML opening or 
+closing tag.
+
+B<For internal use only>.
+
+=head1 VERSION
+
+Version 0.0.4
+
+=cut
+
+our $VERSION = '0.0.4';
+
+has 'name' => (is => "rw", isa => "Str");
+has 'line' => (is => "rw", isa => "Int");
+has 'is_standalone' => (is => "rw", isa => "Bool");
+has 'attrs' => (is => "rw", isa => "ArrayRef");
+has 'children' => (
+    is => "rw", 
+    isa => "Maybe[ArrayRef]",
+);
+
+sub append_children
+{
+    my ($self, $children) = @_;
+
+    push @{$self->children()}, @$children;
+
+    return;
+}
+
+sub append_child
+{
+    my ($self, $child) = @_;
+
+    return $self->append_children( [ $child ] );
+}
+
+sub detach_children
+{
+    my $self = shift;
+
+    my $children = $self->children();
+
+    $self->children(undef);
+
+    return $children;
+}
+
+package XML::Grammar::Screenplay::Struct::Tag::Para;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::Struct::Tag");
+
+=head1 METHODS
+
+=head2 $self->name()
+
+The tag's name.
+
+=head2 $self->line()
+
+The tag's line number.
+
+=head2 $self->is_standalone()
+
+Determines whether it's a standalone tag or not. (if it's an opening tag).
+
+=head2 $self->attrs()
+
+The attributes of the opening tag in an array.
+
+=head2 $self->children()
+
+A placeholder for the element's children.
+
+=head2 $self->append_children(\@children)
+
+Append more elements to the children.
+
+=head2 $self->append_child($child)
+
+Appends a single child. Uses C<append_children()> .
+
+=head2 my $children = $self->detach_children()
+
+Detaches the children and returns them as an array reference.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,149 @@
+package XML::Grammar::Screenplay::ToDocBook;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Screenplay::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToDocBook - module that converts the Screenplay
+XML to DocBook.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $dtd =
+        XML::LibXML::Dtd->new(
+            "Screenplay XML 0.1.0",
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.dtd"
+            ),
+        );
+
+    $self->_dtd($dtd);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-docbook.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_docbook
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,165 @@
+package XML::Grammar::Screenplay::ToHTML;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Screenplay::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToHTML - module that converts the Screenplay
+XML to HTML.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $rngschema =
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.rng"
+            ),
+        );
+
+    $self->_rng($rngschema);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-html.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_html
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+    }
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/00-load.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,9 @@
+#!perl -T
+
+use Test::More tests => 1;
+
+BEGIN {
+	use_ok( 'XML::Grammar::Screenplay' );
+}
+
+diag( "Testing XML::Grammar::Screenplay $XML::Grammar::Screenplay::VERSION, Perl $], $^X" );
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/app-to-html.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,39 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 1;
+use File::Spec;
+
+use Config;
+
+{
+    local %ENV = %ENV;
+    my @p5lib = split($Config{'path_sep'}, $ENV{'PERL5LIB'});
+    $ENV{'PERL5LIB'} = join($Config{'path_sep'}, 
+        File::Spec->rel2abs(
+            File::Spec->catdir(
+                File::Spec->curdir(),
+                "t", "screenplay", "lib", "run-test-1",
+            )
+        ), @p5lib);
+
+    # TEST
+    ok (
+        !system($^X, "-MXML::Grammar::Screenplay::App::ToHTML",
+            "-e", "run()",
+            "--",
+            "-o", "temp.xhtml",
+            File::Spec->catdir(File::Spec->curdir(), 
+                "t", "screenplay", "data", "xml", "nested-s.xml"
+            )
+        ),
+        "Testing App::ToHTML",
+    );
+
+    unlink("temp.xhtml");
+}
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/boilerplate.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/boilerplate.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,48 @@
+#!perl -T
+
+use strict;
+use warnings;
+use Test::More tests => 3;
+
+sub not_in_file_ok {
+    my ($filename, %regex) = @_;
+    open my $fh, "<", $filename
+        or die "couldn't open $filename for reading: $!";
+
+    my %violated;
+
+    while (my $line = <$fh>) {
+        while (my ($desc, $regex) = each %regex) {
+            if ($line =~ $regex) {
+                push @{$violated{$desc}||=[]}, $.;
+            }
+        }
+    }
+
+    if (%violated) {
+        fail("$filename contains boilerplate text");
+        diag "$_ appears on lines @{$violated{$_}}" for keys %violated;
+    } else {
+        pass("$filename contains no boilerplate text");
+    }
+}
+
+not_in_file_ok(README =>
+    "The README is used..."       => qr/The README is used/,
+    "'version information here'"  => qr/to provide version information/,
+);
+
+not_in_file_ok(Changes =>
+    "placeholder date/time"       => qr(Date/time)
+);
+
+sub module_boilerplate_ok {
+    my ($module) = @_;
+    not_in_file_ok($module =>
+        'the great new $MODULENAME'   => qr/ - The great new /,
+        'boilerplate description'     => qr/Quick summary of what the module/,
+        'stub function definition'    => qr/function[12]/,
+    );
+}
+
+module_boilerplate_ok('lib/XML/Grammar/Screenplay.pm');
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/docbook/with-internal-description.docbook.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd">
+<article id="index">
+  <section id="top">
+    <title>top</title>
+    <section id="david_and_goliath">
+      <title>david_and_goliath</title>
+      <section role="description" id="id2244766"><title/>
+            <para>
+            [
+        
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
+                are standing by each other.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2244967"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                I will kill you.
+            </para>
+        </section>
+      <section role="saying" id="id2244977"><title/>
+            <para><emphasis role="bold">Goliath: </emphasis>
+                no way, you little idiot!
+            </para>
+        </section>
+      <section role="saying" id="id2244986"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                yes way!
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
+                <phrase>[sarcastically]</phrase> power 
+                of my sling.
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                I shall sling you and bing you till infinity.
+            </para>
+        </section>
+      <section role="description" id="id2242910"><title/>
+            <para>
+            [
+        
+                David takes his sling.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2242918"><title/>
+        <para><emphasis role="bold">Goliath: </emphasis>
+            I'm still <ulink url="http://wait.tld/"/>.
+        </para>
+    </section>
+      <section role="saying" id="id2244786"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            so you are.
+        </para>
+    </section>
+      <section role="description" id="id2244795"><title/>
+        <para>
+            [
+        
+            David puts a stone in his sling and shoots Goliath. He hits.
+        
+            ]
+        </para>
+    </section>
+      <section role="saying" id="id2244802"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            as is written in the wikipedia <phrase>[See <ulink url="http://wiki.tld/"/>
+                for more information]</phrase>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </section>
+    </section>
+  </section>
+</article>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,23 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+Goliath [dead]: vengence will be mine.
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/dialogue-with-several-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/dialogue-with-several-paragraphs.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,22 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++: I shall sling you and bing you till infinity.
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/nested-s.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,6 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/scenes-with-titles.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/scenes-with-titles.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,17 @@
+<s id="top">
+
+<s id="a-better-scene" title="A Better Scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+<s id="exodus" title="The Exodus">
+
+Moses: let us get out of here!
+
+Joshua: amen!
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/two-nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/two-nested-s.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,9 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-brs.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,21 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-comments.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,15 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters -->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-description.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,28 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-dialogue.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-dialogue.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,13 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-entities.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-entities.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David &amp; Goliath &lt;are&gt; standing by each other.
+
+David is a red-head. &quot;Hello&quot;
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-internal-description.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,34 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
+of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
+Wiki site</a> for more information], you are now dead, having been shot with
+my sling.
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-line-comments.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,18 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters 
+
+They are nifty.
+-->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-para-desc.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-multi-para-desc.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.
+
+David is a red-head.
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/proto-text/with-tags-inside-paragraphs.txt	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/dialogue-with-several-paragraphs.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,44 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                I'm still waiting.
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                so you are.
+            </para>
+        </saying>
+    </scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/nested-s.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,12 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/scenes-with-titles.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene" title="A Better Scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+            <scene id="exodus" title="The Exodus">
+                <saying character="Moses">
+                    <para>
+                        let us get out of here!
+                    </para>
+                </saying>
+                <saying character="Joshua">
+                    <para>
+                        amen!
+                    </para>
+                </saying>
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/two-nested-s.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,14 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-brs.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,39 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.<br />
+                I will kill you.<br />
+                You will not survive.<br />
+                I will kill you.<br />
+                I will kill you.<br />
+                Ask Jive.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-comments.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,29 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-description.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,59 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-dialogue.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-entities.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </para>
+        <para>
+            David is a red-head. "Hello"
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-internal-description.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,69 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
+                <inlinedesc>sarcastically</inlinedesc> power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+    <saying character="David">
+        <para>
+            as is written in the wikipedia <inlinedesc>See <ulink url="http://wiki.tld/">the Wiki site</ulink>
+                for more information</inlinedesc>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-line-comments.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,32 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters 
+
+        They are nifty.
+        -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-multi-para-desc.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+        </para>
+        <para>
+            David is a red-head.
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/data/xml/with-tags-inside-paragraphs.xml	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,61 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,11 @@
+package XML::Grammar::Screenplay::ConfigData;
+
+use strict;
+use warnings;
+
+sub config
+{
+    return ["./extradata"];
+}
+
+1;
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/pod-coverage.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/pod-coverage.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,6 @@
+#!perl -T
+
+use Test::More;
+eval "use Test::Pod::Coverage 1.04";
+plan skip_all => "Test::Pod::Coverage 1.04 required for testing POD coverage" if $@;
+all_pod_coverage_ok();
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/pod.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/pod.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,6 @@
+#!perl -T
+
+use Test::More;
+eval "use Test::Pod 1.14";
+plan skip_all => "Test::Pod 1.14 required for testing POD" if $@;
+all_pod_files_ok();
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-invalid.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,51 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::More tests => 1;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+eval {
+my $got_xml = $grammar->convert(
+    {
+        source =>
+        {
+            file => "t/screenplay/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
+        },
+    }
+);
+};
+
+my $err = $@;
+
+# TEST
+like ($err, qr{inner-desc.*?addressing},
+   "Tried to put an inner-desc inside an addressing "
+);
+
+1;
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/proto-text-to-xml-using-custom-parser.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,89 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 26;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my @tests = (qw(
+        nested-s
+        two-nested-s
+        with-dialogue
+        dialogue-with-several-paragraphs
+        with-description
+        with-tags-inside-paragraphs
+        with-internal-description
+        with-comments
+        with-multi-para-desc
+        with-multi-line-comments
+        scenes-with-titles
+        with-entities
+        with-brs
+    ));
+
+# TEST:$num_texts=13
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+my $rngschema = XML::LibXML::RelaxNG->new(
+        location => "./extradata/screenplay-xml.rng" 
+    );    
+
+my $xml_parser = XML::LibXML->new();
+$xml_parser->validation(0);
+
+foreach my $fn (@tests)
+{
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/screenplay/data/proto-text/$fn.txt",
+            },
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($got_xml, load_xml("t/screenplay/data/xml/$fn.xml"),
+        "Output of the Proto Text \"$fn\""
+    );
+
+    my $dom = $xml_parser->parse_string($got_xml);
+
+    my $code;
+    eval 
+    {
+    $code = $rngschema->validate($dom);
+    };
+
+    # TEST*$num_texts
+    ok ((defined($code) && ($code == 0)),
+        "The validation of '$fn' succeeded.") ||
+        diag("\$@ == $@");
+}
+
+1;
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/qnd-parser-unit.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,78 @@
+use strict;
+use warnings;
+
+use Test::More tests => 3;
+
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+{
+    my $text = <<"EOF";
+Hello <s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->setup_text($text);
+
+    my $ret = $parser->consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello ", "_consume works for first line");
+}
+
+{
+    my $text = <<"EOF";
+Hello
+voila the row kala:
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->setup_text($text);
+
+    my $ret = $parser->consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello\nvoila the row kala:\n", 
+        "_consume works for several lines");
+}
+
+{
+    my $text = <<"EOF";
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->setup_text($text);
+
+    my $ret = $parser->_parse_opening_tag();
+
+    # TEST
+    is_deeply ($ret, 
+        {
+            name => "s",
+            is_standalone => 0,
+            line => 1,
+            attrs => [ { key => "id", value => "top"}],
+        },
+        "Checking _parse_opening_tag() - #1",
+    );
+}
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-docbook.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,70 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 2;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToDocBook;
+
+my @tests = (qw(
+        with-internal-description
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=1
+
+my $converter = XML::Grammar::Screenplay::ToDocBook->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $docbook_text = $converter->translate_to_docbook({
+            source => { file => "t/screenplay/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    # TEST*$num_texts*2
+    
+    my $parser = XML::LibXML->new();
+
+    my $doc = $parser->parse_string($docbook_text);
+
+    is (
+        scalar(() = $doc->findnodes(q{//article[@id='index']})),
+        1,
+        "Found one article with id index",
+    );
+
+    ok (
+        (scalar(() = $doc->findnodes(q{//section[@role='description']}))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+}
+
+1;
+
diff -r 6f404998c3bd -r e75e2f6a21e1 perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/screenplay/to-xhtml.t	Mon Apr 19 16:32:48 2010 +0000
@@ -0,0 +1,84 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 3;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToHTML;
+
+my @tests = (qw(
+        with-internal-description
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=1
+
+my $converter = XML::Grammar::Screenplay::ToHTML->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $xhtml_text = $converter->translate_to_html({
+            source => { file => "t/screenplay/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    my $parser = XML::LibXML->new();
+
+    $parser->load_ext_dtd(0);
+
+    my $doc = $parser->parse_string($xhtml_text);
+
+    my $xpc = XML::LibXML::XPathContext->new();
+    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+    # TEST*$num_texts
+    is (
+        scalar(() = $xpc->find(q{//x:html}, $doc)),
+        1,
+        "Found one article with id index",
+    );
+
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xpc->find(q{//x:div[@class='saying']}, $doc))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+}
+
+1;
+

changeset:   151:6f404998c3bd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 19 15:00:35 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Add _grep_tags_stack.


diff -r efc83e93f990 -r 6f404998c3bd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 14:51:47 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 15:00:35 2010 +0000
@@ -18,6 +18,7 @@
     handles =>
     {
         '_push_tag' => 'push',
+        '_grep_tags_stack' => 'grep',
     },
 );
 

changeset:   150:efc83e93f990
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 19 14:51:47 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Extract _push_tag.


diff -r 6fc2090085c9 -r efc83e93f990 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 14:40:27 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 14:51:47 2010 +0000
@@ -393,7 +393,7 @@
 
     $new_elem->children([]);
 
-    push @{$self->_tags_stack()}, $new_elem; 
+    $self->_push_tag($new_elem);
 
     $self->_in_para(1);
 
@@ -491,7 +491,7 @@
 
     $open->children([]);
 
-    push @{$self->_tags_stack()}, $open;
+    $self->_push_tag($open);
 
     return;
 }
diff -r 6fc2090085c9 -r efc83e93f990 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 14:40:27 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 14:51:47 2010 +0000
@@ -9,7 +9,17 @@
 
 extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
 
-has "_tags_stack" => (isa => "ArrayRef", is => "rw", default => sub { [] },);
+has "_tags_stack" =>
+(
+    isa => "ArrayRef",
+    is => "rw",
+    default => sub { [] },
+    traits => ['Array'],
+    handles =>
+    {
+        '_push_tag' => 'push',
+    },
+);
 
 has "_events_queue" =>
 (

changeset:   149:6fc2090085c9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 19 14:40:27 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
description:
Extract the XmlIterator class.


diff -r 92f456dea130 -r 6fc2090085c9 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 19 14:02:00 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Apr 19 14:40:27 2010 +0000
@@ -18,6 +18,7 @@
 lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
+lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
 lib/XML/Grammar/Fiction/RendererBase.pm
diff -r 92f456dea130 -r 6fc2090085c9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 14:02:00 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Apr 19 14:40:27 2010 +0000
@@ -5,21 +5,8 @@
 
 use Moose;
 
-extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
+extends("XML::Grammar::Fiction::FromProto::Parser::XmlIterator");
 
-has "_tags_stack" => (isa => "ArrayRef", is => "rw");
-has "_events_queue" =>
-(
-    isa => "ArrayRef",
-    is => "rw", 
-    default => sub { []; },
-    traits => ['Array'],
-    handles =>
-    {
-        _enqueue_event => 'push',
-        _extract_event => 'shift',
-    },
-);
 has "_in_para" => (isa => "Bool", is => "rw");
 
 use XML::Grammar::Fiction::FromProto::Nodes;
@@ -42,15 +29,6 @@
 
 our $VERSION = '0.0.4';
 
-sub _add_to_top_tag
-{
-    my ($self, $child) = @_;
-
-    $self->_tags_stack->[-1]->append_child($child);
-
-    return;
-}
-
 sub _start
 {
     my $self = shift;
@@ -60,7 +38,6 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
-
 sub _new_node
 {
     my $self = shift;
@@ -592,8 +569,6 @@
 {
     my $self = shift;
 
-    $self->_tags_stack([]);
-
     $self->skip_space();
 
     $self->_in_para(0);
diff -r 92f456dea130 -r 6fc2090085c9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/XmlIterator.pm	Mon Apr 19 14:40:27 2010 +0000
@@ -0,0 +1,90 @@
+package XML::Grammar::Fiction::FromProto::Parser::XmlIterator;
+
+use strict;
+use warnings;
+
+use Moose;
+
+use XML::Grammar::Fiction::Err;
+
+extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
+
+has "_tags_stack" => (isa => "ArrayRef", is => "rw", default => sub { [] },);
+
+has "_events_queue" =>
+(
+    isa => "ArrayRef",
+    is => "rw", 
+    default => sub { []; },
+    traits => ['Array'],
+    handles =>
+    {
+        _enqueue_event => 'push',
+        _extract_event => 'shift',
+    },
+);
+
+sub _add_to_top_tag
+{
+    my ($self, $child) = @_;
+
+    $self->_tags_stack->[-1]->append_child($child);
+
+    return;
+}
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser::XmlIterator - line iterator base
+class with some nested XMLisms.
+
+B<For internal use only>.
+
+=cut
+
+our $VERSION = '0.0.4';
+
+=head1 VERSION
+
+Version 0.0.4
+
+=head1 SYNOPSIS
+
+B<TODO:> write one.
+
+=head1 DESCRIPTION
+
+This is a line iterator with some features for parsing, nested, 
+XML-like grammars.
+
+=head1 METHODS
+
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+

changeset:   148:92f456dea130
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Apr 19 14:02:00 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Correct a bug in LineIterator.


diff -r 565ac33c8446 -r 92f456dea130 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 20:41:41 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Mon Apr 19 14:02:00 2010 +0000
@@ -164,6 +164,8 @@
 
     $self->_curr_line_idx($self->_curr_line_idx()+1);
 
+    pos(${$self->curr_line_ref()}) = 0;
+
     return $self->curr_line_ref();
 }
 

changeset:   147:565ac33c8446
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 20:41:41 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Fix an end-of-file upon _next_line.

Extracted a method to facilitate it.


diff -r 21e00ea2189f -r 565ac33c8446 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 08:16:33 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 20:41:41 2010 +0000
@@ -9,7 +9,7 @@
 
 extends("XML::Grammar::Fiction::FromProto::Parser");
 
-has "_curr_line_idx" => (isa => "Int", is => "rw");
+has "_curr_line_idx" => (isa => "Int", is => "rw", reader => "line_idx",);
 has "_lines" => (isa => "ArrayRef", is => "rw");
 
 =head1 NAME
@@ -215,6 +215,11 @@
     return $$l =~ m{\G$re}cg;
 }
 
+=head2 my $line_number = $self->line_idx()
+
+Returns the line index as an integer. It starts from 0 for the 
+first line (like in Perl lines.)
+
 =head2 my $line_number = $self->line_num()
 
 Returns the line number as an integer. It starts from 1 for the 
@@ -235,6 +240,20 @@
 
 =cut
 
+sub _next_line_ref_wo_leading_space
+{
+    my $self = shift;
+
+    my $l = $self->next_line_ref();
+
+    if (defined($$l))
+    {
+        $self->_check_if_line_starts_with_whitespace()
+    }
+
+    return $l;
+}
+
 sub consume
 {
     my ($self, $match_regex) = @_;
@@ -248,8 +267,7 @@
     }
     continue
     {
-        $l = $self->next_line_ref();
-        $self->_check_if_line_starts_with_whitespace();
+        $l = $self->_next_line_ref_wo_leading_space();
     }
 
     if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
@@ -290,8 +308,7 @@
     }
     continue
     {
-        $l = $self->next_line_ref();
-        $self->_check_if_line_starts_with_whitespace();
+        $l = $self->_next_line_ref_wo_leading_space();
     }
 
     return $return_value;

changeset:   146:21e00ea2189f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 08:16:33 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
LineIterator: Made consume_up_to() an API method.


diff -r b7ce4b1c3aa7 -r 21e00ea2189f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 08:10:28 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 08:16:33 2010 +0000
@@ -260,39 +260,14 @@
     return $return_value;
 }
 
-=head2 $self->throw_text_error($exception_class, $text)
+=head2 $self->consume_up_to($regex)
 
-Throws the Error class $exception_class with the text $text (and the current
-line number.
+Consume up to the point where $regex matches.
 
 =cut
 
-sub throw_text_error
-{
-    my ($self, $error_class, $text) = @_;
-
-    return $error_class->throw(
-        error => $text,
-        line => $self->line_num(),
-    );
-}
-
-
-sub _check_if_line_starts_with_whitespace
-{
-    my $self = shift;
-
-    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
-            "Leading space detected in the text.",
-        );
-    }
-}
-
 # TODO : copied and pasted from _consume - abstract
-sub _consume_up_to
+sub consume_up_to
 {
     my ($self, $match_regex) = @_;
 
@@ -322,6 +297,38 @@
     return $return_value;
 }
 
+=head2 $self->throw_text_error($exception_class, $text)
+
+Throws the Error class $exception_class with the text $text (and the current
+line number.
+
+=cut
+
+sub throw_text_error
+{
+    my ($self, $error_class, $text) = @_;
+
+    return $error_class->throw(
+        error => $text,
+        line => $self->line_num(),
+    );
+}
+
+
+sub _check_if_line_starts_with_whitespace
+{
+    my $self = shift;
+
+    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
+            "Leading space detected in the text.",
+        );
+    }
+}
+
+
 =head2 $self->meta()
 
 Leftover from Moose.
diff -r b7ce4b1c3aa7 -r 21e00ea2189f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 08:10:28 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 08:16:33 2010 +0000
@@ -296,7 +296,7 @@
 
     my $l = $self->curr_line_ref();
 
-    my $text = $self->_consume_up_to(qr{(?:\<|^\n?$)}ms);
+    my $text = $self->consume_up_to(qr{(?:\<|^\n?$)}ms);
 
     $l = $self->curr_line_ref();
 
@@ -574,7 +574,7 @@
 
     if ($self->curr_line_continues_with(qr{<!--}))
     {
-        my $text = $self->_consume_up_to(qr{-->});
+        my $text = $self->consume_up_to(qr{-->});
 
         $self->_add_to_top_tag(
             $self->_new_comment($text),

changeset:   145:b7ce4b1c3aa7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 08:10:28 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
description:
LineIterator: Made consume an API method.


diff -r e3bb4efb8404 -r b7ce4b1c3aa7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 08:07:30 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 08:10:28 2010 +0000
@@ -178,7 +178,7 @@
 {
     my $self = shift;
 
-    $self->_consume(qr{[ \t]});
+    $self->consume(qr{[ \t]});
 
     return;
 }
@@ -193,7 +193,7 @@
 {
     my $self = shift;
 
-    $self->_consume(qr{\s});
+    $self->consume(qr{\s});
 
     return;
 }
@@ -229,38 +229,13 @@
     return $self->_curr_line_idx()+1;
 }
 
-=head2 $self->throw_text_error($exception_class, $text)
+=head2 $self->consume($regex)
 
-Throws the Error class $exception_class with the text $text (and the current
-line number.
+Consume as much text as $regex matches.
 
 =cut
 
-sub throw_text_error
-{
-    my ($self, $error_class, $text) = @_;
-
-    return $error_class->throw(
-        error => $text,
-        line => $self->line_num(),
-    );
-}
-
-
-sub _check_if_line_starts_with_whitespace
-{
-    my $self = shift;
-
-    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
-    {
-        $self->throw_text_error(
-            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
-            "Leading space detected in the text.",
-        );
-    }
-}
-
-sub _consume
+sub consume
 {
     my ($self, $match_regex) = @_;
 
@@ -285,6 +260,37 @@
     return $return_value;
 }
 
+=head2 $self->throw_text_error($exception_class, $text)
+
+Throws the Error class $exception_class with the text $text (and the current
+line number.
+
+=cut
+
+sub throw_text_error
+{
+    my ($self, $error_class, $text) = @_;
+
+    return $error_class->throw(
+        error => $text,
+        line => $self->line_num(),
+    );
+}
+
+
+sub _check_if_line_starts_with_whitespace
+{
+    my $self = shift;
+
+    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
+    {
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
+            "Leading space detected in the text.",
+        );
+    }
+}
+
 # TODO : copied and pasted from _consume - abstract
 sub _consume_up_to
 {
diff -r e3bb4efb8404 -r b7ce4b1c3aa7 perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Sat Apr 17 08:07:30 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Sat Apr 17 08:10:28 2010 +0000
@@ -19,10 +19,10 @@
 
     $parser->setup_text($text);
 
-    my $ret = $parser->_consume(qr{[^<]});
+    my $ret = $parser->consume(qr{[^<]});
 
     # TEST
-    is ($ret, "Hello ", "_consume works for first line");
+    is ($ret, "Hello ", "consume works for first line");
 }
 
 {
@@ -41,11 +41,11 @@
 
     $parser->setup_text($text);
 
-    my $ret = $parser->_consume(qr{[^<]});
+    my $ret = $parser->consume(qr{[^<]});
 
     # TEST
     is ($ret, "Hello\nvoila the row kala:\n", 
-        "_consume works for several lines");
+        "consume works for several lines");
 }
 
 {

changeset:   144:e3bb4efb8404
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 08:07:30 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract an API method - skip_multiline_space.


diff -r 27e825becfaa -r e3bb4efb8404 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:55:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 08:07:30 2010 +0000
@@ -179,6 +179,23 @@
     my $self = shift;
 
     $self->_consume(qr{[ \t]});
+
+    return;
+}
+
+=head2 $self->skip_multiline_space()
+
+Skip multiline space.
+
+=cut
+
+sub skip_multiline_space
+{
+    my $self = shift;
+
+    $self->_consume(qr{\s});
+
+    return;
 }
 
 =head2 $self->curr_line_continues_with($regex)
diff -r 27e825becfaa -r e3bb4efb8404 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:55:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 08:07:30 2010 +0000
@@ -374,7 +374,7 @@
 {
     my $self = shift;
 
-    my $space = $self->_consume(qr{\s});
+    $self->skip_multiline_space();
 
     if (! $self->_generate_tag_event())
     {

changeset:   143:27e825becfaa
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:55:31 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Removed some trailing space.


diff -r f88dabec150b -r 27e825becfaa perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:43:06 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:55:31 2010 +0000
@@ -225,7 +225,7 @@
 
     return $error_class->throw(
         error => $text,
-        line => $self->line_num(),    
+        line => $self->line_num(),
     );
 }
 

changeset:   142:f88dabec150b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:43:06 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Add the line number.


diff -r b2464322e160 -r f88dabec150b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:38:15 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:43:06 2010 +0000
@@ -198,12 +198,25 @@
     return $$l =~ m{\G$re}cg;
 }
 
+=head2 my $line_number = $self->line_num()
+
+Returns the line number as an integer. It starts from 1 for the 
+first line (like in file lines.)
+
+=cut
+
+sub line_num
+{
+    my $self = shift;
+
+    return $self->_curr_line_idx()+1;
+}
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
 line number.
 
-
 =cut
 
 sub throw_text_error
@@ -212,17 +225,10 @@
 
     return $error_class->throw(
         error => $text,
-        line => $self->_get_line_num(),    
+        line => $self->line_num(),    
     );
 }
 
-sub _get_line_num
-{
-    my $self = shift;
-
-    return $self->_curr_line_idx()+1;
-}
-
 
 sub _check_if_line_starts_with_whitespace
 {
diff -r b2464322e160 -r f88dabec150b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:38:15 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:43:06 2010 +0000
@@ -200,7 +200,7 @@
     return XML::Grammar::Fiction::Struct::Tag->new(
         name => $id,
         is_standalone => $is_standalone,
-        line => $self->_get_line_num(),
+        line => $self->line_num(),
         attrs => $attrs,
     );
 }
@@ -221,7 +221,7 @@
 
     return XML::Grammar::Fiction::Struct::Tag->new(
         name => $1,
-        line => $self->_get_line_num(),
+        line => $self->line_num(),
     );
 }
 
@@ -410,7 +410,7 @@
         XML::Grammar::Fiction::Struct::Tag::Para->new(
             name => "p",
             is_standalone => 0,
-            line => $self->_get_line_num(),
+            line => $self->line_num(),
             attrs => [],
         );
 

changeset:   141:b2464322e160
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:38:15 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Add the curr_line_continue_with API function.


diff -r e4c89d54a407 -r b2464322e160 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:17:56 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:38:15 2010 +0000
@@ -181,6 +181,23 @@
     $self->_consume(qr{[ \t]});
 }
 
+=head2 $self->curr_line_continues_with($regex)
+
+Matches the current line with $regex starting from the current position and 
+returns the result. The position remains at the original position if the 
+regular expression does not match (using C< qr//cg >).
+
+=cut
+
+sub curr_line_continues_with
+{
+    my ($self, $re) = @_;
+
+    my $l = $self->curr_line_ref();
+
+    return $$l =~ m{\G$re}cg;
+}
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
@@ -199,15 +216,6 @@
     );
 }
 
-sub _line_starts_with
-{
-    my ($self, $re) = @_;
-
-    my $l = $self->curr_line_ref();
-
-    return $$l =~ m{\G$re}cg;
-}
-
 sub _get_line_num
 {
     my $self = shift;
diff -r e4c89d54a407 -r b2464322e160 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:17:56 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:38:15 2010 +0000
@@ -572,7 +572,7 @@
 {
     my $self = shift;
 
-    if ($self->_line_starts_with(qr{<!--}))
+    if ($self->curr_line_continues_with(qr{<!--}))
     {
         my $text = $self->_consume_up_to(qr{-->});
 

changeset:   140:e4c89d54a407
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:17:56 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Removed an unused method.


diff -r 7a9088f6bbcf -r e4c89d54a407 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:16:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:17:56 2010 +0000
@@ -199,16 +199,6 @@
     );
 }
 
-sub _curr_line_matches
-{
-    my $self = shift;
-    my $re = shift;
-
-    my $l = $self->curr_line_ref();
-
-    return ($$l =~ $re);
-}
-
 sub _line_starts_with
 {
     my ($self, $re) = @_;
diff -r 7a9088f6bbcf -r e4c89d54a407 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Sat Apr 17 07:16:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Sat Apr 17 07:17:56 2010 +0000
@@ -267,4 +267,14 @@
     return \@contents;
 }
 
+sub _curr_line_matches
+{
+    my $self = shift;
+    my $re = shift;
 
+    my $l = $self->curr_line_ref();
+
+    return ($$l =~ $re);
+}
+
+

changeset:   139:7a9088f6bbcf
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:16:53 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
skip_space is now a documented API method.


diff -r 027c9370aa35 -r 7a9088f6bbcf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:13:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:16:53 2010 +0000
@@ -167,11 +167,26 @@
     return $self->curr_line_ref();
 }
 
+=head2 $self->skip_space()
+
+Skip whitespace (spaces and tabs) from the current position onwards.
+
+=cut
+
+# Skip the whitespace.
+sub skip_space
+{
+    my $self = shift;
+
+    $self->_consume(qr{[ \t]});
+}
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
 line number.
 
+
 =cut
 
 sub throw_text_error
@@ -184,14 +199,6 @@
     );
 }
 
-# Skip the whitespace.
-sub _skip_space
-{
-    my $self = shift;
-
-    $self->_consume(qr{[ \t]});
-}
-
 sub _curr_line_matches
 {
     my $self = shift;
diff -r 027c9370aa35 -r 7a9088f6bbcf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:13:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:16:53 2010 +0000
@@ -525,7 +525,7 @@
 
     my $close = $self->_parse_closing_tag();
 
-    $self->_skip_space();
+    $self->skip_space();
 
     my $open = pop(@{$self->_tags_stack()});
 
@@ -594,7 +594,7 @@
 
     $self->_tags_stack([]);
 
-    $self->_skip_space();
+    $self->skip_space();
 
     $self->_in_para(0);
 
@@ -607,7 +607,7 @@
         {
             redo TAGS_LOOP;
         }
-        $self->_skip_space();
+        $self->skip_space();
 
         my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
 

changeset:   138:027c9370aa35
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:13:31 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Convert next_line_ref to an API function.


diff -r f808fd4a8ae2 -r 027c9370aa35 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:07:36 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:13:31 2010 +0000
@@ -152,6 +152,21 @@
     return \$l;
 }
 
+=head2 my $line_ref = $self->next_line_ref()
+
+Advance the line pointer and return the next line.
+
+=cut
+
+sub next_line_ref
+{
+    my $self = shift;
+
+    $self->_curr_line_idx($self->_curr_line_idx()+1);
+
+    return $self->curr_line_ref();
+}
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
@@ -169,15 +184,6 @@
     );
 }
 
-sub _next_line_ref
-{
-    my $self = shift;
-
-    $self->_curr_line_idx($self->_curr_line_idx()+1);
-
-    return $self->curr_line_ref();
-}
-
 # Skip the whitespace.
 sub _skip_space
 {
@@ -239,7 +245,7 @@
     }
     continue
     {
-        $l = $self->_next_line_ref();
+        $l = $self->next_line_ref();
         $self->_check_if_line_starts_with_whitespace();
     }
 
@@ -275,7 +281,7 @@
     }
     continue
     {
-        $l = $self->_next_line_ref();
+        $l = $self->next_line_ref();
         $self->_check_if_line_starts_with_whitespace();
     }
 

changeset:   137:f808fd4a8ae2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 07:07:36 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Change ->curr_line_ref() into an API function and documented it.


diff -r 6493f8bf7925 -r f808fd4a8ae2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 06:52:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 07:07:36 2010 +0000
@@ -54,11 +54,33 @@
 
     $self->_curr_line_idx(0);
 
-    ${$self->_curr_line_ref()} =~ m{\A}g;
+    ${$self->curr_line_ref()} =~ m{\A}g;
 
     return;
 }
 
+=head2 $line_ref = $self->curr_line_ref()
+
+Returns a reference to the current line (a string).
+
+For example:
+
+    my $l_ref = $self->curr_line_ref();
+
+    if ($$l_ref !~ m{\G<tag>}g)
+    {
+        die "Could not match tag.";
+    }
+
+=cut
+
+sub curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
 =head2 my $pos = $self->curr_pos()
 
 Returns the current position (using pos($$l)) of the current line.
@@ -69,7 +91,7 @@
 {
     my $self = shift;
 
-    return pos(${$self->_curr_line_ref()});
+    return pos(${$self->curr_line_ref()});
 }
 
 =head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
@@ -94,7 +116,7 @@
 {
     my $self = shift;
 
-    return ($self->_curr_line_ref(), $self->curr_pos());
+    return ($self->curr_line_ref(), $self->curr_pos());
 }
 
 =head2 my $line_copy_ref = $self->curr_line_copy()
@@ -123,7 +145,7 @@
 {
     my $self = shift;
 
-    my $l = ${$self->_curr_line_ref()} . "";
+    my $l = ${$self->curr_line_ref()} . "";
 
     pos($l) = $self->curr_pos();
     
@@ -147,20 +169,13 @@
     );
 }
 
-sub _curr_line_ref
-{
-    my $self = shift;
-
-    return \($self->_lines()->[$self->_curr_line_idx()]);
-}
-
 sub _next_line_ref
 {
     my $self = shift;
 
     $self->_curr_line_idx($self->_curr_line_idx()+1);
 
-    return $self->_curr_line_ref();
+    return $self->curr_line_ref();
 }
 
 # Skip the whitespace.
@@ -176,7 +191,7 @@
     my $self = shift;
     my $re = shift;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     return ($$l =~ $re);
 }
@@ -185,7 +200,7 @@
 {
     my ($self, $re) = @_;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     return $$l =~ m{\G$re}cg;
 }
@@ -202,7 +217,7 @@
 {
     my $self = shift;
 
-    if (${$self->_curr_line_ref()} =~ m{\A[ \t]})
+    if (${$self->curr_line_ref()} =~ m{\A[ \t]})
     {
         $self->throw_text_error(
             'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
@@ -216,7 +231,7 @@
     my ($self, $match_regex) = @_;
 
     my $return_value = "";
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
     {
@@ -242,7 +257,7 @@
     my ($self, $match_regex) = @_;
 
     my $return_value = "";
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     LINE_LOOP:
     while (defined($$l))
diff -r 6493f8bf7925 -r f808fd4a8ae2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 06:52:31 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 07:07:36 2010 +0000
@@ -154,7 +154,7 @@
 {
     my $self = shift;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     my @attrs;
 
@@ -170,7 +170,7 @@
 {
     my $self = shift;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     if ($$l !~ m{\G<($id_regex)}cg)
     {
@@ -209,7 +209,7 @@
 {
     my $self = shift;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     if ($$l !~ m{\G</($id_regex)>}g)
     {
@@ -265,7 +265,7 @@
     my $which_tag;
     my $text = "";
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     # Apparently, perl does not always returns true in this
     # case, so we need the defined($1) ? $1 : "" workaround.
@@ -294,11 +294,11 @@
 {
     my $self = shift;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
 
     my $text = $self->_consume_up_to(qr{(?:\<|^\n?$)}ms);
 
-    $l = $self->_curr_line_ref();
+    $l = $self->curr_line_ref();
 
     my $ret_elem = $self->_new_text([$text]);
     my $is_para_end = 0;
@@ -344,7 +344,7 @@
 {
     my $self = shift;
 
-    my $l = $self->_curr_line_ref();
+    my $l = $self->curr_line_ref();
     my $orig_pos = pos($$l);
 
     if (my ($tag_opener) = $$l =~ m{\G(<(?:/)?)}cg)

changeset:   136:6493f8bf7925
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 06:52:31 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Rearranged the POD.


diff -r c7f25759c0d5 -r 6493f8bf7925 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 05:03:39 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 06:52:31 2010 +0000
@@ -12,7 +12,6 @@
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
 
-
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::LineIterator - line iterator base
@@ -20,21 +19,52 @@
 
 B<For internal use only>.
 
+=cut
+
+our $VERSION = '0.0.4';
+
 =head1 VERSION
 
 Version 0.0.4
 
+=head1 SYNOPSIS
+
+B<TODO:> write one.
+
+=head1 DESCRIPTION
+
+This is a line iterator that is useful to handle text (e.g: out of a file)
+and process it incrementally.
+
+=head1 METHODS
+
+=head2 $self->setup_text($multi_line_text)
+
+Use $multi_line_text as the text to process, populate the lines array
+with it and reset the other variables.
+
 =cut
 
-our $VERSION = '0.0.4';
+sub setup_text
+{
+    my ($self, $text) = @_;
 
-sub _curr_line_ref
-{
-    my $self = shift;
+    # We include the lines trailing newlines for safety.
+    $self->_lines([split(/^/, $text)]);
 
-    return \($self->_lines()->[$self->_curr_line_idx()]);
+    $self->_curr_line_idx(0);
+
+    ${$self->_curr_line_ref()} =~ m{\A}g;
+
+    return;
 }
 
+=head2 my $pos = $self->curr_pos()
+
+Returns the current position (using pos($$l)) of the current line.
+
+=cut
+
 sub curr_pos
 {
     my $self = shift;
@@ -42,6 +72,24 @@
     return pos(${$self->_curr_line_ref()});
 }
 
+=head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
+
+Convenience method to return the line reference and the position.
+
+For example:
+
+    # Check for a tag.
+    my ($l_ref, $p) = $self->curr_line_and_pos();
+
+    my $is_tag_cond = ($$l_ref =~ m{\G<}cg);
+    my $is_close = $is_tag_cond && ($$l_ref =~ m{\G/}cg);
+
+    pos($$l) = $p;
+
+    return ($is_tag_cond, $is_close);
+
+=cut
+
 sub curr_line_and_pos
 {
     my $self = shift;
@@ -49,6 +97,28 @@
     return ($self->_curr_line_ref(), $self->curr_pos());
 }
 
+=head2 my $line_copy_ref = $self->curr_line_copy()
+
+Returns a reference to a copy of the current line that is allowed to be 
+tempered with (by assigning to pos() or in a different way.). The line is
+returned as a reference so to avoid destroying its pos() value.
+
+For example:
+
+    sub _look_ahead_for_tag
+    {
+        my $self = shift;
+
+        my $l = $self->curr_line_copy();
+
+        my $is_tag_cond = ($$l =~ m{\G<}cg);
+        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
+
+        return ($is_tag_cond, $is_close);
+    }
+
+=cut
+
 sub curr_line_copy
 {
     my $self = shift;
@@ -60,6 +130,30 @@
     return \$l;
 }
 
+=head2 $self->throw_text_error($exception_class, $text)
+
+Throws the Error class $exception_class with the text $text (and the current
+line number.
+
+=cut
+
+sub throw_text_error
+{
+    my ($self, $error_class, $text) = @_;
+
+    return $error_class->throw(
+        error => $text,
+        line => $self->_get_line_num(),    
+    );
+}
+
+sub _curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
 sub _next_line_ref
 {
     my $self = shift;
@@ -103,15 +197,6 @@
     return $self->_curr_line_idx()+1;
 }
 
-sub throw_text_error
-{
-    my ($self, $error_class, $text) = @_;
-
-    return $error_class->throw(
-        error => $text,
-        line => $self->_get_line_num(),    
-    );
-}
 
 sub _check_if_line_starts_with_whitespace
 {
@@ -182,72 +267,6 @@
     return $return_value;
 }
 
-sub setup_text
-{
-    my ($self, $text) = @_;
-
-    # We include the lines trailing newlines for safety.
-    $self->_lines([split(/^/, $text)]);
-
-    $self->_curr_line_idx(0);
-
-    ${$self->_curr_line_ref()} =~ m{\A}g;
-
-    return;
-}
-
-=head1 METHODS
-
-=head2 $self->setup_text($multi_line_text)
-
-Use $multi_line_text as the text to process, populate the lines array
-with it and reset the other variables.
-
-=head2 my $pos = $self->curr_pos()
-
-Returns the current position (using pos($$l)) of the current line.
-
-=head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
-
-Convenience method to return the line reference and the position.
-
-For example:
-
-    # Check for a tag.
-    my ($l_ref, $p) = $self->curr_line_and_pos();
-
-    my $is_tag_cond = ($$l_ref =~ m{\G<}cg);
-    my $is_close = $is_tag_cond && ($$l_ref =~ m{\G/}cg);
-
-    pos($$l) = $p;
-
-    return ($is_tag_cond, $is_close);
-
-=head2 my $line_copy_ref = $self->curr_line_copy()
-
-Returns a reference to a copy of the current line that is allowed to be 
-tempered with (by assigning to pos() or in a different way.). The line is
-returned as a reference so to avoid destroying its pos() value.
-
-For example:
-
-    sub _look_ahead_for_tag
-    {
-        my $self = shift;
-
-        my $l = $self->curr_line_copy();
-
-        my $is_tag_cond = ($$l =~ m{\G<}cg);
-        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
-
-        return ($is_tag_cond, $is_close);
-    }
-
-=head2 $self->throw_text_error($exception_class, $text)
-
-Throws the Error class $exception_class with the text $text (and the current
-line number.
-
 =head2 $self->meta()
 
 Leftover from Moose.

changeset:   135:c7f25759c0d5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 05:03:39 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
description:
Made setup_text an interface function.


diff -r d4ee306b261e -r c7f25759c0d5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:50:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 05:03:39 2010 +0000
@@ -182,7 +182,7 @@
     return $return_value;
 }
 
-sub _setup_text
+sub setup_text
 {
     my ($self, $text) = @_;
 
@@ -198,6 +198,11 @@
 
 =head1 METHODS
 
+=head2 $self->setup_text($multi_line_text)
+
+Use $multi_line_text as the text to process, populate the lines array
+with it and reset the other variables.
+
 =head2 my $pos = $self->curr_pos()
 
 Returns the current position (using pos($$l)) of the current line.
diff -r d4ee306b261e -r c7f25759c0d5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:50:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 05:03:39 2010 +0000
@@ -636,7 +636,7 @@
 {   
     my ($self, $text) = @_;
 
-    $self->_setup_text($text);
+    $self->setup_text($text);
 
     return $self->_start();
 }
diff -r d4ee306b261e -r c7f25759c0d5 perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Sat Apr 17 04:50:35 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Sat Apr 17 05:03:39 2010 +0000
@@ -17,7 +17,7 @@
 
     my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
 
-    $parser->_setup_text($text);
+    $parser->setup_text($text);
 
     my $ret = $parser->_consume(qr{[^<]});
 
@@ -39,7 +39,7 @@
 
     my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
 
-    $parser->_setup_text($text);
+    $parser->setup_text($text);
 
     my $ret = $parser->_consume(qr{[^<]});
 
@@ -60,7 +60,7 @@
 
     my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
 
-    $parser->_setup_text($text);
+    $parser->setup_text($text);
 
     my $ret = $parser->_parse_opening_tag();
 

changeset:   134:d4ee306b261e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:50:35 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract ->curr_line_copy.


diff -r 3e83c3df3348 -r d4ee306b261e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:35:26 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:50:35 2010 +0000
@@ -49,6 +49,17 @@
     return ($self->_curr_line_ref(), $self->curr_pos());
 }
 
+sub curr_line_copy
+{
+    my $self = shift;
+
+    my $l = ${$self->_curr_line_ref()} . "";
+
+    pos($l) = $self->curr_pos();
+    
+    return \$l;
+}
+
 sub _next_line_ref
 {
     my $self = shift;
@@ -207,6 +218,26 @@
 
     return ($is_tag_cond, $is_close);
 
+=head2 my $line_copy_ref = $self->curr_line_copy()
+
+Returns a reference to a copy of the current line that is allowed to be 
+tempered with (by assigning to pos() or in a different way.). The line is
+returned as a reference so to avoid destroying its pos() value.
+
+For example:
+
+    sub _look_ahead_for_tag
+    {
+        my $self = shift;
+
+        my $l = $self->curr_line_copy();
+
+        my $is_tag_cond = ($$l =~ m{\G<}cg);
+        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
+
+        return ($is_tag_cond, $is_close);
+    }
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
diff -r 3e83c3df3348 -r d4ee306b261e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:35:26 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:50:35 2010 +0000
@@ -560,13 +560,11 @@
 {
     my $self = shift;
 
-    my ($l, $p) = $self->curr_line_and_pos();
+    my $l = $self->curr_line_copy();
 
     my $is_tag_cond = ($$l =~ m{\G<}cg);
     my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
 
-    pos($$l) = $p;
-
     return ($is_tag_cond, $is_close);
 }
 

changeset:   133:3e83c3df3348
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:35:26 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Add ->curr_line_and_pos().


diff -r 040d1bada692 -r 3e83c3df3348 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:30:48 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:35:26 2010 +0000
@@ -42,7 +42,7 @@
     return pos(${$self->_curr_line_ref()});
 }
 
-sub _curr_line_and_pos
+sub curr_line_and_pos
 {
     my $self = shift;
 
@@ -187,10 +187,26 @@
 
 =head1 METHODS
 
-=head2 $self->curr_pos()
+=head2 my $pos = $self->curr_pos()
 
 Returns the current position (using pos($$l)) of the current line.
 
+=head2 my ($line_ref, $pos) = $self->curr_line_and_pos();
+
+Convenience method to return the line reference and the position.
+
+For example:
+
+    # Check for a tag.
+    my ($l_ref, $p) = $self->curr_line_and_pos();
+
+    my $is_tag_cond = ($$l_ref =~ m{\G<}cg);
+    my $is_close = $is_tag_cond && ($$l_ref =~ m{\G/}cg);
+
+    pos($$l) = $p;
+
+    return ($is_tag_cond, $is_close);
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
diff -r 040d1bada692 -r 3e83c3df3348 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:30:48 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:35:26 2010 +0000
@@ -560,7 +560,7 @@
 {
     my $self = shift;
 
-    my ($l, $p) = $self->_curr_line_and_pos();
+    my ($l, $p) = $self->curr_line_and_pos();
 
     my $is_tag_cond = ($$l =~ m{\G<}cg);
     my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);

changeset:   132:040d1bada692
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:30:48 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Got rid of a redundant variable declaration/assignment.


diff -r c80605ee6aa0 -r 040d1bada692 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:26:00 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:30:48 2010 +0000
@@ -170,7 +170,7 @@
 {
     my $self = shift;
 
-    my ($l, $p) = $self->_curr_line_and_pos();
+    my $l = $self->_curr_line_ref();
 
     if ($$l !~ m{\G<($id_regex)}cg)
     {

changeset:   131:c80605ee6aa0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:26:00 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract the ->curr_pos method.


diff -r e158237ee9da -r c80605ee6aa0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:20:36 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:26:00 2010 +0000
@@ -35,13 +35,18 @@
     return \($self->_lines()->[$self->_curr_line_idx()]);
 }
 
+sub curr_pos
+{
+    my $self = shift;
+
+    return pos(${$self->_curr_line_ref()});
+}
+
 sub _curr_line_and_pos
 {
     my $self = shift;
 
-    my $l = $self->_curr_line_ref();
-
-    return ($l, pos($$l));
+    return ($self->_curr_line_ref(), $self->curr_pos());
 }
 
 sub _next_line_ref
@@ -182,6 +187,10 @@
 
 =head1 METHODS
 
+=head2 $self->curr_pos()
+
+Returns the current position (using pos($$l)) of the current line.
+
 =head2 $self->throw_text_error($exception_class, $text)
 
 Throws the Error class $exception_class with the text $text (and the current
diff -r e158237ee9da -r c80605ee6aa0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:20:36 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:26:00 2010 +0000
@@ -378,9 +378,7 @@
 
     if (! $self->_generate_tag_event())
     {
-        my $l = $self->_curr_line_ref();
-        
-        my $is_para = (pos($$l) == 0);
+        my $is_para = ($self->curr_pos() == 0);
 
         my $status = $self->_parse_non_tag_text_unit();
         my $elem = $status->{'elem'};

changeset:   130:e158237ee9da
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:20:36 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Remove an unnecessary line.


diff -r 7404641a1766 -r e158237ee9da perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:16:11 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:20:36 2010 +0000
@@ -379,7 +379,6 @@
     if (! $self->_generate_tag_event())
     {
         my $l = $self->_curr_line_ref();
-        my $orig_pos = pos($$l);
         
         my $is_para = (pos($$l) == 0);
 

changeset:   129:7404641a1766
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:16:11 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Add a clarifying comment.


diff -r 1fcd9d8feac8 -r 7404641a1766 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:05:37 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 04:16:11 2010 +0000
@@ -146,6 +146,8 @@
     LINE_LOOP:
     while (defined($$l))
     {
+        # We assign to a scalar for scalar context, but we're not making
+        # use of the variable.
         my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
         $return_value .= $1;
         

changeset:   128:1fcd9d8feac8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 04:05:37 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract throw_text_error from the rest of the places.


diff -r 370088edd8ec -r 1fcd9d8feac8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 03:59:27 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sat Apr 17 04:05:37 2010 +0000
@@ -174,12 +174,12 @@
 
     if ($$l !~ m{\G<($id_regex)}cg)
     {
-        # print "Before : " . substr($$l, 0, $p) . "\n";
-        XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
-            error => "Cannot match opening tag.",
-            'line' => $self->_get_line_num(),
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
+            "Cannot match opening tag.",
         );
     }
+
     my $id = $1;
 
     my $attrs = $self->_parse_opening_tag_attrs();
@@ -191,9 +191,9 @@
     }
     elsif ($$l !~ m{\G>}g)
     {
-        XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket->throw(
-            error => "Cannot match the \">\" of the opening tag",
-            'line' => $self->_get_line_num(),
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket',
+            "Cannot match the \">\" of the opening tag",
         );
     }
     
@@ -205,13 +205,6 @@
     );
 }
 
-sub _get_line_num
-{
-    my $self = shift;
-
-    return $self->_curr_line_idx()+1;
-}
-
 sub _parse_closing_tag
 {
     my $self = shift;
@@ -220,9 +213,9 @@
 
     if ($$l !~ m{\G</($id_regex)>}g)
     {
-        XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax->throw(
-            error => "Cannot match closing tag",
-            line => $self->_get_line_num(),
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax',
+            "Cannot match closing tag",
         );
     }
 
@@ -500,9 +493,9 @@
 
     if (! @{$self->_tags_stack()} )
     {
-        XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
-            error => "Cannot match opening tag.",
-            'line' => $self->_get_line_num(),
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag',
+            "Cannot match opening tag.",
         );
     }
 

changeset:   127:370088edd8ec
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 03:59:27 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Extract ->throw_text_error.


diff -r c2051ab82a08 -r 370088edd8ec perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 03:45:27 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 03:59:27 2010 +0000
@@ -87,15 +87,25 @@
     return $self->_curr_line_idx()+1;
 }
 
+sub throw_text_error
+{
+    my ($self, $error_class, $text) = @_;
+
+    return $error_class->throw(
+        error => $text,
+        line => $self->_get_line_num(),    
+    );
+}
+
 sub _check_if_line_starts_with_whitespace
 {
     my $self = shift;
 
     if (${$self->_curr_line_ref()} =~ m{\A[ \t]})
     {
-        XML::Grammar::Fiction::Err::Parse::LeadingSpace->throw(
-            error => "Leading space detected in the text.",
-            'line' => $self->_get_line_num(),
+        $self->throw_text_error(
+            'XML::Grammar::Fiction::Err::Parse::LeadingSpace',
+            "Leading space detected in the text.",
         );
     }
 }
@@ -170,6 +180,11 @@
 
 =head1 METHODS
 
+=head2 $self->throw_text_error($exception_class, $text)
+
+Throws the Error class $exception_class with the text $text (and the current
+line number.
+
 =head2 $self->meta()
 
 Leftover from Moose.

changeset:   126:c2051ab82a08
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Apr 17 03:45:27 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
description:
Move _get_line_num to a more appropriate place.


diff -r 9220f02e95db -r c2051ab82a08 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri Apr 16 21:20:53 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Sat Apr 17 03:45:27 2010 +0000
@@ -80,6 +80,13 @@
     return $$l =~ m{\G$re}cg;
 }
 
+sub _get_line_num
+{
+    my $self = shift;
+
+    return $self->_curr_line_idx()+1;
+}
+
 sub _check_if_line_starts_with_whitespace
 {
     my $self = shift;

changeset:   125:9220f02e95db
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 21:20:53 2010 +0000
description:
Add MYMETA.yml to svn:ignore - it's a generated file.



changeset:   124:3be5565f82f5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 21:18:56 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Removed a function that's in the base class.


diff -r 79d39b286ef0 -r 3be5565f82f5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 21:13:38 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 21:18:56 2010 +0000
@@ -51,19 +51,6 @@
     return;
 }
 
-sub _check_if_line_starts_with_whitespace
-{
-    my $self = shift;
-
-    if (${$self->_curr_line_ref()} =~ m{\A[ \t]})
-    {
-        XML::Grammar::Fiction::Err::Parse::LeadingSpace->throw(
-            error => "Leading space detected in the text.",
-            'line' => $self->_get_line_num(),
-        );
-    }
-}
-
 sub _start
 {
     my $self = shift;

changeset:   123:79d39b286ef0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 21:13:38 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract the ::LineIterator base-class for the parser.

This is a way to move the line-by-line based logic to a separate class so it
won't clutter the rest of ::Parser::QnD and so it can later be more easily
reused.

Note: should it be a Moose role?


diff -r 868dcdf58092 -r 79d39b286ef0 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 16 20:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Apr 16 21:13:38 2010 +0000
@@ -15,6 +15,7 @@
 lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/Fiction/Err.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
+lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Fiction/FromProto.pm
diff -r 868dcdf58092 -r 79d39b286ef0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/LineIterator.pm	Fri Apr 16 21:13:38 2010 +0000
@@ -0,0 +1,193 @@
+package XML::Grammar::Fiction::FromProto::Parser::LineIterator;
+
+use strict;
+use warnings;
+
+use Moose;
+
+use XML::Grammar::Fiction::Err;
+
+extends("XML::Grammar::Fiction::FromProto::Parser");
+
+has "_curr_line_idx" => (isa => "Int", is => "rw");
+has "_lines" => (isa => "ArrayRef", is => "rw");
+
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser::LineIterator - line iterator base
+class for the parser.
+
+B<For internal use only>.
+
+=head1 VERSION
+
+Version 0.0.4
+
+=cut
+
+our $VERSION = '0.0.4';
+
+sub _curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
+sub _curr_line_and_pos
+{
+    my $self = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    return ($l, pos($$l));
+}
+
+sub _next_line_ref
+{
+    my $self = shift;
+
+    $self->_curr_line_idx($self->_curr_line_idx()+1);
+
+    return $self->_curr_line_ref();
+}
+
+# Skip the whitespace.
+sub _skip_space
+{
+    my $self = shift;
+
+    $self->_consume(qr{[ \t]});
+}
+
+sub _curr_line_matches
+{
+    my $self = shift;
+    my $re = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    return ($$l =~ $re);
+}
+
+sub _line_starts_with
+{
+    my ($self, $re) = @_;
+
+    my $l = $self->_curr_line_ref();
+
+    return $$l =~ m{\G$re}cg;
+}
+
+sub _check_if_line_starts_with_whitespace
+{
+    my $self = shift;
+
+    if (${$self->_curr_line_ref()} =~ m{\A[ \t]})
+    {
+        XML::Grammar::Fiction::Err::Parse::LeadingSpace->throw(
+            error => "Leading space detected in the text.",
+            'line' => $self->_get_line_num(),
+        );
+    }
+}
+
+sub _consume
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
+    {
+        $return_value .= $$l;
+    }
+    continue
+    {
+        $l = $self->_next_line_ref();
+        $self->_check_if_line_starts_with_whitespace();
+    }
+
+    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
+    {
+        $return_value .= $1;
+    }
+
+    return $return_value;
+}
+
+# TODO : copied and pasted from _consume - abstract
+sub _consume_up_to
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    LINE_LOOP:
+    while (defined($$l))
+    {
+        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
+        $return_value .= $1;
+        
+        # Find if it matched the regex.
+        if (length($2) > 0)
+        {
+            last LINE_LOOP;
+        }
+    }
+    continue
+    {
+        $l = $self->_next_line_ref();
+        $self->_check_if_line_starts_with_whitespace();
+    }
+
+    return $return_value;
+}
+
+sub _setup_text
+{
+    my ($self, $text) = @_;
+
+    # We include the lines trailing newlines for safety.
+    $self->_lines([split(/^/, $text)]);
+
+    $self->_curr_line_idx(0);
+
+    ${$self->_curr_line_ref()} =~ m{\A}g;
+
+    return;
+}
+
+=head1 METHODS
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 868dcdf58092 -r 79d39b286ef0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:53:10 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 21:13:38 2010 +0000
@@ -5,10 +5,8 @@
 
 use Moose;
 
-extends("XML::Grammar::Fiction::FromProto::Parser");
+extends("XML::Grammar::Fiction::FromProto::Parser::LineIterator");
 
-has "_curr_line_idx" => (isa => "Int", is => "rw");
-has "_lines" => (isa => "ArrayRef", is => "rw");
 has "_tags_stack" => (isa => "ArrayRef", is => "rw");
 has "_events_queue" =>
 (
@@ -53,31 +51,6 @@
     return;
 }
 
-sub _curr_line_ref
-{
-    my $self = shift;
-
-    return \($self->_lines()->[$self->_curr_line_idx()]);
-}
-
-sub _curr_line_and_pos
-{
-    my $self = shift;
-
-    my $l = $self->_curr_line_ref();
-
-    return ($l, pos($$l));
-}
-
-sub _next_line_ref
-{
-    my $self = shift;
-
-    $self->_curr_line_idx($self->_curr_line_idx()+1);
-
-    return $self->_curr_line_ref();
-}
-
 sub _check_if_line_starts_with_whitespace
 {
     my $self = shift;
@@ -98,14 +71,6 @@
     return $self->_parse_tags();
 }
 
-# Skip the whitespace.
-sub _skip_space
-{
-    my $self = shift;
-
-    $self->_consume(qr{[ \t]});
-}
-
 my $id_regex = '[a-zA-Z_\-]+';
 
 
@@ -460,25 +425,6 @@
     return;
 }
 
-sub _curr_line_matches
-{
-    my $self = shift;
-    my $re = shift;
-
-    my $l = $self->_curr_line_ref();
-
-    return ($$l =~ $re);
-}
-
-sub _line_starts_with
-{
-    my ($self, $re) = @_;
-
-    my $l = $self->_curr_line_ref();
-
-    return $$l =~ m{\G$re}cg;
-}
-
 sub _handle_open_para
 {
     my ($self, $event) = @_;
@@ -711,74 +657,6 @@
     return $ret_tag;
 }
 
-sub _consume
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->_curr_line_ref();
-
-    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
-    {
-        $return_value .= $$l;
-    }
-    continue
-    {
-        $l = $self->_next_line_ref();
-        $self->_check_if_line_starts_with_whitespace();
-    }
-
-    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
-    {
-        $return_value .= $1;
-    }
-
-    return $return_value;
-}
-
-# TODO : copied and pasted from _consume - abstract
-sub _consume_up_to
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->_curr_line_ref();
-
-    LINE_LOOP:
-    while (defined($$l))
-    {
-        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
-        $return_value .= $1;
-        
-        # Find if it matched the regex.
-        if (length($2) > 0)
-        {
-            last LINE_LOOP;
-        }
-    }
-    continue
-    {
-        $l = $self->_next_line_ref();
-        $self->_check_if_line_starts_with_whitespace();
-    }
-
-    return $return_value;
-}
-
-sub _setup_text
-{
-    my ($self, $text) = @_;
-
-    # We include the lines trailing newlines for safety.
-    $self->_lines([split(/^/, $text)]);
-
-    $self->_curr_line_idx(0);
-
-    ${$self->_curr_line_ref()} =~ m{\A}g;
-
-    return;
-}
-
 sub process_text
 {   
     my ($self, $text) = @_;

changeset:   122:868dcdf58092
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 20:53:10 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Remove some commented-out code.


diff -r d00ee8c6f43a -r 868dcdf58092 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:52:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:53:10 2010 +0000
@@ -770,7 +770,6 @@
     my ($self, $text) = @_;
 
     # We include the lines trailing newlines for safety.
-    # $self->_lines([$text =~ m{\A([^\n]*\n?)*\z}ms]);
     $self->_lines([split(/^/, $text)]);
 
     $self->_curr_line_idx(0);

changeset:   121:d00ee8c6f43a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 20:52:09 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Removed the _with_curr_line API function - it's no longer used.

Furthermore, it's deprecated and does not decrease the amount of code.


diff -r 2a5a659ac075 -r d00ee8c6f43a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:29:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:52:09 2010 +0000
@@ -69,13 +69,6 @@
     return ($l, pos($$l));
 }
 
-sub _with_curr_line
-{
-    my ($self, $sub_ref) = @_;
-
-    return $sub_ref->( $self->_curr_line_ref() );
-}
-
 sub _next_line_ref
 {
     my $self = shift;
diff -r 2a5a659ac075 -r d00ee8c6f43a perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Fri Apr 16 20:29:09 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Fri Apr 16 20:52:09 2010 +0000
@@ -10,6 +10,13 @@
     return $self->_lines()->[$self->_curr_line_idx()];
 }
 
+sub _with_curr_line
+{
+    my ($self, $sub_ref) = @_;
+
+    return $sub_ref->( $self->_curr_line_ref() );
+}
+
 # TODO : _parse_saying_first_para and _parse_saying_other_para are
 # very similar - abstract them into one function.
 sub _parse_saying_first_para

changeset:   120:2a5a659ac075
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 20:29:09 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Moved the _curr_line lvalue function to the rejects.


diff -r e152a57f5539 -r 2a5a659ac075 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:15:39 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:29:09 2010 +0000
@@ -53,13 +53,6 @@
     return;
 }
 
-sub _curr_line :lvalue
-{
-    my $self = shift;
-
-    return $self->_lines()->[$self->_curr_line_idx()];
-}
-
 sub _curr_line_ref
 {
     my $self = shift;
diff -r e152a57f5539 -r 2a5a659ac075 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Fri Apr 16 20:15:39 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Fri Apr 16 20:29:09 2010 +0000
@@ -3,6 +3,13 @@
 use strict;
 use warnings;
 
+sub _curr_line :lvalue
+{
+    my $self = shift;
+
+    return $self->_lines()->[$self->_curr_line_idx()];
+}
+
 # TODO : _parse_saying_first_para and _parse_saying_other_para are
 # very similar - abstract them into one function.
 sub _parse_saying_first_para
@@ -253,3 +260,4 @@
     return \@contents;
 }
 
+

changeset:   119:e152a57f5539
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Apr 16 20:15:39 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract the _new_comment function.


diff -r 624641b83d6a -r e152a57f5539 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Mar 12 22:32:25 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Apr 16 20:15:39 2010 +0000
@@ -199,6 +199,19 @@
     );
 }
 
+sub _new_comment
+{
+    my $self = shift;
+    my $text = shift;
+
+    return $self->_new_node(
+        {
+            t => "Comment",
+            text => $text,
+        }
+    );
+}
+
 sub _parse_opening_tag_attrs
 {
     my $self = shift;
@@ -657,7 +670,7 @@
         my $text = $self->_consume_up_to(qr{-->});
 
         $self->_add_to_top_tag(
-            $self->_new_node({ t => "Comment", text => $text, })
+            $self->_new_comment($text),
         );
 
         return 1;

changeset:   118:624641b83d6a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Mar 12 22:32:25 2010 +0000
files:       .hgtags
description:
Tagging XML-Grammar-Fiction release as 0.0.4


diff -r 49dc229d8251 -r 624641b83d6a .hgtags
--- a/.hgtags	Fri Mar 12 22:30:32 2010 +0000
+++ b/.hgtags	Fri Mar 12 22:32:25 2010 +0000
@@ -1,3 +1,4 @@
 901104d91a9296317ea2ef690025f5849024df01 releases/0.0.1
 3a19663be777fe65d8b41aa7219e5c36b8848771 releases/0.0.2
 6d3466b50b95657e6843536f6a6fb6aa19956e00 releases/0.0.3
+49dc229d825121cec0850330fcc079c16b62441e releases/0.0.4

changeset:   117:49dc229d8251
tag:         releases/0.0.4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Mar 12 22:30:32 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Updated the changes and bumped the version number to 0.0.4.


diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Mar 12 22:30:32 2010 +0000
@@ -1,5 +1,12 @@
 Revision history for XML-Grammar-Fiction.
 
+0.0.4       Sat Mar 13 00:28:52 IST 2010
+        - Implemented better error handling and presentation in 
+        ::App::FromProto.
+            - making use of Exception-Class-based classes.
+        - Removed the DOCTYPE from the DocBook/XML output (it was a DocBook
+        4-ism).
+
 0.0.3       Fri Nov 27 11:32:05 IST 2009
         - Add the script contrib/docbook-to-fiction-xml-txt.pl .
         - Add delimiting empty lines to a =begin ... =end block to settle
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head1 SYNOPSIS
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -22,11 +22,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head1 SYNOPSIS
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head1 SYNOPSIS
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head1 SYNOPSIS
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head1 METHODS
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 use Exception::Class
     (
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -44,11 +44,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head2 new()
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -14,11 +14,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head1 AUTHOR
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -38,11 +38,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 sub _add_to_top_tag
 {
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -68,11 +68,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head2 new()
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head2 new()
 
diff -r 5f04af9aaef3 -r 49dc229d8251 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Mar 12 22:25:50 2010 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Mar 12 22:30:32 2010 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.0.3
+Version 0.0.4
 
 =cut
 
-our $VERSION = '0.0.3';
+our $VERSION = '0.0.4';
 
 =head2 new()
 

changeset:   116:5f04af9aaef3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Mar 12 22:25:50 2010 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
description:
Got rid of the doctype in the DocBook/XML output.


diff -r 9edf5db76dce -r 5f04af9aaef3 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Thu Dec 17 16:16:13 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Fri Mar 12 22:25:50 2010 +0000
@@ -5,8 +5,6 @@
     xmlns:xlink="http://www.w3.org/1999/xlink">
 
 <xsl:output method="xml" encoding="UTF-8" indent="yes"
- doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
- doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
  />
 
 <xsl:template match="/">

changeset:   115:9edf5db76dce
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Dec 17 16:16:13 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space-at-para-start.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Add another test (that already passes).


diff -r a42b348278c3 -r 9edf5db76dce perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Dec 14 14:07:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Dec 17 16:16:13 2009 +0000
@@ -38,6 +38,7 @@
 t/data/docbook/with-internal-description.docbook.xml
 t/data/proto-text/dialogue-with-several-paragraphs.txt
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/data/proto-text-invalid/leading-space-at-para-start.txt
 t/data/proto-text-invalid/leading-space.txt
 t/data/proto-text-invalid/no-right-angle.txt
 t/data/proto-text-invalid/not-start-with-tag.txt
diff -r a42b348278c3 -r 9edf5db76dce perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space-at-para-start.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space-at-para-start.txt	Thu Dec 17 16:16:13 2009 +0000
@@ -0,0 +1,28 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other. David did not
+like Goliath.
+
+David thought to himself: "I don't like Goliath.".
+
+   David said unto Goliath: "I will shoot you. I swear I will". You shall
+feel my wrath!
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+</s>
+
+</s>
+
+</body>
+
diff -r a42b348278c3 -r 9edf5db76dce perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Mon Dec 14 14:07:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Dec 17 16:16:13 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 23;
+use Test::More tests => 26;
 
 use XML::LibXML;
 
@@ -279,4 +279,44 @@
     );
 }
 
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text-invalid/leading-space-at-para-start.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::LeadingSpace"
+    );
+
+    # TEST
+    ok ($err, "LeadingSpace at para start was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ALeading space},
+        "LeadingSpace at para start error."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        14,
+        "LeadingSpace Line is 14 as expected."
+    );
+}
+
 1;

changeset:   114:a42b348278c3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Dec 14 14:07:22 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
description:
Implemented better error handling and presentation in ::App::FromProto.

Making use of the Exception-Class-based classes.


diff -r a2bd8241a63d -r a42b348278c3 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Sun Dec 06 23:06:48 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Mon Dec 14 14:07:22 2009 +0000
@@ -9,9 +9,12 @@
 
 use Getopt::Long;
 
+use Exception::Class;
+
 use XML::Grammar::Fiction::FromProto;
 use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
+
 =head1 NAME
 
 XML::Grammar::Fiction::App::FromProto - command line app-in-a-module
@@ -55,15 +58,50 @@
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
     });
 
-    my $output_xml = $converter->convert({
-            source => { file => shift(@ARGV), },
+    eval {
+        my $output_xml = $converter->convert({
+                source => { file => shift(@ARGV), },
+            }
+        );
+
+        open my $out, ">", $output_filename;
+        binmode $out, ":utf8";
+        print {$out} $output_xml;
+        close($out);
+    };
+
+    # Error handling.
+
+    my $e;
+    if ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::TagsMismatch"))
+    {
+        warn $e->error(), "\n";
+        warn "Open: ", $e->opening_tag->name(), 
+            " at line ", $e->opening_tag->line(), "\n"
+            ;
+        warn "Close: ", 
+            $e->closing_tag->name(), " at line ", 
+            $e->closing_tag->line(), "\n";
+
+        exit(-1);
+    }
+    elsif ($e = Exception::Class->caught("XML::Grammar::Fiction::Err::Parse::LineError"))
+    {
+        warn $e->error(), "\n";
+        warn "At line ", $e->line(), "\n";
+        exit(-1);
+    }
+    elsif ($e = Exception::Class->caught())
+    {
+        if (ref($e))
+        {
+            $e->rethrow();
         }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_xml;
-    close($out);
+        else
+        {
+            die $e;
+        }
+    }
 
     exit(0);
 }

changeset:   113:a2bd8241a63d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Dec 06 23:06:48 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Moosified _enqueue_event and _extract_event into Moosified stuff.


diff -r 99c90b413757 -r a2bd8241a63d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Dec 03 23:54:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Sun Dec 06 23:06:48 2009 +0000
@@ -10,7 +10,18 @@
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
 has "_tags_stack" => (isa => "ArrayRef", is => "rw");
-has "_events_queue" => (isa => "ArrayRef", is => "rw", default => sub { []; });
+has "_events_queue" =>
+(
+    isa => "ArrayRef",
+    is => "rw", 
+    default => sub { []; },
+    traits => ['Array'],
+    handles =>
+    {
+        _enqueue_event => 'push',
+        _extract_event => 'shift',
+    },
+);
 has "_in_para" => (isa => "Bool", is => "rw");
 
 use XML::Grammar::Fiction::FromProto::Nodes;
@@ -33,20 +44,6 @@
 
 our $VERSION = '0.0.3';
 
-sub _enqueue_event
-{
-    my ($self, $event) = @_;
-   
-    push (@{$self->_events_queue()}, $event);
-}
-
-sub _extract_event
-{
-    my $self = shift;
-
-    return shift(@{$self->_events_queue()});
-}
-
 sub _add_to_top_tag
 {
     my ($self, $child) = @_;

changeset:   112:99c90b413757
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Dec 03 23:54:32 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
description:
Got rid of the non-Moosisms in the base class.

It is no longer being used, though.


diff -r 8318c4bdc7bf -r 99c90b413757 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Thu Dec 03 23:38:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Thu Dec 03 23:54:32 2009 +0000
@@ -3,6 +3,8 @@
 use strict;
 use warnings;
 
+use Moose;
+
 =head1 NAME
 
 XML::Grammar::Fiction::Base - base class for XML::Grammar::Fiction
@@ -24,17 +26,5 @@
 
 =cut
 
-sub new
-{
-    my $class = shift;
-    my $self = {};
-
-    bless $self, $class;
-
-    $self->_init(@_);
-
-    return $self;
-}
-
 1;
 

changeset:   111:8318c4bdc7bf
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Dec 03 23:38:14 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Got rid of another _init method. Moosification.


diff -r b8c369633be0 -r 8318c4bdc7bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Dec 03 23:31:28 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Dec 03 23:38:14 2009 +0000
@@ -3,9 +3,7 @@
 use strict;
 use warnings;
 
-use base 'XML::Grammar::Fiction::Base';
-
-1;
+use Moose;
 
 =head1 NAME
 
@@ -43,3 +41,6 @@
 This program is released under the following license: MIT X11.
 
 =cut
+
+1;
+
diff -r b8c369633be0 -r 8318c4bdc7bf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Dec 03 23:31:28 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Dec 03 23:38:14 2009 +0000
@@ -3,9 +3,9 @@
 use strict;
 use warnings;
 
-use base 'XML::Grammar::Fiction::FromProto::Parser';
+use Moose;
 
-use Moose;
+extends("XML::Grammar::Fiction::FromProto::Parser");
 
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
@@ -108,15 +108,6 @@
     }
 }
 
-sub _init
-{
-    my $self = shift;
-
-    $self->_events_queue([]);
-
-    return 0;
-}
-
 sub _start
 {
     my $self = shift;

changeset:   110:b8c369633be0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Dec 03 23:31:28 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Got rid of _init in ::FromProto - convert to Moose 'default'.


diff -r 75dc1a963e46 -r b8c369633be0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Dec 03 23:20:20 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Dec 03 23:31:28 2009 +0000
@@ -5,8 +5,6 @@
 
 use Carp;
 
-use base 'XML::Grammar::Fiction::Base';
-
 use XML::Writer;
 use HTML::Entities ();
 
@@ -16,7 +14,24 @@
 
 use List::Util (qw(first));
 
-has "_parser" => ('isa' => "XML::Grammar::Fiction::FromProto::Parser", 'is' => "rw");
+has '_parser_class' =>
+(
+    is => "ro",
+    isa => "Str",
+    init_arg => "parser_class",
+    default => "XML::Grammar::Fiction::FromProto::Parser::QnD",
+);
+
+has "_parser" => (
+    'isa' => "XML::Grammar::Fiction::FromProto::Parser", 
+    'is' => "rw",
+    lazy => 1,
+    default => sub { 
+        my $self = shift; 
+        return $self->_parser_class->new();
+    },
+);
+
 has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
 
 my $fiction_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/};
@@ -46,22 +61,6 @@
 
 =cut
 
-sub _init
-{
-    my ($self, $args) = @_;
-
-    local $Parse::RecDescent::skip = "";
-
-    my $parser_class = 
-        ($args->{parser_class} || "XML::Grammar::Fiction::FromProto::Parser::QnD");
-
-    $self->_parser(
-        $parser_class->new()
-    );
-
-    return 0;
-}
-
 =head2 $self->convert({ source => { file => $path_to_file } })
 
 Converts the file $path_to_file to XML and returns it. Throws an exception

changeset:   109:75dc1a963e46
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Dec 03 23:20:20 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/RendererBase.pm
description:
Got rid of _init in RendererBase for some Moose paradigms.


diff -r c21a8e672e9d -r 75dc1a963e46 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Nov 27 09:37:24 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Dec 03 23:20:20 2009 +0000
@@ -29,6 +29,7 @@
 META.yml # Will be created by "make dist"
 README
 rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
+rejects/lib/XML/Grammar/Fiction/RendererBase.pm
 rejects/proto-text-to-xml.t
 rejects/QnD.pm
 t/00-load.t
diff -r c21a8e672e9d -r 75dc1a963e46 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Nov 27 09:37:24 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Thu Dec 03 23:20:20 2009 +0000
@@ -13,14 +13,53 @@
 use XML::LibXML;
 use XML::LibXSLT;
 
-use base 'XML::Grammar::Fiction::Base';
-
 use Moose;
 
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+has '_data_dir' =>
+(
+    isa => 'Str', 
+    is => 'rw',
+    lazy => 1,
+    init_arg => "data_dir",
+    default => sub {
+        my $self = shift;
+
+        return $self->_get_default_data_dir();
+    },
+);
+has '_rng' =>
+(
+    isa => 'XML::LibXML::RelaxNG', 
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        my $self = shift;
+
+        return $self->_get_rng_schema();
+    },
+);
+
+has '_xml_parser' => 
+(
+    isa => "XML::LibXML", 
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        return XML::LibXML->new();
+    },
+);
+
+has '_stylesheet' => 
+(
+    isa => "XML::LibXSLT::StylesheetWrapper", 
+    is => 'rw',
+    lazy => 1,
+    default => sub {
+        my $self = shift;
+
+        return $self->_get_stylesheet();
+    },
+);
 
 =head1 NAME
 
@@ -83,20 +122,7 @@
     return $xslt->parse_stylesheet($style_doc);
 }
 
-sub _init
-{
-    my ($self, $args) = @_;
 
-    $self->_data_dir($args->{'data_dir'} || $self->_get_default_data_dir());
-
-    $self->_rng($self->_get_rng_schema());
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    $self->_stylesheet($self->_get_stylesheet());
-
-    return 0;
-}
 
 =head2 generic_translate
 
diff -r c21a8e672e9d -r 75dc1a963e46 perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/RendererBase.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/RendererBase.pm	Thu Dec 03 23:20:20 2009 +0000
@@ -0,0 +1,22 @@
+package XML::Grammar::Fiction::RendererBase;
+
+use strict;
+use warnings;
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    $self->_data_dir($args->{'data_dir'} || $self->_get_default_data_dir());
+
+    $self->_rng($self->_get_rng_schema());
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    $self->_stylesheet($self->_get_stylesheet());
+
+    return 0;
+}
+
+1;
+

changeset:   108:c21a8e672e9d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 27 09:37:24 2009 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction as release 0.0.3


diff -r 6d3466b50b95 -r c21a8e672e9d .hgtags
--- a/.hgtags	Fri Nov 27 09:36:26 2009 +0000
+++ b/.hgtags	Fri Nov 27 09:37:24 2009 +0000
@@ -1,2 +1,3 @@
 901104d91a9296317ea2ef690025f5849024df01 releases/0.0.1
 3a19663be777fe65d8b41aa7219e5c36b8848771 releases/0.0.2
+6d3466b50b95657e6843536f6a6fb6aa19956e00 releases/0.0.3

changeset:   107:6d3466b50b95
tag:         releases/0.0.3
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 27 09:36:26 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Bumped the version number to 0.0.3 .


diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Nov 27 09:36:26 2009 +0000
@@ -1,5 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
+0.0.3       Fri Nov 27 11:32:05 IST 2009
         - Add the script contrib/docbook-to-fiction-xml-txt.pl .
         - Add delimiting empty lines to a =begin ... =end block to settle
         some versions of t/pod.t
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head1 SYNOPSIS
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head1 SYNOPSIS
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head1 SYNOPSIS
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head1 SYNOPSIS
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head1 METHODS
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 use Exception::Class
     (
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head2 new()
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head1 AUTHOR
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -27,11 +27,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 sub _enqueue_event
 {
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head2 new()
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head2 new()
 
diff -r dea59e08dc12 -r 6d3466b50b95 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Nov 27 09:33:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Fri Nov 27 09:36:26 2009 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.0.2
+Version 0.0.3
 
 =cut
 
-our $VERSION = '0.0.2';
+our $VERSION = '0.0.3';
 
 =head2 new()
 

changeset:   106:dea59e08dc12
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 27 09:33:42 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Add delimiting empty lines to Changes.


diff -r cfb420e17801 -r dea59e08dc12 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 26 21:38:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Fri Nov 27 09:33:42 2009 +0000
@@ -1,6 +1,9 @@
 Revision history for XML-Grammar-Fiction.
 
         - Add the script contrib/docbook-to-fiction-xml-txt.pl .
+        - Add delimiting empty lines to a =begin ... =end block to settle
+        some versions of t/pod.t
+            - Thanks to SREZIC.
 
 0.0.2       Wed Nov 25 11:55:41 IST 2009
         - Various refactorings / code cleanup:
diff -r cfb420e17801 -r dea59e08dc12 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 26 21:38:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Fri Nov 27 09:33:42 2009 +0000
@@ -305,6 +305,7 @@
     my $id = $body->lookup_attr("id");
 
 =begin foo
+
     my $title =
         first
         { $_->name() eq "title" }
@@ -317,6 +318,7 @@
         ? (title => $title->_get_childs()->[0])
         : ()
     );
+
 =end foo
 
 =cut

changeset:   105:cfb420e17801
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 26 21:38:53 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl
description:
Add contrib/docbook-to-fiction-xml-txt.pl .


diff -r 050d9226a30c -r cfb420e17801 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Nov 25 10:00:29 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 26 21:38:53 2009 +0000
@@ -1,5 +1,7 @@
 Revision history for XML-Grammar-Fiction.
 
+        - Add the script contrib/docbook-to-fiction-xml-txt.pl .
+
 0.0.2       Wed Nov 25 11:55:41 IST 2009
         - Various refactorings / code cleanup:
             - removed old methods.
diff -r 050d9226a30c -r cfb420e17801 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 25 10:00:29 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 26 21:38:53 2009 +0000
@@ -1,6 +1,7 @@
 Build.PL
 bump-version-number.pl
 Changes
+contrib/docbook-to-fiction-xml-txt.pl
 extradata/fiction-xml.rng
 extradata/fiction-xml-to-docbook.xslt
 extradata/fiction-xml-to-html.xslt
diff -r 050d9226a30c -r cfb420e17801 perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/contrib/docbook-to-fiction-xml-txt.pl	Thu Nov 26 21:38:53 2009 +0000
@@ -0,0 +1,242 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use XML::LibXML;
+
+use Getopt::Long;
+use Pod::Usage;
+
+sub _esc
+{
+    my $s = shift;
+
+    $s =~ s{&}{&amp;}g;
+    $s =~ s{<}{&lt;}g;
+    $s =~ s{>}{&gt;}g;
+
+    $s =~ s{^[ \t]+}{}gms;
+    $s =~ s{[ \t]+$}{}gms;
+
+    return $s;
+}
+
+sub _esc_for_attr
+{
+    my $s = shift;
+
+    my $ret = _esc($s);
+
+    $ret =~ s{"}{&quot;};
+
+    return $ret;
+}
+
+
+my $xml_uri = q{http://www.w3.org/XML/1998/namespace};
+my $xpc = XML::LibXML::XPathContext->new();
+# $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+$xpc->registerNs('db', q{http://docbook.org/ns/docbook});
+$xpc->registerNs('xlink', q{http://www.w3.org/1999/xlink});
+$xpc->registerNs('xml', $xml_uri);
+
+my $parser = XML::LibXML->new();
+
+$parser->load_ext_dtd(0);
+
+my $output_file;
+my $help = 0;
+my $man = 0;
+my $ret = GetOptions(
+    "o|output=s" => \$output_file,
+    "help|h" => \$help,
+    "man" => \$man, 
+);
+
+if (!defined($output_file))
+{
+    die "Unspecified output file. Type --help for more information.\n";
+}
+
+if (!$ret)
+{
+    pod2usage(2);
+}
+if ($help)
+{
+    pod2usage(1);
+}
+if ($man)
+{
+    pod2usage(-exitstatus => 0, -verbose => 2)
+}
+
+my $input_file = shift(@ARGV);
+
+if (!defined($input_file))
+{
+    die "Unspecified input file. Type --help for more information.\n";
+}
+
+my $doc = $parser->parse_file($input_file);
+
+my ($main_title) = $xpc->findnodes(q{/db:article/db:info/db:title}, $doc);
+my $main_title_text = $main_title->textContent();
+my ($main_article) = $xpc->findnodes(q{/db:article}, $doc);
+my $main_id_text = $main_article->getAttributeNS($xml_uri, "id");
+
+
+my @sections = $xpc->findnodes(q{/db:article/db:section}, $doc);
+
+sub _out_section
+{
+    my $sect_elem = shift;
+
+    my $id = $sect_elem->getAttributeNS($xml_uri, "id");
+
+    my ($title_elem) = $xpc->findnodes(q{./db:info/db:title}, $sect_elem);
+
+    my $title_text = $title_elem->textContent();
+
+    my @paras = $xpc->findnodes(q{./db:para}, $sect_elem);
+
+    my @subs = $xpc->findnodes(q{./db:section}, $sect_elem);
+
+    return 
+          qq{<s id="} . _esc_for_attr($id) . qq{">\n\n} 
+        . qq{<title>} . _esc($title_text) . qq{</title>\n\n}
+        .  join("\n\n", map { _esc($_->textContent()) } @paras)
+        . join("\n\n", map { _out_section($_) } @subs)
+        . qq{</s>\n\n} 
+        ;
+}
+
+my $total =
+      qq{<body id="} . _esc_for_attr($main_id_text) . qq{">\n\n}
+    . qq{<title>} . _esc($main_title_text) . qq{</title>\n\n}
+    . join("\n\n", map { _out_section($_) } @sections)
+    . qq{</body>\n\n}
+    ;
+
+open my $out_fh, ">", $output_file
+    or die "Could not open '$output_file' for output!";
+binmode $out_fh, ":encoding(utf-8)";
+print {$out_fh} $total;
+close($out_fh);
+
+
+__END__
+
+=head1 NAME
+
+docbook-to-fiction-xml-txt.pl - convert a subset of DocBook/XML to Fiction-Text.
+
+=head1 SYNOPSIS
+
+    # To render input.xml file into XHTML
+    perl docbook-to-fiction-xml-txt.pl -o story.fiction.txt story.docbook.xml
+
+=head1 DESCRIPTION
+
+This is a script (partial, hacky and incomplete) to convert a
+subset of DocBook/XML into Fiction-Text. (see L<XML::Grammar::Fiction> ).
+In turn Fiction-Text can be converted to Fiction-XML , XHTML and DocBook/XML.
+
+=head1 USAGE
+
+The basic invocation of docmake is:
+
+    docmake -o [output.fiction.txt] input.docbook.xml
+
+B<--output> is a verbose alternative to B<-o>.
+
+=head2 FLAGS
+
+The available flags are:
+
+=over 4
+
+=item * -o OUTPUT_PATH ; --output OUTPUT_PATH
+
+Put the result in B<OUTPUT_PATH> .
+
+=back
+
+=head2 EXAMPLES
+
+There are some examples for sample invocation in the Synopsis.
+
+=head1 SUPPORT
+
+You can look for information at:
+
+=over 4
+
+=item * Search CPAN
+
+L<http://search.cpan.org/dist/XML-Grammar-Fiction/>
+
+=item * AnnoCPAN: Annotated CPAN documentation
+
+L<http://annocpan.org/dist/XML::Grammar::Fiction>
+
+=item * CPAN Ratings
+
+L<http://cpanratings.perl.org/d/XML::Grammar::Fiction>
+
+=item * RT: CPAN's request tracker
+
+L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML::Grammar::Fiction>
+
+=back
+
+=head1 SEE ALSO
+
+=over 4
+
+=item * DocBook on the Wikipedia - L<http://en.wikipedia.org/wiki/DocBook>
+
+=item * DocBook/XSL - The Complete Guide - L<http://www.sagehill.net/docbookxsl/>
+
+=item * The DocBook Homepage - L<http://www.docbook.org/>
+
+=back
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright (c) 2009 Shlomi Fish.
+
+This program is released under the following license: MIT/X11 License.
+( L<http://www.opensource.org/licenses/mit-license.php> ).
+
+=head2 LICENSE
+
+Copyright (c) 2009 Shlomi Fish
+
+Permission is hereby granted, free of charge, to any person
+obtaining a copy of this software and associated documentation
+files (the "Software"), to deal in the Software without
+restriction, including without limitation the rights to use,
+copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the
+Software is furnished to do so, subject to the following
+conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+OTHER DEALINGS IN THE SOFTWARE.
+
+=head1 AUTHOR
+
+Shlomi Fish , L<http://www.shlomifish.org/> .
+
+=cut

changeset:   104:050d9226a30c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 10:00:29 2009 +0000
files:       .hgtags
description:
Tagging XML-Grammar-Fiction as 0.0.2


diff -r 3a19663be777 -r 050d9226a30c .hgtags
--- a/.hgtags	Wed Nov 25 09:58:53 2009 +0000
+++ b/.hgtags	Wed Nov 25 10:00:29 2009 +0000
@@ -1,1 +1,2 @@
 901104d91a9296317ea2ef690025f5849024df01 releases/0.0.1
+3a19663be777fe65d8b41aa7219e5c36b8848771 releases/0.0.2

changeset:   103:3a19663be777
tag:         releases/0.0.2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 09:58:53 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Bumped the version number to 0.0.2 and updated the changes.


diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Wed Nov 25 09:58:53 2009 +0000
@@ -1,5 +1,17 @@
 Revision history for XML-Grammar-Fiction.
 
+0.0.2       Wed Nov 25 11:55:41 IST 2009
+        - Various refactorings / code cleanup:
+            - removed old methods.
+            - got rid of the _with_curr_line() anti-abstrcation.
+            - converted the parsing exceptions to Exception-Class 
+            ( see lib/XML/Grammar/Fiction/Err.pm )
+            - Extract the Struct/Tag.pm helper class.
+            - extracted the lib/XML/Grammar/Fiction/RendererBase.pm
+            and lib/XML/Grammar/Fiction/RNG_Renderer.pm base classes.
+            - Convert the proto-text parser (::Parser::QnD) to a 
+            non-procedurally recursive one and extracted many methods from it.
+
 0.0.1       Thu Nov  5 18:59:27 IST 2009
         - Forked from XML-Grammar-Screenplay-0.0600+trunk.
         - Changed to the Fiction proto-text format and XML format.
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head1 SYNOPSIS
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -19,11 +19,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head1 SYNOPSIS
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head1 SYNOPSIS
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -18,11 +18,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head1 SYNOPSIS
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -10,11 +10,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head1 METHODS
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -11,11 +11,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 use Exception::Class
     (
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head2 new()
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -12,11 +12,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 package XML::Grammar::Fiction::FromProto::Node;
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head1 AUTHOR
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -27,11 +27,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 sub _enqueue_event
 {
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head2 new()
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -16,11 +16,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head2 new()
 
diff -r 9e0846b2067b -r 3a19663be777 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Nov 25 09:08:58 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Wed Nov 25 09:58:53 2009 +0000
@@ -15,11 +15,11 @@
 
 =head1 VERSION
 
-Version 0.0.1
+Version 0.0.2
 
 =cut
 
-our $VERSION = '0.0.1';
+our $VERSION = '0.0.2';
 
 =head2 new()
 

changeset:   102:9e0846b2067b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 09:08:58 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Removed an unused property.


diff -r ac1318c048e2 -r 9e0846b2067b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 08:51:47 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 09:08:58 2009 +0000
@@ -10,7 +10,6 @@
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
 has "_tags_stack" => (isa => "ArrayRef", is => "rw");
-has "_result_tag" => (isa => "XML::Grammar::Fiction::FromProto::Node::Element", is => "rw");
 has "_events_queue" => (isa => "ArrayRef", is => "rw", default => sub { []; });
 has "_in_para" => (isa => "Bool", is => "rw");
 

changeset:   101:ac1318c048e2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 08:51:47 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: extracted _generate_tag_event.


diff -r 5bf30924aa8d -r ac1318c048e2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 08:10:13 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 08:51:47 2009 +0000
@@ -409,39 +409,47 @@
     }
 }
 
+sub _generate_tag_event
+{
+    my $self = shift;
+
+    my $l = $self->_curr_line_ref();
+    my $orig_pos = pos($$l);
+
+    if (my ($tag_opener) = $$l =~ m{\G(<(?:/)?)}cg)
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        my $is_closing_tag = $tag_opener =~ m{/};
+
+        pos($$l) = $orig_pos;
+
+        $self->_enqueue_event(
+            {'type' => ($is_closing_tag ? "close" : "open")}
+        );
+
+        return 1;
+    }
+    else
+    {
+        return;
+    }
+}
+
 sub _generate_text_unit_events
 {
     my $self = shift;
 
     my $space = $self->_consume(qr{\s});
 
-    my $l = $self->_curr_line_ref();
-    my $orig_pos = pos($$l);
-
-    if ($$l =~ m{\G<}cg)
+    if (! $self->_generate_tag_event())
     {
-        # If it's a tag.
-
-        # TODO : implement the comment handling.
-        # We have a tag.
-
-        my $is_closing_tag = ($$l =~ m{\G/}cg);
-        pos($$l) = $orig_pos;
-
-        # If it's a closing tag - then backtrack.
-        if ($is_closing_tag)
-        {
-            $self->_enqueue_event({'type' => "close"});
-            return;
-        }
-        else
-        {
-            $self->_enqueue_event({'type' => "open"});
-            return;
-        }
-    }
-    else
-    {
+        my $l = $self->_curr_line_ref();
+        my $orig_pos = pos($$l);
+        
         my $is_para = (pos($$l) == 0);
 
         my $status = $self->_parse_non_tag_text_unit();
@@ -462,8 +470,8 @@
             $self->_enqueue_event({ type => "close", tag => "para" });
             $in_para = 0;
         }
-        return;
     }
+    return;
 }
 
 sub _curr_line_matches

changeset:   100:5bf30924aa8d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 08:10:13 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted the ->_add_to_top_tag method.


diff -r 2602abf8f5a8 -r 5bf30924aa8d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 08:06:01 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 08:10:13 2009 +0000
@@ -48,6 +48,15 @@
     return shift(@{$self->_events_queue()});
 }
 
+sub _add_to_top_tag
+{
+    my ($self, $child) = @_;
+
+    $self->_tags_stack->[-1]->append_child($child);
+
+    return;
+}
+
 sub _curr_line :lvalue
 {
     my $self = shift;
@@ -508,7 +517,7 @@
             $open->detach_children(),
         );
 
-    $self->_tags_stack->[-1]->append_child( $new_elem );
+    $self->_add_to_top_tag($new_elem);
 
     $self->_in_para(0);
 
@@ -537,7 +546,7 @@
 {
     my ($self, $event) = @_;
 
-    $self->_tags_stack->[-1]->append_child( $event->{'elem'});
+    $self->_add_to_top_tag( $event->{'elem'});
 
     return;
 }
@@ -620,7 +629,8 @@
 
     if (@{$self->_tags_stack()})
     {
-        $self->_tags_stack->[-1]->append_child($new_elem);
+        $self->_add_to_top_tag($new_elem);
+
         return;
     }
     else
@@ -651,7 +661,7 @@
     {
         my $text = $self->_consume_up_to(qr{-->});
 
-        $self->_tags_stack->[-1]->append_child(
+        $self->_add_to_top_tag(
             $self->_new_node({ t => "Comment", text => $text, })
         );
 

changeset:   99:2602abf8f5a8
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 08:06:01 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
description:
Add the ->append_child() method and replaced it everywhere.


diff -r 500e12495d4a -r 2602abf8f5a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:58:40 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 08:06:01 2009 +0000
@@ -508,7 +508,7 @@
             $open->detach_children(),
         );
 
-    $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+    $self->_tags_stack->[-1]->append_child( $new_elem );
 
     $self->_in_para(0);
 
@@ -537,9 +537,7 @@
 {
     my ($self, $event) = @_;
 
-    $self->_tags_stack->[-1]->append_children(
-        [ $event->{'elem'} ],
-    );
+    $self->_tags_stack->[-1]->append_child( $event->{'elem'});
 
     return;
 }
@@ -622,7 +620,7 @@
 
     if (@{$self->_tags_stack()})
     {
-        $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+        $self->_tags_stack->[-1]->append_child($new_elem);
         return;
     }
     else
@@ -653,10 +651,8 @@
     {
         my $text = $self->_consume_up_to(qr{-->});
 
-        $self->_tags_stack->[-1]->append_children(
-            [
-                $self->_new_node({ t => "Comment", text => $text, })
-            ]
+        $self->_tags_stack->[-1]->append_child(
+            $self->_new_node({ t => "Comment", text => $text, })
         );
 
         return 1;
diff -r 500e12495d4a -r 2602abf8f5a8 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Nov 25 07:58:40 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Nov 25 08:06:01 2009 +0000
@@ -36,6 +36,15 @@
     my ($self, $children) = @_;
 
     push @{$self->children()}, @$children;
+
+    return;
+}
+
+sub append_child
+{
+    my ($self, $child) = @_;
+
+    return $self->append_children( [ $child ] );
 }
 
 sub detach_children
@@ -81,6 +90,10 @@
 
 Append more elements to the children.
 
+=head2 $self->append_child($child)
+
+Appends a single child. Uses C<append_children()> .
+
 =head2 my $children = $self->detach_children()
 
 Detaches the children and returns them as an array reference.

changeset:   98:500e12495d4a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 07:58:40 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i-comments.txt perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i-comments.xml perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
description:
Fixed a bug with the handling of the comments. Called the wrong method.

This was a regression since 0.0.1. Also added a test.


diff -r ef6f2ce7461f -r 500e12495d4a perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 25 07:50:20 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 25 07:58:40 2009 +0000
@@ -44,6 +44,7 @@
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
 t/data/proto-text/sections-and-paras.txt
+t/data/proto-text/sections-p-b-i-comments.txt
 t/data/proto-text/sections-p-b-i.txt
 t/data/proto-text/two-nested-s.txt
 t/data/proto-text/with-brs.txt
@@ -59,6 +60,7 @@
 t/data/xml/nested-s.xml
 t/data/xml/scenes-with-titles.xml
 t/data/xml/sections-and-paras.xml
+t/data/xml/sections-p-b-i-comments.xml
 t/data/xml/sections-p-b-i.xml
 t/data/xml/two-nested-s.xml
 t/data/xml/with-brs.xml
diff -r ef6f2ce7461f -r 500e12495d4a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:50:20 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:58:40 2009 +0000
@@ -653,7 +653,7 @@
     {
         my $text = $self->_consume_up_to(qr{-->});
 
-        $self->_tags_stacks->[-1]->append_children(
+        $self->_tags_stack->[-1]->append_children(
             [
                 $self->_new_node({ t => "Comment", text => $text, })
             ]
diff -r ef6f2ce7461f -r 500e12495d4a perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i-comments.txt	Wed Nov 25 07:58:40 2009 +0000
@@ -0,0 +1,30 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+<!-- David has Green hair here -->
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+<!-- Goliath has to reply to that. -->
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r ef6f2ce7461f -r 500e12495d4a perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i-comments.xml	Wed Nov 25 07:58:40 2009 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
+    <head>
+    </head>
+    <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>
+    <section xml:id="top">
+    <title>The Top Section</title>
+    <!-- David has Green hair here -->
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <title>Goliath's Response</title>
+    <!-- Goliath has to reply to that. -->
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r ef6f2ce7461f -r 500e12495d4a perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Wed Nov 25 07:50:20 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Wed Nov 25 07:58:40 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 4;
+use Test::More tests => 6;
 
 use Test::XML;
 
@@ -46,9 +46,10 @@
 @tests = (qw(
     sections-and-paras
     sections-p-b-i
+    sections-p-b-i-comments
     ));
 
-# TEST:$num_texts=2
+# TEST:$num_texts=3
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   97:ef6f2ce7461f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 07:50:20 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract _look_ahead_for_comment.


diff -r 53c5eb0e3ebb -r ef6f2ce7461f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:37:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:50:20 2009 +0000
@@ -645,6 +645,28 @@
     return ($is_tag_cond, $is_close);
 }
 
+sub _look_ahead_for_comment
+{
+    my $self = shift;
+
+    if ($self->_line_starts_with(qr{<!--}))
+    {
+        my $text = $self->_consume_up_to(qr{-->});
+
+        $self->_tags_stacks->[-1]->append_children(
+            [
+                $self->_new_node({ t => "Comment", text => $text, })
+            ]
+        );
+
+        return 1;
+    }
+    else
+    {
+        return;
+    }
+}
+
 sub _parse_tags
 {
     my $self = shift;
@@ -655,27 +677,15 @@
 
     $self->_in_para(0);
 
-    my $run_once = 1;
-
     my $ret_tag;
 
     TAGS_LOOP:
-    while ($run_once || @{$self->_tags_stack()})
+    while (1)
     {
-        $run_once = 0;
-
-        if ($self->_line_starts_with(qr{<!--}))
+        if ($self->_look_ahead_for_comment())
         {
-            my $text = $self->_consume_up_to(qr{-->});
-
-            $self->_tags_stacks->[-1]->append_children(
-                [
-                    $self->_new_node({ t => "Comment", text => $text, })
-                ]
-            );
             redo TAGS_LOOP;
         }
-
         $self->_skip_space();
 
         my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();

changeset:   96:53c5eb0e3ebb
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 07:37:36 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted the _look_ahead_for_tag method.


diff -r 17c053902ec9 -r 53c5eb0e3ebb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:30:46 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:37:36 2009 +0000
@@ -631,6 +631,20 @@
     }
 }
 
+sub _look_ahead_for_tag
+{
+    my $self = shift;
+
+    my ($l, $p) = $self->_curr_line_and_pos();
+
+    my $is_tag_cond = ($$l =~ m{\G<}cg);
+    my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
+
+    pos($$l) = $p;
+
+    return ($is_tag_cond, $is_close);
+}
+
 sub _parse_tags
 {
     my $self = shift;
@@ -664,12 +678,7 @@
 
         $self->_skip_space();
 
-        my ($l, $p) = $self->_curr_line_and_pos();
-
-        my $is_tag_cond = ($$l =~ m{\G<}cg);
-        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
-
-        pos($$l) = $p;
+        my ($is_tag_cond, $is_close) = $self->_look_ahead_for_tag();
 
         # Check if it's a closing tag.
         if ($is_close)

changeset:   95:17c053902ec9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 07:30:46 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract _handle_open_tag() and _handle_close_tag().


diff -r 6ca6e05327bc -r 17c053902ec9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:10:30 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:30:46 2009 +0000
@@ -582,6 +582,55 @@
     return;
 }
 
+sub _handle_open_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    $open->children([]);
+
+    push @{$self->_tags_stack()}, $open;
+
+    return;
+}
+
+sub _handle_close_tag
+{
+    my $self = shift;
+
+    my $close = $self->_parse_closing_tag();
+
+    $self->_skip_space();
+
+    my $open = pop(@{$self->_tags_stack()});
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    my $new_elem = 
+        $self->_create_elem(
+            $open, 
+            $self->_new_list($open->detach_children()),
+        );
+
+    if (@{$self->_tags_stack()})
+    {
+        $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+        return;
+    }
+    else
+    {
+        return $new_elem;
+    }
+}
+
 sub _parse_tags
 {
     my $self = shift;
@@ -625,45 +674,14 @@
         # Check if it's a closing tag.
         if ($is_close)
         {
-            my $close = $self->_parse_closing_tag();
-    
-            $self->_skip_space();
-
-            my $open = pop(@{$self->_tags_stack()});
-    
-            if ($open->name() ne $close->name())
+            if ($ret_tag = $self->_handle_close_tag())
             {
-                XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
-                    error => "Tags do not match",
-                    opening_tag => $open,
-                    closing_tag => $close,
-                );
-            }
-
-            my $new_elem = 
-                $self->_create_elem(
-                    $open, 
-                    $self->_new_list($open->detach_children()),
-                );
-
-            if (@{$self->_tags_stack()})
-            {
-                $self->_tags_stack->[-1]->append_children([ $new_elem ]);
-                redo TAGS_LOOP;
-            }
-            else
-            {
-                $ret_tag = $new_elem;
                 last TAGS_LOOP;
             }
         }
         elsif ($is_tag_cond)
         {
-            my $open = $self->_parse_opening_tag();
-
-            $open->children([]);
-
-            push @{$self->_tags_stack()}, $open;
+            $self->_handle_open_tag();
         }
         else
         {

changeset:   94:6ca6e05327bc
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 07:10:30 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract the _handle_non_tag_text() method.


diff -r db2a5eb527ba -r 6ca6e05327bc perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 06:53:26 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 07:10:30 2009 +0000
@@ -560,6 +560,28 @@
     return;
 }
 
+sub _handle_non_tag_text
+{
+    my $self = shift;
+
+    if (! @{$self->_tags_stack()} )
+    {
+        XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
+            error => "Cannot match opening tag.",
+            'line' => $self->_get_line_num(),
+        );
+    }
+
+    my $contents = $self->_parse_text();
+
+    foreach my $event (@$contents)
+    {
+        $self->_handle_event($event);
+    }
+
+    return;
+}
+
 sub _parse_tags
 {
     my $self = shift;
@@ -645,20 +667,7 @@
         }
         else
         {
-            if (! @{$self->_tags_stack()} )
-            {
-                XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
-                    error => "Cannot match opening tag.",
-                    'line' => $self->_get_line_num(),
-                );
-            }
-            
-            my $contents = $self->_parse_text();
-
-            foreach my $event (@$contents)
-            {
-                $self->_handle_event($event);
-            }
+            $self->_handle_non_tag_text();
         }
     }
 

changeset:   93:db2a5eb527ba
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 06:53:26 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring : extracted a few methods from ::Parser::QnD.


diff -r 8b05c339181c -r db2a5eb527ba perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 06:32:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 06:53:26 2009 +0000
@@ -476,56 +476,77 @@
     return $$l =~ m{\G$re}cg;
 }
 
-sub _handle_paragraph_event
+sub _handle_open_para
 {
-    my $self = shift;
-    my $event = shift;
+    my ($self, $event) = @_;
 
-    if ($event->{'type'} eq "open")
-    {
-        my $new_elem = 
-            XML::Grammar::Fiction::Struct::Tag::Para->new(
-                name => "p",
-                is_standalone => 0,
-                line => $self->_get_line_num(),
-                attrs => [],
-            );
+    my $new_elem = 
+        XML::Grammar::Fiction::Struct::Tag::Para->new(
+            name => "p",
+            is_standalone => 0,
+            line => $self->_get_line_num(),
+            attrs => [],
+        );
 
-        $new_elem->children([]);
+    $new_elem->children([]);
 
-        push @{$self->_tags_stack()}, $new_elem; 
+    push @{$self->_tags_stack()}, $new_elem; 
 
-        $self->_in_para(1);
-    }
-    else
-    {
-        my $open = pop(@{$self->_tags_stack()});
-
-        my $new_elem =
-            $self->_new_para(
-                $open->detach_children(),
-            );
-
-        $self->_tags_stack->[-1]->append_children([ $new_elem ]);
-
-        $self->_in_para(0);
-    }
+    $self->_in_para(1);
 
     return;
 }
 
+sub _handle_close_para
+{
+    my ($self, $event) = @_;
+
+    my $open = pop(@{$self->_tags_stack()});
+
+    my $new_elem =
+        $self->_new_para(
+            $open->detach_children(),
+        );
+
+    $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+
+    $self->_in_para(0);
+
+    return;
+}
+
+sub _handle_paragraph_event
+{
+    my ($self, $event) = @_;
+
+    return 
+          $event->{'type'} eq "open"
+        ? $self->_handle_open_para($event)
+        : $self->_handle_close_para($event)
+        ;
+}
+
 sub _is_event_a_para
 {
-    my $self = shift;
-    my $event = shift;
+    my ($self, $event) = @_;
 
     return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
 }
 
+sub _handle_elem_event
+{
+    my ($self, $event) = @_;
+
+    $self->_tags_stack->[-1]->append_children(
+        [ $event->{'elem'} ],
+    );
+
+    return;
+}
+
 sub _handle_event
 {
-    my $self = shift;
-    my $event = shift;
+    my ($self, $event) = @_;
 
     if ($self->_is_event_a_para($event))
     {
@@ -533,9 +554,7 @@
     }
     elsif ($event->{'type'} eq "elem")
     {
-        $self->_tags_stack->[-1]->append_children(
-            [ $event->{'elem'} ],
-        );
+        $self->_handle_elem_event($event);
     }
 
     return;

changeset:   92:8b05c339181c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 06:32:42 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extract a few methods out of _handle_event.


diff -r 9383b0a42073 -r 8b05c339181c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 06:04:35 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 06:32:42 2009 +0000
@@ -476,44 +476,60 @@
     return $$l =~ m{\G$re}cg;
 }
 
+sub _handle_paragraph_event
+{
+    my $self = shift;
+    my $event = shift;
+
+    if ($event->{'type'} eq "open")
+    {
+        my $new_elem = 
+            XML::Grammar::Fiction::Struct::Tag::Para->new(
+                name => "p",
+                is_standalone => 0,
+                line => $self->_get_line_num(),
+                attrs => [],
+            );
+
+        $new_elem->children([]);
+
+        push @{$self->_tags_stack()}, $new_elem; 
+
+        $self->_in_para(1);
+    }
+    else
+    {
+        my $open = pop(@{$self->_tags_stack()});
+
+        my $new_elem =
+            $self->_new_para(
+                $open->detach_children(),
+            );
+
+        $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+
+        $self->_in_para(0);
+    }
+
+    return;
+}
+
+sub _is_event_a_para
+{
+    my $self = shift;
+    my $event = shift;
+
+    return exists($event->{'tag'}) && ($event->{'tag'} eq "para");
+}
+
 sub _handle_event
 {
     my $self = shift;
     my $event = shift;
 
-    if (  exists($event->{'tag'})
-        && $event->{'tag'} eq "para"
-    )
+    if ($self->_is_event_a_para($event))
     {
-        if ($event->{'type'} eq "open")
-        {
-            my $new_elem = 
-                XML::Grammar::Fiction::Struct::Tag::Para->new(
-                    name => "p",
-                    is_standalone => 0,
-                    line => $self->_get_line_num(),
-                    attrs => [],
-                );
-
-            $new_elem->children([]);
-
-            push @{$self->_tags_stack()}, $new_elem; 
-
-            $self->_in_para(1);
-        }
-        else
-        {
-            my $open = pop(@{$self->_tags_stack()});
-
-            my $new_elem =
-                $self->_new_para(
-                    $open->detach_children(),
-                );
-
-            $self->_tags_stack->[-1]->append_children([ $new_elem ]);
-
-            $self->_in_para(0);
-        }
+        $self->_handle_paragraph_event($event);
     }
     elsif ($event->{'type'} eq "elem")
     {

changeset:   91:9383b0a42073
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 06:04:35 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: extract the _handle_event method.


diff -r 46e66ba039c1 -r 9383b0a42073 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 05:59:29 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 06:04:35 2009 +0000
@@ -476,6 +476,55 @@
     return $$l =~ m{\G$re}cg;
 }
 
+sub _handle_event
+{
+    my $self = shift;
+    my $event = shift;
+
+    if (  exists($event->{'tag'})
+        && $event->{'tag'} eq "para"
+    )
+    {
+        if ($event->{'type'} eq "open")
+        {
+            my $new_elem = 
+                XML::Grammar::Fiction::Struct::Tag::Para->new(
+                    name => "p",
+                    is_standalone => 0,
+                    line => $self->_get_line_num(),
+                    attrs => [],
+                );
+
+            $new_elem->children([]);
+
+            push @{$self->_tags_stack()}, $new_elem; 
+
+            $self->_in_para(1);
+        }
+        else
+        {
+            my $open = pop(@{$self->_tags_stack()});
+
+            my $new_elem =
+                $self->_new_para(
+                    $open->detach_children(),
+                );
+
+            $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+
+            $self->_in_para(0);
+        }
+    }
+    elsif ($event->{'type'} eq "elem")
+    {
+        $self->_tags_stack->[-1]->append_children(
+            [ $event->{'elem'} ],
+        );
+    }
+
+    return;
+}
+
 sub _parse_tags
 {
     my $self = shift;
@@ -573,46 +622,7 @@
 
             foreach my $event (@$contents)
             {
-                if (  exists($event->{'tag'})
-                    && $event->{'tag'} eq "para"
-                )
-                {
-                    if ($event->{'type'} eq "open")
-                    {
-                        my $new_elem = 
-                            XML::Grammar::Fiction::Struct::Tag::Para->new(
-                                name => "p",
-                                is_standalone => 0,
-                                line => $self->_get_line_num(),
-                                attrs => [],
-                            );
-
-                        $new_elem->children([]);
-
-                        push @{$self->_tags_stack()}, $new_elem; 
-
-                        $self->_in_para(1);
-                    }
-                    else
-                    {
-                        my $open = pop(@{$self->_tags_stack()});
-
-                        my $new_elem =
-                            $self->_new_para(
-                                $open->detach_children(),
-                            );
-
-                        $self->_tags_stack->[-1]->append_children([ $new_elem ]);
-
-                        $self->_in_para(0);
-                    }
-                }
-                elsif ($event->{'type'} eq "elem")
-                {
-                    $self->_tags_stack->[-1]->append_children(
-                        [ $event->{'elem'} ],
-                    );
-                }
+                $self->_handle_event($event);
             }
         }
     }

changeset:   90:46e66ba039c1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 05:59:29 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Inlined and removed the $start_para closure.


diff -r 7072c82d926e -r 46e66ba039c1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 05:56:49 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 05:59:29 2009 +0000
@@ -577,7 +577,8 @@
                     && $event->{'tag'} eq "para"
                 )
                 {
-                    my $start_para = sub {
+                    if ($event->{'type'} eq "open")
+                    {
                         my $new_elem = 
                             XML::Grammar::Fiction::Struct::Tag::Para->new(
                                 name => "p",
@@ -591,10 +592,6 @@
                         push @{$self->_tags_stack()}, $new_elem; 
 
                         $self->_in_para(1);
-                    };
-                    if ($event->{'type'} eq "open")
-                    {
-                        $start_para->();
                     }
                     else
                     {
@@ -608,8 +605,6 @@
                         $self->_tags_stack->[-1]->append_children([ $new_elem ]);
 
                         $self->_in_para(0);
-
-                        # $start_para->();
                     }
                 }
                 elsif ($event->{'type'} eq "elem")

changeset:   89:7072c82d926e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 05:56:49 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Corrected the meaning of several of the labels.


diff -r 4fffaa72808c -r 7072c82d926e perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 25 05:51:39 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 25 05:56:49 2009 +0000
@@ -235,7 +235,7 @@
     is(
         $err->closing_tag()->line(),
         11,
-        "Opening line is OK.",
+        "Closing tag line is OK.",
     );
 }
 

changeset:   88:4fffaa72808c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 25 05:51:39 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Convert the proto-text parser to a non-procedurally-recursive one.

We now use a loop and a stack of tags to process the proto-text.


diff -r 6c21d3c7686f -r 4fffaa72808c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Nov 24 16:20:57 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 25 05:51:39 2009 +0000
@@ -9,6 +9,10 @@
 
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
+has "_tags_stack" => (isa => "ArrayRef", is => "rw");
+has "_result_tag" => (isa => "XML::Grammar::Fiction::FromProto::Node::Element", is => "rw");
+has "_events_queue" => (isa => "ArrayRef", is => "rw", default => sub { []; });
+has "_in_para" => (isa => "Bool", is => "rw");
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
@@ -30,6 +34,20 @@
 
 our $VERSION = '0.0.1';
 
+sub _enqueue_event
+{
+    my ($self, $event) = @_;
+   
+    push (@{$self->_events_queue()}, $event);
+}
+
+sub _extract_event
+{
+    my $self = shift;
+
+    return shift(@{$self->_events_queue()});
+}
+
 sub _curr_line :lvalue
 {
     my $self = shift;
@@ -86,6 +104,8 @@
 {
     my $self = shift;
 
+    $self->_events_queue([]);
+
     return 0;
 }
 
@@ -93,7 +113,7 @@
 {
     my $self = shift;
 
-    return $self->_parse_tag();
+    return $self->_parse_tags();
 }
 
 # Skip the whitespace.
@@ -262,7 +282,7 @@
     return XML::Grammar::Fiction::Struct::Tag->new(
         name => $1,
         line => $self->_get_line_num(),
-    )
+    );
 }
 
 sub _parse_text
@@ -270,11 +290,20 @@
     my $self = shift;
 
     my @ret;
-    while (defined(my $unit = $self->_parse_text_unit()))
+    while (my $unit = $self->_parse_text_unit())
     {
         push @ret, $unit;
+        my $type = $unit->{'type'};
+        if (($type eq "close") || ($type eq "open"))
+        {
+            push @ret, @{$self->_events_queue()};
+            $self->_events_queue([]);
+            return \@ret;
+        }
     }
 
+=begin Removed
+
     # If it's whitespace - return an empty list.
     if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
     {
@@ -282,6 +311,11 @@
     }
 
     return $self->_new_list(\@ret);
+
+=end Removed
+
+=cut
+
 }
 
 sub _find_next_inner_text
@@ -355,6 +389,21 @@
 {
     my $self = shift;
 
+    if (defined(my $event  = $self->_extract_event()))
+    {
+        return $event;
+    }
+    else
+    {
+        $self->_generate_text_unit_events();
+        return $self->_extract_event();
+    }
+}
+
+sub _generate_text_unit_events
+{
+    my $self = shift;
+
     my $space = $self->_consume(qr{\s});
 
     my $l = $self->_curr_line_ref();
@@ -373,49 +422,38 @@
         # If it's a closing tag - then backtrack.
         if ($is_closing_tag)
         {
-            return undef;
+            $self->_enqueue_event({'type' => "close"});
+            return;
         }
         else
         {
-            return $self->_parse_tag();
+            $self->_enqueue_event({'type' => "open"});
+            return;
         }
     }
     else
     {
-        my @ret;
-
-        my $status;
-
         my $is_para = (pos($$l) == 0);
 
-        PARSE_NON_TAG_TEXT_UNIT:
-        while (my $status = $self->_parse_non_tag_text_unit())
+        my $status = $self->_parse_non_tag_text_unit();
+        my $elem = $status->{'elem'};
+        my $is_para_end = $status->{'para_end'};
+
+        my $in_para = $self->_in_para();
+        if ($is_para && !$in_para)
         {
-            my $elem = $status->{'elem'};
-            my $is_para_end = $status->{'para_end'};
+            $self->_enqueue_event({type => "open", tag => "para"});
+            $in_para = 1;
+        }
 
-            push @ret, $elem;
-            if ($is_para_end)
-            {
-                last PARSE_NON_TAG_TEXT_UNIT;
-            }
-            else
-            {
-                if (defined(my $text_unit = $self->_parse_text_unit()))
-                {
-                    push @ret, $text_unit;
-                }
-                else
-                {
-                    last PARSE_NON_TAG_TEXT_UNIT;
-                }
-            }
+        $self->_enqueue_event({type => "elem", elem => $elem});
+
+        if ($is_para_end && $in_para)
+        {
+            $self->_enqueue_event({ type => "close", tag => "para" });
+            $in_para = 0;
         }
-        return
-            $is_para 
-            ? $self->_new_para(\@ret)
-            : $self->_new_list(\@ret)
-            ;
+        return;
     }
 }
 
@@ -438,41 +476,153 @@
     return $$l =~ m{\G$re}cg;
 }
 
-sub _parse_tag
+sub _parse_tags
 {
     my $self = shift;
 
-    $self->_skip_space();
-
-    if ($self->_line_starts_with(qr{<!--}))
-    {
-        my $text = $self->_consume_up_to(qr{-->});
-
-        return $self->_new_node({ t => "Comment", text => $text, });
-    }
-
-    my $open = $self->_parse_opening_tag();
+    $self->_tags_stack([]);
 
     $self->_skip_space();
 
-    my $inside = $self->_parse_text();
+    $self->_in_para(0);
 
-    $self->_skip_space();
+    my $run_once = 1;
 
-    my $close = $self->_parse_closing_tag();
+    my $ret_tag;
 
-    $self->_skip_space();
+    TAGS_LOOP:
+    while ($run_once || @{$self->_tags_stack()})
+    {
+        $run_once = 0;
 
-    if ($open->name() ne $close->name())
-    {
-        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
-            error => "Tags do not match",
-            opening_tag => $open,
-            closing_tag => $close,
-        );
+        if ($self->_line_starts_with(qr{<!--}))
+        {
+            my $text = $self->_consume_up_to(qr{-->});
+
+            $self->_tags_stacks->[-1]->append_children(
+                [
+                    $self->_new_node({ t => "Comment", text => $text, })
+                ]
+            );
+            redo TAGS_LOOP;
+        }
+
+        $self->_skip_space();
+
+        my ($l, $p) = $self->_curr_line_and_pos();
+
+        my $is_tag_cond = ($$l =~ m{\G<}cg);
+        my $is_close = $is_tag_cond && ($$l =~ m{\G/}cg);
+
+        pos($$l) = $p;
+
+        # Check if it's a closing tag.
+        if ($is_close)
+        {
+            my $close = $self->_parse_closing_tag();
+    
+            $self->_skip_space();
+
+            my $open = pop(@{$self->_tags_stack()});
+    
+            if ($open->name() ne $close->name())
+            {
+                XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+                    error => "Tags do not match",
+                    opening_tag => $open,
+                    closing_tag => $close,
+                );
+            }
+
+            my $new_elem = 
+                $self->_create_elem(
+                    $open, 
+                    $self->_new_list($open->detach_children()),
+                );
+
+            if (@{$self->_tags_stack()})
+            {
+                $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+                redo TAGS_LOOP;
+            }
+            else
+            {
+                $ret_tag = $new_elem;
+                last TAGS_LOOP;
+            }
+        }
+        elsif ($is_tag_cond)
+        {
+            my $open = $self->_parse_opening_tag();
+
+            $open->children([]);
+
+            push @{$self->_tags_stack()}, $open;
+        }
+        else
+        {
+            if (! @{$self->_tags_stack()} )
+            {
+                XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
+                    error => "Cannot match opening tag.",
+                    'line' => $self->_get_line_num(),
+                );
+            }
+            
+            my $contents = $self->_parse_text();
+
+            foreach my $event (@$contents)
+            {
+                if (  exists($event->{'tag'})
+                    && $event->{'tag'} eq "para"
+                )
+                {
+                    my $start_para = sub {
+                        my $new_elem = 
+                            XML::Grammar::Fiction::Struct::Tag::Para->new(
+                                name => "p",
+                                is_standalone => 0,
+                                line => $self->_get_line_num(),
+                                attrs => [],
+                            );
+
+                        $new_elem->children([]);
+
+                        push @{$self->_tags_stack()}, $new_elem; 
+
+                        $self->_in_para(1);
+                    };
+                    if ($event->{'type'} eq "open")
+                    {
+                        $start_para->();
+                    }
+                    else
+                    {
+                        my $open = pop(@{$self->_tags_stack()});
+
+                        my $new_elem =
+                            $self->_new_para(
+                                $open->detach_children(),
+                            );
+
+                        $self->_tags_stack->[-1]->append_children([ $new_elem ]);
+
+                        $self->_in_para(0);
+
+                        # $start_para->();
+                    }
+                }
+                elsif ($event->{'type'} eq "elem")
+                {
+                    $self->_tags_stack->[-1]->append_children(
+                        [ $event->{'elem'} ],
+                    );
+                }
+            }
+        }
     }
 
-    return $self->_create_elem($open, $inside);
+    return $ret_tag;
 }
 
 sub _consume
diff -r 6c21d3c7686f -r 4fffaa72808c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Tue Nov 24 16:20:57 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Wed Nov 25 05:51:39 2009 +0000
@@ -5,6 +5,7 @@
 
 use Moose;
 
+use XML::Grammar::Fiction::FromProto::Nodes;
 
 =head1 NAME
 
@@ -25,6 +26,34 @@
 has 'line' => (is => "rw", isa => "Int");
 has 'is_standalone' => (is => "rw", isa => "Bool");
 has 'attrs' => (is => "rw", isa => "ArrayRef");
+has 'children' => (
+    is => "rw", 
+    isa => "Maybe[ArrayRef]",
+);
+
+sub append_children
+{
+    my ($self, $children) = @_;
+
+    push @{$self->children()}, @$children;
+}
+
+sub detach_children
+{
+    my $self = shift;
+
+    my $children = $self->children();
+
+    $self->children(undef);
+
+    return $children;
+}
+
+package XML::Grammar::Fiction::Struct::Tag::Para;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::Struct::Tag");
 
 =head1 METHODS
 
@@ -44,6 +73,18 @@
 
 The attributes of the opening tag in an array.
 
+=head2 $self->children()
+
+A placeholder for the element's children.
+
+=head2 $self->append_children(\@children)
+
+Append more elements to the children.
+
+=head2 my $children = $self->detach_children()
+
+Detaches the children and returns them as an array reference.
+
 =head1 AUTHOR
 
 Shlomi Fish, L<http://www.shlomifish.org/>.
diff -r 6c21d3c7686f -r 4fffaa72808c perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Tue Nov 24 16:20:57 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 25 05:51:39 2009 +0000
@@ -58,14 +58,14 @@
     is(
         $err->closing_tag()->name(),
         "wrong-finish-tag",
-        "Opening tag-name is OK.",
+        "Closing tag-name is OK.",
     );
 
     # TEST
     is(
         $err->closing_tag()->line(),
         3,
-        "Opening line is OK.",
+        "Closing line is OK.",
     );
 }
 

changeset:   87:6c21d3c7686f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 24 16:20:57 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Created the RNG_Renderer base class.


diff -r b331cbd58417 -r 6c21d3c7686f perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 24 16:09:55 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 24 16:20:57 2009 +0000
@@ -19,6 +19,7 @@
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
 lib/XML/Grammar/Fiction/RendererBase.pm
+lib/XML/Grammar/Fiction/RNG_Renderer.pm
 lib/XML/Grammar/Fiction/Struct/Tag.pm
 lib/XML/Grammar/Fiction/ToDocBook.pm
 lib/XML/Grammar/Fiction/ToHTML.pm
diff -r b331cbd58417 -r 6c21d3c7686f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RNG_Renderer.pm	Tue Nov 24 16:20:57 2009 +0000
@@ -0,0 +1,51 @@
+package XML::Grammar::Fiction::RNG_Renderer;
+
+use strict;
+use warnings;
+
+=head1 XML::Grammar::Fiction::RNG_Renderer
+
+The base class for the Fiction-XML renderer with the common RNG.
+
+=head1 SYNOPSIS
+
+For internal use.
+
+=cut
+
+use Moose;
+
+extends ("XML::Grammar::Fiction::RendererBase");
+
+sub _get_relaxng_base_path
+{
+    my $self = shift;
+
+    return "fiction-xml.rng";
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r b331cbd58417 -r 6c21d3c7686f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 24 16:09:55 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 24 16:20:57 2009 +0000
@@ -7,7 +7,7 @@
 
 use Moose;
 
-extends ("XML::Grammar::Fiction::RendererBase");
+extends ("XML::Grammar::Fiction::RNG_Renderer");
 
 =head1 NAME
 
@@ -33,14 +33,6 @@
 
 =cut
 
-sub _get_relaxng_base_path
-{
-    my $self = shift;
-
-    return "fiction-xml.rng";
-}
-
-
 sub _get_xslt_base_path
 {
     my $self = shift;
diff -r b331cbd58417 -r 6c21d3c7686f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 16:09:55 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 16:20:57 2009 +0000
@@ -7,7 +7,7 @@
 
 use Moose;
 
-extends ("XML::Grammar::Fiction::RendererBase");
+extends( "XML::Grammar::Fiction::RNG_Renderer" );
 
 =head1 NAME
 
@@ -32,14 +32,6 @@
 
 =cut
 
-sub _get_relaxng_base_path
-{
-    my $self = shift;
-
-    return "fiction-xml.rng";
-}
-
-
 sub _get_xslt_base_path
 {
     my $self = shift;

changeset:   86:b331cbd58417
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 24 16:09:55 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Converted ToDocBook to RendererBase.


diff -r e37fa4ed7278 -r b331cbd58417 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 24 15:49:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 24 16:09:55 2009 +0000
@@ -4,23 +4,10 @@
 use warnings;
 
 use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use XML::Grammar::Fiction::ConfigData;
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Fiction::Base';
 
 use Moose;
 
-
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+extends ("XML::Grammar::Fiction::RendererBase");
 
 =head1 NAME
 
@@ -46,38 +33,44 @@
 
 =cut
 
-sub _init
+sub _get_relaxng_base_path
 {
-    my ($self, $args) = @_;
+    my $self = shift;
 
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
-
-    $self->_data_dir($data_dir);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "fiction-xml-to-docbook.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
+    return "fiction-xml.rng";
 }
 
-=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
 
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
+sub _get_xslt_base_path
+{
+    my $self = shift;
+
+    return "fiction-xml-to-docbook.xslt";
+}
+
+=head2 translate_to_docbook
+
+=over 4
+
+=item * my $xhtml_source = $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
+
+=item * my $xhtml_source = $converter->translate_to_docbook({source => {string_ref => \$buffer}, output => "string" })
+
+=item * my $xhtml_dom = $converter->translate_to_docbook({source => {file => $filename}, output => "dom" })
+
+=item * my $xhtml_dom = $converter->translate_to_docbook({source => {dom => $libxml_dom}, output => "dom" })
+
+=back
+
+Does the actual conversion. The C<'source'> argument points to a hash-ref with
+keys and values for the source. If C<'file'> is specified there it points to the
+filename to translate (currently the only available source). If 
+C<'string_ref'> is specified it points to a reference to a string, with the
+contents of the source XML. If C<'dom'> is specified then it points to an XML
+DOM as parsed or constructed by XML::LibXML.
 
 The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
+the XML as a string, and a value of C<'dom'> returns the XML as an 
 L<XML::LibXML> DOM object.
 
 =cut
@@ -86,28 +79,7 @@
 {
     my ($self, $args) = @_;
 
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
+    return $self->generic_translate($args);
 }
 
 =head1 AUTHOR
diff -r e37fa4ed7278 -r b331cbd58417 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 15:49:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 16:09:55 2009 +0000
@@ -4,13 +4,6 @@
 use warnings;
 
 use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-
-use XML::LibXML;
-use XML::LibXSLT;
 
 use Moose;
 

changeset:   85:e37fa4ed7278
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 24 15:49:54 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Moved the rest of the logic to RendererBase.


diff -r d021f2e73791 -r e37fa4ed7278 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue Nov 24 15:24:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue Nov 24 15:49:54 2009 +0000
@@ -98,17 +98,17 @@
     return 0;
 }
 
-=head2 translate_to_html
+=head2 generic_translate
 
 =over 4
 
-=item * my $xhtml_source = $converter->translate_to_html({source => {file => $filename}, output => "string" })
+=item * my $final_source = $converter->generic_translate({source => {file => $filename}, output => "string" })
 
-=item * my $xhtml_source = $converter->translate_to_html({source => {string_ref => \$buffer}, output => "string" })
+=item * my $final_source = $converter->generic_translate({source => {string_ref => \$buffer}, output => "string" })
 
-=item * my $xhtml_dom = $converter->translate_to_html({source => {file => $filename}, output => "dom" })
+=item * my $final_dom = $converter->generic_translate({source => {file => $filename}, output => "dom" })
 
-=item * my $xhtml_dom = $converter->translate_to_html({source => {dom => $libxml_dom}, output => "dom" })
+=item * my $final_dom = $converter->generic_translate({source => {dom => $libxml_dom}, output => "dom" })
 
 =back
 
@@ -176,7 +176,7 @@
     return $source_dom;
 }
 
-sub translate_to_html
+sub generic_translate
 {
     my ($self, $args) = @_;
 
diff -r d021f2e73791 -r e37fa4ed7278 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 15:24:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 15:49:54 2009 +0000
@@ -81,81 +81,11 @@
 
 =cut
 
-sub _undefize
-{
-    my $v = shift;
-
-    return defined($v) ? $v : "(undef)";
-}
-
-sub _calc_and_ret_dom_without_validate
-{
-    my $self = shift;
-    my $args = shift;
-
-    my $source = $args->{source};
-
-    return
-          exists($source->{'dom'})
-        ? $source->{'dom'}
-        : exists($source->{'string_ref'})
-        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
-        : $self->_xml_parser()->parse_file($source->{'file'})
-        ;
-}
-
-sub _get_dom_from_source
-{
-    my $self = shift;
-    my $args = shift;
-  
-    my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
-
-    my $ret_code;
-
-    eval
-    {
-        $ret_code = $self->_rng()->validate($source_dom);
-    };
-
-    if (defined($ret_code) && ($ret_code == 0))
-    {
-        # It's OK.
-    }
-    else
-    {
-        confess "RelaxNG validation failed [\$ret_code == "
-            . _undefize($ret_code) . " ; $@]"
-            ;
-    }
-
-    return $source_dom;
-}
-
 sub translate_to_html
 {
     my ($self, $args) = @_;
 
-    my $source_dom = $self->_get_dom_from_source($args);
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "dom")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
+    return $self->generic_translate($args);
 }
 
 =head1 AUTHOR

changeset:   84:d021f2e73791
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 24 15:24:54 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Started working on a base class for ToHTML and ToDocBook - RendererBase.


diff -r 45070e51122d -r d021f2e73791 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 24 14:40:34 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 24 15:24:54 2009 +0000
@@ -18,6 +18,7 @@
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
+lib/XML/Grammar/Fiction/RendererBase.pm
 lib/XML/Grammar/Fiction/Struct/Tag.pm
 lib/XML/Grammar/Fiction/ToDocBook.pm
 lib/XML/Grammar/Fiction/ToHTML.pm
diff -r 45070e51122d -r d021f2e73791 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/RendererBase.pm	Tue Nov 24 15:24:54 2009 +0000
@@ -0,0 +1,229 @@
+package XML::Grammar::Fiction::RendererBase;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Fiction::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Fiction::Base';
+
+use Moose;
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Fiction::RendererBase - base module for Fiction-XML-to-something
+renderers
+
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _get_default_data_dir
+{
+    my $self = shift;
+
+    return XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+}
+
+sub _get_rng_schema
+{
+    my $self = shift;
+
+    return
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                $self->_get_relaxng_base_path(),
+            ),
+        );
+}
+
+sub _get_stylesheet
+{
+    my $self = shift;
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                $self->_get_xslt_base_path(),
+            ),
+        );
+
+    return $xslt->parse_stylesheet($style_doc);
+}
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    $self->_data_dir($args->{'data_dir'} || $self->_get_default_data_dir());
+
+    $self->_rng($self->_get_rng_schema());
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    $self->_stylesheet($self->_get_stylesheet());
+
+    return 0;
+}
+
+=head2 translate_to_html
+
+=over 4
+
+=item * my $xhtml_source = $converter->translate_to_html({source => {file => $filename}, output => "string" })
+
+=item * my $xhtml_source = $converter->translate_to_html({source => {string_ref => \$buffer}, output => "string" })
+
+=item * my $xhtml_dom = $converter->translate_to_html({source => {file => $filename}, output => "dom" })
+
+=item * my $xhtml_dom = $converter->translate_to_html({source => {dom => $libxml_dom}, output => "dom" })
+
+=back
+
+Does the actual conversion. The C<'source'> argument points to a hash-ref with
+keys and values for the source. If C<'file'> is specified there it points to the
+filename to translate (currently the only available source). If 
+C<'string_ref'> is specified it points to a reference to a string, with the
+contents of the source XML. If C<'dom'> is specified then it points to an XML
+DOM as parsed or constructed by XML::LibXML.
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'dom'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub _undefize
+{
+    my $v = shift;
+
+    return defined($v) ? $v : "(undef)";
+}
+
+sub _calc_and_ret_dom_without_validate
+{
+    my $self = shift;
+    my $args = shift;
+
+    my $source = $args->{source};
+
+    return
+          exists($source->{'dom'})
+        ? $source->{'dom'}
+        : exists($source->{'string_ref'})
+        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
+        : $self->_xml_parser()->parse_file($source->{'file'})
+        ;
+}
+
+sub _get_dom_from_source
+{
+    my $self = shift;
+    my $args = shift;
+  
+    my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == "
+            . _undefize($ret_code) . " ; $@]"
+            ;
+    }
+
+    return $source_dom;
+}
+
+sub translate_to_html
+{
+    my ($self, $args) = @_;
+
+    my $source_dom = $self->_get_dom_from_source($args);
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "dom")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 45070e51122d -r d021f2e73791 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 14:40:34 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 15:24:54 2009 +0000
@@ -8,20 +8,13 @@
 
 use XML::LibXSLT;
 
-use XML::Grammar::Fiction::ConfigData;
 
 use XML::LibXML;
 use XML::LibXSLT;
 
-use base 'XML::Grammar::Fiction::Base';
-
 use Moose;
 
-
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+extends ("XML::Grammar::Fiction::RendererBase");
 
 =head1 NAME
 
@@ -46,40 +39,19 @@
 
 =cut
 
-sub _init
+sub _get_relaxng_base_path
 {
-    my ($self, $args) = @_;
+    my $self = shift;
 
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+    return "fiction-xml.rng";
+}
 
-    $self->_data_dir($data_dir);
 
-    my $rngschema =
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "fiction-xml.rng"
-            ),
-        );
+sub _get_xslt_base_path
+{
+    my $self = shift;
 
-    $self->_rng($rngschema);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "fiction-xml-to-html.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
+    return "fiction-xml-to-html.xslt";
 }
 
 =head2 translate_to_html

changeset:   83:45070e51122d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 24 14:40:34 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Add the 'dom' argument to 'source' (with a test).


diff -r 8bdc0ac9e1f5 -r 45070e51122d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Nov 22 15:11:37 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 24 14:40:34 2009 +0000
@@ -90,7 +90,9 @@
 
 =item * my $xhtml_source = $converter->translate_to_html({source => {string_ref => \$buffer}, output => "string" })
 
-=item * my $xhtml_dom = $converter->translate_to_html({source => {file => $filename}, output => "xml" })
+=item * my $xhtml_dom = $converter->translate_to_html({source => {file => $filename}, output => "dom" })
+
+=item * my $xhtml_dom = $converter->translate_to_html({source => {dom => $libxml_dom}, output => "dom" })
 
 =back
 
@@ -98,10 +100,11 @@
 keys and values for the source. If C<'file'> is specified there it points to the
 filename to translate (currently the only available source). If 
 C<'string_ref'> is specified it points to a reference to a string, with the
-contents of the source XML.
+contents of the source XML. If C<'dom'> is specified then it points to an XML
+DOM as parsed or constructed by XML::LibXML.
 
 The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
+the XML as a string, and a value of C<'dom'> returns the XML as an 
 L<XML::LibXML> DOM object.
 
 =cut
@@ -121,9 +124,11 @@
     my $source = $args->{source};
 
     return
-        exists($source->{'string_ref'})
-            ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
-            : $self->_xml_parser()->parse_file($source->{'file'})
+          exists($source->{'dom'})
+        ? $source->{'dom'}
+        : exists($source->{'string_ref'})
+        ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
+        : $self->_xml_parser()->parse_file($source->{'file'})
         ;
 }
 
@@ -171,7 +176,7 @@
     {
         return $stylesheet->output_string($results);
     }
-    elsif ($medium eq "xml")
+    elsif ($medium eq "dom")
     {
         return $results;
     }
diff -r 8bdc0ac9e1f5 -r 45070e51122d perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Sun Nov 22 15:11:37 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 24 14:40:34 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 32;
+use Test::More tests => 34;
 
 use File::Spec;
 
@@ -83,16 +83,34 @@
         if ($format_id eq "xhtml")
         {
             my $file_contents = load_xml($xml_fn);
-            my $from_string_text =
-                $format_hash->{'obj'}->$m(
-                {
-                    source => { string_ref => \$file_contents, },
-                    output => "string",
-                }
-            );
+            {
+                my $from_string_text =
+                    $format_hash->{'obj'}->$m(
+                    {
+                        source => { string_ref => \$file_contents, },
+                        output => "string",
+                    }
+                );
 
-            # TEST*$num_texts
-            is ($from_string_text, $text, "From-string-ref text is OK.")
+                # TEST*$num_texts
+                is ($from_string_text, $text, "From-string-ref text is OK.")
+            }
+
+            {
+                my $parser = XML::LibXML->new();
+                my $file_dom = $parser->parse_string($file_contents);
+
+                my $from_string_text =
+                    $format_hash->{'obj'}->$m(
+                    {
+                        source => { dom => $file_dom, },
+                        output => "string",
+                    }
+                );
+
+                # TEST*$num_texts
+                is ($from_string_text, $text, "From-dom text is OK.")
+            }
         }
         my $parser = XML::LibXML->new();
 

changeset:   82:8bdc0ac9e1f5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Nov 22 15:11:37 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
[Minor] Reformatted.


diff -r f80edd37916d -r 8bdc0ac9e1f5 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Sun Nov 22 09:40:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Sun Nov 22 15:11:37 2009 +0000
@@ -148,13 +148,13 @@
 
     eval {
         $got_xml = $grammar->convert(
-        {
-            source =>
             {
-                file => "t/data/proto-text-invalid/wrong-close-tag.txt",
-            },
-        }
-    );
+                source =>
+                {
+                    file => "t/data/proto-text-invalid/wrong-close-tag.txt",
+                },
+            }
+        );
     };
 
     my $err_proto = $@;

changeset:   81:f80edd37916d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sun Nov 22 09:40:16 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Add another source option in ToHTML - 'string_ref'.


diff -r 89cd42528e69 -r f80edd37916d perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Nov 21 23:00:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sun Nov 22 09:40:16 2009 +0000
@@ -82,10 +82,23 @@
     return 0;
 }
 
-=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
+=head2 translate_to_html
 
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
+=over 4
+
+=item * my $xhtml_source = $converter->translate_to_html({source => {file => $filename}, output => "string" })
+
+=item * my $xhtml_source = $converter->translate_to_html({source => {string_ref => \$buffer}, output => "string" })
+
+=item * my $xhtml_dom = $converter->translate_to_html({source => {file => $filename}, output => "xml" })
+
+=back
+
+Does the actual conversion. The C<'source'> argument points to a hash-ref with
+keys and values for the source. If C<'file'> is specified there it points to the
+filename to translate (currently the only available source). If 
+C<'string_ref'> is specified it points to a reference to a string, with the
+contents of the source XML.
 
 The C<'output'> key specifies the return value. A value of C<'string'> returns 
 the XML as a string, and a value of C<'xml'> returns the XML as an 
@@ -105,8 +118,12 @@
     my $self = shift;
     my $args = shift;
 
+    my $source = $args->{source};
+
     return
-        $self->_xml_parser()->parse_file($args->{source}->{file})
+        exists($source->{'string_ref'})
+            ? $self->_xml_parser()->parse_string(${$source->{'string_ref'}}) 
+            : $self->_xml_parser()->parse_file($source->{'file'})
         ;
 }
 
diff -r 89cd42528e69 -r f80edd37916d perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Sat Nov 21 23:00:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Sun Nov 22 09:40:16 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 30;
+use Test::More tests => 32;
 
 use File::Spec;
 
@@ -71,12 +71,29 @@
 
         my $format_hash = $converters{$format_id};
         my $m = $format_hash->{method};
+
+        my $xml_fn = "t/data/xml/$fn.xml";
+
         my $text = $format_hash->{'obj'}->$m(
             {
-                source => { file => "t/data/xml/$fn.xml", },
+                source => { file => $xml_fn, },
                 output => "string",
             }
         );
+        if ($format_id eq "xhtml")
+        {
+            my $file_contents = load_xml($xml_fn);
+            my $from_string_text =
+                $format_hash->{'obj'}->$m(
+                {
+                    source => { string_ref => \$file_contents, },
+                    output => "string",
+                }
+            );
+
+            # TEST*$num_texts
+            is ($from_string_text, $text, "From-string-ref text is OK.")
+        }
         my $parser = XML::LibXML->new();
 
         $parser->load_ext_dtd(0);

changeset:   80:89cd42528e69
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Nov 21 23:00:32 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Extracted a few methods from translate_to_html() in preparation for generality.


diff -r 72b72597293f -r 89cd42528e69 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Nov 21 22:49:18 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Sat Nov 21 23:00:32 2009 +0000
@@ -100,13 +100,22 @@
     return defined($v) ? $v : "(undef)";
 }
 
-sub translate_to_html
+sub _calc_and_ret_dom_without_validate
 {
-    my ($self, $args) = @_;
+    my $self = shift;
+    my $args = shift;
 
-    my $source_dom =
+    return
         $self->_xml_parser()->parse_file($args->{source}->{file})
         ;
+}
+
+sub _get_dom_from_source
+{
+    my $self = shift;
+    my $args = shift;
+  
+    my $source_dom = $self->_calc_and_ret_dom_without_validate($args);
 
     my $ret_code;
 
@@ -126,6 +135,15 @@
             ;
     }
 
+    return $source_dom;
+}
+
+sub translate_to_html
+{
+    my ($self, $args) = @_;
+
+    my $source_dom = $self->_get_dom_from_source($args);
+
     my $stylesheet = $self->_stylesheet();
 
     my $results = $stylesheet->transform($source_dom);

changeset:   79:72b72597293f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Sat Nov 21 22:49:18 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/process-screenplay.pl perl/modules/XML-Grammar-Fiction/rejects/process-screenplay.pl
description:
Moved an old script to the rejects.


diff -r d16952882357 -r 72b72597293f perl/modules/XML-Grammar-Fiction/process-screenplay.pl
--- a/perl/modules/XML-Grammar-Fiction/process-screenplay.pl	Mon Nov 16 17:09:35 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,43 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use XML::Grammar::Screenplay::FromProto;
-use Getopt::Long;
-use Carp;
-
-# local $::RD_TRACE = 1;
-
-my $output_fn;
-
-GetOptions(
-    "output|o=s" => \$output_fn,
-);
-
-my $filename = shift(@ARGV);
-
-my $grammar = XML::Grammar::Screenplay::FromProto->new();
-
-my $got_xml = $grammar->convert(
-    {
-        source =>
-        {
-            file => $filename,
-        },
-    }
-
-);
-
-if (defined($output_fn))
-{
-    open my $out, ">", $output_fn
-        or confess "Cannot open file \"$output_fn\" for writing!";
-    print {$out} $got_xml;
-    close($out)
-}
-else
-{
-    print $got_xml;
-}
-
diff -r d16952882357 -r 72b72597293f perl/modules/XML-Grammar-Fiction/rejects/process-screenplay.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/process-screenplay.pl	Sat Nov 21 22:49:18 2009 +0000
@@ -0,0 +1,43 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use XML::Grammar::Screenplay::FromProto;
+use Getopt::Long;
+use Carp;
+
+# local $::RD_TRACE = 1;
+
+my $output_fn;
+
+GetOptions(
+    "output|o=s" => \$output_fn,
+);
+
+my $filename = shift(@ARGV);
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new();
+
+my $got_xml = $grammar->convert(
+    {
+        source =>
+        {
+            file => $filename,
+        },
+    }
+
+);
+
+if (defined($output_fn))
+{
+    open my $out, ">", $output_fn
+        or die "Cannot open file \"$output_fn\" for writing - $!!";
+    print {$out} $got_xml;
+    close($out)
+}
+else
+{
+    print $got_xml;
+}
+

changeset:   78:d16952882357
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Nov 16 17:09:35 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Now checking for leading whitespace and erroring.


diff -r 0f98d449c40b -r d16952882357 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Nov 16 16:15:13 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Nov 16 17:09:35 2009 +0000
@@ -34,6 +34,7 @@
 t/data/docbook/with-internal-description.docbook.xml
 t/data/proto-text/dialogue-with-several-paragraphs.txt
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/data/proto-text-invalid/leading-space.txt
 t/data/proto-text-invalid/no-right-angle.txt
 t/data/proto-text-invalid/not-start-with-tag.txt
 t/data/proto-text-invalid/wrong-close-tag.txt
diff -r 0f98d449c40b -r d16952882357 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Nov 16 16:15:13 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Mon Nov 16 17:09:35 2009 +0000
@@ -30,6 +30,10 @@
             isa => "XML::Grammar::Fiction::Err::Base",
             fields => [qw(line)],
         },
+        "XML::Grammar::Fiction::Err::Parse::LeadingSpace" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Parse::LineError",
+        },        
         "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag" =>
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
diff -r 0f98d449c40b -r d16952882357 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 16:15:13 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 17:09:35 2009 +0000
@@ -69,6 +69,19 @@
     return $self->_curr_line_ref();
 }
 
+sub _check_if_line_starts_with_whitespace
+{
+    my $self = shift;
+
+    if (${$self->_curr_line_ref()} =~ m{\A[ \t]})
+    {
+        XML::Grammar::Fiction::Err::Parse::LeadingSpace->throw(
+            error => "Leading space detected in the text.",
+            'line' => $self->_get_line_num(),
+        );
+    }
+}
+
 sub _init
 {
     my $self = shift;
@@ -88,7 +101,7 @@
 {
     my $self = shift;
 
-    $self->_consume(qr{\s});
+    $self->_consume(qr{[ \t]});
 }
 
 my $id_regex = '[a-zA-Z_\-]+';
@@ -309,42 +322,33 @@
 
     my $l = $self->_curr_line_ref();
 
-    if (pos($$l) < length($$l))
+    my $text = $self->_consume_up_to(qr{(?:\<|^\n?$)}ms);
+
+    $l = $self->_curr_line_ref();
+
+    my $ret_elem = $self->_new_text([$text]);
+    my $is_para_end = 0;
+
+    # Demote the cursor to before the < of the tag.
+    #
+    if (pos($$l) > 0)
     {
-        my $text = $self->_consume_up_to(qr{(?:\<|^\n?$)}ms);
-
-        $l = $self->_curr_line_ref();
-
-        my $ret_elem = $self->_new_text([$text]);
-        my $is_para_end = 0;
-
-        # Demote the cursor to before the < of the tag.
-        #
-        if (pos($$l) > 0)
-        {
-            pos($$l)--;
-            if (substr($$l, pos($$l), 1) eq "\n")
-            {
-                $is_para_end = 1;
-            }
-        }
-        else
+        pos($$l)--;
+        if (substr($$l, pos($$l), 1) eq "\n")
         {
             $is_para_end = 1;
         }
-
-        return
-        {
-            elem => $ret_elem,
-            para_end => $is_para_end,
-        };
     }
     else
     {
-        Carp::confess ("Line " . $self->_get_line_num() . 
-            " has leading whitespace."
-            );
+        $is_para_end = 1;
     }
+
+    return
+    {
+        elem => $ret_elem,
+        para_end => $is_para_end,
+    };
 }
 
 sub _parse_text_unit
@@ -485,6 +489,7 @@
     continue
     {
         $l = $self->_next_line_ref();
+        $self->_check_if_line_starts_with_whitespace();
     }
 
     if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
@@ -518,6 +523,7 @@
     continue
     {
         $l = $self->_next_line_ref();
+        $self->_check_if_line_starts_with_whitespace();
     }
 
     return $return_value;
diff -r 0f98d449c40b -r d16952882357 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/leading-space.txt	Mon Nov 16 17:09:35 2009 +0000
@@ -0,0 +1,25 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will". You shall
+    feel my wrath!
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+</s>
+
+</s>
+
+</body>
+
diff -r 0f98d449c40b -r d16952882357 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Mon Nov 16 16:15:13 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Mon Nov 16 17:09:35 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 20;
+use Test::More tests => 23;
 
 use XML::LibXML;
 
@@ -239,4 +239,44 @@
     );
 }
 
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text-invalid/leading-space.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::LeadingSpace"
+    );
+
+    # TEST
+    ok ($err, "LeadingSpace was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ALeading space},
+        "Cannot match closing tag."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        12,
+        "Line is 1 as expected."
+    );
+}
+
 1;

changeset:   77:0f98d449c40b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Nov 16 16:15:13 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Moved an unused function to the rejects.


diff -r 1a6224be4006 -r 0f98d449c40b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 16:03:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 16:15:13 2009 +0000
@@ -302,83 +302,6 @@
     return ($which_tag, $text);
 }
 
-sub _parse_inner_text
-{
-    my $self = shift;
-
-    my @contents;
-
-    my $start_line = $self->_curr_line_idx();
-
-    my $curr_text = "";
-
-    CONTENTS_LOOP:
-    while ($self->_curr_line() ne "\n")
-    {
-        my ($which_tag, $text_to_append) = $self->_find_next_inner_text();
-
-        $curr_text .= $text_to_append;
-
-        push @contents, $curr_text;
-
-        $curr_text = "";
-
-        if (!defined($which_tag))
-        {
-            # Do nothing - a tag was not detected.
-        }
-        else
-        {
-            if ($which_tag eq "open_tag")
-            {
-                push @contents, $self->_parse_inner_tag();
-
-                # Avoid skipping to the next line.
-                # Gotta love teh Perl!
-                redo CONTENTS_LOOP;
-            }
-            elsif ($which_tag eq "close")
-            {
-                last CONTENTS_LOOP;
-            }
-            elsif ($which_tag eq "entity")
-            {
-                my $l = $self->_curr_line_ref();
-
-                if (my ($text) = ($$l =~ m{\G(\&\w+;)}g))
-                {
-                    push @contents, HTML::Entities::decode_entities($text);
-                }
-                else
-                {
-                    Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
-                        $self->_get_line_num()
-                    );
-                }
-
-                redo CONTENTS_LOOP;
-            }
-        }
-    }
-    continue
-    {
-        if (!defined(${$self->_next_line_ref()}))
-        {
-            Carp::confess 
-            (
-                "End of file in an addressing paragraph starting at "
-                . ($start_line+1)
-            );
-        }
-    }
-
-    if (length($curr_text) > 0)
-    {
-        push @contents, $curr_text;
-    }
-
-    return \@contents;
-}
 
 sub _parse_non_tag_text_unit
 {
diff -r 1a6224be4006 -r 0f98d449c40b perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Mon Nov 16 16:03:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Mon Nov 16 16:15:13 2009 +0000
@@ -175,3 +175,81 @@
     return $self->_create_elem($open);
 }
 
+sub _parse_inner_text
+{
+    my $self = shift;
+
+    my @contents;
+
+    my $start_line = $self->_curr_line_idx();
+
+    my $curr_text = "";
+
+    CONTENTS_LOOP:
+    while ($self->_curr_line() ne "\n")
+    {
+        my ($which_tag, $text_to_append) = $self->_find_next_inner_text();
+
+        $curr_text .= $text_to_append;
+
+        push @contents, $curr_text;
+
+        $curr_text = "";
+
+        if (!defined($which_tag))
+        {
+            # Do nothing - a tag was not detected.
+        }
+        else
+        {
+            if ($which_tag eq "open_tag")
+            {
+                push @contents, $self->_parse_inner_tag();
+
+                # Avoid skipping to the next line.
+                # Gotta love teh Perl!
+                redo CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "close")
+            {
+                last CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "entity")
+            {
+                my $l = $self->_curr_line_ref();
+
+                if (my ($text) = ($$l =~ m{\G(\&\w+;)}g))
+                {
+                    push @contents, HTML::Entities::decode_entities($text);
+                }
+                else
+                {
+                    Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                        $self->_get_line_num()
+                    );
+                }
+
+                redo CONTENTS_LOOP;
+            }
+        }
+    }
+    continue
+    {
+        if (!defined(${$self->_next_line_ref()}))
+        {
+            Carp::confess 
+            (
+                "End of file in an addressing paragraph starting at "
+                . ($start_line+1)
+            );
+        }
+    }
+
+    if (length($curr_text) > 0)
+    {
+        push @contents, $curr_text;
+    }
+
+    return \@contents;
+}
+

changeset:   76:1a6224be4006
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Nov 16 16:03:36 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-closing-inner-tag.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Now checking for an error thrown on inline tags.

Moved some inaccessible code to the rejects.


diff -r 5c272186674c -r 1a6224be4006 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Nov 16 14:26:31 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Mon Nov 16 16:03:36 2009 +0000
@@ -37,6 +37,7 @@
 t/data/proto-text-invalid/no-right-angle.txt
 t/data/proto-text-invalid/not-start-with-tag.txt
 t/data/proto-text-invalid/wrong-close-tag.txt
+t/data/proto-text-invalid/wrong-closing-inner-tag.txt
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
 t/data/proto-text/sections-and-paras.txt
diff -r 5c272186674c -r 1a6224be4006 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 14:26:31 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 16:03:36 2009 +0000
@@ -80,7 +80,7 @@
 {
     my $self = shift;
 
-    return $self->_parse_top_level_tag();
+    return $self->_parse_tag();
 }
 
 # Skip the whitespace.
@@ -271,44 +271,6 @@
     return $self->_new_list(\@ret);
 }
 
-sub _consume_paragraph
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    return $self->_parse_inner_text();
-}
-
-sub _parse_inner_tag
-{
-    my $self = shift;
-
-    my $open = $self->_parse_opening_tag();
-
-    if ($open->is_standalone())
-    {
-        $self->_skip_space();
-
-        return $self->_create_elem($open);
-    }
-
-    my $inside = $self->_parse_inner_text();
-
-    my $close = $self->_parse_closing_tag();
-
-    if ($open->name() ne $close->name())
-    {
-        Carp::confess(
-            sprintf(("Opening and closing tags do not match: "
-                . "%s and %s on element starting at line %d"),
-                $open->name(), $close->name(), $open->line()
-            )
-        );
-    }
-    return $self->_create_elem($open);
-}
-
 sub _find_next_inner_text
 {
     my $self = shift;
@@ -488,7 +450,7 @@
         }
         else
         {
-            return $self->_parse_top_level_tag();
+            return $self->_parse_tag();
         }
     }
     else
@@ -549,7 +511,7 @@
     return $$l =~ m{\G$re}cg;
 }
 
-sub _parse_top_level_tag
+sub _parse_tag
 {
     my $self = shift;
 
diff -r 5c272186674c -r 1a6224be4006 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Mon Nov 16 14:26:31 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Mon Nov 16 16:03:36 2009 +0000
@@ -146,3 +146,32 @@
     });
 }
 
+sub _parse_inner_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    if ($open->is_standalone())
+    {
+        $self->_skip_space();
+
+        return $self->_create_elem($open);
+    }
+
+    my $inside = $self->_parse_inner_text();
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->name() ne $close->name())
+    {
+        XML::Grammar::Fiction::Err::Parse::InnerTagsMismatch->throw(
+            error => "Inline tags do not match",
+            opening_tag => $open,
+            closing_tag => $close,
+        );
+    }
+
+    return $self->_create_elem($open);
+}
+
diff -r 5c272186674c -r 1a6224be4006 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-closing-inner-tag.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-closing-inner-tag.txt	Mon Nov 16 16:03:36 2009 +0000
@@ -0,0 +1,24 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</i> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+</s>
+
+</s>
+
+</body>
+
diff -r 5c272186674c -r 1a6224be4006 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Mon Nov 16 14:26:31 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Mon Nov 16 16:03:36 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 14;
+use Test::More tests => 20;
 
 use XML::LibXML;
 
@@ -181,4 +181,62 @@
     );
 }
 
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+    eval {
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text-invalid/wrong-closing-inner-tag.txt",
+            },
+        }
+    );
+    };
+
+    my $err_raw = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
+    );
+
+    # TEST
+    ok ($err, "TagsMismatch was caught");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ATags do not match},
+        "Text is OK."
+    );
+
+    # TEST
+    is(
+        $err->opening_tag()->name(),
+        "b",
+        "Opening tag-name is OK.",
+    );
+
+    # TEST
+    is(
+        $err->opening_tag()->line(),
+        11,
+        "Opening line is OK.",
+    );
+
+    # TEST
+    is(
+        $err->closing_tag()->name(),
+        "i",
+        "closing tag.",
+    );
+
+    # TEST
+    is(
+        $err->closing_tag()->line(),
+        11,
+        "Opening line is OK.",
+    );
+}
+
 1;

changeset:   75:5c272186674c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Nov 16 14:26:31 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Convert some $open and $close code to use accessors.

This is as a pre-cursor to converting to an exception class.


diff -r 79e371630692 -r 5c272186674c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 14:19:03 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Mon Nov 16 14:26:31 2009 +0000
@@ -297,11 +297,13 @@
 
     my $close = $self->_parse_closing_tag();
 
-    if ($open->{name} ne $close->{name})
+    if ($open->name() ne $close->name())
     {
-        Carp::confess("Opening and closing tags do not match: " 
-            . "$open->{name} and $close->{name} on element starting at "
-            . "line $open->{line}"
+        Carp::confess(
+            sprintf(("Opening and closing tags do not match: "
+                . "%s and %s on element starting at line %d"),
+                $open->name(), $close->name(), $open->line()
+            )
         );
     }
     return $self->_create_elem($open);

changeset:   74:79e371630692
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Mon Nov 16 14:19:03 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/app-to-html.t
description:
Got rid of the skip_all in t/app-to-html.t and made the tests pass.


diff -r e481a999d22a -r 79e371630692 perl/modules/XML-Grammar-Fiction/t/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Fri Nov 13 20:49:18 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Mon Nov 16 14:19:03 2009 +0000
@@ -3,8 +3,7 @@
 use strict;
 use warnings;
 
-# use Test::More tests => 1;
-use Test::More skip_all => "Not working in XML-Grammar-Fiction now";
+use Test::More tests => 1;
 use File::Spec;
 
 use Config;
@@ -27,7 +26,7 @@
             "--",
             "-o", "temp.xhtml",
             File::Spec->catdir(File::Spec->curdir(), 
-                "t", "data", "xml", "nested-s.xml"
+                "t", "data", "xml", "sections-and-paras.xml",
             )
         ),
         "Testing App::ToHTML",

changeset:   73:e481a999d22a
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 13 20:49:18 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-close-tag.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Convert another Carp::confess to ->throw().


diff -r f001d03d65b5 -r e481a999d22a perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Nov 13 19:37:34 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Nov 13 20:49:18 2009 +0000
@@ -36,6 +36,7 @@
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/data/proto-text-invalid/no-right-angle.txt
 t/data/proto-text-invalid/not-start-with-tag.txt
+t/data/proto-text-invalid/wrong-close-tag.txt
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
 t/data/proto-text/sections-and-paras.txt
diff -r f001d03d65b5 -r e481a999d22a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 19:37:34 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 20:49:18 2009 +0000
@@ -38,6 +38,10 @@
         {
             isa => "XML::Grammar::Fiction::Err::Parse::LineError",
         },
+        "XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Parse::LineError",
+        },
     )
     ;
 1;
diff -r f001d03d65b5 -r e481a999d22a perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 13 19:37:34 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 13 20:49:18 2009 +0000
@@ -240,7 +240,10 @@
 
     if ($$l !~ m{\G</($id_regex)>}g)
     {
-        Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
+        XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax->throw(
+            error => "Cannot match closing tag",
+            line => $self->_get_line_num(),
+        );
     }
 
     return XML::Grammar::Fiction::Struct::Tag->new(
diff -r f001d03d65b5 -r e481a999d22a perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-close-tag.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/wrong-close-tag.txt	Fri Nov 13 20:49:18 2009 +0000
@@ -0,0 +1,3 @@
+<start id="top">
+
+</]^%^$%$5$]>
diff -r f001d03d65b5 -r e481a999d22a perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Fri Nov 13 19:37:34 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Fri Nov 13 20:49:18 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 11;
+use Test::More tests => 14;
 
 use XML::LibXML;
 
@@ -141,5 +141,44 @@
     );
 }
 
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text-invalid/wrong-close-tag.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::WrongClosingTagSyntax"
+    );
+
+    # TEST
+    ok ($err, "WrongClosingTagSyntax was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ACannot match closing tag},
+        "Cannot match closing tag."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        3,
+        "Line is 1 as expected."
+    );
+}
 
 1;

changeset:   72:f001d03d65b5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 13 19:37:34 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
description:
Created a ::LineError base class.


diff -r b57ef62bc58c -r f001d03d65b5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 19:31:55 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 19:37:34 2009 +0000
@@ -25,17 +25,19 @@
             isa => "XML::Grammar::Fiction::Err::Base", 
             fields => [qw(opening_tag closing_tag)],
         },
-        "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag" =>
+        "XML::Grammar::Fiction::Err::Parse::LineError" =>
         {
             isa => "XML::Grammar::Fiction::Err::Base",
             fields => [qw(line)],
         },
-        # TODO : Merge with XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag
+        "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Parse::LineError",
+        },
         "XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket" =>
         {
-            isa => "XML::Grammar::Fiction::Err::Base",
-            fields => [qw(line)],
-        }
+            isa => "XML::Grammar::Fiction::Err::Parse::LineError",
+        },
     )
     ;
 1;

changeset:   71:b57ef62bc58c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 13 19:31:55 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/no-right-angle.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Convert another Carp::confess to ->throw.


diff -r bd83516b8a64 -r b57ef62bc58c perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Nov 13 19:10:50 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Nov 13 19:31:55 2009 +0000
@@ -34,6 +34,7 @@
 t/data/docbook/with-internal-description.docbook.xml
 t/data/proto-text/dialogue-with-several-paragraphs.txt
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/data/proto-text-invalid/no-right-angle.txt
 t/data/proto-text-invalid/not-start-with-tag.txt
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
diff -r bd83516b8a64 -r b57ef62bc58c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 19:10:50 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 19:31:55 2009 +0000
@@ -30,6 +30,12 @@
             isa => "XML::Grammar::Fiction::Err::Base",
             fields => [qw(line)],
         },
+        # TODO : Merge with XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag
+        "XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Base",
+            fields => [qw(line)],
+        }
     )
     ;
 1;
diff -r bd83516b8a64 -r b57ef62bc58c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 13 19:10:50 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 13 19:31:55 2009 +0000
@@ -211,9 +211,9 @@
     }
     elsif ($$l !~ m{\G>}g)
     {
-        Carp::confess (
-            "Cannot match the \">\" of the opening tag at line " 
-                . $self->_get_line_num()
+        XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket->throw(
+            error => "Cannot match the \">\" of the opening tag",
+            'line' => $self->_get_line_num(),
         );
     }
     
diff -r bd83516b8a64 -r b57ef62bc58c perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/no-right-angle.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/no-right-angle.txt	Fri Nov 13 19:31:55 2009 +0000
@@ -0,0 +1,3 @@
+<start id="top" foo="bar"
+
+</start>
diff -r bd83516b8a64 -r b57ef62bc58c perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Fri Nov 13 19:10:50 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Fri Nov 13 19:31:55 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 8;
+use Test::More tests => 11;
 
 use XML::LibXML;
 
@@ -100,4 +100,46 @@
     );
 }
 
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text-invalid/no-right-angle.txt",
+            },
+        }
+    );
+    };
+
+    my $err_proto = $@;
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::NoRightAngleBracket"
+    );
+
+    # TEST
+    ok ($err, "NoRightAngleBracket was matched.");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ACannot match the \">\" of the opening tag},
+        "Text is OK."
+    );
+
+    # TEST
+    is (
+        $err->line(),
+        1,
+        "Line is 1 as expected."
+    );
+}
+
+
 1;

changeset:   70:bd83516b8a64
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Fri Nov 13 19:10:50 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/not-start-with-tag.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Now throwing another exception.


diff -r 0b6b5fc3f733 -r bd83516b8a64 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 18:07:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Fri Nov 13 19:10:50 2009 +0000
@@ -34,6 +34,7 @@
 t/data/docbook/with-internal-description.docbook.xml
 t/data/proto-text/dialogue-with-several-paragraphs.txt
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/data/proto-text-invalid/not-start-with-tag.txt
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
 t/data/proto-text/sections-and-paras.txt
diff -r 0b6b5fc3f733 -r bd83516b8a64 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Thu Nov 12 18:07:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Fri Nov 13 19:10:50 2009 +0000
@@ -21,9 +21,15 @@
     (
         "XML::Grammar::Fiction::Err::Base",
         "XML::Grammar::Fiction::Err::Parse::TagsMismatch" =>
-        { isa => "XML::Grammar::Fiction::Err::Base", 
+        {
+            isa => "XML::Grammar::Fiction::Err::Base", 
             fields => [qw(opening_tag closing_tag)],
         },
+        "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag" =>
+        {
+            isa => "XML::Grammar::Fiction::Err::Base",
+            fields => [qw(line)],
+        },
     )
     ;
 1;
diff -r 0b6b5fc3f733 -r bd83516b8a64 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 18:07:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Fri Nov 13 19:10:50 2009 +0000
@@ -194,8 +194,11 @@
 
     if ($$l !~ m{\G<($id_regex)}cg)
     {
-        print "Before : " . substr($$l, 0, $p) . "\n";
-        Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
+        # print "Before : " . substr($$l, 0, $p) . "\n";
+        XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag->throw(
+            error => "Cannot match opening tag.",
+            'line' => $self->_get_line_num(),
+        );
     }
     my $id = $1;
 
diff -r 0b6b5fc3f733 -r bd83516b8a64 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/not-start-with-tag.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/not-start-with-tag.txt	Fri Nov 13 19:10:50 2009 +0000
@@ -0,0 +1,1 @@
+[FOOADASMCa#$#$#F#F#]
diff -r 0b6b5fc3f733 -r bd83516b8a64 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 18:07:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Fri Nov 13 19:10:50 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 6;
+use Test::More tests => 8;
 
 use XML::LibXML;
 
@@ -12,9 +12,9 @@
 use XML::Grammar::Fiction::FromProto;
 use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
-my $grammar = XML::Grammar::Fiction::FromProto->new({});
 
 {
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
     eval {
     my $got_xml = $grammar->convert(
         {
@@ -68,4 +68,36 @@
         "Opening line is OK.",
     );
 }
+
+{
+    my $grammar = XML::Grammar::Fiction::FromProto->new({});
+
+    my $got_xml;
+
+    eval {
+        $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text-invalid/not-start-with-tag.txt",
+            },
+        }
+    );
+    };
+
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::CannotMatchOpeningTag"
+    );
+
+    # TEST
+    ok ($err, "CannotMatchOpeningTag was caught");
+
+    # TEST
+    like(
+        $err->error(),
+        qr{\ACannot match opening tag.},
+        "Text is OK."
+    );
+}
+
 1;

changeset:   69:0b6b5fc3f733
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 18:07:41 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Converted the test script to a block.


diff -r 75a0547d09f6 -r 0b6b5fc3f733 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 17:30:00 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 18:07:41 2009 +0000
@@ -14,57 +14,58 @@
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({});
 
-eval {
-my $got_xml = $grammar->convert(
-    {
-        source =>
+{
+    eval {
+    my $got_xml = $grammar->convert(
         {
-            file => "t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
-        },
-    }
-);
-};
+            source =>
+            {
+                file => "t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
+            },
+        }
+    );
+    };
 
-my $err = Exception::Class->caught(
-    "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
-);
+    my $err = Exception::Class->caught(
+        "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
+    );
 
-# TEST
-ok ($err, "TagsMismatch was caught");
+    # TEST
+    ok ($err, "TagsMismatch was caught");
 
-# TEST
-like(
-    $err->error(),
-    qr{\ATags do not match},
-    "Text is OK."
-);
+    # TEST
+    like(
+        $err->error(),
+        qr{\ATags do not match},
+        "Text is OK."
+    );
 
-# TEST
-is(
-    $err->opening_tag()->name(),
-    "start",
-    "Opening tag-name is OK.",
-);
+    # TEST
+    is(
+        $err->opening_tag()->name(),
+        "start",
+        "Opening tag-name is OK.",
+    );
 
-# TEST
-is(
-    $err->opening_tag()->line(),
-    1,
-    "Opening line is OK.",
-);
+    # TEST
+    is(
+        $err->opening_tag()->line(),
+        1,
+        "Opening line is OK.",
+    );
 
-# TEST
-is(
-    $err->closing_tag()->name(),
-    "wrong-finish-tag",
-    "Opening tag-name is OK.",
-);
+    # TEST
+    is(
+        $err->closing_tag()->name(),
+        "wrong-finish-tag",
+        "Opening tag-name is OK.",
+    );
 
-# TEST
-is(
-    $err->closing_tag()->line(),
-    3,
-    "Opening line is OK.",
-);
-
+    # TEST
+    is(
+        $err->closing_tag()->line(),
+        3,
+        "Opening line is OK.",
+    );
+}
 1;

changeset:   68:75a0547d09f6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 17:30:00 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Add a dependency - Exception::Class.


diff -r bf1db1e5f0e9 -r 75a0547d09f6 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Thu Nov 12 12:58:28 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Thu Nov 12 17:30:00 2009 +0000
@@ -25,6 +25,7 @@
     {
         'Carp' => 0,
         'Data::Dumper' => 0,
+        'Exception::Class' => 0,
         'Getopt::Long' => 0,
         'HTML::Entities' => 0,
         'List::Util' => 0,

changeset:   67:bf1db1e5f0e9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 12:58:28 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Removed an unused function from a text file.


diff -r 742557750d97 -r bf1db1e5f0e9 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 12:54:17 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 12:58:28 2009 +0000
@@ -12,20 +12,6 @@
 use XML::Grammar::Fiction::FromProto;
 use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
 my $grammar = XML::Grammar::Fiction::FromProto->new({});
 
 eval {

changeset:   66:742557750d97
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 12:54:17 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted _parse_opening_tag_attrs .


diff -r fda90b1e6e1f -r 742557750d97 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:46:28 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:54:17 2009 +0000
@@ -170,6 +170,22 @@
     );
 }
 
+sub _parse_opening_tag_attrs
+{
+    my $self = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    my @attrs;
+
+    while (my ($name, $val) = $$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $name, 'value' => $val, };
+    }
+
+    return \@attrs;
+}
+
 sub _parse_opening_tag
 {
     my $self = shift;
@@ -183,12 +199,7 @@
     }
     my $id = $1;
 
-    my @attrs;
-
-    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-    {
-        push @attrs, { 'key' => $1, 'value' => $2, };
-    }
+    my $attrs = $self->_parse_opening_tag_attrs();
 
     my $is_standalone = 0;
     if ($$l =~ m{\G\s*/\s*>}cg)
@@ -207,7 +218,7 @@
         name => $id,
         is_standalone => $is_standalone,
         line => $self->_get_line_num(),
-        attrs => \@attrs,
+        attrs => $attrs,
     );
 }
 

changeset:   65:fda90b1e6e1f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 12:46:28 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Converted direct hash-ref's to accessors.


diff -r f05aeae22cc1 -r fda90b1e6e1f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:44:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:46:28 2009 +0000
@@ -118,9 +118,9 @@
         $self->_new_node(
             {
                 t => "Element",
-                name => $open->{name},
+                name => $open->name(),
                 children => $children,
-                attrs => $open->{attrs},
+                attrs => $open->attrs(),
             }
         );
 }

changeset:   64:f05aeae22cc1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 12:44:32 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Converted a direct hash-ref access to an accessor.


diff -r d536d5c1d6f9 -r f05aeae22cc1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:09:02 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:44:32 2009 +0000
@@ -269,7 +269,7 @@
 
     my $open = $self->_parse_opening_tag();
 
-    if ($open->{is_standalone})
+    if ($open->is_standalone())
     {
         $self->_skip_space();
 

changeset:   63:d536d5c1d6f9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 12:09:02 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
description:
Extracted the ::Struct::Tag class from the place it was used.


diff -r 9af70cd24f96 -r d536d5c1d6f9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 11:53:52 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 12:09:02 2009 +0000
@@ -203,13 +203,12 @@
         );
     }
     
-    return
-    {
+    return XML::Grammar::Fiction::Struct::Tag->new(
         name => $id,
         is_standalone => $is_standalone,
         line => $self->_get_line_num(),
         attrs => \@attrs,
-    };
+    );
 }
 
 sub _get_line_num
@@ -230,11 +229,10 @@
         Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
     }
 
-    return
-    {
+    return XML::Grammar::Fiction::Struct::Tag->new(
         name => $1,
         line => $self->_get_line_num(),
-    };
+    )
 }
 
 sub _parse_text
@@ -557,18 +555,12 @@
 
     $self->_skip_space();
 
-    if ($open->{name} ne $close->{name})
+    if ($open->name() ne $close->name())
     {
         XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
             error => "Tags do not match",
-            opening_tag => XML::Grammar::Fiction::Struct::Tag->new(
-                name => $open->{name},
-                line => $open->{line},
-            ),
-            closing_tag => XML::Grammar::Fiction::Struct::Tag->new(
-                name => $close->{name},
-                line => $close->{line},
-            ),
+            opening_tag => $open,
+            closing_tag => $close,
         );
     }
 
diff -r 9af70cd24f96 -r d536d5c1d6f9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Nov 12 11:53:52 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Nov 12 12:09:02 2009 +0000
@@ -23,6 +23,8 @@
 
 has 'name' => (is => "rw", isa => "Str");
 has 'line' => (is => "rw", isa => "Int");
+has 'is_standalone' => (is => "rw", isa => "Bool");
+has 'attrs' => (is => "rw", isa => "ArrayRef");
 
 =head1 METHODS
 
@@ -34,6 +36,14 @@
 
 The tag's line number.
 
+=head2 $self->is_standalone()
+
+Determines whether it's a standalone tag or not. (if it's an opening tag).
+
+=head2 $self->attrs()
+
+The attributes of the opening tag in an array.
+
 =head1 AUTHOR
 
 Shlomi Fish, L<http://www.shlomifish.org/>.

changeset:   62:9af70cd24f96
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 11:53:52 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
description:
Extracted the Struct/Tag.pm module with documentation.


diff -r 7fa92685966d -r 9af70cd24f96 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 11:39:49 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 11:53:52 2009 +0000
@@ -18,6 +18,7 @@
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
+lib/XML/Grammar/Fiction/Struct/Tag.pm
 lib/XML/Grammar/Fiction/ToDocBook.pm
 lib/XML/Grammar/Fiction/ToHTML.pm
 Makefile.PL
diff -r 7fa92685966d -r 9af70cd24f96 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 11:39:49 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 11:53:52 2009 +0000
@@ -12,6 +12,7 @@
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
+use XML::Grammar::Fiction::Struct::Tag;
 use XML::Grammar::Fiction::Err;
 
 =head1 NAME
@@ -682,12 +683,5 @@
 
 =cut
 
-package XML::Grammar::Fiction::Struct::Tag;
-
-use Moose;
-
-has 'name' => (is => "rw", isa => "Str");
-has 'line' => (is => "rw", isa => "Int");
-
 1;
 
diff -r 7fa92685966d -r 9af70cd24f96 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Struct/Tag.pm	Thu Nov 12 11:53:52 2009 +0000
@@ -0,0 +1,60 @@
+package XML::Grammar::Fiction::Struct::Tag;
+
+use strict;
+use warnings;
+
+use Moose;
+
+
+=head1 NAME
+
+XML::Grammar::Fiction::Struct::Tag - information about an XML/SGML opening or 
+closing tag.
+
+B<For internal use only>.
+
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
+has 'name' => (is => "rw", isa => "Str");
+has 'line' => (is => "rw", isa => "Int");
+
+=head1 METHODS
+
+=head2 $self->name()
+
+The tag's name.
+
+=head2 $self->line()
+
+The tag's line number.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+

changeset:   61:7fa92685966d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 11:39:49 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Add more assertions to test for the error class.


diff -r 8093828356ce -r 7fa92685966d perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 11:30:23 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 11:39:49 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 4;
+use Test::More tests => 6;
 
 use XML::LibXML;
 
@@ -67,4 +67,18 @@
     "Opening line is OK.",
 );
 
+# TEST
+is(
+    $err->closing_tag()->name(),
+    "wrong-finish-tag",
+    "Opening tag-name is OK.",
+);
+
+# TEST
+is(
+    $err->closing_tag()->line(),
+    3,
+    "Opening line is OK.",
+);
+
 1;

changeset:   60:8093828356ce
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 11:30:23 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Converted a thrown exception to XML-Grammar-Fiction-Err.

XML-Grammar-Fiction-Err is based on Exception-Class.


diff -r bb7027f9498c -r 8093828356ce perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 07:32:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 11:30:23 2009 +0000
@@ -12,6 +12,7 @@
 lib/XML/Grammar/Fiction/App/ToDocBook.pm
 lib/XML/Grammar/Fiction/App/ToHTML.pm
 lib/XML/Grammar/Fiction/Base.pm
+lib/XML/Grammar/Fiction/Err.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
diff -r bb7027f9498c -r 8093828356ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Err.pm	Thu Nov 12 11:30:23 2009 +0000
@@ -0,0 +1,92 @@
+package XML::Grammar::Fiction::Err;
+
+use strict;
+use warnings;
+
+
+=head1 NAME
+
+XML::Grammar::Fiction::Err - Exception::Class-based exceptions used by
+XML::Grammar::Fiction
+
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
+use Exception::Class
+    (
+        "XML::Grammar::Fiction::Err::Base",
+        "XML::Grammar::Fiction::Err::Parse::TagsMismatch" =>
+        { isa => "XML::Grammar::Fiction::Err::Base", 
+            fields => [qw(opening_tag closing_tag)],
+        },
+    )
+    ;
+1;
+
+=head1 SYNOPSIS
+
+    use XML::Grammar::Fiction::Err;
+
+    .
+    .
+    .
+    XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+        error => "Tags mismatch",
+        opening_tag => Tag->new(...),
+        closing_tag => Tag->new(...),
+    );
+
+=head1 DESCRIPTION
+
+These are exceptions for L<XML::Grammar::Fiction> based on L<Exception::Class>
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright (c) 2007, 2009 Shlomi Fish.
+
+This program is released under the following license: MIT X11:
+L<http://www.opensource.org/licenses/mit-license.php> .
+
+=head2 LICENSE
+
+Copyright (c) 2007, 2009 Shlomi Fish.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
+
+=cut
+
diff -r bb7027f9498c -r 8093828356ce perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:32:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 11:30:23 2009 +0000
@@ -12,6 +12,8 @@
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
+use XML::Grammar::Fiction::Err;
+
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::QnD - Quick and Dirty parser
@@ -556,11 +558,19 @@
 
     if ($open->{name} ne $close->{name})
     {
-        Carp::confess("Tags do not match: " 
-            . "$open->{name} on line $open->{line} "
-            . "and $close->{name} on line $close->{line}"
+        XML::Grammar::Fiction::Err::Parse::TagsMismatch->throw(
+            error => "Tags do not match",
+            opening_tag => XML::Grammar::Fiction::Struct::Tag->new(
+                name => $open->{name},
+                line => $open->{line},
+            ),
+            closing_tag => XML::Grammar::Fiction::Struct::Tag->new(
+                name => $close->{name},
+                line => $close->{line},
+            ),
         );
     }
+
     return $self->_create_elem($open, $inside);
 }
 
@@ -672,5 +682,12 @@
 
 =cut
 
+package XML::Grammar::Fiction::Struct::Tag;
+
+use Moose;
+
+has 'name' => (is => "rw", isa => "Str");
+has 'line' => (is => "rw", isa => "Int");
+
 1;
 
diff -r bb7027f9498c -r 8093828356ce perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 07:32:41 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Thu Nov 12 11:30:23 2009 +0000
@@ -3,12 +3,12 @@
 use strict;
 use warnings;
 
-use Test::More;
-
-use Test::More tests => 1;
+use Test::More tests => 4;
 
 use XML::LibXML;
 
+use Exception::Class;
+
 use XML::Grammar::Fiction::FromProto;
 use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
@@ -39,11 +39,32 @@
 );
 };
 
-my $err = $@;
+my $err = Exception::Class->caught(
+    "XML::Grammar::Fiction::Err::Parse::TagsMismatch"
+);
 
 # TEST
-like ($err, qr{Tags do not match: start on line 1 and wrong-finish-tag},
-   "Tried to put an inner-desc inside an addressing "
+ok ($err, "TagsMismatch was caught");
+
+# TEST
+like(
+    $err->error(),
+    qr{\ATags do not match},
+    "Text is OK."
+);
+
+# TEST
+is(
+    $err->opening_tag()->name(),
+    "start",
+    "Opening tag-name is OK.",
+);
+
+# TEST
+is(
+    $err->opening_tag()->line(),
+    1,
+    "Opening line is OK.",
 );
 
 1;

changeset:   59:bb7027f9498c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 07:32:41 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted the _line_starts_with() method.


diff -r 902686b9ecdd -r bb7027f9498c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:22:25 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:32:41 2009 +0000
@@ -520,13 +520,22 @@
     return ($$l =~ $re);
 }
 
+sub _line_starts_with
+{
+    my ($self, $re) = @_;
+
+    my $l = $self->_curr_line_ref();
+
+    return $$l =~ m{\G$re}cg;
+}
+
 sub _parse_top_level_tag
 {
     my $self = shift;
 
     $self->_skip_space();
 
-    if ($self->_with_curr_line(sub { my $l = shift; return $$l =~ m{\G<!--}cg}))
+    if ($self->_line_starts_with(qr{<!--}))
     {
         my $text = $self->_consume_up_to(qr{-->});
 

changeset:   58:902686b9ecdd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 07:22:25 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: removed another instance of _with_curr_line().


diff -r bbc701240a27 -r 902686b9ecdd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:19:04 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:22:25 2009 +0000
@@ -361,18 +361,19 @@
             }
             elsif ($which_tag eq "entity")
             {
-                $self->_with_curr_line(
-                    sub {
-                        my $l = shift;
-                        if ($$l !~ m{\G(\&\w+;)}g)
-                        {
-                            Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
-                                $self->_get_line_num()
-                            );
-                        }
-                        push @contents, HTML::Entities::decode_entities($1);
-                    }
-                );
+                my $l = $self->_curr_line_ref();
+
+                if (my ($text) = ($$l =~ m{\G(\&\w+;)}g))
+                {
+                    push @contents, HTML::Entities::decode_entities($text);
+                }
+                else
+                {
+                    Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                        $self->_get_line_num()
+                    );
+                }
+
                 redo CONTENTS_LOOP;
             }
         }

changeset:   57:bbc701240a27
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 07:19:04 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
description:
Removed some PODded-out text to a separate file so it won't get in the way.


diff -r b3e2f67265f5 -r bbc701240a27 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 07:11:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 12 07:19:04 2009 +0000
@@ -25,6 +25,7 @@
 README
 rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
 rejects/proto-text-to-xml.t
+rejects/QnD.pm
 t/00-load.t
 t/app-to-html.t
 t/boilerplate.t
diff -r b3e2f67265f5 -r bbc701240a27 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:11:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:19:04 2009 +0000
@@ -397,155 +397,6 @@
     return \@contents;
 }
 
-=begin unused_code
-
-# TODO : _parse_saying_first_para and _parse_saying_other_para are
-# very similar - abstract them into one function.
-sub _parse_saying_first_para
-{
-    my $self = shift;
-
-    my ($sayer, $what);
-    
-    ($sayer) = $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ /\G([^:\n\+]+): /cgms)
-            {
-                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
-            }
-            my $sayer = $1;
-
-            if ($sayer =~ m{[\[\]]})
-            {
-                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
-            }
-
-            return ($sayer);
-        }
-    );
-
-    $what = $self->_parse_inner_text();
-
-    return
-    +{
-         character => $sayer,
-         para => $self->_new_para($what),
-    };
-}
-
-sub _parse_saying_other_para
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    my $verdict = $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ /\G\++: /cgms)
-            {
-                return;
-            }
-            else
-            {
-                return 1;
-            }
-        }
-    );
-
-    if (!defined($verdict))
-    {
-        return;
-    }
-
-    my $what = $self->_parse_inner_text();
-
-    return $self->_new_para($what);
-}
-
-sub _parse_speech_unit
-{
-    my $self = shift;
-
-    my $first = $self->_parse_saying_first_para();
-
-    my @others;
-    while (defined(my $other_para = $self->_parse_saying_other_para()))
-    {
-        push @others, $other_para;
-    }
-
-    return
-        $self->_new_node({
-                t => "Saying",
-                character => $first->{character},
-                children => 
-                    $self->_new_list([ $first->{para}, @others ]),
-        });
-}
-
-sub _parse_desc_unit
-{
-    my $self = shift;
-
-    my $start_line = $self->_curr_line_idx();
-
-    # Skip the [
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            $$l =~ m{^\[}g;
-        }
-    );
-
-    my @paragraphs;
-
-    my $is_end = 1;
-    my $para;
-    PARAS_LOOP:
-    while ($is_end && ($para = $self->_consume_paragraph()))
-    {
-        $self->_with_curr_line(
-            sub {
-                my $l = shift;
-
-                if ($$l =~ m{\G\]}cg)
-                {
-                    $is_end = 0;
-                }
-            }
-        );
-        push @paragraphs, $para;
-    }
-
-    if ($is_end)
-    {
-        Carp::confess (
-            qq{Description ("[ ... ]") that started on line }
-            . ($start_line+1) . 
-            qq{does not terminate anywhere.}
-        );
-    }
-
-    return $self->_new_node({
-            t => "Description",
-            children => $self->_new_list(
-            [
-                map { 
-                $self->_new_para($_),
-                } @paragraphs
-            ],),
-    });
-}
-
-=end unused_code
-
-=cut
-
 sub _parse_non_tag_text_unit
 {
     my $self = shift;
diff -r b3e2f67265f5 -r bbc701240a27 perl/modules/XML-Grammar-Fiction/rejects/QnD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/QnD.pm	Thu Nov 12 07:19:04 2009 +0000
@@ -0,0 +1,148 @@
+package rejects::QnD;
+
+use strict;
+use warnings;
+
+# TODO : _parse_saying_first_para and _parse_saying_other_para are
+# very similar - abstract them into one function.
+sub _parse_saying_first_para
+{
+    my $self = shift;
+
+    my ($sayer, $what);
+    
+    ($sayer) = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G([^:\n\+]+): /cgms)
+            {
+                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
+            }
+            my $sayer = $1;
+
+            if ($sayer =~ m{[\[\]]})
+            {
+                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
+            }
+
+            return ($sayer);
+        }
+    );
+
+    $what = $self->_parse_inner_text();
+
+    return
+    +{
+         character => $sayer,
+         para => $self->_new_para($what),
+    };
+}
+
+sub _parse_saying_other_para
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    my $verdict = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G\++: /cgms)
+            {
+                return;
+            }
+            else
+            {
+                return 1;
+            }
+        }
+    );
+
+    if (!defined($verdict))
+    {
+        return;
+    }
+
+    my $what = $self->_parse_inner_text();
+
+    return $self->_new_para($what);
+}
+
+sub _parse_speech_unit
+{
+    my $self = shift;
+
+    my $first = $self->_parse_saying_first_para();
+
+    my @others;
+    while (defined(my $other_para = $self->_parse_saying_other_para()))
+    {
+        push @others, $other_para;
+    }
+
+    return
+        $self->_new_node({
+                t => "Saying",
+                character => $first->{character},
+                children => 
+                    $self->_new_list([ $first->{para}, @others ]),
+        });
+}
+
+sub _parse_desc_unit
+{
+    my $self = shift;
+
+    my $start_line = $self->_curr_line_idx();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{^\[}g;
+        }
+    );
+
+    my @paragraphs;
+
+    my $is_end = 1;
+    my $para;
+    PARAS_LOOP:
+    while ($is_end && ($para = $self->_consume_paragraph()))
+    {
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+
+                if ($$l =~ m{\G\]}cg)
+                {
+                    $is_end = 0;
+                }
+            }
+        );
+        push @paragraphs, $para;
+    }
+
+    if ($is_end)
+    {
+        Carp::confess (
+            qq{Description ("[ ... ]") that started on line }
+            . ($start_line+1) . 
+            qq{does not terminate anywhere.}
+        );
+    }
+
+    return $self->_new_node({
+            t => "Description",
+            children => $self->_new_list(
+            [
+                map { 
+                $self->_new_para($_),
+                } @paragraphs
+            ],),
+    });
+}
+

changeset:   56:b3e2f67265f5
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 07:11:16 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: extracted the _find_next_inner_text method.


diff -r f929277593d6 -r b3e2f67265f5 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:04:04 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:11:16 2009 +0000
@@ -289,6 +289,37 @@
     return $self->_create_elem($open);
 }
 
+sub _find_next_inner_text
+{
+    my $self = shift;
+
+    my $which_tag;
+    my $text = "";
+
+    my $l = $self->_curr_line_ref();
+
+    # Apparently, perl does not always returns true in this
+    # case, so we need the defined($1) ? $1 : "" workaround.
+    $$l =~ m{\G([^\<\[\]\&]*)}cgms;
+
+    $text .= (defined($1) ? $1 : "");
+
+    if ($$l =~ m{\G\&})
+    {
+        $which_tag = "entity";
+    }                
+    elsif ($$l =~ m{\G(?:</|\])})
+    {
+        $which_tag = "close";
+    }
+    elsif ($$l =~ m{\G<})
+    {
+        $which_tag = "open_tag";
+    }
+
+    return ($which_tag, $text);
+}
+
 sub _parse_inner_text
 {
     my $self = shift;
@@ -302,32 +333,9 @@
     CONTENTS_LOOP:
     while ($self->_curr_line() ne "\n")
     {
-        my $which_tag;
-        # We need this to avoid appending the rest of the first line 
-        $self->_with_curr_line(
-            sub {
-                my $l = shift;
-                
-                # Apparently, perl does not always returns true in this
-                # case, so we need the defined($1) ? $1 : "" workaround.
-                $$l =~ m{\G([^\<\[\]\&]*)}cgms;
+        my ($which_tag, $text_to_append) = $self->_find_next_inner_text();
 
-                $curr_text .= (defined($1) ? $1 : "");
-
-                if ($$l =~ m{\G\&})
-                {
-                    $which_tag = "entity";
-                }                
-                elsif ($$l =~ m{\G(?:</|\])})
-                {
-                    $which_tag = "close";
-                }
-                elsif ($$l =~ m{\G<})
-                {
-                    $which_tag = "open_tag";
-                }
-            }
-        );
+        $curr_text .= $text_to_append;
 
         push @contents, $curr_text;
 

changeset:   55:f929277593d6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 07:04:04 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: removed an old method - _parse_inner_desc().


diff -r 6a3153464af1 -r f929277593d6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:00:03 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:04:04 2009 +0000
@@ -262,48 +262,6 @@
     return $self->_parse_inner_text();
 }
 
-sub _parse_inner_desc
-{
-    my $self = shift;
-
-    my $start_line = $self->_curr_line_idx();
-
-    # Skip the [
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            $$l =~ m{\G\[}g;
-        }
-    );
-
-    my $inside = $self->_parse_inner_text();
-
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ m{\G\]}g)
-            {
-                Carp::confess (
-                      "Inner description that started on line "
-                      . ($start_line+1) 
-                      . " did not terminate with a \"]\"!"
-                );
-            }
-        }
-    );
-
-    return
-        $self->_new_node(
-            {
-                t => "InnerDesc",
-                start => $start_line,
-                children => $self->_new_list($inside),
-            }
-        );
-}
-
 sub _parse_inner_tag
 {
     my $self = shift;
@@ -356,11 +314,7 @@
 
                 $curr_text .= (defined($1) ? $1 : "");
 
-                if ($$l =~ m{\G\[})
-                {
-                    $which_tag = "open_desc";
-                }
-                elsif ($$l =~ m{\G\&})
+                if ($$l =~ m{\G\&})
                 {
                     $which_tag = "entity";
                 }                
@@ -385,13 +339,10 @@
         }
         else
         {
-            if (($which_tag eq "open_desc") || ($which_tag eq "open_tag"))
+            if ($which_tag eq "open_tag")
             {
-                push @contents, 
-                    (($which_tag eq "open_tag")
-                        ? $self->_parse_inner_tag()
-                        : $self->_parse_inner_desc()
-                    );
+                push @contents, $self->_parse_inner_tag();
+
                 # Avoid skipping to the next line.
                 # Gotta love teh Perl!
                 redo CONTENTS_LOOP;

changeset:   54:6a3153464af1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 07:00:03 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: extracted the _curr_line_and_pos() function.


diff -r adccb0c81221 -r 6a3153464af1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 06:50:49 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 07:00:03 2009 +0000
@@ -41,6 +41,15 @@
     return \($self->_lines()->[$self->_curr_line_idx()]);
 }
 
+sub _curr_line_and_pos
+{
+    my $self = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    return ($l, pos($$l));
+}
+
 sub _with_curr_line
 {
     my ($self, $sub_ref) = @_;
@@ -162,10 +171,7 @@
 {
     my $self = shift;
 
-    # $l is a reference to the string of the current line
-
-    my $l = $self->_curr_line_ref();
-    my $p = pos($$l);
+    my ($l, $p) = $self->_curr_line_and_pos();
 
     if ($$l !~ m{\G<($id_regex)}cg)
     {
@@ -214,21 +220,18 @@
 {
     my $self = shift;
 
-    return $self->_with_curr_line(
-        sub {
-            my $l = shift;
-            if ($$l !~ m{\G</($id_regex)>}g)
-            {
-                Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
-            }
+    my $l = $self->_curr_line_ref();
 
-            return
-            {
-                name => $1,
-                line => $self->_get_line_num(),
-            };
-        }
-    );
+    if ($$l !~ m{\G</($id_regex)>}g)
+    {
+        Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
+    }
+
+    return
+    {
+        name => $1,
+        line => $self->_get_line_num(),
+    };
 }
 
 sub _parse_text

changeset:   53:adccb0c81221
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 06:50:49 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: removed a call to _with_curr_line_ref().


diff -r 7d371d661bb1 -r adccb0c81221 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 06:31:11 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 06:50:49 2009 +0000
@@ -162,50 +162,45 @@
 {
     my $self = shift;
 
-    # Now Lisp got nothing on us.
-    return $self->_with_curr_line(
-        sub {
-            # $l is a reference to the string of the current
-            # line
-            my $l = shift;
+    # $l is a reference to the string of the current line
 
-            my $p = pos($$l);
-            if ($$l !~ m{\G<($id_regex)}cg)
-            {
-                print "Before : " . substr($$l, 0, $p) . "\n";
-                Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
-            }
-            my $id = $1;
+    my $l = $self->_curr_line_ref();
+    my $p = pos($$l);
 
-            my @attrs;
+    if ($$l !~ m{\G<($id_regex)}cg)
+    {
+        print "Before : " . substr($$l, 0, $p) . "\n";
+        Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
+    }
+    my $id = $1;
 
-            while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-            {
-                push @attrs, { 'key' => $1, 'value' => $2, };
-            }
+    my @attrs;
 
-            my $is_standalone = 0;
-            if ($$l =~ m{\G\s*/\s*>}cg)
-            {
-                $is_standalone = 1;
-            }
-            elsif ($$l !~ m{\G>}g)
-            {
-                Carp::confess (
-                    "Cannot match the \">\" of the opening tag at line " 
-                        . $self->_get_line_num()
-                );
-            }
-            
-            return
-            {
-                name => $id,
-                is_standalone => $is_standalone,
-                line => $self->_get_line_num(),
-                attrs => \@attrs,
-            };
-        }
-    );
+    while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+    {
+        push @attrs, { 'key' => $1, 'value' => $2, };
+    }
+
+    my $is_standalone = 0;
+    if ($$l =~ m{\G\s*/\s*>}cg)
+    {
+        $is_standalone = 1;
+    }
+    elsif ($$l !~ m{\G>}g)
+    {
+        Carp::confess (
+            "Cannot match the \">\" of the opening tag at line " 
+                . $self->_get_line_num()
+        );
+    }
+    
+    return
+    {
+        name => $id,
+        is_standalone => $is_standalone,
+        line => $self->_get_line_num(),
+        attrs => \@attrs,
+    };
 }
 
 sub _get_line_num

changeset:   52:7d371d661bb1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 12 06:31:11 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted the $self->_curr_line_ref() expression into someplace.


diff -r ccb9f2f9b0af -r 7d371d661bb1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 17:04:18 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 12 06:31:11 2009 +0000
@@ -45,7 +45,7 @@
 {
     my ($self, $sub_ref) = @_;
 
-    return $sub_ref->(\($self->_lines()->[$self->_curr_line_idx()]));
+    return $sub_ref->( $self->_curr_line_ref() );
 }
 
 sub _next_line_ref

changeset:   51:ccb9f2f9b0af
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 17:04:18 2009 +0000
files:       .hgtags
description:
Tagging the XML-Grammar-Fiction release as 0.0.1


diff -r 901104d91a92 -r ccb9f2f9b0af .hgtags
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/.hgtags	Thu Nov 05 17:04:18 2009 +0000
@@ -0,0 +1,1 @@
+901104d91a9296317ea2ef690025f5849024df01 releases/0.0.1

changeset:   50:901104d91a92
tag:         releases/0.0.1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 17:01:03 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Updated the changes with the version number.


diff -r 0c7d751dc7b2 -r 901104d91a92 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 05 16:59:03 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 05 17:01:03 2009 +0000
@@ -1,6 +1,6 @@
 Revision history for XML-Grammar-Fiction.
 
-0.0.1       TODO : FILL IN.
+0.0.1       Thu Nov  5 18:59:27 IST 2009
         - Forked from XML-Grammar-Screenplay-0.0600+trunk.
         - Changed to the Fiction proto-text format and XML format.
         - Changed the tests to be in accordance with the new semantics.

changeset:   49:0c7d751dc7b2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 16:59:03 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL
description:
Add depencies to Build.PL.


diff -r 17d581f78120 -r 0c7d751dc7b2 perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Thu Nov 05 16:53:08 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Thu Nov 05 16:59:03 2009 +0000
@@ -12,19 +12,27 @@
     dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
     dist_version_from   => 'lib/XML/Grammar/Fiction.pm',
     build_requires => {
+        'Config' => 0,
         'File::Find' => 0,
+        'File::Spec' => 0,
+        'strict' => 0,
         'Test::More' => 0,
         'Test::XML' => 0,
+        'warnings' => 0,
+        'XML::LibXML' => 0,
     },
     requires => 
     {
         'Carp' => 0,
         'Data::Dumper' => 0,
+        'Getopt::Long' => 0,
         'HTML::Entities' => 0,
         'List::Util' => 0,
         'Moose' => 0,
         'Parse::RecDescent' => 0,
+        'strict' => 0,
         'warnings' => 0,
+        'XML::LibXML' => 0,
         'XML::LibXSLT' => 0,
         'XML::Writer' => 0,
     },

changeset:   48:17d581f78120
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 16:53:08 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
[XML-G-Fiction] Enhanced the motivation and todo PODs.


diff -r 03e5c67ef236 -r 17d581f78120 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 05 16:20:15 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 05 16:53:08 2009 +0000
@@ -140,15 +140,25 @@
 This will allow a friendlier diagnostic. Carp::confess was implemented due to
 laziness on the programmers' part.
 
+=item * Merge the duplicate code from XML-Grammar-Screenplay
+
+XML::Grammar::Fiction was forked from L<XML::Grammar::Screenplay>
+and they still share a lot of common code. This needs to be merged in time.
+
+=item * Refactor the Prototext parser and other parts.
+
+Currently the code is relatively hairy and easy-to-break. Try to refactor it.
+
 =back
 
 =head1 MOTIVATION
 
-I wrote this CPAN distribution so I'll have a convenient way to edit a story
-I'm writing in Hebrew and other fiction like that, as OpenOffice.org caused
-me many problems, and I found editing bi-directional DocBook/XML to be
-painful with either gvim or KDE 4's kate, so I opted for a more plain-texty
-format.
+I (= Shlomi Fish) originated this CPAN distribution (after forking 
+L<XML:Grammar::Screenplay> which was similar enough) so I'll have a convenient
+way to edit a story I'm writing in Hebrew and similar fiction, as 
+OpenOffice.org caused me many problems, and I found editing bi-directional 
+DocBook/XML to be painful with either gvim or KDE 4's kate, so I opted for a
+more plain-texty format.
 
 I hope a lightweight markup language like that for fiction (and possibly
 other types of manuscripts) will prove useful for other writers. At the

changeset:   47:03e5c67ef236
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 16:20:15 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/bump-version-number.pl
description:
Add the script to bump the version number.


diff -r dd1af37993e0 -r 03e5c67ef236 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 05 16:15:09 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 05 16:20:15 2009 +0000
@@ -1,4 +1,5 @@
 Build.PL
+bump-version-number.pl
 Changes
 extradata/fiction-xml.rng
 extradata/fiction-xml-to-docbook.xslt
diff -r dd1af37993e0 -r 03e5c67ef236 perl/modules/XML-Grammar-Fiction/bump-version-number.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/bump-version-number.pl	Thu Nov 05 16:20:15 2009 +0000
@@ -0,0 +1,35 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use File::Find::Object;
+use IO::All;
+
+my $tree = File::Find::Object->new({}, 'lib/');
+
+my $version_n = shift(@ARGV);
+
+if (!defined($version_n))
+{
+    die "Specify version number as an argument! bump-version-number.pl '0.0.1'";
+}
+
+while (my $r = $tree->next()) {
+    if ($r =~ m{/\.svn\z})
+    {
+        $tree->prune();
+    }
+    elsif ($r =~ m{\.pm\z})
+    {
+        my @lines = io->file($r)->getlines();
+        foreach (@lines)
+        {
+            s#(\$VERSION = '|^Version )\d+\.\d+(?:\.\d+)?('|)#$1 . $version_n . $2#e;
+        }
+        io->file($r)->print(
+            @lines
+        );
+    }
+}
+

changeset:   46:dd1af37993e0
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 16:15:09 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
[XML-G-Fiction] Add $VERSION numbers and Version sections to the .pm files.


diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -17,6 +17,14 @@
 XML::Grammar::Fiction::App::FromProto - command line app-in-a-module
 to convert from a well-formed plaintext format to Fiction-XML.
 
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
 =head1 SYNOPSIS
 
     perl -MXML::Grammar::Fiction::App::FromProto -e 'run()' -- \
diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -16,6 +16,14 @@
 XML::Grammar::Fiction::App::ToDocBook - command line app-in-a-module
 to convert a Fiction XML file to DocBook 5.
 
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
 =head1 SYNOPSIS
 
     perl -MXML::Grammar::Fiction::App::ToDocBook -e 'run()' -- \
diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -16,6 +16,14 @@
 XML::Grammar::Fiction::App::ToHTML - command line app-in-a-module to convert
 Fiction-XML file to HTML
 
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
 =head1 SYNOPSIS
 
     perl -MXML::Grammar::Fiction::App::ToHTML -e 'run()' -- \
diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -8,6 +8,14 @@
 XML::Grammar::Fiction::Base - base class for XML::Grammar::Fiction
 classes.
 
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
 =head1 METHODS
 
 =head2 $package->new({%args});
diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -5,6 +5,19 @@
 
 use List::Util ();
 
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Fiction::FromProto.
+
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
 package XML::Grammar::Fiction::FromProto::Node;
 
 use Moose;
@@ -120,11 +133,6 @@
 
 1;
 
-=head1 NAME
-
-XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Fiction::FromProto.
-
 =head1 DESCRIPTION
 
 Contains several nodes.
diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -14,6 +14,14 @@
 
 B<For internal use only>.
 
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
 =head1 AUTHOR
 
 Shlomi Fish, L<http://www.shlomifish.org/>.
diff -r 7ae42e27b64f -r dd1af37993e0 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 16:05:16 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 16:15:09 2009 +0000
@@ -12,6 +12,20 @@
 
 use XML::Grammar::Fiction::FromProto::Nodes;
 
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser::QnD - Quick and Dirty parser
+for the Fiction-XML proto-text.
+
+B<For internal use only>.
+
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
 
 sub _curr_line :lvalue
 {
@@ -808,13 +822,6 @@
     return $self->_start();
 }
 
-=head1 NAME
-
-XML::Grammar::Fiction::FromProto::Parser::QnD - Quick and Dirty parser
-for the Fiction-XML proto-text.
-
-B<For internal use only>.
-
 =head1 METHODS
 
 =head2 $self->process_text($string)

changeset:   45:7ae42e27b64f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 16:05:16 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Changed the version number in ::FromProto to 0.0.1.


diff -r 71fe21d39bbe -r 7ae42e27b64f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 15:49:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 16:05:16 2009 +0000
@@ -29,11 +29,11 @@
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.0.1
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.0.1';
 
 =head2 new()
 

changeset:   44:71fe21d39bbe
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 15:49:54 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
More Fiction->Screenplay modification.


diff -r dd88c0e8549f -r 71fe21d39bbe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 15:45:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 15:49:54 2009 +0000
@@ -10,7 +10,7 @@
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
+Fiction-XML proto-text.
 
 B<For internal use only>.
 
diff -r dd88c0e8549f -r 71fe21d39bbe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 15:45:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 15:49:54 2009 +0000
@@ -811,7 +811,7 @@
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto::Parser::QnD - Quick and Dirty parser
-for the Screenplay-XML proto-text.
+for the Fiction-XML proto-text.
 
 B<For internal use only>.
 
diff -r dd88c0e8549f -r 71fe21d39bbe perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Nov 05 15:45:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Nov 05 15:49:54 2009 +0000
@@ -25,16 +25,15 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::ToHTML - module that converts the Screenplay
-XML to HTML.
+XML::Grammar::Fiction::ToHTML - module that converts the Fiction-XML to HTML.
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.0.1
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.0.1';
 
 =head2 new()
 

changeset:   43:dd88c0e8549f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 15:45:22 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
description:
[XML-G-Fiction] Moved Parser::PRD to the rejects.


diff -r 0355d3f21e5f -r dd88c0e8549f perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 05 15:33:01 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Thu Nov 05 15:45:22 2009 +0000
@@ -13,7 +13,6 @@
 lib/XML/Grammar/Fiction/Base.pm
 lib/XML/Grammar/Fiction/FromProto/Nodes.pm
 lib/XML/Grammar/Fiction/FromProto/Parser.pm
-lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
 lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
 lib/XML/Grammar/Fiction/FromProto.pm
 lib/XML/Grammar/Fiction.pm
@@ -23,6 +22,7 @@
 MANIFEST
 META.yml # Will be created by "make dist"
 README
+rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
 rejects/proto-text-to-xml.t
 t/00-load.t
 t/app-to-html.t
diff -r 0355d3f21e5f -r dd88c0e8549f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 15:33:01 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 15:45:22 2009 +0000
@@ -14,14 +14,13 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::App::FromProto - module implementing
-a command line application to convert a well-formed text to
-Screenplay XML.
+XML::Grammar::Fiction::App::FromProto - command line app-in-a-module
+to convert from a well-formed plaintext format to Fiction-XML.
 
 =head1 SYNOPSIS
 
     perl -MXML::Grammar::Fiction::App::FromProto -e 'run()' -- \
-	-o $@ $<
+	-o "$OUTPUT_FILE" "$INPUT_FILE"
 
 =head1 FUNCTIONS
 
diff -r 0355d3f21e5f -r dd88c0e8549f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 15:33:01 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 15:45:22 2009 +0000
@@ -13,8 +13,13 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::App::ToDocBook - module implementing
-a command line application to convert a Screenplay XML file to docbook.
+XML::Grammar::Fiction::App::ToDocBook - command line app-in-a-module
+to convert a Fiction XML file to DocBook 5.
+
+=head1 SYNOPSIS
+
+    perl -MXML::Grammar::Fiction::App::ToDocBook -e 'run()' -- \
+	-o "$OUTPUT_FILE" "$INPUT_FILE"
 
 =head1 FUNCTIONS
 
diff -r 0355d3f21e5f -r dd88c0e8549f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 15:33:01 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 15:45:22 2009 +0000
@@ -13,8 +13,13 @@
 
 =head1 NAME
 
-XML::Grammar::Fiction::App::ToHTML - module implementing
-a command line application to convert a Screenplay XML file to HTML
+XML::Grammar::Fiction::App::ToHTML - command line app-in-a-module to convert
+Fiction-XML file to HTML
+
+=head1 SYNOPSIS
+
+    perl -MXML::Grammar::Fiction::App::ToHTML -e 'run()' -- \
+	-o "$OUTPUT_FILE" "$INPUT_FILE"
 
 =head1 FUNCTIONS
 
diff -r 0355d3f21e5f -r dd88c0e8549f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Thu Nov 05 15:33:01 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,262 +0,0 @@
-package XML::Grammar::Fiction::FromProto::Parser::PRD;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Fiction::FromProto::Parser';
-
-use Parse::RecDescent;
-
-use Moose;
-
-use XML::Grammar::Fiction::FromProto::Nodes;
-
-has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
-
-sub _init
-{
-    my $self = shift;
-
-    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
-
-    return 0;
-}
-
-sub _calc_grammar
-{
-    my $self = shift;
-
-    return <<'EOF';
-
-start : tag  {$thisparser->{ret} = $item[1]; 1 }
-
-text_unit:   tag_or_comment { $item[1] }
-           | speech_or_desc { $item[1] }
-
-tag_or_comment:   tag
-                | comment
-
-comment:    /<!--(.*?)-->/ms para_sep {
-    XML::Grammar::Fiction::FromProto::Node::Comment->new(
-        text => $1
-    )
-    }
-
-para_sep:      /(\n\s*)+/
-
-speech_or_desc:   speech_unit
-                | desc_unit
-
-plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
-
-inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
-    {
-        XML::Grammar::Fiction::FromProto::Node::Element->new(
-            name => $item[2],
-            children => XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => []
-            ),
-            attrs => $item[3]
-            );
-    }
-
-
-inner_tag:         opening_tag  inner_text closing_tag {
-        my ($open, $inside, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Fiction::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            attrs => $open->{attrs},
-            )
-    }
-
-inner_desc:      /\[/ inner_text /\]/ {
-        my $inside = $item[2];
-        XML::Grammar::Fiction::FromProto::Node::InnerDesc->new(
-            children => XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            )
-    }
-
-inner_tag_or_desc:    inner_tag
-                   |  inner_desc
-
-inner_entity:      /\&\w+;/ {
-        my $inside = $item[1];
-        HTML::Entities::decode_entities($inside)
-    }
-
-inner_text_unit:    plain_inner_text  { [ $item[1] ] }
-                 |  inner_tag_or_desc { [ $item[1] ] }
-                 |  inner_entity      { [ $item[1] ] }
-                 |  inner_standalone_tag { [ $item[1] ] }
-
-inner_text:       inner_text_unit(s) {
-        [ map { @{$_} } @{$item[1]} ]
-        }
-
-addressing: /^([^:\n\+]+): /ms { $1 }
-
-saying_first_para: addressing inner_text para_sep {
-            my ($sayer, $what) = ($item[1], $item[2]);
-            +{
-             character => $sayer,
-             para => XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-                children =>
-                XML::Grammar::Fiction::FromProto::Node::List->new(
-                    contents => $what,
-                    )
-                ),
-            }
-            }
-
-saying_other_para: /^\++: /ms inner_text para_sep {
-        XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-            children =>
-                XML::Grammar::Fiction::FromProto::Node::List->new(
-                    contents => $item[2],
-                    ),
-        )
-    }
-
-speech_unit:  saying_first_para saying_other_para(s?)
-    {
-    my $first = $item[1];
-    my $others = $item[2] || [];
-        XML::Grammar::Fiction::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => [ $first->{para}, @{$others} ],
-                ),
-        )
-    }
-
-desc_para:  inner_text para_sep { $item[1] }
-
-desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
-
-desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
-        my $paragraphs = $item[2];
-
-        XML::Grammar::Fiction::FromProto::Node::Description->new(
-            children => 
-                XML::Grammar::Fiction::FromProto::Node::List->new(
-                    contents =>
-                [
-                map { 
-                XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-                    children =>
-                        XML::Grammar::Fiction::FromProto::Node::List->new(
-                            contents => $_,
-                            ),
-                        )
-                } @$paragraphs
-                ],
-            ),
-        )
-    }
-
-text: text_unit(s) { XML::Grammar::Fiction::FromProto::Node::List->new(
-        contents => $item[1]
-        ) }
-      | space { XML::Grammar::Fiction::FromProto::Node::List->new(
-        contents => []
-        ) }
-
-tag: space opening_tag space text space closing_tag space
-     {
-        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Fiction::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => $inside,
-            attrs => $open->{attrs},
-            );
-     }
-
-opening_tag: '<' id attribute(s?) '>'
-    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
-
-closing_tag: '</' id '>'
-    { $item[0] = { 'name' => $item[2], }; }
-
-attribute: space id '="' attributevalue '"' space
-    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
-
-attributevalue: /[^"]+/
-    { $item[0] = HTML::Entities::decode_entities($item[1]); }
-
-space: /\s*/
-
-id: /[a-zA-Z_\-]+/
-
-EOF
-}
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    my $rv = $self->_p_rd()->start($text);
-
-    if (!defined($rv))
-    {
-        return;
-    }
-    else
-    {
-        return $self->_p_rd->{ret};
-    }
-}
-
-1;
-
-
-=head1 NAME
-
-XML::Grammar::Fiction::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
-
-B<For internal use only>.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns it.
-
-=head2 $self->meta()
-
-Something that L<Moose> adds.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
diff -r 0355d3f21e5f -r dd88c0e8549f perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Thu Nov 05 15:45:22 2009 +0000
@@ -0,0 +1,262 @@
+package XML::Grammar::Fiction::FromProto::Parser::PRD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Fiction::FromProto::Parser';
+
+use Parse::RecDescent;
+
+use Moose;
+
+use XML::Grammar::Fiction::FromProto::Nodes;
+
+has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
+
+sub _init
+{
+    my $self = shift;
+
+    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
+
+    return 0;
+}
+
+sub _calc_grammar
+{
+    my $self = shift;
+
+    return <<'EOF';
+
+start : tag  {$thisparser->{ret} = $item[1]; 1 }
+
+text_unit:   tag_or_comment { $item[1] }
+           | speech_or_desc { $item[1] }
+
+tag_or_comment:   tag
+                | comment
+
+comment:    /<!--(.*?)-->/ms para_sep {
+    XML::Grammar::Fiction::FromProto::Node::Comment->new(
+        text => $1
+    )
+    }
+
+para_sep:      /(\n\s*)+/
+
+speech_or_desc:   speech_unit
+                | desc_unit
+
+plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
+
+inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
+    {
+        XML::Grammar::Fiction::FromProto::Node::Element->new(
+            name => $item[2],
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => []
+            ),
+            attrs => $item[3]
+            );
+    }
+
+
+inner_tag:         opening_tag  inner_text closing_tag {
+        my ($open, $inside, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Fiction::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            attrs => $open->{attrs},
+            )
+    }
+
+inner_desc:      /\[/ inner_text /\]/ {
+        my $inside = $item[2];
+        XML::Grammar::Fiction::FromProto::Node::InnerDesc->new(
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            )
+    }
+
+inner_tag_or_desc:    inner_tag
+                   |  inner_desc
+
+inner_entity:      /\&\w+;/ {
+        my $inside = $item[1];
+        HTML::Entities::decode_entities($inside)
+    }
+
+inner_text_unit:    plain_inner_text  { [ $item[1] ] }
+                 |  inner_tag_or_desc { [ $item[1] ] }
+                 |  inner_entity      { [ $item[1] ] }
+                 |  inner_standalone_tag { [ $item[1] ] }
+
+inner_text:       inner_text_unit(s) {
+        [ map { @{$_} } @{$item[1]} ]
+        }
+
+addressing: /^([^:\n\+]+): /ms { $1 }
+
+saying_first_para: addressing inner_text para_sep {
+            my ($sayer, $what) = ($item[1], $item[2]);
+            +{
+             character => $sayer,
+             para => XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+                children =>
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents => $what,
+                    )
+                ),
+            }
+            }
+
+saying_other_para: /^\++: /ms inner_text para_sep {
+        XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+            children =>
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents => $item[2],
+                    ),
+        )
+    }
+
+speech_unit:  saying_first_para saying_other_para(s?)
+    {
+    my $first = $item[1];
+    my $others = $item[2] || [];
+        XML::Grammar::Fiction::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => [ $first->{para}, @{$others} ],
+                ),
+        )
+    }
+
+desc_para:  inner_text para_sep { $item[1] }
+
+desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
+
+desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
+        my $paragraphs = $item[2];
+
+        XML::Grammar::Fiction::FromProto::Node::Description->new(
+            children => 
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents =>
+                [
+                map { 
+                XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+                    children =>
+                        XML::Grammar::Fiction::FromProto::Node::List->new(
+                            contents => $_,
+                            ),
+                        )
+                } @$paragraphs
+                ],
+            ),
+        )
+    }
+
+text: text_unit(s) { XML::Grammar::Fiction::FromProto::Node::List->new(
+        contents => $item[1]
+        ) }
+      | space { XML::Grammar::Fiction::FromProto::Node::List->new(
+        contents => []
+        ) }
+
+tag: space opening_tag space text space closing_tag space
+     {
+        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Fiction::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => $inside,
+            attrs => $open->{attrs},
+            );
+     }
+
+opening_tag: '<' id attribute(s?) '>'
+    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
+
+closing_tag: '</' id '>'
+    { $item[0] = { 'name' => $item[2], }; }
+
+attribute: space id '="' attributevalue '"' space
+    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
+
+attributevalue: /[^"]+/
+    { $item[0] = HTML::Entities::decode_entities($item[1]); }
+
+space: /\s*/
+
+id: /[a-zA-Z_\-]+/
+
+EOF
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    my $rv = $self->_p_rd()->start($text);
+
+    if (!defined($rv))
+    {
+        return;
+    }
+    else
+    {
+        return $self->_p_rd->{ret};
+    }
+}
+
+1;
+
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns it.
+
+=head2 $self->meta()
+
+Something that L<Moose> adds.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut

changeset:   42:0355d3f21e5f
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 15:33:01 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
description:
[XML-G-Fiction] Add the version attribute to the top-level XML tag.


diff -r 612e4ef225f7 -r 0355d3f21e5f perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Thu Nov 05 14:36:39 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Thu Nov 05 15:33:01 2009 +0000
@@ -7,6 +7,9 @@
     <start>
         <element name="fic:document">
             <ref name="common_attrs" />
+            <attribute name="version">
+                <text />
+            </attribute>
             <element name="fic:head">
                 <empty/>
             </element>
diff -r 612e4ef225f7 -r 0355d3f21e5f perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 14:36:39 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 15:33:01 2009 +0000
@@ -362,7 +362,7 @@
     );
 
     $writer->xmlDecl("utf-8");
-    $writer->startTag([$fiction_ns, "document"]);
+    $writer->startTag([$fiction_ns, "document"], "version" => "0.2");
     $writer->startTag([$fiction_ns, "head"]);
     $writer->endTag();
 
diff -r 612e4ef225f7 -r 0355d3f21e5f perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Thu Nov 05 14:36:39 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Thu Nov 05 15:33:01 2009 +0000
@@ -1,5 +1,5 @@
 <?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
     <head>
     </head>
     <body xml:id="index">
diff -r 612e4ef225f7 -r 0355d3f21e5f perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Thu Nov 05 14:36:39 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Thu Nov 05 15:33:01 2009 +0000
@@ -1,5 +1,5 @@
 <?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/" version="0.2">
     <head>
     </head>
     <body xml:id="index">

changeset:   41:612e4ef225f7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 14:36:39 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
description:
Removed the <!DOCTYPE> from the XML output.

It was the wrong DOCTYPE and such DOCTYPE's are no longer recommended by
the W3C.


diff -r 5500585571fb -r 612e4ef225f7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 14:33:12 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 14:36:39 2009 +0000
@@ -362,7 +362,6 @@
     );
 
     $writer->xmlDecl("utf-8");
-    $writer->doctype("document", undef, "screenplay-xml.dtd");
     $writer->startTag([$fiction_ns, "document"]);
     $writer->startTag([$fiction_ns, "head"]);
     $writer->endTag();

changeset:   40:5500585571fb
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 14:33:12 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
description:
More Screenplay-XML depracation. Also removed the DTD stuff.

And r3939!


diff -r 8e7839ff2c33 -r 5500585571fb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 13:14:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 14:33:12 2009 +0000
@@ -25,7 +25,7 @@
 =head1 NAME
 
 XML::Grammar::Fiction::FromProto - module that converts well-formed
-text representing a screenplay to an XML format.
+text representing prose to an XML format.
 
 =head1 VERSION
 
@@ -64,7 +64,8 @@
 
 =head2 $self->convert({ source => { file => $path_to_file } })
 
-Converts the file $path_to_file to XML and returns it.
+Converts the file $path_to_file to XML and returns it. Throws an exception
+on failure.
 
 =cut
 
diff -r 8e7839ff2c33 -r 5500585571fb perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Nov 05 13:14:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Nov 05 14:33:12 2009 +0000
@@ -19,22 +19,21 @@
 
 
 has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
 has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
 has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
 
 =head1 NAME
 
-XML::Grammar::Fiction::ToDocBook - module that converts the Screenplay
-XML to DocBook.
+XML::Grammar::Fiction::ToDocBook - module that converts the Fiction-XML to 
+DocBook 5.
 
 =head1 VERSION
 
-Version 0.0600
+Version 0.0.1
 
 =cut
 
-our $VERSION = '0.0600';
+our $VERSION = '0.0.1';
 
 =head2 new()
 
@@ -56,17 +55,6 @@
 
     $self->_data_dir($data_dir);
 
-    my $dtd =
-        XML::LibXML::Dtd->new(
-            "Screenplay XML 0.1.0",
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.dtd"
-            ),
-        );
-
-    $self->_dtd($dtd);
-
     $self->_xml_parser(XML::LibXML->new());
 
     my $xslt = XML::LibXSLT->new();

changeset:   39:8e7839ff2c33
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 13:14:32 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Changes
description:
Updated the changes a little. TODO: add a date.


diff -r 582283181f9e -r 8e7839ff2c33 perl/modules/XML-Grammar-Fiction/Changes
--- a/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 05 12:37:07 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Thu Nov 05 13:14:32 2009 +0000
@@ -1,3 +1,11 @@
+Revision history for XML-Grammar-Fiction.
+
+0.0.1       TODO : FILL IN.
+        - Forked from XML-Grammar-Screenplay-0.0600+trunk.
+        - Changed to the Fiction proto-text format and XML format.
+        - Changed the tests to be in accordance with the new semantics.
+        - First CPAN release.
+
 Revision history for XML-Grammar-Screenplay
 
         - Added the resources and keywords to the Build.PL and META.yml.

changeset:   38:582283181f9e
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 12:37:07 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Updated the POD URL to the XML-Grammar-Fiction one.


diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -70,7 +70,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -62,7 +62,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -62,7 +62,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -384,7 +384,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -22,7 +22,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -247,7 +247,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -833,7 +833,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -130,7 +130,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 
diff -r a36eff1a7b54 -r 582283181f9e perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Nov 05 12:29:54 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Nov 05 12:37:07 2009 +0000
@@ -155,7 +155,7 @@
 
 Please report any bugs or feature requests to
 C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
 

changeset:   37:a36eff1a7b54
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 12:29:54 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
description:
Updated the E-mail for bugs or feature requests.


diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -69,7 +69,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -61,7 +61,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -61,7 +61,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -383,7 +383,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -21,7 +21,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -246,7 +246,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -832,7 +832,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -129,7 +129,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
diff -r e47dbb1a13a2 -r a36eff1a7b54 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Nov 05 12:25:43 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Thu Nov 05 12:29:54 2009 +0000
@@ -154,7 +154,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.

changeset:   36:e47dbb1a13a2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 12:25:43 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Add an item to the TODO.


diff -r d3ec456ab301 -r e47dbb1a13a2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 05 12:20:47 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 05 12:25:43 2009 +0000
@@ -135,6 +135,11 @@
 
 =item * Check that SGML entities work properly.
 
+=item * Convert the parsing errors from Carp::confess to Exception::Class
+
+This will allow a friendlier diagnostic. Carp::confess was implemented due to
+laziness on the programmers' part.
+
 =back
 
 =head1 MOTIVATION

changeset:   35:d3ec456ab301
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 12:20:47 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Updated the documentation of lib/XML/Grammar/Fiction.pm .


diff -r 40d1adf1e5f6 -r d3ec456ab301 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 05 09:08:15 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Thu Nov 05 12:20:47 2009 +0000
@@ -24,7 +24,8 @@
 
 =head1 DESCRIPTION
 
-XML::Grammar::Fiction is a Perl module for:
+XML::Grammar::Fiction is a CPAN distribution that facilitates writing prose
+fiction (= stories, novels, novellas, etc.). What it does is:
 
 =over 4
 
@@ -46,17 +47,16 @@
 
 =head2 Scenes
 
-Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
+Sections are placed in XML-like tags of C<< <section> ... </section> >> or
 abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
 attributes whose keys are plaintext and whose values are surrounded by
 double quotes. (Single-quotes are not supported).
 
-The scene tag must have an C<id> attribute (for anchors, etc.) and could
-have an optional C<title> attribute. If the title is not specified, it will
-default to the ID.
+The section tag must have an C<id> attribute (for anchors, etc.) and could
+contain an optional (but highly recommended) C<< <title> >> sub-tag. If the 
+title is not specified, it will default to the ID.
 
-Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
-except inside scenes.
+Sections may be B<nested>. 
 
 =head2 Text
 
@@ -70,8 +70,8 @@
 
 =item 2. XML-like tags.
 
-Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
-hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+Supported tags are C<< <b> >> for bold text, and C<< <i> >> for italic
+text.
 
 =item 3. Entities
 
@@ -79,38 +79,29 @@
 C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
 L<HTML::Entities>.
 
-=item 4. Text between [ ... ]
+=item 4. Supported initial characters
 
-Text between square brackets (C<[ ... ]>) is reserved for descriptions
-or inline descriptions (see below).
+The following characters can start a regular paragraph:
 
-=back 
+=over 4
 
-=head2 Sayings
+=item * Any alphanumeric character.
 
-The first paragraph when a character talks starts with the name of the
-character followed by a colon (C<:>) and the rest of the text. Like this:
+=item * Some special characters:
 
-    David: Goliath, I'm going to kill you! You'll see -
-    I will.
+The characters C<"> (double quotes), C<'> (single quotes), etc. are supported.
 
-If a character says more than one paragraph, the next paragraph should start
-with any number of "+"-signs followed by a colon:
+=item * XML/SGML entities.
 
-    David: Goliath, I'm going to kill you! You'll see -
-    I will.
+XML/SGML entities are also supported at the start. 
 
-    ++++: I will sling you and bing you till infinity!
+=back
 
-=head2 Descriptions.
+All other characters are reserved for special markup in the future. If you
+need to use them at the beginning of the paragraph you can escape them with
+a backslash (C<\>) or their SGML/XML entity (e.g: C<&qout;>).
 
-Descriptions that are not part of saying start with a C<[> at the first
-character of a line and extend till the next C<]>. They can span several
-paragraphs.
-
-There are also internal descriptions to the saying which are placed
-inside the paragraph of the saying and describe what happens while the
-character talks. 
+=back
 
 =head2 EXAMPLES
 
@@ -118,31 +109,12 @@
 
 =over 4
 
-=item * The One with the Fountainhead
+=item * The Pope Died on Sunday
 
-L<http://www.shlomifish.org/humour/TOWTF/>
-
-=item * Humanity - The Movie
-
-L<http://www.shlomifish.org/humour/humanity/>
-
-=item * Star Trek - "We The Living Dead"
-
-L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
+L<http://www.shlomifish.org/humour/Pope/>
 
 =back
 
-=head1 DEBUGGING
-
-When trying to convert the well-formed text to XML, one will often 
-encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
-which is used for parsing. The best way I found to deal with it is to
-gradually eliminate parts of the document until the offending markup is
-isolated.
-
-In the future, I plan on writing a custom parser that will provide better
-diagnostics and will hopefully also be faster.
-
 =head1 AUTHOR
 
 Shlomi Fish, L<http://www.shlomifish.org/>.
@@ -150,7 +122,7 @@
 =head1 BUGS
 
 Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+C<bug-xml-grammar-fiction at rt.cpan.org>, or through the web interface at
 L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
 I will be notified, and then you'll automatically be notified of progress on
 your bug as I make changes.
@@ -159,10 +131,27 @@
 
 =over 4
 
-=item * Empty
+=item * Implement the correct handlind of leading special characters in lines.
+
+=item * Check that SGML entities work properly.
 
 =back
 
+=head1 MOTIVATION
+
+I wrote this CPAN distribution so I'll have a convenient way to edit a story
+I'm writing in Hebrew and other fiction like that, as OpenOffice.org caused
+me many problems, and I found editing bi-directional DocBook/XML to be
+painful with either gvim or KDE 4's kate, so I opted for a more plain-texty
+format.
+
+I hope a lightweight markup language like that for fiction (and possibly
+other types of manuscripts) will prove useful for other writers. At the
+moment, a lot of stuff in the proto-text format is subject to change,
+so you'll need to accept that some modifications to your sources will be
+required in the future. I hope you still find it useful and let me know
+if you need any feature or bug-fix.
+
 =head1 SUPPORT
 
 You can find documentation for this module with the perldoc command.

changeset:   34:40d1adf1e5f6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Thu Nov 05 09:08:15 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Fixed a bug with the fic:title handling in the to-DocBook XSLT.


diff -r e82255e89441 -r 40d1adf1e5f6 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Wed Nov 04 20:36:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Thu Nov 05 09:08:15 2009 +0000
@@ -39,8 +39,8 @@
         <info>
         <title>
             <xsl:choose>
-                <xsl:when test="title">
-                    <xsl:value-of select="title" />
+                <xsl:when test="fic:title">
+                    <xsl:value-of select="fic:title" />
                 </xsl:when>
                 <xsl:otherwise>
                     <xsl:value-of select="@xml:id" />
diff -r e82255e89441 -r 40d1adf1e5f6 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Wed Nov 04 20:36:22 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Thu Nov 05 09:08:15 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 28;
+use Test::More tests => 30;
 
 use File::Spec;
 
@@ -218,6 +218,26 @@
                 "<i>[0] contains the right contents.",
             );
         }
+
+        # Test the DocBook/XML incorporation of the <title> tag.
+        {
+            my @elems;
+
+            @elems = $db_find->(
+                q{//db:section[@xml:id='goliath']/db:info/db:title}
+            );
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "DocBook: found one title tag",
+            );
+
+            # TEST*$num_with_styles
+            is ($elems[0]->textContent(), "Goliath's Response", 
+                "title#goliath contains the right content.",
+            );
+        }
     }
 }
 

changeset:   33:e82255e89441
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 20:36:22 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
description:
Add the more explicit MIT/X11 License.


diff -r ed40f7098cf4 -r e82255e89441 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Nov 04 20:19:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Wed Nov 04 20:36:22 2009 +0000
@@ -195,9 +195,32 @@
 
 =head1 COPYRIGHT & LICENSE
 
-Copyright 2007 Shlomi Fish, all rights reserved.
+Copyright (c) 2007, 2009 Shlomi Fish.
 
-This program is released under the following license: MIT X11.
+This program is released under the following license: MIT X11:
+L<http://www.opensource.org/licenses/mit-license.php> .
+
+=head2 LICENSE
+
+Copyright (c) 2007, 2009 Shlomi Fish.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
 
 =cut
 

changeset:   32:ed40f7098cf4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 20:19:42 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
description:
Refactored ::FromProto to use ->_short_isa.


diff -r 9eb2dd58258d -r ed40f7098cf4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 04 20:09:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 04 20:19:42 2009 +0000
@@ -102,11 +102,11 @@
 {
     my ($self, $elem) = @_;
 
-    if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying"))
+    if ($elem->_short_isa("Saying"))
     {
         return ["saying", 'character' => $elem->character()];
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Description"))
+    elsif ($elem->_short_isa("Description"))
     {
         return ["description"];
     }
@@ -126,14 +126,14 @@
     {
         $self->_writer->characters($elem);
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
+    elsif ($elem->_short_isa("Text"))
     {
         foreach my $child (@{$elem->_get_childs()})
         {
             $self->_write_elem({ elem => $child,},);
         }
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph"))
+    elsif ($elem->_short_isa("Paragraph"))
     {
         $self->_output_tag_with_childs(
             {
@@ -142,14 +142,14 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::List"))
+    elsif ($elem->_short_isa("List"))
     {
         foreach my $child (@{$elem->contents()})
         {
             $self->_write_elem({elem => $child, });
         }
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Element"))
+    elsif ($elem->_short_isa("Element"))
     {
         if ($elem->name() eq "title")
         {
@@ -204,7 +204,7 @@
         {
             $self->_writer->emptyTag("br");
         }
-        elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::InnerDesc"))
+        elsif ($elem->_short_isa("InnerDesc"))
         {
             $self->_output_tag_with_childs(
                 {
@@ -214,7 +214,7 @@
             );
         }
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
+    elsif ($elem->_short_isa("Text"))
     {
         $self->_output_tag_with_childs(
             {
@@ -223,7 +223,7 @@
             },
         );
     }
-    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Comment"))
+    elsif ($elem->_short_isa("Comment"))
     {
         $self->_writer->comment($elem->text());
     }
diff -r 9eb2dd58258d -r ed40f7098cf4 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 20:09:42 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 20:19:42 2009 +0000
@@ -69,6 +69,8 @@
 
 use Moose;
 
+extends("XML::Grammar::Fiction::FromProto::Node");
+
 has 'contents' => (isa => "ArrayRef", is => "rw");
 
 package XML::Grammar::Fiction::FromProto::Node::Text;

changeset:   31:9eb2dd58258d
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 20:09:42 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
description:
Removed an unnecessary statement.


diff -r 84e1dd3b9676 -r 9eb2dd58258d perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 04 20:05:18 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 04 20:09:42 2009 +0000
@@ -26,9 +26,7 @@
     return $contents;
 }
 
-my $grammar = XML::Grammar::Fiction::FromProto->new({
-        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
-    });
+my $grammar = XML::Grammar::Fiction::FromProto->new({});
 
 eval {
 my $got_xml = $grammar->convert(

changeset:   30:84e1dd3b9676
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 20:05:18 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i.txt perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
description:
Now supporting to proto-text for sections-p-b-i.


diff -r 5fa23502dba9 -r 84e1dd3b9676 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 04 17:11:38 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 04 20:05:18 2009 +0000
@@ -33,6 +33,7 @@
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
 t/data/proto-text/sections-and-paras.txt
+t/data/proto-text/sections-p-b-i.txt
 t/data/proto-text/two-nested-s.txt
 t/data/proto-text/with-brs.txt
 t/data/proto-text/with-comments.txt
diff -r 5fa23502dba9 -r 84e1dd3b9676 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 04 17:11:38 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 04 20:05:18 2009 +0000
@@ -126,6 +126,13 @@
     {
         $self->_writer->characters($elem);
     }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
+    {
+        foreach my $child (@{$elem->_get_childs()})
+        {
+            $self->_write_elem({ elem => $child,},);
+        }
+    }
     elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph"))
     {
         $self->_output_tag_with_childs(
@@ -146,15 +153,16 @@
     {
         if ($elem->name() eq "title")
         {
+            # TODO :
+            # Eliminate the Law-of-Demeter-syndrome here.
             my $list = $elem->_get_childs()->[0];
-            my $p = $list->contents()->[0];
             $self->_output_tag(
                 {
                     start => ["title"],
                     in => sub {
                         $self->_write_elem(
                             {
-                                elem => $p->_get_childs()->[0],
+                                elem => $list,
                             }                            
                         ),
                     },
@@ -178,11 +186,20 @@
         {
             $self->_output_tag_with_childs(
                 {
-                    start => ["bold"],
+                    start => ["b"],
                     elem => $elem,
                 }
             );
         }
+        elsif ($elem->name() eq "i")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["i"],
+                    elem => $elem,
+                }
+            );
+        }        
         elsif ($elem->name() eq "br")
         {
             $self->_writer->emptyTag("br");
diff -r 5fa23502dba9 -r 84e1dd3b9676 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 17:11:38 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 20:05:18 2009 +0000
@@ -131,6 +131,19 @@
     );
 }
 
+sub _new_text
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return $self->_new_node(
+        {
+            t => "Text",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
 sub _parse_opening_tag
 {
     my $self = shift;
@@ -413,6 +426,8 @@
     return \@contents;
 }
 
+=begin unused_code
+
 # TODO : _parse_saying_first_para and _parse_saying_other_para are
 # very similar - abstract them into one function.
 sub _parse_saying_first_para
@@ -556,6 +571,10 @@
     });
 }
 
+=end unused_code
+
+=cut
+
 sub _parse_non_tag_text_unit
 {
     my $self = shift;
@@ -564,18 +583,33 @@
 
     if (pos($$l) < length($$l))
     {
-        my $text = $self->_consume_up_to(qr{\<}ms);
+        my $text = $self->_consume_up_to(qr{(?:\<|^\n?$)}ms);
 
         $l = $self->_curr_line_ref();
+
+        my $ret_elem = $self->_new_text([$text]);
+        my $is_para_end = 0;
+
+        # Demote the cursor to before the < of the tag.
+        #
         if (pos($$l) > 0)
         {
             pos($$l)--;
+            if (substr($$l, pos($$l), 1) eq "\n")
+            {
+                $is_para_end = 1;
+            }
+        }
+        else
+        {
+            $is_para_end = 1;
         }
 
-        my @paras = split(/\n{2,}/, $text);
-        return $self->_new_list(
-            [ map { $self->_new_para([$_]) } @paras]
-        );
+        return
+        {
+            elem => $ret_elem,
+            para_end => $is_para_end,
+        };
     }
     else
     {
@@ -588,6 +622,7 @@
 sub _parse_text_unit
 {
     my $self = shift;
+
     my $space = $self->_consume(qr{\s});
 
     my $l = $self->_curr_line_ref();
@@ -615,7 +650,40 @@
     }
     else
     {
-        return $self->_parse_non_tag_text_unit();
+        my @ret;
+
+        my $status;
+
+        my $is_para = (pos($$l) == 0);
+
+        PARSE_NON_TAG_TEXT_UNIT:
+        while (my $status = $self->_parse_non_tag_text_unit())
+        {
+            my $elem = $status->{'elem'};
+            my $is_para_end = $status->{'para_end'};
+
+            push @ret, $elem;
+            if ($is_para_end)
+            {
+                last PARSE_NON_TAG_TEXT_UNIT;
+            }
+            else
+            {
+                if (defined(my $text_unit = $self->_parse_text_unit()))
+                {
+                    push @ret, $text_unit;
+                }
+                else
+                {
+                    last PARSE_NON_TAG_TEXT_UNIT;
+                }
+            }
+        }
+        return
+            $is_para 
+            ? $self->_new_para(\@ret)
+            : $self->_new_list(\@ret)
+            ;
     }
 }
 
diff -r 5fa23502dba9 -r 84e1dd3b9676 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-p-b-i.txt	Wed Nov 04 20:05:18 2009 +0000
@@ -0,0 +1,26 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.    
+
+David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really. <i>David</i>, the red-headed!".
+
+</s>
+
+</s>
+
+</body>
+
diff -r 5fa23502dba9 -r 84e1dd3b9676 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Wed Nov 04 17:11:38 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Wed Nov 04 20:05:18 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 2;
+use Test::More tests => 4;
 
 use Test::XML;
 
@@ -43,9 +43,12 @@
         with-brs
     ));
 
-@tests = (qw(sections-and-paras));
+@tests = (qw(
+    sections-and-paras
+    sections-p-b-i
+    ));
 
-# TEST:$num_texts=1
+# TEST:$num_texts=2
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",

changeset:   29:5fa23502dba9
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 17:11:38 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-and-paras.txt perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
description:
[XML-G-Fiction] Got the proto-text sections-and-paras example to render.


diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 04 07:48:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Wed Nov 04 17:11:38 2009 +0000
@@ -32,6 +32,7 @@
 t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
 t/data/proto-text/nested-s.txt
 t/data/proto-text/scenes-with-titles.txt
+t/data/proto-text/sections-and-paras.txt
 t/data/proto-text/two-nested-s.txt
 t/data/proto-text/with-brs.txt
 t/data/proto-text/with-comments.txt
diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 04 07:48:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Wed Nov 04 17:11:38 2009 +0000
@@ -14,10 +14,13 @@
 
 use Moose;
 
+use List::Util (qw(first));
+
 has "_parser" => ('isa' => "XML::Grammar::Fiction::FromProto::Parser", 'is' => "rw");
 has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
 
-my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
+my $fiction_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/};
+my $xml_ns = "http://www.w3.org/XML/1998/namespace";
 
 =head1 NAME
 
@@ -72,7 +75,7 @@
     my ($self, $args) = @_;
 
     my @start = @{$args->{start}};
-    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
+    $self->_writer->startTag([$fiction_ns,$start[0]], @start[1..$#start]);
 
     $args->{in}->($self, $args);
 
@@ -127,14 +130,38 @@
     {
         $self->_output_tag_with_childs(
             {
-               start => ["para"],
+               start => ["p"],
                 elem => $elem,
             },
         );
     }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::List"))
+    {
+        foreach my $child (@{$elem->contents()})
+        {
+            $self->_write_elem({elem => $child, });
+        }
+    }
     elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Element"))
     {
-        if (($elem->name() eq "s") || ($elem->name() eq "section"))
+        if ($elem->name() eq "title")
+        {
+            my $list = $elem->_get_childs()->[0];
+            my $p = $list->contents()->[0];
+            $self->_output_tag(
+                {
+                    start => ["title"],
+                    in => sub {
+                        $self->_write_elem(
+                            {
+                                elem => $p->_get_childs()->[0],
+                            }                            
+                        ),
+                    },
+                },
+            );
+        }
+        elsif ($elem->name() eq "s")
         {
             $self->_write_scene({scene => $elem});
         }
@@ -202,12 +229,9 @@
             Carp::confess("Unspecified id for scene!");
         }
 
-        my $title = $scene->lookup_attr("title");
-        my @t = (defined($title) ? (title => $title) : ());
-
         $self->_output_tag_with_childs(
             {
-                'start' => ["scene", id => $id, @t],
+                'start' => ["section", [$xml_ns, "id"] => $id],
                 elem => $scene,
             }
         );
@@ -247,6 +271,48 @@
     return $self->_parser->process_text($self->_read_file($filename));
 }
 
+sub _write_body
+{
+    my $self = shift;
+    my $args = shift;
+
+    my $body = $args->{'body'};
+
+    my $tag = $body->name;
+    if ($tag ne "body")
+    {
+        confess "Improper body tag - should be '<body>'!";
+    }
+
+    my $id = $body->lookup_attr("id");
+
+=begin foo
+    my $title =
+        first
+        { $_->name() eq "title" }
+        @{$body->_get_childs()}
+        ;
+
+    my @t = 
+    (
+          defined($title)
+        ? (title => $title->_get_childs()->[0])
+        : ()
+    );
+=end foo
+
+=cut
+
+    $self->_output_tag_with_childs(
+        {
+            'start' => ["body", [$xml_ns, "id"] => $id],
+            elem => $body,
+        }
+    );
+
+    return;
+}
+
 sub convert
 {
     my ($self, $args) = @_;
@@ -272,24 +338,21 @@
         NAMESPACES => 1,
         PREFIX_MAP =>
         {
-             $screenplay_ns => "",
+             $fiction_ns => "",
+             $xml_ns => "xml",
         }
     );
 
     $writer->xmlDecl("utf-8");
     $writer->doctype("document", undef, "screenplay-xml.dtd");
-    $writer->startTag([$screenplay_ns, "document"]);
-    $writer->startTag([$screenplay_ns, "head"]);
+    $writer->startTag([$fiction_ns, "document"]);
+    $writer->startTag([$fiction_ns, "head"]);
     $writer->endTag();
-    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
 
     # Now we're inside the body.
     $self->_writer($writer);
 
-    $self->_write_scene({scene => $tree});
-
-    # Ending the body
-    $writer->endTag();
+    $self->_write_body({body => $tree});
 
     $writer->endTag();
     
diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:48:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 17:11:38 2009 +0000
@@ -142,8 +142,10 @@
             # line
             my $l = shift;
 
-            if ($$l !~ m{\G<($id_regex)}g)
+            my $p = pos($$l);
+            if ($$l !~ m{\G<($id_regex)}cg)
             {
+                print "Before : " . substr($$l, 0, $p) . "\n";
                 Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
             }
             my $id = $1;
@@ -201,6 +203,7 @@
             return
             {
                 name => $1,
+                line => $self->_get_line_num(),
             };
         }
     );
@@ -238,7 +241,7 @@
 {
     my $self = shift;
 
-    my $start_line = $self->_get_line_num();
+    my $start_line = $self->_curr_line_idx();
 
     # Skip the [
     $self->_with_curr_line(
@@ -258,8 +261,9 @@
             if ($$l !~ m{\G\]}g)
             {
                 Carp::confess (
-                      "Inner description that started on line $start_line did "
-                    . "not terminate with a \"]\"!"
+                      "Inner description that started on line "
+                      . ($start_line+1) 
+                      . " did not terminate with a \"]\"!"
                 );
             }
         }
@@ -393,7 +397,11 @@
     {
         if (!defined(${$self->_next_line_ref()}))
         {
-            Carp::confess "End of file in an addressing paragraph starting at $start_line";
+            Carp::confess 
+            (
+                "End of file in an addressing paragraph starting at "
+                . ($start_line+1)
+            );
         }
     }
 
@@ -530,7 +538,11 @@
 
     if ($is_end)
     {
-        Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
+        Carp::confess (
+            qq{Description ("[ ... ]") that started on line }
+            . ($start_line+1) . 
+            qq{does not terminate anywhere.}
+        );
     }
 
     return $self->_new_node({
@@ -548,31 +560,26 @@
 {
     my $self = shift;
 
-    if (pos(${$self->_curr_line_ref()}) == 0)
+    my $l = $self->_curr_line_ref();
+
+    if (pos($$l) < length($$l))
     {
-        return $self->_with_curr_line(
-            sub {
-                my $l = shift;
-                if (substr($$l, 0, 1) eq "[")
-                {
-                    return $self->_parse_desc_unit();
-                }
-                elsif ($$l =~ m{\A[^:]+:})
-                {
-                    return $self->_parse_speech_unit();
-                }
-                else
-                {
-                    Carp::confess ("Line " . $self->_curr_line_idx() . 
-                        " is not a description or a saying."
-                    );
-                }
-            }
+        my $text = $self->_consume_up_to(qr{\<}ms);
+
+        $l = $self->_curr_line_ref();
+        if (pos($$l) > 0)
+        {
+            pos($$l)--;
+        }
+
+        my @paras = split(/\n{2,}/, $text);
+        return $self->_new_list(
+            [ map { $self->_new_para([$_]) } @paras]
         );
     }
     else
     {
-        Carp::confess ("Line " . $self->_curr_line_idx() . 
+        Carp::confess ("Line " . $self->_get_line_num() . 
             " has leading whitespace."
             );
     }
@@ -583,15 +590,21 @@
     my $self = shift;
     my $space = $self->_consume(qr{\s});
 
-    if ($self->_curr_line() =~ m{\G<})
+    my $l = $self->_curr_line_ref();
+    my $orig_pos = pos($$l);
+
+    if ($$l =~ m{\G<}cg)
     {
         # If it's a tag.
 
         # TODO : implement the comment handling.
         # We have a tag.
 
+        my $is_closing_tag = ($$l =~ m{\G/}cg);
+        pos($$l) = $orig_pos;
+
         # If it's a closing tag - then backtrack.
-        if ($self->_curr_line() =~ m{\G</})
+        if ($is_closing_tag)
         {
             return undef;
         }
@@ -664,8 +677,7 @@
     }
     continue
     {
-        $self->_next_line_ref();
-        $l = $self->_curr_line_ref();
+        $l = $self->_next_line_ref();
     }
 
     if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
@@ -698,8 +710,7 @@
     }
     continue
     {
-        $self->_next_line_ref();
-        $l = $self->_curr_line_ref();
+        $l = $self->_next_line_ref();
     }
 
     return $return_value;
@@ -715,7 +726,7 @@
 
     $self->_curr_line_idx(0);
 
-    $self->_curr_line() =~ m{\A}g;
+    ${$self->_curr_line_ref()} =~ m{\A}g;
 
     return;
 }
diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- a/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Wed Nov 04 07:48:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Wed Nov 04 17:11:38 2009 +0000
@@ -1,23 +1,3 @@
-<s id="top">
+<start id="top">
 
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.<br />
-I will kill you.<br />
-You will not survive.<br />
-I will kill you.<br />
-I will kill you.<br />
-Ask Jive.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-Goliath [dead]: vengence will be mine.
-
-</s>
-
-</s>
+</wrong-finish-tag>
diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-and-paras.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/sections-and-paras.txt	Wed Nov 04 17:11:38 2009 +0000
@@ -0,0 +1,26 @@
+<body id="index">
+
+<title>David vs. Goliath - Part I</title>
+
+<s id="top">
+
+<title>The Top Section</title>
+
+David and Goliath were standing by each other.
+
+David said unto Goliath: "I will shoot you."
+
+<s id="goliath">
+
+<title>Goliath's Response</title>
+
+Goliath was not amused.
+
+He said to David: "Oh, really".
+
+</s>
+
+</s>
+
+</body>
+
diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 04 07:48:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Wed Nov 04 17:11:38 2009 +0000
@@ -44,7 +44,7 @@
 my $err = $@;
 
 # TEST
-like ($err, qr{inner-desc.*?addressing},
+like ($err, qr{Tags do not match: start on line 1 and wrong-finish-tag},
    "Tried to put an inner-desc inside an addressing "
 );
 
diff -r 9954f87b74dd -r 5fa23502dba9 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Wed Nov 04 07:48:14 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Wed Nov 04 17:11:38 2009 +0000
@@ -3,9 +3,9 @@
 use strict;
 use warnings;
 
-use Test::More skip_all => "Not implemented yet for XML-Grammar-Fortune";
+use Test::More tests => 2;
 
-# use Test::XML tests => 26;
+use Test::XML;
 
 use XML::LibXML;
 
@@ -43,7 +43,9 @@
         with-brs
     ));
 
-# TEST:$num_texts=13
+@tests = (qw(sections-and-paras));
+
+# TEST:$num_texts=1
 
 my $grammar = XML::Grammar::Fiction::FromProto->new({
         parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
@@ -51,7 +53,7 @@
 
 my $rngschema = XML::LibXML::RelaxNG->new(
         location => "./extradata/fiction-xml.rng" 
-    );    
+    );
 
 my $xml_parser = XML::LibXML->new();
 $xml_parser->validation(0);

changeset:   28:9954f87b74dd
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:48:14 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: extracted the $self->_new_empty_list() method.


diff -r 776096a9723b -r 9954f87b74dd perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:46:10 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:48:14 2009 +0000
@@ -86,9 +86,7 @@
 {
     my $self = shift;
     my $open = shift;
-    my $children =
-        shift || 
-        $self->_new_list([]);
+    my $children = shift || $self->_new_empty_list();
 
     return
         $self->_new_node(
@@ -101,6 +99,12 @@
         );
 }
 
+sub _new_empty_list
+{
+    my $self = shift;
+    return $self->_new_list([]);
+}
+
 sub _new_list
 {
     my $self = shift;
@@ -215,7 +219,7 @@
     # If it's whitespace - return an empty list.
     if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
     {
-        return $self->_new_list([]);
+        return $self->_new_empty_list();
     }
 
     return $self->_new_list(\@ret);

changeset:   27:776096a9723b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:46:10 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted _new_list from everywhere.


diff -r 581163e7c15c -r 776096a9723b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:42:45 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:46:10 2009 +0000
@@ -88,12 +88,7 @@
     my $open = shift;
     my $children =
         shift || 
-        $self->_new_node(
-            {
-                t => "List",
-                contents => []
-            },
-        );
+        $self->_new_list([]);
 
     return
         $self->_new_node(
@@ -220,22 +215,10 @@
     # If it's whitespace - return an empty list.
     if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
     {
-        return 
-            $self->_new_node(
-                {
-                    t => 'List',
-                    contents => []
-                }
-            );
+        return $self->_new_list([]);
     }
 
-    return 
-        $self->_new_node(
-            {
-                t => "List",
-                contents => \@ret,
-            }
-        );
+    return $self->_new_list(\@ret);
 }
 
 sub _consume_paragraph
@@ -283,12 +266,7 @@
             {
                 t => "InnerDesc",
                 start => $start_line,
-                children => _new_node->(
-                    {
-                        t => "List",
-                        contents => $inside,
-                    }
-                ),
+                children => $self->_new_list($inside),
             }
         );
 }

changeset:   26:581163e7c15c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:42:45 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Refactoring: converted _new_node to a method.


diff -r 620f42bb559b -r 581163e7c15c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 07:35:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 07:42:45 2009 +0000
@@ -5,23 +5,6 @@
 
 use List::Util ();
 
-use Sub::Exporter -setup => {
-    exports => [qw(_new_node)],
-};
-
-sub _new_node
-{
-    my $args = shift;
-
-    # t == type
-    my $class = 
-        "XML::Grammar::Fiction::FromProto::Node::"
-        . delete($args->{'t'})
-        ;
-
-    return $class->new(%$args);
-}
-
 package XML::Grammar::Fiction::FromProto::Node;
 
 use Moose;
diff -r 620f42bb559b -r 581163e7c15c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:35:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:42:45 2009 +0000
@@ -10,7 +10,8 @@
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
 
-use XML::Grammar::Fiction::FromProto::Nodes qw(_new_node);
+use XML::Grammar::Fiction::FromProto::Nodes;
+
 
 sub _curr_line :lvalue
 {
@@ -66,13 +67,28 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
+
+sub _new_node
+{
+    my $self = shift;
+    my $args = shift;
+
+    # t == type
+    my $class = 
+        "XML::Grammar::Fiction::FromProto::Node::"
+        . delete($args->{'t'})
+        ;
+
+    return $class->new(%$args);
+}
+
 sub _create_elem
 {
     my $self = shift;
     my $open = shift;
     my $children =
         shift || 
-        _new_node(
+        $self->_new_node(
             {
                 t => "List",
                 contents => []
@@ -80,7 +96,7 @@
         );
 
     return
-        _new_node(
+        $self->_new_node(
             {
                 t => "Element",
                 name => $open->{name},
@@ -95,7 +111,7 @@
     my $self = shift;
     my $contents = shift;
 
-    return _new_node(
+    return $self->_new_node(
         {
             t => "List",
             contents => $contents,
@@ -108,7 +124,7 @@
     my $self = shift;
     my $contents = shift;
 
-    return _new_node(
+    return $self->_new_node(
         {
             t => "Paragraph",
             children => $self->_new_list($contents),
@@ -205,7 +221,7 @@
     if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
     {
         return 
-            _new_node(
+            $self->_new_node(
                 {
                     t => 'List',
                     contents => []
@@ -214,7 +230,7 @@
     }
 
     return 
-        _new_node(
+        $self->_new_node(
             {
                 t => "List",
                 contents => \@ret,
@@ -263,7 +279,7 @@
     );
 
     return
-        _new_node(
+        $self->_new_node(
             {
                 t => "InnerDesc",
                 start => $start_line,
@@ -487,7 +503,7 @@
     }
 
     return
-        _new_node({
+        $self->_new_node({
                 t => "Saying",
                 character => $first->{character},
                 children => 
@@ -535,7 +551,7 @@
         Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
     }
 
-    return _new_node({
+    return $self->_new_node({
             t => "Description",
             children => $self->_new_list(
             [
@@ -628,7 +644,7 @@
     {
         my $text = $self->_consume_up_to(qr{-->});
 
-        return _new_node({ t => "Comment", text => $text, });
+        return $self->_new_node({ t => "Comment", text => $text, });
     }
 
     my $open = $self->_parse_opening_tag();

changeset:   25:620f42bb559b
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:35:53 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted _new_node() from various other places.


diff -r 067bd1b36ba7 -r 620f42bb559b perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:32:17 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:35:53 2009 +0000
@@ -487,11 +487,12 @@
     }
 
     return
-        XML::Grammar::Fiction::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => 
-                $self->_new_list([ $first->{para}, @others ]),
-        );
+        _new_node({
+                t => "Saying",
+                character => $first->{character},
+                children => 
+                    $self->_new_list([ $first->{para}, @others ]),
+        });
 }
 
 sub _parse_desc_unit
@@ -534,16 +535,15 @@
         Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
     }
 
-    return XML::Grammar::Fiction::FromProto::Node::Description->new(
-        children => 
-        $self->_new_list(
+    return _new_node({
+            t => "Description",
+            children => $self->_new_list(
             [
                 map { 
                 $self->_new_para($_),
                 } @paragraphs
-            ],
-        )
-    );
+            ],),
+    });
 }
 
 sub _parse_non_tag_text_unit
@@ -628,10 +628,7 @@
     {
         my $text = $self->_consume_up_to(qr{-->});
 
-        return
-            XML::Grammar::Fiction::FromProto::Node::Comment->new(
-                text => $text
-            );
+        return _new_node({ t => "Comment", text => $text, });
     }
 
     my $open = $self->_parse_opening_tag();

changeset:   24:067bd1b36ba7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:32:17 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted a _create_elem constructor from elsewhere.


diff -r fa1d2fe7f370 -r 067bd1b36ba7 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:29:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:32:17 2009 +0000
@@ -70,18 +70,21 @@
 {
     my $self = shift;
     my $open = shift;
+    my $children =
+        shift || 
+        _new_node(
+            {
+                t => "List",
+                contents => []
+            },
+        );
 
     return
         _new_node(
             {
                 t => "Element",
                 name => $open->{name},
-                children => _new_node(
-                    {
-                        t => "List",
-                        contents => []
-                    },
-                ),
+                children => $children,
                 attrs => $open->{attrs},
             }
         );
@@ -650,11 +653,7 @@
             . "and $close->{name} on line $close->{line}"
         );
     }
-    return XML::Grammar::Fiction::FromProto::Node::Element->new(
-        name => $open->{name},
-        children => $inside,
-        attrs => $open->{attrs},
-        );
+    return $self->_create_elem($open, $inside);
 }
 
 sub _consume

changeset:   23:fa1d2fe7f370
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:29:32 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
[XML-G-Fiction] Converted _create_elem to a method.


diff -r 34808b3cddb6 -r fa1d2fe7f370 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:25:28 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:29:32 2009 +0000
@@ -68,6 +68,7 @@
 
 sub _create_elem
 {
+    my $self = shift;
     my $open = shift;
 
     return
@@ -283,7 +284,7 @@
     {
         $self->_skip_space();
 
-        return _create_elem($open);
+        return $self->_create_elem($open);
     }
 
     my $inside = $self->_parse_inner_text();
@@ -297,7 +298,7 @@
             . "line $open->{line}"
         );
     }
-    return _create_elem($open);
+    return $self->_create_elem($open);
 }
 
 sub _parse_inner_text

changeset:   22:34808b3cddb6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:25:28 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted the _new_para method.


diff -r 641d6097af30 -r 34808b3cddb6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:07:39 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:25:28 2009 +0000
@@ -99,6 +99,19 @@
     );
 }
 
+sub _new_para
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return _new_node(
+        {
+            t => "Paragraph",
+            children => $self->_new_list($contents),
+        }
+    );
+}
+
 sub _parse_opening_tag
 {
     my $self = shift;
@@ -422,10 +435,7 @@
     return
     +{
          character => $sayer,
-         para => XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-            children =>
-            $self->_new_list($what),
-            ),
+         para => $self->_new_para($what),
     };
 }
 
@@ -457,11 +467,7 @@
 
     my $what = $self->_parse_inner_text();
 
-    return
-        XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-            children =>
-            $self->_new_list($what),
-        );
+    return $self->_new_para($what);
 }
 
 sub _parse_speech_unit
@@ -529,9 +535,7 @@
         $self->_new_list(
             [
                 map { 
-                XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-                children => $self->_new_list($_),
-                )
+                $self->_new_para($_),
                 } @paragraphs
             ],
         )

changeset:   21:641d6097af30
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 07:07:39 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
Extracted the _new_list method.


diff -r e51c3de6e5f1 -r 641d6097af30 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 06:59:38 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 07:07:39 2009 +0000
@@ -86,6 +86,19 @@
         );
 }
 
+sub _new_list
+{
+    my $self = shift;
+    my $contents = shift;
+
+    return _new_node(
+        {
+            t => "List",
+            contents => $contents,
+        }
+    );
+}
+
 sub _parse_opening_tag
 {
     my $self = shift;
@@ -411,9 +424,7 @@
          character => $sayer,
          para => XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
             children =>
-            XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => $what,
-                )
+            $self->_new_list($what),
             ),
     };
 }
@@ -449,9 +460,7 @@
     return
         XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
             children =>
-            XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => $what,
-                )
+            $self->_new_list($what),
         );
 }
 
@@ -471,9 +480,7 @@
         XML::Grammar::Fiction::FromProto::Node::Saying->new(
             character => $first->{character},
             children => 
-                XML::Grammar::Fiction::FromProto::Node::List->new(
-                    contents => [ $first->{para}, @others ],
-                ),
+                $self->_new_list([ $first->{para}, @others ]),
         );
 }
 
@@ -519,19 +526,15 @@
 
     return XML::Grammar::Fiction::FromProto::Node::Description->new(
         children => 
-            XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents =>
+        $self->_new_list(
             [
-            map { 
-            XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
-                children =>
-                    XML::Grammar::Fiction::FromProto::Node::List->new(
-                        contents => $_,
-                        ),
-                    )
-            } @paragraphs
+                map { 
+                XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+                children => $self->_new_list($_),
+                )
+                } @paragraphs
             ],
-        ),
+        )
     );
 }
 

changeset:   20:e51c3de6e5f1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 06:59:38 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
description:
[XML-G-Fiction] Started refactoring Parser::QnD to have shorter identifiers.


diff -r cd02186c0049 -r e51c3de6e5f1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 05:20:00 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 06:59:38 2009 +0000
@@ -5,6 +5,23 @@
 
 use List::Util ();
 
+use Sub::Exporter -setup => {
+    exports => [qw(_new_node)],
+};
+
+sub _new_node
+{
+    my $args = shift;
+
+    # t == type
+    my $class = 
+        "XML::Grammar::Fiction::FromProto::Node::"
+        . delete($args->{'t'})
+        ;
+
+    return $class->new(%$args);
+}
+
 package XML::Grammar::Fiction::FromProto::Node;
 
 use Moose;
diff -r cd02186c0049 -r e51c3de6e5f1 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 05:20:00 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Wed Nov 04 06:59:38 2009 +0000
@@ -10,6 +10,8 @@
 has "_curr_line_idx" => (isa => "Int", is => "rw");
 has "_lines" => (isa => "ArrayRef", is => "rw");
 
+use XML::Grammar::Fiction::FromProto::Nodes qw(_new_node);
+
 sub _curr_line :lvalue
 {
     my $self = shift;
@@ -64,6 +66,26 @@
 
 my $id_regex = '[a-zA-Z_\-]+';
 
+sub _create_elem
+{
+    my $open = shift;
+
+    return
+        _new_node(
+            {
+                t => "Element",
+                name => $open->{name},
+                children => _new_node(
+                    {
+                        t => "List",
+                        contents => []
+                    },
+                ),
+                attrs => $open->{attrs},
+            }
+        );
+}
+
 sub _parse_opening_tag
 {
     my $self = shift;
@@ -153,13 +175,20 @@
     if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
     {
         return 
-            XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => []
+            _new_node(
+                {
+                    t => 'List',
+                    contents => []
+                }
             );
     }
 
-    return XML::Grammar::Fiction::FromProto::Node::List->new(
-        contents => \@ret,
+    return 
+        _new_node(
+            {
+                t => "List",
+                contents => \@ret,
+            }
         );
 }
 
@@ -204,13 +233,18 @@
     );
 
     return
-        XML::Grammar::Fiction::FromProto::Node::InnerDesc->new(
-            start => $start_line,
-            children => XML::Grammar::Fiction::FromProto::Node::List->new(
-                contents => $inside
-            ),
+        _new_node(
+            {
+                t => "InnerDesc",
+                start => $start_line,
+                children => _new_node->(
+                    {
+                        t => "List",
+                        contents => $inside,
+                    }
+                ),
+            }
         );
- 
 }
 
 sub _parse_inner_tag
@@ -223,14 +257,7 @@
     {
         $self->_skip_space();
 
-        return        
-            XML::Grammar::Fiction::FromProto::Node::Element->new(
-                name => $open->{name},
-                children => XML::Grammar::Fiction::FromProto::Node::List->new(
-                    contents => []
-                ),
-                attrs => $open->{attrs},
-            );
+        return _create_elem($open);
     }
 
     my $inside = $self->_parse_inner_text();
@@ -244,13 +271,7 @@
             . "line $open->{line}"
         );
     }
-    return XML::Grammar::Fiction::FromProto::Node::Element->new(
-        name => $open->{name},
-        children => XML::Grammar::Fiction::FromProto::Node::List->new(
-            contents => $inside
-            ),
-        attrs => $open->{attrs},
-        );
+    return _create_elem($open);
 }
 
 sub _parse_inner_text

changeset:   19:cd02186c0049
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 05:20:00 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
description:
Moved the method elsewhere.


diff -r d558a31129a2 -r cd02186c0049 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 05:18:11 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 05:20:00 2009 +0000
@@ -9,6 +9,17 @@
 
 use Moose;
 
+sub _short_isa
+{
+    my $self = shift;
+    my $isa_classish = shift;
+
+    return
+        $self->isa(
+            "XML::Grammar::Fiction::FromProto::Node::$isa_classish"
+        );
+}
+
 package XML::Grammar::Fiction::FromProto::Node::WithContent;
 
 use Moose;
@@ -29,17 +40,6 @@
     return $childs || [];
 }
 
-sub _short_isa
-{
-    my $self = shift;
-    my $isa_classish = shift;
-
-    return
-        $self->isa(
-            "XML::Grammar::Fiction::FromProto::Node::$isa_classish"
-        );
-}
-
 package XML::Grammar::Fiction::FromProto::Node::Element;
 
 use Moose;

changeset:   18:d558a31129a2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Wed Nov 04 05:18:11 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
description:
Add a method for short ->isa.


diff -r 3bd1224cc588 -r d558a31129a2 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Nov 03 22:39:47 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Wed Nov 04 05:18:11 2009 +0000
@@ -29,6 +29,17 @@
     return $childs || [];
 }
 
+sub _short_isa
+{
+    my $self = shift;
+    my $isa_classish = shift;
+
+    return
+        $self->isa(
+            "XML::Grammar::Fiction::FromProto::Node::$isa_classish"
+        );
+}
+
 package XML::Grammar::Fiction::FromProto::Node::Element;
 
 use Moose;

changeset:   17:3bd1224cc588
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 22:39:47 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
[XML-G-Fiction] More refactoring of t/to-xhtml.t.


diff -r 289076f22cb4 -r 3bd1224cc588 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 22:19:40 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 22:39:47 2009 +0000
@@ -33,38 +33,50 @@
 
 # TEST:$num_texts=2
 
-my $converter = XML::Grammar::Fiction::ToHTML->new({
-        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
-    });
+my %converters =
+(
+    'xhtml' =>
+    {
+        class => "XML::Grammar::Fiction::ToHTML",
+        method => "translate_to_html",
+    },
+    'db' =>
+    {
+        class => "XML::Grammar::Fiction::ToDocBook",
+        method => "translate_to_docbook",
+    },
+);
 
-my $db_converter = XML::Grammar::Fiction::ToDocBook->new({
-        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
-    });
+foreach my $conv_id (keys(%converters))
+{
+    my $h_ref = $converters{$conv_id};
+    $h_ref->{obj} = $h_ref->{class}->new(
+        {
+            data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+        }
+    );
+}
 
 foreach my $fn (@tests)
 {
     my $xpc = XML::LibXML::XPathContext->new();
     $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
     $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
-    
-    my $xhtml_text = $converter->translate_to_html({
-            source => { file => "t/data/xml/$fn.xml", },
-            output => "string",
-        }
-        );
-
-    my $docbook_text = $db_converter->translate_to_docbook({
-            source => { file => "t/data/xml/$fn.xml", },
-            output => "string",
-        }
-        );
-
+   
     # This is a closure that returns a closure (like shown in "On Lisp" :
     # http://www.paulgraham.com/onlisptext.html ) for a finder in
     # one of the documents
     my $create_finder = sub {
-        my $text = shift;
+        my $format_id = shift;
 
+        my $format_hash = $converters{$format_id};
+        my $m = $format_hash->{method};
+        my $text = $format_hash->{'obj'}->$m(
+            {
+                source => { file => "t/data/xml/$fn.xml", },
+                output => "string",
+            }
+        );
         my $parser = XML::LibXML->new();
 
         $parser->load_ext_dtd(0);
@@ -77,8 +89,8 @@
         };
     };
 
-    my $xhtml_find = $create_finder->($xhtml_text);
-    my $db_find = $create_finder->($docbook_text);
+    my $xhtml_find = $create_finder->("xhtml");
+    my $db_find = $create_finder->("db");
 
     # TEST*$num_texts
     is (

changeset:   16:289076f22cb4
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 22:19:40 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
[XML-G-Fiction] Eliminated some duplicate code in t/to-xhtml.t .


diff -r 76e0828ce3dc -r 289076f22cb4 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 22:08:37 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 22:19:40 2009 +0000
@@ -43,6 +43,10 @@
 
 foreach my $fn (@tests)
 {
+    my $xpc = XML::LibXML::XPathContext->new();
+    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+    $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
+    
     my $xhtml_text = $converter->translate_to_html({
             source => { file => "t/data/xml/$fn.xml", },
             output => "string",
@@ -55,31 +59,26 @@
         }
         );
 
-    my $parser = XML::LibXML->new();
+    # This is a closure that returns a closure (like shown in "On Lisp" :
+    # http://www.paulgraham.com/onlisptext.html ) for a finder in
+    # one of the documents
+    my $create_finder = sub {
+        my $text = shift;
 
-    $parser->load_ext_dtd(0);
+        my $parser = XML::LibXML->new();
 
-    my $doc = $parser->parse_string($xhtml_text);
+        $parser->load_ext_dtd(0);
 
-    my $db_parser = XML::LibXML->new();
+        my $doc = $parser->parse_string($text);
 
-    $db_parser->load_ext_dtd(0);
-
-    my $db_doc = $db_parser->parse_string($docbook_text);
-    
-    my $xpc = XML::LibXML::XPathContext->new();
-    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
-    $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
-
-    my $xhtml_find = sub {
-        my $xpath = shift;
-        return $xpc->findnodes($xpath, $doc);
+        return sub {
+            my $xpath = shift;
+            return $xpc->findnodes($xpath, $doc);
+        };
     };
 
-    my $db_find = sub {
-        my $xpath = shift;
-        return $xpc->findnodes($xpath, $db_doc);
-    };
+    my $xhtml_find = $create_finder->($xhtml_text);
+    my $db_find = $create_finder->($docbook_text);
 
     # TEST*$num_texts
     is (

changeset:   15:76e0828ce3dc
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 22:08:37 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Now handling <b> and <i> in the DocBook/XML stylesheet.


diff -r 95d00bab1237 -r 76e0828ce3dc perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue Nov 03 21:26:30 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue Nov 03 22:08:37 2009 +0000
@@ -58,4 +58,17 @@
     </para>
 </xsl:template>
 
+
+<xsl:template match="fic:b">
+    <emphasis role="bold">
+        <xsl:apply-templates/>
+    </emphasis>
+</xsl:template>
+
+<xsl:template match="fic:i">
+    <emphasis>
+        <xsl:apply-templates/>
+    </emphasis>
+</xsl:template>
+
 </xsl:stylesheet>
diff -r 95d00bab1237 -r 76e0828ce3dc perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 21:26:30 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 22:08:37 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 24;
+use Test::More tests => 28;
 
 use File::Spec;
 
@@ -146,33 +146,67 @@
     # TEST:$num_with_styles=1;
     if ($fn eq "sections-p-b-i")
     {
-        my @elems;
+        {
+            my @elems;
 
-        @elems = $xhtml_find->(q{//x:div/x:p/x:b});
-        # TEST*$num_with_styles
-        is (
-            scalar(@elems),
-            1,
-            "Found bold tag",
-        );
+            @elems = $xhtml_find->(q{//x:div/x:p/x:b});
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "Found bold tag",
+            );
 
-        # TEST*$num_with_styles
-        like ($elems[0]->toString(), qr{swear}, 
-            "Elem[0] is the right <b> tag."
-        );
-        
-        @elems = $xhtml_find->(q{//x:div/x:p/x:i});
-        # TEST*$num_with_styles
-        is (
-            scalar(@elems),
-            1,
-            "Found italic tag",
-        );
+            # TEST*$num_with_styles
+            like ($elems[0]->toString(), qr{swear}, 
+                "Elem[0] is the right <b> tag."
+            );
+            
+            @elems = $xhtml_find->(q{//x:div/x:p/x:i});
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "Found italic tag",
+            );
 
-        # TEST*$num_with_styles
-        like ($elems[0]->toString(), qr{David}, 
-            "<i>[0] contains the right contents."
-        );
+            # TEST*$num_with_styles
+            like ($elems[0]->toString(), qr{David}, 
+                "<i>[0] contains the right contents."
+            );
+        }
+
+        {
+            my @elems;
+
+            @elems = $db_find->(q{//db:article/db:section/db:para/db:emphasis[@role="bold"]});
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "DocBook: found bold tag",
+            );
+
+            # TEST*$num_with_styles
+            is ($elems[0]->textContent(), "swear", 
+                "Elem[0] is the right <emphasis role=bold> tag."
+            );
+            
+            @elems = $db_find->(
+                q{//db:article//db:section/db:para/db:emphasis[not(@role)]}
+            );
+            # TEST*$num_with_styles
+            is (
+                scalar(@elems),
+                1,
+                "Found italic tag",
+            );
+
+            # TEST*$num_with_styles
+            is ($elems[0]->textContent(), "David", 
+                "<i>[0] contains the right contents.",
+            );
+        }
     }
 }
 

changeset:   14:95d00bab1237
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 21:26:30 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
[XML-G-Fiction] Now we have an <h1> in the XHTML (with test).


diff -r cf5a1b9d457c -r 95d00bab1237 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 21:09:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 21:26:30 2009 +0000
@@ -21,11 +21,18 @@
             </title>
         </head>
         <body>
-            <div class="screenplay">
-            <xsl:attribute name="xml:id">
-                <xsl:value-of select="@xml:id" />
-            </xsl:attribute>
-            <xsl:apply-templates select="fic:section" />
+            <div class="fiction story">
+                <xsl:attribute name="xml:id">
+                    <xsl:value-of select="@xml:id" />
+                </xsl:attribute>                
+                <!-- TODO : duplicate code between here and fic:section.
+                    Abstract into a common functionality! 
+                -->
+                <xsl:element name="h{count(ancestor-or-self::fic:section|ancestor-or-self::fic:body)}">
+                    <xsl:value-of select="fic:title" />
+                </xsl:element>
+                
+                <xsl:apply-templates select="fic:section" />
             </div>
         </body>
     </html>
diff -r cf5a1b9d457c -r 95d00bab1237 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 21:09:32 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 21:26:30 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 20;
+use Test::More tests => 24;
 
 use File::Spec;
 
@@ -102,17 +102,23 @@
         is ($title[0]->textContent(), "David vs. Goliath - Part I");
     }
 
+    # TEST:$num_xhtml_top_titles=2;
+    # TEST:$n=$num_texts*$num_xhtml_top_titles;
+    foreach my $xpath (
+        q{//x:html/x:head/x:title}, 
+        q{//x:html/x:body/x:div/x:h1},
+    )
     {
-        my @title = $xhtml_find->(q{//x:html/x:head/x:title});
+        my @title = $xhtml_find->($xpath);
 
-        # TEST*$num_texts
+        # TEST*$n
         is (
             scalar(@title),
             1,
             "Found one global <x:title>",
         );
 
-        # TEST*$num_texts
+        # TEST*$n
         is ($title[0]->textContent(), "David vs. Goliath - Part I",
             "XHTML <title> has good content"
         );

changeset:   13:cf5a1b9d457c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 21:09:32 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Add the <title> support to the XHTML stylesheet.


diff -r 5a3f8be1d41c -r cf5a1b9d457c perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 21:06:51 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 21:09:32 2009 +0000
@@ -16,7 +16,9 @@
 <xsl:template match="fic:body">
     <html>
         <head>
-            <title>Story</title>
+            <title>
+                <xsl:value-of select="fic:title" />
+            </title>
         </head>
         <body>
             <div class="screenplay">
diff -r 5a3f8be1d41c -r cf5a1b9d457c perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 21:06:51 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 21:09:32 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 16;
+use Test::More tests => 20;
 
 use File::Spec;
 
@@ -102,6 +102,22 @@
         is ($title[0]->textContent(), "David vs. Goliath - Part I");
     }
 
+    {
+        my @title = $xhtml_find->(q{//x:html/x:head/x:title});
+
+        # TEST*$num_texts
+        is (
+            scalar(@title),
+            1,
+            "Found one global <x:title>",
+        );
+
+        # TEST*$num_texts
+        is ($title[0]->textContent(), "David vs. Goliath - Part I",
+            "XHTML <title> has good content"
+        );
+    }
+    
     # TEST*$num_texts
     ok (
         (scalar(() = $xhtml_find->(q{//x:div}))

changeset:   12:5a3f8be1d41c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 21:06:51 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
description:
Minor: corrected indentation.


diff -r deb2c5a034a2 -r 5a3f8be1d41c perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 21:04:18 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 21:06:51 2009 +0000
@@ -3,7 +3,7 @@
     <head>
     </head>
     <body xml:id="index">
-        <title>David vs. Goliath - Part I</title>
+    <title>David vs. Goliath - Part I</title>
     <section xml:id="top">
     <title>The Top Section</title>
     <p>

changeset:   11:deb2c5a034a2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 21:04:18 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Add the global <body>/<title> attribute - applied to the DocBook/XML.


diff -r af3fbdac3f25 -r deb2c5a034a2 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue Nov 03 20:51:59 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue Nov 03 21:04:18 2009 +0000
@@ -21,6 +21,11 @@
         <xsl:attribute name="xml:lang">
             <xsl:value-of select="@xml:lang" />
         </xsl:attribute>
+        <info>
+            <title>
+                <xsl:value-of select="fic:title" />
+            </title>
+        </info>
         <xsl:apply-templates select="fic:section" />
     </article>
 </xsl:template>
diff -r af3fbdac3f25 -r deb2c5a034a2 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 20:51:59 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 21:04:18 2009 +0000
@@ -12,6 +12,7 @@
             </element>
             <element name="fic:body">
                 <ref name="common_attrs" />
+                <ref name="title" />
                 <oneOrMore>
                     <ref name="section" />
                 </oneOrMore>
@@ -33,9 +34,7 @@
     <define name="section">
         <element name="fic:section">
             <ref name="common_attrs" />
-            <element name="fic:title">
-                <text />
-            </element>
+            <ref name="title" />
             <ref name="several_paras" />
             <zeroOrMore>
                 <ref name="section" />
@@ -68,5 +67,10 @@
             <text />
         </element>
     </define>
+    <define name="title">
+        <element name="fic:title">
+            <text />
+        </element>
+    </define>
 </grammar>
 
diff -r af3fbdac3f25 -r deb2c5a034a2 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Tue Nov 03 20:51:59 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Tue Nov 03 21:04:18 2009 +0000
@@ -3,6 +3,7 @@
     <head>
     </head>
     <body xml:id="index">
+    <title>David vs. Goliath - Part I</title>        
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
diff -r af3fbdac3f25 -r deb2c5a034a2 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 20:51:59 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 21:04:18 2009 +0000
@@ -3,6 +3,7 @@
     <head>
     </head>
     <body xml:id="index">
+        <title>David vs. Goliath - Part I</title>
     <section xml:id="top">
     <title>The Top Section</title>
     <p>
diff -r af3fbdac3f25 -r deb2c5a034a2 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 20:51:59 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 21:04:18 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 12;
+use Test::More tests => 16;
 
 use File::Spec;
 
@@ -88,6 +88,20 @@
         "Found one article with id index",
     );
 
+    {
+        my @title = $db_find->(q{//db:article/db:info/db:title});
+
+        # TEST*$num_texts
+        is (
+            scalar(@title),
+            1,
+            "Found one global <db:title>",
+        );
+
+        # TEST*$num_texts
+        is ($title[0]->textContent(), "David vs. Goliath - Part I");
+    }
+
     # TEST*$num_texts
     ok (
         (scalar(() = $xhtml_find->(q{//x:div}))

changeset:   10:af3fbdac3f25
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 20:51:59 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Started extending t/to-xhtml.t to handle DocBook too.

In the process it was refactored with a closure.


diff -r 211e0ff9e1c1 -r af3fbdac3f25 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 20:10:10 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 20:51:59 2009 +0000
@@ -10,6 +10,7 @@
 use XML::LibXML;
 
 use XML::Grammar::Fiction::ToHTML;
+use XML::Grammar::Fiction::ToDocBook;
 
 my @tests = (qw(
         sections-and-paras
@@ -36,6 +37,10 @@
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
     });
 
+my $db_converter = XML::Grammar::Fiction::ToDocBook->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
 foreach my $fn (@tests)
 {
     my $xhtml_text = $converter->translate_to_html({
@@ -44,24 +49,48 @@
         }
         );
 
+    my $docbook_text = $db_converter->translate_to_docbook({
+            source => { file => "t/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
     my $parser = XML::LibXML->new();
 
     $parser->load_ext_dtd(0);
 
     my $doc = $parser->parse_string($xhtml_text);
 
+    my $db_parser = XML::LibXML->new();
+
+    $db_parser->load_ext_dtd(0);
+
+    my $db_doc = $db_parser->parse_string($docbook_text);
+    
     my $xpc = XML::LibXML::XPathContext->new();
     $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+    $xpc->registerNs('db', q{http://docbook.org/ns/docbook});
+
+    my $xhtml_find = sub {
+        my $xpath = shift;
+        return $xpc->findnodes($xpath, $doc);
+    };
+
+    my $db_find = sub {
+        my $xpath = shift;
+        return $xpc->findnodes($xpath, $db_doc);
+    };
+
     # TEST*$num_texts
     is (
-        scalar(() = $xpc->findnodes(q{//x:html}, $doc)),
+        scalar(() = $xhtml_find->(q{//x:html})),
         1,
         "Found one article with id index",
     );
 
     # TEST*$num_texts
     ok (
-        (scalar(() = $xpc->findnodes(q{//x:div}, $doc))
+        (scalar(() = $xhtml_find->(q{//x:div}))
             >=
             1
         ),
@@ -69,7 +98,7 @@
     );
 
     {
-        my @elems = $xpc->findnodes(q{//x:div[@xml:id="top"]/x:h2}, $doc);
+        my @elems = $xhtml_find->(q{//x:div[@xml:id="top"]/x:h2});
         # TEST*$num_texts
         is (scalar(@elems), 1, "One element");
 
@@ -83,7 +112,7 @@
     {
         my @elems;
 
-        @elems = $xpc->findnodes(q{//x:div/x:p/x:b}, $doc);
+        @elems = $xhtml_find->(q{//x:div/x:p/x:b});
         # TEST*$num_with_styles
         is (
             scalar(@elems),
@@ -96,7 +125,7 @@
             "Elem[0] is the right <b> tag."
         );
         
-        @elems = $xpc->findnodes(q{//x:div/x:p/x:i}, $doc);
+        @elems = $xhtml_find->(q{//x:div/x:p/x:i});
         # TEST*$num_with_styles
         is (
             scalar(@elems),

changeset:   9:211e0ff9e1c1
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 20:10:10 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
description:
Removed an anachronistic comment.


diff -r 7a12906dc767 -r 211e0ff9e1c1 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 20:06:20 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 20:10:10 2009 +0000
@@ -36,7 +36,6 @@
                 <xsl:value-of select="@xml:id" />
             </xsl:attribute>
         </xsl:if>
-        <!-- Make the title the title attribute or "ID" if does not exist. -->
         <xsl:element name="h{count(ancestor-or-self::fic:section|ancestor-or-self::fic:body)}">
             <xsl:value-of select="fic:title" />
         </xsl:element>

changeset:   8:7a12906dc767
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 20:06:20 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Now implemented the handling of the <fic:title /> element.

Fixed some bugs.


diff -r 46e84b04b692 -r 7a12906dc767 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 19:48:05 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 20:06:20 2009 +0000
@@ -37,8 +37,8 @@
             </xsl:attribute>
         </xsl:if>
         <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <xsl:element name="h{count(ancestor-or-self::fic:scene)}">
-            <xsl:value-of select="title" />
+        <xsl:element name="h{count(ancestor-or-self::fic:section|ancestor-or-self::fic:body)}">
+            <xsl:value-of select="fic:title" />
         </xsl:element>
         <xsl:apply-templates select="fic:section|fic:p" />
     </div>
diff -r 46e84b04b692 -r 7a12906dc767 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 19:48:05 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 20:06:20 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 8;
+use Test::More tests => 12;
 
 use File::Spec;
 
@@ -68,6 +68,15 @@
         "Found role=description sections",
     );
 
+    {
+        my @elems = $xpc->findnodes(q{//x:div[@xml:id="top"]/x:h2}, $doc);
+        # TEST*$num_texts
+        is (scalar(@elems), 1, "One element");
+
+        # TEST*$num_texts
+        is ($elems[0]->textContent(), "The Top Section", 
+            "<h2> element contains the right thing.");
+    }
 
     # TEST:$num_with_styles=1;
     if ($fn eq "sections-p-b-i")

changeset:   7:46e84b04b692
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 19:48:05 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Add the <title> element.


diff -r 63b22761bcb2 -r 46e84b04b692 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 19:47:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 19:48:05 2009 +0000
@@ -33,6 +33,9 @@
     <define name="section">
         <element name="fic:section">
             <ref name="common_attrs" />
+            <element name="fic:title">
+                <text />
+            </element>
             <ref name="several_paras" />
             <zeroOrMore>
                 <ref name="section" />
diff -r 63b22761bcb2 -r 46e84b04b692 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Tue Nov 03 19:47:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Tue Nov 03 19:48:05 2009 +0000
@@ -4,6 +4,7 @@
     </head>
     <body xml:id="index">
     <section xml:id="top">
+    <title>The Top Section</title>
     <p>
         David and Goliath were standing by each other.    
     </p>
@@ -11,6 +12,7 @@
         David said unto Goliath: "I will shoot you."
     </p>
     <section xml:id="goliath">
+    <title>Goliath's Response</title>
     <p>
     Goliath was not amused.
     </p>
diff -r 63b22761bcb2 -r 46e84b04b692 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 19:47:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 19:48:05 2009 +0000
@@ -4,6 +4,7 @@
     </head>
     <body xml:id="index">
     <section xml:id="top">
+    <title>The Top Section</title>
     <p>
     David and Goliath were standing by each other.    
     </p>
@@ -11,6 +12,7 @@
     David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
     </p>
     <section xml:id="goliath">
+    <title>Goliath's Response</title>
     <p>
     Goliath was not amused.
     </p>
diff -r 63b22761bcb2 -r 46e84b04b692 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 19:47:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 19:48:05 2009 +0000
@@ -46,6 +46,8 @@
 
     my $parser = XML::LibXML->new();
 
+    $parser->load_ext_dtd(0);
+
     my $doc = $parser->parse_string($xhtml_text);
 
     my $xpc = XML::LibXML::XPathContext->new();

changeset:   6:63b22761bcb2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 19:47:36 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
description:
Add the XHTML namespace to the XSLT stylesheet.


diff -r 47d218fd0958 -r 63b22761bcb2 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 19:10:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 19:47:36 2009 +0000
@@ -1,4 +1,5 @@
 <xsl:stylesheet version = '1.0'
+    xmlns="http://www.w3.org/1999/xhtml"
     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
     xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
      >

changeset:   5:47d218fd0958
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 19:10:53 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
[XML-G-Fiction] Add support for the <b> and <i> tags.

Also fixed many tests due to the behaviour of $xpc->find().


diff -r 96a97a1482e7 -r 47d218fd0958 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 17:56:23 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 19:10:53 2009 +0000
@@ -46,6 +46,7 @@
 t/data/xml/nested-s.xml
 t/data/xml/scenes-with-titles.xml
 t/data/xml/sections-and-paras.xml
+t/data/xml/sections-p-b-i.xml
 t/data/xml/two-nested-s.xml
 t/data/xml/with-brs.xml
 t/data/xml/with-comments.xml
diff -r 96a97a1482e7 -r 47d218fd0958 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 17:56:23 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 19:10:53 2009 +0000
@@ -39,7 +39,7 @@
         <xsl:element name="h{count(ancestor-or-self::fic:scene)}">
             <xsl:value-of select="title" />
         </xsl:element>
-        <xsl:apply-templates select="fic:scene|fic:p" />
+        <xsl:apply-templates select="fic:section|fic:p" />
     </div>
 </xsl:template>
 
@@ -49,4 +49,16 @@
     </p>
 </xsl:template>
 
+<xsl:template match="fic:b">
+    <b>
+        <xsl:apply-templates/>
+    </b>
+</xsl:template>
+
+<xsl:template match="fic:i">
+    <i>
+        <xsl:apply-templates/>
+    </i>
+</xsl:template>
+
 </xsl:stylesheet>
diff -r 96a97a1482e7 -r 47d218fd0958 perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 17:56:23 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 19:10:53 2009 +0000
@@ -46,6 +46,22 @@
     </define>
     <define name="para">
         <element name="fic:p">
+            <zeroOrMore>
+                <choice>
+                    <ref name="b" />
+                    <ref name="i" />
+                    <text />
+                </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="b">
+        <element name="fic:b">
+            <text />
+        </element>
+    </define>
+    <define name="i">
+        <element name="fic:i">
             <text />
         </element>
     </define>
diff -r 96a97a1482e7 -r 47d218fd0958 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-p-b-i.xml	Tue Nov 03 19:10:53 2009 +0000
@@ -0,0 +1,23 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/">
+    <head>
+    </head>
+    <body xml:id="index">
+    <section xml:id="top">
+    <p>
+    David and Goliath were standing by each other.    
+    </p>
+    <p>
+    David said unto Goliath: "I will shoot you. I <b>swear</b> I will"
+    </p>
+    <section xml:id="goliath">
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really. <i>David</i>, the red-headed!".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r 96a97a1482e7 -r 47d218fd0958 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 17:56:23 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 19:10:53 2009 +0000
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More tests => 3;
+use Test::More tests => 8;
 
 use File::Spec;
 
@@ -13,6 +13,7 @@
 
 my @tests = (qw(
         sections-and-paras
+        sections-p-b-i
     ));
 
 sub load_xml
@@ -29,7 +30,7 @@
     return $contents;
 }
 
-# TEST:$num_texts=1
+# TEST:$num_texts=2
 
 my $converter = XML::Grammar::Fiction::ToHTML->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
@@ -51,29 +52,52 @@
     $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
     # TEST*$num_texts
     is (
-        scalar(() = $xpc->find(q{//x:html}, $doc)),
+        scalar(() = $xpc->findnodes(q{//x:html}, $doc)),
         1,
         "Found one article with id index",
     );
 
     # TEST*$num_texts
     ok (
-        (scalar(() = $xpc->find(q{//x:div[@class='saying']}, $doc))
+        (scalar(() = $xpc->findnodes(q{//x:div}, $doc))
             >=
             1
         ),
         "Found role=description sections",
     );
 
-    # TEST*$num_texts
-    ok (
-        (scalar(() = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc))
-            >=
-            1
-        ),
-        "Found role=description sections",
-    );
 
+    # TEST:$num_with_styles=1;
+    if ($fn eq "sections-p-b-i")
+    {
+        my @elems;
+
+        @elems = $xpc->findnodes(q{//x:div/x:p/x:b}, $doc);
+        # TEST*$num_with_styles
+        is (
+            scalar(@elems),
+            1,
+            "Found bold tag",
+        );
+
+        # TEST*$num_with_styles
+        like ($elems[0]->toString(), qr{swear}, 
+            "Elem[0] is the right <b> tag."
+        );
+        
+        @elems = $xpc->findnodes(q{//x:div/x:p/x:i}, $doc);
+        # TEST*$num_with_styles
+        is (
+            scalar(@elems),
+            1,
+            "Found italic tag",
+        );
+
+        # TEST*$num_with_styles
+        like ($elems[0]->toString(), qr{David}, 
+            "<i>[0] contains the right contents."
+        );
+    }
 }
 
 1;

changeset:   4:96a97a1482e7
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 17:56:23 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/to-docbook.t perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Renamed the XML to the new one.


diff -r f2f55ffc119c -r 96a97a1482e7 perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 17:30:11 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 17:56:23 2009 +0000
@@ -1,9 +1,9 @@
 Build.PL
 Changes
-extradata/screenplay-xml.dtd
 extradata/fiction-xml.rng
 extradata/fiction-xml-to-docbook.xslt
 extradata/fiction-xml-to-html.xslt
+extradata/screenplay-xml.dtd
 extradata/screenplay-xml-to-xsl-fo.xslt
 inc/Test/Run/Builder.pm
 inc/XML/Grammar/Builder.pm
@@ -45,13 +45,13 @@
 t/data/xml/dialogue-with-several-paragraphs.xml
 t/data/xml/nested-s.xml
 t/data/xml/scenes-with-titles.xml
+t/data/xml/sections-and-paras.xml
 t/data/xml/two-nested-s.xml
 t/data/xml/with-brs.xml
 t/data/xml/with-comments.xml
 t/data/xml/with-description.xml
 t/data/xml/with-dialogue.xml
 t/data/xml/with-entities.xml
-t/data/xml/with-internal-description.xml
 t/data/xml/with-multi-line-comments.xml
 t/data/xml/with-multi-para-desc.xml
 t/data/xml/with-tags-inside-paragraphs.xml
diff -r f2f55ffc119c -r 96a97a1482e7 perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/sections-and-paras.xml	Tue Nov 03 17:56:23 2009 +0000
@@ -0,0 +1,23 @@
+<?xml version='1.0' encoding='utf-8'?>
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/">
+    <head>
+    </head>
+    <body xml:id="index">
+    <section xml:id="top">
+    <p>
+        David and Goliath were standing by each other.    
+    </p>
+    <p>
+        David said unto Goliath: "I will shoot you."
+    </p>
+    <section xml:id="goliath">
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really".
+    </p>
+    </section>
+    </section>
+</body>
+</document>
diff -r f2f55ffc119c -r 96a97a1482e7 perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml	Tue Nov 03 17:30:11 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,23 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/">
-    <head>
-    </head>
-    <body xml:id="index">
-    <section xml:id="top">
-    <p>
-        David and Goliath were standing by each other.    
-    </p>
-    <p>
-        David said unto Goliath: "I will shoot you."
-    </p>
-    <section xml:id="goliath">
-    <p>
-    Goliath was not amused.
-    </p>
-    <p>
-    He said to David: "Oh, really".
-    </p>
-    </section>
-    </section>
-</body>
-</document>
diff -r f2f55ffc119c -r 96a97a1482e7 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 17:30:11 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 17:56:23 2009 +0000
@@ -34,7 +34,7 @@
         dialogue-with-several-paragraphs
         with-description
         with-tags-inside-paragraphs
-        with-internal-description
+        sections-and-paras
         with-comments
         with-multi-para-desc
         with-multi-line-comments
diff -r f2f55ffc119c -r 96a97a1482e7 perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 17:30:11 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 17:56:23 2009 +0000
@@ -14,7 +14,7 @@
 use XML::Grammar::Fiction::ToDocBook;
 
 my @tests = (qw(
-        with-internal-description
+        sections-and-paras
     ));
 
 sub load_xml
diff -r f2f55ffc119c -r 96a97a1482e7 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 17:30:11 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 17:56:23 2009 +0000
@@ -3,9 +3,7 @@
 use strict;
 use warnings;
 
-use Test::More;
-
-use Test::XML tests => 3;
+use Test::More tests => 3;
 
 use File::Spec;
 
@@ -14,7 +12,7 @@
 use XML::Grammar::Fiction::ToHTML;
 
 my @tests = (qw(
-        with-internal-description
+        sections-and-paras
     ));
 
 sub load_xml

changeset:   3:f2f55ffc119c
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 17:30:11 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t perl/modules/XML-Grammar-Fiction/t/app-to-html.t perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/to-docbook.t
description:
Started implementing the Fiction-XML grammar.

Changed the RNG and two of the XSLT stylesheets - making progress.

The proto-text / lightweight markup language is not working yet, and will
not in some time.


diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 17:30:11 2009 +0000
@@ -1,9 +1,9 @@
 Build.PL
 Changes
 extradata/screenplay-xml.dtd
-extradata/screenplay-xml.rng
-extradata/screenplay-xml-to-docbook.xslt
-extradata/screenplay-xml-to-html.xslt
+extradata/fiction-xml.rng
+extradata/fiction-xml-to-docbook.xslt
+extradata/fiction-xml-to-html.xslt
 extradata/screenplay-xml-to-xsl-fo.xslt
 inc/Test/Run/Builder.pm
 inc/XML/Grammar/Builder.pm
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-docbook.xslt	Tue Nov 03 17:30:11 2009 +0000
@@ -0,0 +1,56 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
+    xmlns="http://docbook.org/ns/docbook"
+    xmlns:xlink="http://www.w3.org/1999/xlink">
+
+<xsl:output method="xml" encoding="UTF-8" indent="yes"
+ doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
+ doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//fic:body" />  
+</xsl:template>
+
+<xsl:template match="fic:body">
+    <article>
+        <xsl:attribute name="xml:id">
+            <xsl:value-of select="@xml:id" />
+        </xsl:attribute>
+        <xsl:attribute name="xml:lang">
+            <xsl:value-of select="@xml:lang" />
+        </xsl:attribute>
+        <xsl:apply-templates select="fic:section" />
+    </article>
+</xsl:template>
+
+<xsl:template match="fic:section">
+    <section>
+        <xsl:attribute name="xml:id">
+            <xsl:value-of select="@xml:id" />
+        </xsl:attribute>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <info>
+        <title>
+            <xsl:choose>
+                <xsl:when test="title">
+                    <xsl:value-of select="title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@xml:id" />
+                </xsl:otherwise>
+            </xsl:choose> 
+        </title>
+    </info>
+        <xsl:apply-templates select="fic:section|fic:p" />
+    </section>
+</xsl:template>
+
+<xsl:template match="fic:p">
+    <para>
+        <xsl:apply-templates />
+    </para>
+</xsl:template>
+
+</xsl:stylesheet>
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml-to-html.xslt	Tue Nov 03 17:30:11 2009 +0000
@@ -0,0 +1,52 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//W3C//DTD XHTML 1.1//EN"
+ doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//fic:body" />  
+</xsl:template>
+
+<xsl:template match="fic:body">
+    <html>
+        <head>
+            <title>Story</title>
+        </head>
+        <body>
+            <div class="screenplay">
+            <xsl:attribute name="xml:id">
+                <xsl:value-of select="@xml:id" />
+            </xsl:attribute>
+            <xsl:apply-templates select="fic:section" />
+            </div>
+        </body>
+    </html>
+</xsl:template>
+
+<xsl:template match="fic:section">
+    <div class="fiction section">
+        <xsl:if test="@xml:id">
+            <xsl:attribute name="xml:id">
+                <xsl:value-of select="@xml:id" />
+            </xsl:attribute>
+        </xsl:if>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <xsl:element name="h{count(ancestor-or-self::fic:scene)}">
+            <xsl:value-of select="title" />
+        </xsl:element>
+        <xsl:apply-templates select="fic:scene|fic:p" />
+    </div>
+</xsl:template>
+
+<xsl:template match="fic:p">
+    <p>
+        <xsl:apply-templates/>
+    </p>
+</xsl:template>
+
+</xsl:stylesheet>
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/fiction-xml.rng	Tue Nov 03 17:30:11 2009 +0000
@@ -0,0 +1,53 @@
+<?xml version="1.0"?>
+<!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
+<grammar xmlns="http://relaxng.org/ns/structure/1.0"
+    xmlns:fic="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/"
+    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
+    >
+    <start>
+        <element name="fic:document">
+            <ref name="common_attrs" />
+            <element name="fic:head">
+                <empty/>
+            </element>
+            <element name="fic:body">
+                <ref name="common_attrs" />
+                <oneOrMore>
+                    <ref name="section" />
+                </oneOrMore>
+            </element>
+        </element>
+    </start>
+    <define name="common_attrs">
+        <optional>
+            <attribute name="xml:id">
+                <data type="ID"/>
+            </attribute>            
+        </optional>
+        <optional>
+            <attribute name="xml:lang">
+                <data type="NCName" />
+            </attribute>
+        </optional>
+    </define>
+    <define name="section">
+        <element name="fic:section">
+            <ref name="common_attrs" />
+            <ref name="several_paras" />
+            <zeroOrMore>
+                <ref name="section" />
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="several_paras">
+        <zeroOrMore>
+            <ref name="para"/>
+        </zeroOrMore>
+    </define>
+    <define name="para">
+        <element name="fic:p">
+            <text />
+        </element>
+    </define>
+</grammar>
+
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Tue Nov 03 15:52:36 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,91 +0,0 @@
-<xsl:stylesheet version = '1.0'
-    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
-    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
-     >
-
-<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
- doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
- doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
- />
-
-<xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
-</xsl:template>
-
-<xsl:template match="sp:body">
-    <article>
-        <xsl:attribute name="id">
-            <xsl:value-of select="@id" />
-        </xsl:attribute>
-        <xsl:apply-templates select="sp:scene" />
-    </article>
-</xsl:template>
-
-<xsl:template match="sp:scene">
-    <section>
-        <xsl:attribute name="id">
-            <xsl:value-of select="@id" />
-        </xsl:attribute>
-        <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <title>
-            <xsl:choose>
-                <xsl:when test="@title">
-                    <xsl:value-of select="@title" />
-                </xsl:when>
-                <xsl:otherwise>
-                    <xsl:value-of select="@id" />
-                </xsl:otherwise>
-            </xsl:choose> 
-        </title>
-        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
-    </section>
-</xsl:template>
-
-<xsl:template match="sp:description">
-    <section role="description" id="{generate-id()}">
-        <title></title>
-            <xsl:apply-templates />
-    </section>
-</xsl:template>
-
-<xsl:template match="saying">
-    <section role="sp:saying" id="{generate-id()}">
-        <title></title>
-        <xsl:apply-templates />
-    </section>
-</xsl:template>
-
-<xsl:template match="para">
-    <para>
-        <xsl:if test="local-name(..) = 'saying'">
-            <emphasis role="bold"><xsl:value-of select="../@character" />: </emphasis>
-        </xsl:if>
-        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
-            [
-        </xsl:if>
-        <xsl:apply-templates />
-        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
-            ]
-        </xsl:if>
-    </para>
-</xsl:template>
-
-<xsl:template match="sp:ulink">
-    <ulink>
-        <xsl:attribute name="url">
-            <xsl:value-of select="@url" />
-        </xsl:attribute>
-    </ulink>
-</xsl:template>
-
-<xsl:template match="sp:bold">
-    <emphasis role="bold">
-        <xsl:apply-templates />
-    </emphasis>
-</xsl:template>
-
-<xsl:template match="sp:inlinedesc">
-    <phrase>[<xsl:apply-templates />]</phrase>
-</xsl:template>
-
-</xsl:stylesheet>
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Tue Nov 03 15:52:36 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,102 +0,0 @@
-<xsl:stylesheet version = '1.0'
-     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
-     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
-     >
-
-<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
- doctype-public="-//W3C//DTD XHTML 1.1//EN"
- doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
- />
-
-<xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
-</xsl:template>
-
-<xsl:template match="sp:body">
-    <html>
-        <head>
-            <title>My Screenplay</title>
-        </head>
-        <body>
-            <div class="screenplay">
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
-            <xsl:apply-templates select="sp:scene" />
-            </div>
-        </body>
-    </html>
-</xsl:template>
-
-<xsl:template match="sp:scene">
-    <div class="scene" id="scene-{@id}">
-        <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <xsl:element name="h{count(ancestor-or-self::sp:scene)}">
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
-            <xsl:choose>
-                <xsl:when test="@title">
-                    <xsl:value-of select="@title" />
-                </xsl:when>
-                <xsl:otherwise>
-                    <xsl:value-of select="@id" />
-                </xsl:otherwise>
-            </xsl:choose>
-        </xsl:element>
-        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
-    </div>
-</xsl:template>
-
-<xsl:template match="sp:description">
-    <div class="description">
-        <xsl:apply-templates />
-    </div>
-</xsl:template>
-
-<xsl:template match="sp:saying">
-    <div class="saying">
-        <xsl:apply-templates />
-    </div>
-</xsl:template>
-
-<xsl:template match="sp:para">
-    <p>
-        <xsl:if test="local-name(..) = 'saying'">
-            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
-            <xsl:text> </xsl:text>
-        </xsl:if>
-        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=1] = .">
-            [
-        </xsl:if>
-        <xsl:apply-templates />
-        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=last()] = .">
-            ]
-        </xsl:if>
-    </p>
-</xsl:template>
-
-<xsl:template match="sp:ulink">
-    <a>
-        <xsl:attribute name="href">
-            <xsl:value-of select="@url" />
-        </xsl:attribute>
-        <xsl:apply-templates />
-    </a>
-</xsl:template>
-
-<xsl:template match="sp:bold">
-    <strong class="bold">
-        <xsl:apply-templates />
-    </strong>
-</xsl:template>
-
-<xsl:template match="sp:inlinedesc">
-    <span class="inlinedesc">[<xsl:apply-templates />]</span>
-</xsl:template>
-
-<xsl:template match="sp:br">
-    <br />
-</xsl:template>
-
-</xsl:stylesheet>
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- a/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Tue Nov 03 15:52:36 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,99 +0,0 @@
-<?xml version="1.0"?>
-<!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
-<grammar xmlns="http://relaxng.org/ns/structure/1.0"
-    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
-    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
-    >
-    <start>
-        <element name="sp:document">
-            <element name="sp:head">
-                <empty/>
-            </element>
-            <element name="sp:body">
-                <attribute name="id">
-                    <data type="ID"/>
-                </attribute>
-                <oneOrMore>
-                    <ref name="scene" />
-                </oneOrMore>
-            </element>
-        </element>
-    </start>
-    <define name="several_paras">
-        <oneOrMore>
-            <ref name="para"/>
-        </oneOrMore>
-    </define>
-    <define name="single_inline_elem">
-        <choice>
-            <text/>
-            <ref name="ulink"/>
-            <ref name="bold"/>
-        </choice>
-    </define>
-    <define name="scene">
-        <element name="sp:scene">
-            <attribute name="id">
-                <data type="ID"/>
-            </attribute>
-            <optional>
-                <attribute name="title">
-                    <text/>
-                </attribute>
-            </optional>
-            <zeroOrMore>
-                <choice>
-                    <element name="sp:description">
-                        <ref name="several_paras"/>
-                    </element>
-                    <element name="sp:saying">
-                        <attribute name="character">
-                            <text/>
-                        </attribute>
-                        <ref name="several_paras"/>
-                    </element>
-                </choice>
-            </zeroOrMore>
-            <zeroOrMore>
-                <ref name="scene" />
-            </zeroOrMore>
-        </element>
-    </define>
-    <define name="para">
-        <element name="sp:para">
-            <zeroOrMore>
-                <choice>
-                    <text/>
-                    <element name="sp:inlinedesc">
-                        <zeroOrMore>
-                            <ref name="single_inline_elem"/>
-                        </zeroOrMore>
-                    </element>
-                    <ref name="single_inline_elem"/>
-                    <element name="sp:br">
-                        <empty/>
-                    </element>
-                </choice>
-            </zeroOrMore>
-        </element>
-    </define>
-    <define name="bold">
-        <element name="sp:bold">
-            <text />
-        </element>
-    </define>
-    <define name="ulink">
-        <element name="sp:ulink">
-                <attribute name="url">
-                    <text/>
-                </attribute>
-                <zeroOrMore>
-                    <choice>
-                        <text />
-                        <ref name="bold"/>
-                    </choice>
-            </zeroOrMore>
-        </element>
-    </define>
-</grammar>
-
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
--- a/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Tue Nov 03 17:30:11 2009 +0000
@@ -61,5 +61,16 @@
     return $test_run->run();
 }
 
+sub ACTION_tags
+{
+    return 
+        system(qw(
+            ctags -f tags --recurse --totals
+    		--exclude=blib/** --exclude=t/lib/**
+    		--exclude=.svn --exclude='*~'
+    		--languages=Perl --langmap=Perl:+.t
+    ));
+}
+
 1;
 
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 03 17:30:11 2009 +0000
@@ -74,7 +74,7 @@
     my $style_doc = $self->_xml_parser()->parse_file(
             File::Spec->catfile(
                 $self->_data_dir(), 
-                "screenplay-xml-to-docbook.xslt"
+                "fiction-xml-to-docbook.xslt"
             ),
         );
 
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 03 17:30:11 2009 +0000
@@ -61,7 +61,7 @@
             location =>
             File::Spec->catfile(
                 $self->_data_dir(), 
-                "screenplay-xml.rng"
+                "fiction-xml.rng"
             ),
         );
 
@@ -74,7 +74,7 @@
     my $style_doc = $self->_xml_parser()->parse_file(
             File::Spec->catfile(
                 $self->_data_dir(), 
-                "screenplay-xml-to-html.xslt"
+                "fiction-xml-to-html.xslt"
             ),
         );
 
@@ -94,6 +94,13 @@
 
 =cut
 
+sub _undefize
+{
+    my $v = shift;
+
+    return defined($v) ? $v : "(undef)";
+}
+
 sub translate_to_html
 {
     my ($self, $args) = @_;
@@ -115,7 +122,9 @@
     }
     else
     {
-        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+        confess "RelaxNG validation failed [\$ret_code == "
+            . _undefize($ret_code) . " ; $@]"
+            ;
     }
 
     my $stylesheet = $self->_stylesheet();
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t
--- a/perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t	Tue Nov 03 17:30:11 2009 +0000
@@ -27,7 +27,7 @@
 }
 
 my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/screenplay-xml.rng" 
+        location => "./extradata/fiction-xml.rng" 
     );
 
 my @tests = (qw(
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/t/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Tue Nov 03 17:30:11 2009 +0000
@@ -3,7 +3,8 @@
 use strict;
 use warnings;
 
-use Test::More tests => 1;
+# use Test::More tests => 1;
+use Test::More skip_all => "Not working in XML-Grammar-Fiction now";
 use File::Spec;
 
 use Config;
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml
--- a/perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml	Tue Nov 03 17:30:11 2009 +0000
@@ -1,69 +1,23 @@
 <?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Fortune/fiction-xml-0.2/">
     <head>
     </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
-                <inlinedesc>sarcastically</inlinedesc> power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-    <saying character="David">
-        <para>
-            as is written in the wikipedia <inlinedesc>See <ulink url="http://wiki.tld/">the Wiki site</ulink>
-                for more information</inlinedesc>, you are now dead,
-            having been shot with my sling.
-        </para>
-    </saying>
-</scene>
-</scene>
+    <body xml:id="index">
+    <section xml:id="top">
+    <p>
+        David and Goliath were standing by each other.    
+    </p>
+    <p>
+        David said unto Goliath: "I will shoot you."
+    </p>
+    <section xml:id="goliath">
+    <p>
+    Goliath was not amused.
+    </p>
+    <p>
+    He said to David: "Oh, really".
+    </p>
+    </section>
+    </section>
 </body>
 </document>
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 17:30:11 2009 +0000
@@ -3,9 +3,9 @@
 use strict;
 use warnings;
 
-use Test::More;
+use Test::More skip_all => "Not implemented yet for XML-Grammar-Fortune";
 
-use Test::XML tests => 26;
+# use Test::XML tests => 26;
 
 use XML::LibXML;
 
@@ -50,7 +50,7 @@
     });
 
 my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/screenplay-xml.rng" 
+        location => "./extradata/fiction-xml.rng" 
     );    
 
 my $xml_parser = XML::LibXML->new();
diff -r a2b836c533cf -r f2f55ffc119c perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 15:52:36 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 17:30:11 2009 +0000
@@ -51,14 +51,18 @@
 
     my $doc = $parser->parse_string($docbook_text);
 
+    my $xc = XML::LibXML::XPathContext->new($doc);
+
+    $xc->registerNs('db', 'http://docbook.org/ns/docbook');
+
     is (
-        scalar(() = $doc->findnodes(q{//article[@id='index']})),
+        scalar(() = $xc->findnodes(q{//db:article[@xml:id='index']})),
         1,
         "Found one article with id index",
     );
 
     ok (
-        (scalar(() = $doc->findnodes(q{//section[@role='description']}))
+        (scalar(() = $xc->findnodes(q{//db:section}))
             >=
             1
         ),

changeset:   2:a2b836c533cf
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 15:52:36 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/t/00-load.t perl/modules/XML-Grammar-Fiction/t/app-to-html.t perl/modules/XML-Grammar-Fiction/t/boilerplate.t perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/to-docbook.t perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
description:
Renamed from XML-Grammar-Screenplay to XML-Grammar-Fiction everywhere.

Functionality is still the same.


diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/Build.PL
--- a/perl/modules/XML-Grammar-Fiction/Build.PL	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Tue Nov 03 15:52:36 2009 +0000
@@ -7,10 +7,10 @@
 use XML::Grammar::Builder;
 
 my $builder = XML::Grammar::Builder->new(
-    module_name         => 'XML::Grammar::Screenplay',
+    module_name         => 'XML::Grammar::Fiction',
     license             => 'mit',
     dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
-    dist_version_from   => 'lib/XML/Grammar/Screenplay.pm',
+    dist_version_from   => 'lib/XML/Grammar/Fiction.pm',
     build_requires => {
         'File::Find' => 0,
         'Test::More' => 0,
@@ -28,14 +28,14 @@
         'XML::LibXSLT' => 0,
         'XML::Writer' => 0,
     },
-    add_to_cleanup      => [ 'XML-Grammar-Screenplay-*' ],
+    add_to_cleanup      => [ 'XML-Grammar-Fiction-*' ],
     create_makefile_pl => 'passthrough',
     meta_merge =>
     {
         resources =>
         {
-            repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Screenplay/",
-            homepage => "http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/",
+            repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Fiction/",
+            homepage => "http://web-cpan.berlios.de/modules/XML-Grammar-Fiction/",
         },
         keywords =>
         [
@@ -46,10 +46,13 @@
             "grammar",
             "movies",
             "parsing",
-            "screenplay",
-            "screenplays",
-            "script",
-            "scripts",
+            "fiction",
+            "story",
+            "stories",
+            "noveilla",
+            "noveillas",
+            "novels",
+            "novel",
             "writing",
             "xml",
             "xml-libxml",
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/MANIFEST
--- a/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 15:52:36 2009 +0000
@@ -7,18 +7,18 @@
 extradata/screenplay-xml-to-xsl-fo.xslt
 inc/Test/Run/Builder.pm
 inc/XML/Grammar/Builder.pm
-lib/XML/Grammar/Screenplay/App/FromProto.pm
-lib/XML/Grammar/Screenplay/App/ToDocBook.pm
-lib/XML/Grammar/Screenplay/App/ToHTML.pm
-lib/XML/Grammar/Screenplay/Base.pm
-lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Screenplay/FromProto.pm
-lib/XML/Grammar/Screenplay.pm
-lib/XML/Grammar/Screenplay/ToDocBook.pm
-lib/XML/Grammar/Screenplay/ToHTML.pm
+lib/XML/Grammar/Fiction/App/FromProto.pm
+lib/XML/Grammar/Fiction/App/ToDocBook.pm
+lib/XML/Grammar/Fiction/App/ToHTML.pm
+lib/XML/Grammar/Fiction/Base.pm
+lib/XML/Grammar/Fiction/FromProto/Nodes.pm
+lib/XML/Grammar/Fiction/FromProto/Parser.pm
+lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
+lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
+lib/XML/Grammar/Fiction/FromProto.pm
+lib/XML/Grammar/Fiction.pm
+lib/XML/Grammar/Fiction/ToDocBook.pm
+lib/XML/Grammar/Fiction/ToHTML.pm
 Makefile.PL
 MANIFEST
 META.yml # Will be created by "make dist"
@@ -55,7 +55,7 @@
 t/data/xml/with-multi-line-comments.xml
 t/data/xml/with-multi-para-desc.xml
 t/data/xml/with-tags-inside-paragraphs.xml
-t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
+t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm
 t/pod-coverage.t
 t/pod.t
 t/proto-text-invalid.t
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,205 @@
+package XML::Grammar::Fiction;
+
+use warnings;
+use strict;
+
+=head1 NAME
+
+XML::Grammar::Fiction - CPAN distribution implementing an XML grammar 
+and a lightweight markup language for stories, novels and other fiction.
+
+=head1 VERSION
+
+Version 0.0.1
+
+=cut
+
+our $VERSION = '0.0.1';
+
+=head1 SYNOPSIS
+
+See L<XML::Grammar::Fiction::FromProto>, 
+L<XML::Grammar::Fiction::ToDocBook> and
+L<XML::Grammar::Fiction::ToHTML>.
+
+=head1 DESCRIPTION
+
+XML::Grammar::Fiction is a Perl module for:
+
+=over 4
+
+=item 1. Converting a well-formed plain text format to a specialized XML format.
+
+=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
+
+=back
+
+The best way to use it non-programatically is using
+L<XML::Grammar::Fiction::App::FromProto>,
+L<XML::Grammar::Fiction::App::ToDocBook> and
+L<XML::Grammar::Fiction::App::ToHTML>, which are modules implementing
+command line applications for their processing.
+
+The rest of this page will document the syntax of the custom textual format.
+
+=head1 FORMAT
+
+=head2 Scenes
+
+Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
+abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
+attributes whose keys are plaintext and whose values are surrounded by
+double quotes. (Single-quotes are not supported).
+
+The scene tag must have an C<id> attribute (for anchors, etc.) and could
+have an optional C<title> attribute. If the title is not specified, it will
+default to the ID.
+
+Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
+except inside scenes.
+
+=head2 Text
+
+Text is any of:
+
+=over 4
+
+=item 1. Plaintext
+
+Regular text
+
+=item 2. XML-like tags.
+
+Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
+hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+
+=item 3. Entities
+
+The text format supports SGML-like entities such as C<< &amp; >>,
+C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
+L<HTML::Entities>.
+
+=item 4. Text between [ ... ]
+
+Text between square brackets (C<[ ... ]>) is reserved for descriptions
+or inline descriptions (see below).
+
+=back 
+
+=head2 Sayings
+
+The first paragraph when a character talks starts with the name of the
+character followed by a colon (C<:>) and the rest of the text. Like this:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+If a character says more than one paragraph, the next paragraph should start
+with any number of "+"-signs followed by a colon:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+    ++++: I will sling you and bing you till infinity!
+
+=head2 Descriptions.
+
+Descriptions that are not part of saying start with a C<[> at the first
+character of a line and extend till the next C<]>. They can span several
+paragraphs.
+
+There are also internal descriptions to the saying which are placed
+inside the paragraph of the saying and describe what happens while the
+character talks. 
+
+=head2 EXAMPLES
+
+Examples can be found in the C<t/data> directory, and here:
+
+=over 4
+
+=item * The One with the Fountainhead
+
+L<http://www.shlomifish.org/humour/TOWTF/>
+
+=item * Humanity - The Movie
+
+L<http://www.shlomifish.org/humour/humanity/>
+
+=item * Star Trek - "We The Living Dead"
+
+L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
+
+=back
+
+=head1 DEBUGGING
+
+When trying to convert the well-formed text to XML, one will often 
+encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
+which is used for parsing. The best way I found to deal with it is to
+gradually eliminate parts of the document until the offending markup is
+isolated.
+
+In the future, I plan on writing a custom parser that will provide better
+diagnostics and will hopefully also be faster.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Fiction>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 TODO
+
+=over 4
+
+=item * Empty
+
+=back
+
+=head1 SUPPORT
+
+You can find documentation for this module with the perldoc command.
+
+    perldoc XML::Grammar::Fiction
+
+You can also look for information at:
+
+=over 4
+
+=item * AnnoCPAN: Annotated CPAN documentation
+
+L<http://annocpan.org/dist/XML-Grammar-Fiction>
+
+=item * CPAN Ratings
+
+L<http://cpanratings.perl.org/d/XML-Grammar-Fiction>
+
+=item * RT: CPAN's request tracker
+
+L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Fiction>
+
+=item * Search CPAN
+
+L<http://search.cpan.org/dist/XML-Grammar-Fiction>
+
+=back
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/FromProto.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,89 @@
+package XML::Grammar::Fiction::App::FromProto;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Fiction::FromProto;
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
+
+=head1 NAME
+
+XML::Grammar::Fiction::App::FromProto - module implementing
+a command line application to convert a well-formed text to
+Screenplay XML.
+
+=head1 SYNOPSIS
+
+    perl -MXML::Grammar::Fiction::App::FromProto -e 'run()' -- \
+	-o $@ $<
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Fiction::FromProto->new({
+        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
+    });
+
+    my $output_xml = $converter->convert({
+            source => { file => shift(@ARGV), },
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_xml;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToDocBook.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Fiction::App::ToDocBook;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Fiction::ToDocBook;
+
+=head1 NAME
+
+XML::Grammar::Fiction::App::ToDocBook - module implementing
+a command line application to convert a Screenplay XML file to docbook.
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Fiction::ToDocBook->new();
+
+    my $output_text = $converter->translate_to_docbook({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/App/ToHTML.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Fiction::App::ToHTML;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Fiction::ToHTML;
+
+=head1 NAME
+
+XML::Grammar::Fiction::App::ToHTML - module implementing
+a command line application to convert a Screenplay XML file to HTML
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Fiction::ToHTML->new();
+
+    my $output_text = $converter->translate_to_html({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/Base.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,32 @@
+package XML::Grammar::Fiction::Base;
+
+use strict;
+use warnings;
+
+=head1 NAME
+
+XML::Grammar::Fiction::Base - base class for XML::Grammar::Fiction
+classes.
+
+=head1 METHODS
+
+=head2 $package->new({%args});
+
+Constructs a new package
+
+=cut
+
+sub new
+{
+    my $class = shift;
+    my $self = {};
+
+    bless $self, $class;
+
+    $self->_init(@_);
+
+    return $self;
+}
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,323 @@
+package XML::Grammar::Fiction::FromProto;
+
+use strict;
+use warnings;
+
+use Carp;
+
+use base 'XML::Grammar::Fiction::Base';
+
+use XML::Writer;
+use HTML::Entities ();
+
+use XML::Grammar::Fiction::FromProto::Nodes;
+
+use Moose;
+
+has "_parser" => ('isa' => "XML::Grammar::Fiction::FromProto::Parser", 'is' => "rw");
+has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
+
+my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto - module that converts well-formed
+text representing a screenplay to an XML format.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    local $Parse::RecDescent::skip = "";
+
+    my $parser_class = 
+        ($args->{parser_class} || "XML::Grammar::Fiction::FromProto::Parser::QnD");
+
+    $self->_parser(
+        $parser_class->new()
+    );
+
+    return 0;
+}
+
+=head2 $self->convert({ source => { file => $path_to_file } })
+
+Converts the file $path_to_file to XML and returns it.
+
+=cut
+
+use Data::Dumper;
+
+sub _output_tag
+{
+    my ($self, $args) = @_;
+
+    my @start = @{$args->{start}};
+    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
+
+    $args->{in}->($self, $args);
+
+    $self->_writer->endTag();
+}
+
+sub _output_tag_with_childs
+{
+    my ($self, $args) = @_;
+
+    return 
+        $self->_output_tag({
+            %$args,
+            'in' => sub {
+                foreach my $child (@{$args->{elem}->_get_childs()})
+                {
+                    $self->_write_elem({elem => $child,});
+                }
+            },
+        });
+}
+
+sub _get_text_start
+{
+    my ($self, $elem) = @_;
+
+    if ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Saying"))
+    {
+        return ["saying", 'character' => $elem->character()];
+    }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Description"))
+    {
+        return ["description"];
+    }
+    else
+    {
+        Carp::confess ("Unknown element class - " . ref($elem) . "!");
+    }
+}
+
+sub _write_elem
+{
+    my ($self, $args) = @_;
+
+    my $elem = $args->{elem};
+
+    if (ref($elem) eq "")
+    {
+        $self->_writer->characters($elem);
+    }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Paragraph"))
+    {
+        $self->_output_tag_with_childs(
+            {
+               start => ["para"],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Element"))
+    {
+        if (($elem->name() eq "s") || ($elem->name() eq "section"))
+        {
+            $self->_write_scene({scene => $elem});
+        }
+        elsif ($elem->name() eq "a")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["ulink", "url" => $elem->lookup_attr("href")],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "b")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["bold"],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "br")
+        {
+            $self->_writer->emptyTag("br");
+        }
+        elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::InnerDesc"))
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["inlinedesc"],
+                    elem => $elem,
+                }
+            );
+        }
+    }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Text"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => $self->_get_text_start($elem),
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Fiction::FromProto::Node::Comment"))
+    {
+        $self->_writer->comment($elem->text());
+    }
+}
+
+sub _write_scene
+{
+    my ($self, $args) = @_;
+
+    my $scene = $args->{scene};
+
+    my $tag = $scene->name;
+    
+    if (($tag eq "s") || ($tag eq "scene"))
+    {
+        my $id = $scene->lookup_attr("id");
+
+        if (!defined($id))
+        {
+            Carp::confess("Unspecified id for scene!");
+        }
+
+        my $title = $scene->lookup_attr("title");
+        my @t = (defined($title) ? (title => $title) : ());
+
+        $self->_output_tag_with_childs(
+            {
+                'start' => ["scene", id => $id, @t],
+                elem => $scene,
+            }
+        );
+    }
+    else
+    {
+        confess "Improper scene tag - should be '<s>' or '<scene>'!";
+    }
+
+    return;
+}
+
+sub _read_file
+{
+    my ($self, $filename) = @_;
+
+    open my $in, "<", $filename or
+        confess "Could not open the file \"$filename\" for slurping.";
+    binmode $in, ":utf8";
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+    
+    return $contents;
+}
+
+sub _calc_tree
+{
+    my ($self, $args) = @_;
+
+    my $filename = $args->{source}->{file} or
+        confess "Wrong filename given.";
+
+    return $self->_parser->process_text($self->_read_file($filename));
+}
+
+sub convert
+{
+    my ($self, $args) = @_;
+
+    # These should be un-commented for debugging.
+    # local $::RD_HINT = 1;
+    # local $::RD_TRACE = 1;
+    
+    # We need this so P::RD won't skip leading whitespace at lines
+    # which are siginificant.  
+
+    my $tree = $self->_calc_tree($args);
+
+    if (!defined($tree))
+    {
+        Carp::confess("Parsing failed.");
+    }
+
+    my $buffer = "";
+    my $writer = XML::Writer->new(
+        OUTPUT => \$buffer, 
+        ENCODING => "utf-8",
+        NAMESPACES => 1,
+        PREFIX_MAP =>
+        {
+             $screenplay_ns => "",
+        }
+    );
+
+    $writer->xmlDecl("utf-8");
+    $writer->doctype("document", undef, "screenplay-xml.dtd");
+    $writer->startTag([$screenplay_ns, "document"]);
+    $writer->startTag([$screenplay_ns, "head"]);
+    $writer->endTag();
+    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
+
+    # Now we're inside the body.
+    $self->_writer($writer);
+
+    $self->_write_scene({scene => $tree});
+
+    # Ending the body
+    $writer->endTag();
+
+    $writer->endTag();
+    
+    return $buffer;
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Nodes.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,120 @@
+package XML::Grammar::Fiction::FromProto::Nodes;
+
+use strict;
+use warnings;
+
+use List::Util ();
+
+package XML::Grammar::Fiction::FromProto::Node;
+
+use Moose;
+
+package XML::Grammar::Fiction::FromProto::Node::WithContent;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node");
+
+has 'children' => (
+    isa => 'XML::Grammar::Fiction::FromProto::Node::List', 
+    is => 'rw'
+);
+
+sub _get_childs
+{
+    my $self = shift;
+
+    my $childs = $self->children->contents();
+
+    return $childs || [];
+}
+
+package XML::Grammar::Fiction::FromProto::Node::Element;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
+
+has 'name' => (isa => 'Str', is => 'rw');
+has 'attrs' => (isa => 'ArrayRef', is => 'rw');
+
+sub lookup_attr
+{
+    my ($self, $attr_name) = @_;
+
+    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
+
+    if (!defined($pair))
+    {
+        return undef;
+    }
+    else
+    {
+        return $pair->{value};
+    }
+}
+
+package XML::Grammar::Fiction::FromProto::Node::List;
+
+use Moose;
+
+has 'contents' => (isa => "ArrayRef", is => "rw");
+
+package XML::Grammar::Fiction::FromProto::Node::Text;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node::WithContent");
+
+package XML::Grammar::Fiction::FromProto::Node::Saying;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node::Text");
+
+has 'character' => (isa => "Str", is => "rw");
+
+package XML::Grammar::Fiction::FromProto::Node::Description;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node::Text");
+
+package XML::Grammar::Fiction::FromProto::Node::Paragraph;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node::Element");
+
+package XML::Grammar::Fiction::FromProto::Node::InnerDesc;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node::Element");
+
+sub name
+{
+    return "inlinedesc";
+}
+
+package XML::Grammar::Fiction::FromProto::Node::Comment;
+
+use Moose;
+
+extends("XML::Grammar::Fiction::FromProto::Node");
+
+has "text" => (isa => "Str", is => "rw");
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Fiction::FromProto.
+
+=head1 DESCRIPTION
+
+Contains several nodes.
+
+=cut
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,37 @@
+package XML::Grammar::Fiction::FromProto::Parser;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Fiction::Base';
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/PRD.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,262 @@
+package XML::Grammar::Fiction::FromProto::Parser::PRD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Fiction::FromProto::Parser';
+
+use Parse::RecDescent;
+
+use Moose;
+
+use XML::Grammar::Fiction::FromProto::Nodes;
+
+has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
+
+sub _init
+{
+    my $self = shift;
+
+    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
+
+    return 0;
+}
+
+sub _calc_grammar
+{
+    my $self = shift;
+
+    return <<'EOF';
+
+start : tag  {$thisparser->{ret} = $item[1]; 1 }
+
+text_unit:   tag_or_comment { $item[1] }
+           | speech_or_desc { $item[1] }
+
+tag_or_comment:   tag
+                | comment
+
+comment:    /<!--(.*?)-->/ms para_sep {
+    XML::Grammar::Fiction::FromProto::Node::Comment->new(
+        text => $1
+    )
+    }
+
+para_sep:      /(\n\s*)+/
+
+speech_or_desc:   speech_unit
+                | desc_unit
+
+plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
+
+inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
+    {
+        XML::Grammar::Fiction::FromProto::Node::Element->new(
+            name => $item[2],
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => []
+            ),
+            attrs => $item[3]
+            );
+    }
+
+
+inner_tag:         opening_tag  inner_text closing_tag {
+        my ($open, $inside, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Fiction::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            attrs => $open->{attrs},
+            )
+    }
+
+inner_desc:      /\[/ inner_text /\]/ {
+        my $inside = $item[2];
+        XML::Grammar::Fiction::FromProto::Node::InnerDesc->new(
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            )
+    }
+
+inner_tag_or_desc:    inner_tag
+                   |  inner_desc
+
+inner_entity:      /\&\w+;/ {
+        my $inside = $item[1];
+        HTML::Entities::decode_entities($inside)
+    }
+
+inner_text_unit:    plain_inner_text  { [ $item[1] ] }
+                 |  inner_tag_or_desc { [ $item[1] ] }
+                 |  inner_entity      { [ $item[1] ] }
+                 |  inner_standalone_tag { [ $item[1] ] }
+
+inner_text:       inner_text_unit(s) {
+        [ map { @{$_} } @{$item[1]} ]
+        }
+
+addressing: /^([^:\n\+]+): /ms { $1 }
+
+saying_first_para: addressing inner_text para_sep {
+            my ($sayer, $what) = ($item[1], $item[2]);
+            +{
+             character => $sayer,
+             para => XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+                children =>
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents => $what,
+                    )
+                ),
+            }
+            }
+
+saying_other_para: /^\++: /ms inner_text para_sep {
+        XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+            children =>
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents => $item[2],
+                    ),
+        )
+    }
+
+speech_unit:  saying_first_para saying_other_para(s?)
+    {
+    my $first = $item[1];
+    my $others = $item[2] || [];
+        XML::Grammar::Fiction::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => [ $first->{para}, @{$others} ],
+                ),
+        )
+    }
+
+desc_para:  inner_text para_sep { $item[1] }
+
+desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
+
+desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
+        my $paragraphs = $item[2];
+
+        XML::Grammar::Fiction::FromProto::Node::Description->new(
+            children => 
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents =>
+                [
+                map { 
+                XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+                    children =>
+                        XML::Grammar::Fiction::FromProto::Node::List->new(
+                            contents => $_,
+                            ),
+                        )
+                } @$paragraphs
+                ],
+            ),
+        )
+    }
+
+text: text_unit(s) { XML::Grammar::Fiction::FromProto::Node::List->new(
+        contents => $item[1]
+        ) }
+      | space { XML::Grammar::Fiction::FromProto::Node::List->new(
+        contents => []
+        ) }
+
+tag: space opening_tag space text space closing_tag space
+     {
+        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Fiction::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => $inside,
+            attrs => $open->{attrs},
+            );
+     }
+
+opening_tag: '<' id attribute(s?) '>'
+    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
+
+closing_tag: '</' id '>'
+    { $item[0] = { 'name' => $item[2], }; }
+
+attribute: space id '="' attributevalue '"' space
+    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
+
+attributevalue: /[^"]+/
+    { $item[0] = HTML::Entities::decode_entities($item[1]); }
+
+space: /\s*/
+
+id: /[a-zA-Z_\-]+/
+
+EOF
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    my $rv = $self->_p_rd()->start($text);
+
+    if (!defined($rv))
+    {
+        return;
+    }
+    else
+    {
+        return $self->_p_rd->{ret};
+    }
+}
+
+1;
+
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns it.
+
+=head2 $self->meta()
+
+Something that L<Moose> adds.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/FromProto/Parser/QnD.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,749 @@
+package XML::Grammar::Fiction::FromProto::Parser::QnD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Fiction::FromProto::Parser';
+
+use Moose;
+
+has "_curr_line_idx" => (isa => "Int", is => "rw");
+has "_lines" => (isa => "ArrayRef", is => "rw");
+
+sub _curr_line :lvalue
+{
+    my $self = shift;
+
+    return $self->_lines()->[$self->_curr_line_idx()];
+}
+
+sub _curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
+sub _with_curr_line
+{
+    my ($self, $sub_ref) = @_;
+
+    return $sub_ref->(\($self->_lines()->[$self->_curr_line_idx()]));
+}
+
+sub _next_line_ref
+{
+    my $self = shift;
+
+    $self->_curr_line_idx($self->_curr_line_idx()+1);
+
+    return $self->_curr_line_ref();
+}
+
+sub _init
+{
+    my $self = shift;
+
+    return 0;
+}
+
+sub _start
+{
+    my $self = shift;
+
+    return $self->_parse_top_level_tag();
+}
+
+# Skip the whitespace.
+sub _skip_space
+{
+    my $self = shift;
+
+    $self->_consume(qr{\s});
+}
+
+my $id_regex = '[a-zA-Z_\-]+';
+
+sub _parse_opening_tag
+{
+    my $self = shift;
+
+    # Now Lisp got nothing on us.
+    return $self->_with_curr_line(
+        sub {
+            # $l is a reference to the string of the current
+            # line
+            my $l = shift;
+
+            if ($$l !~ m{\G<($id_regex)}g)
+            {
+                Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
+            }
+            my $id = $1;
+
+            my @attrs;
+
+            while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+            {
+                push @attrs, { 'key' => $1, 'value' => $2, };
+            }
+
+            my $is_standalone = 0;
+            if ($$l =~ m{\G\s*/\s*>}cg)
+            {
+                $is_standalone = 1;
+            }
+            elsif ($$l !~ m{\G>}g)
+            {
+                Carp::confess (
+                    "Cannot match the \">\" of the opening tag at line " 
+                        . $self->_get_line_num()
+                );
+            }
+            
+            return
+            {
+                name => $id,
+                is_standalone => $is_standalone,
+                line => $self->_get_line_num(),
+                attrs => \@attrs,
+            };
+        }
+    );
+}
+
+sub _get_line_num
+{
+    my $self = shift;
+
+    return $self->_curr_line_idx()+1;
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    return $self->_with_curr_line(
+        sub {
+            my $l = shift;
+            if ($$l !~ m{\G</($id_regex)>}g)
+            {
+                Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
+            }
+
+            return
+            {
+                name => $1,
+            };
+        }
+    );
+}
+
+sub _parse_text
+{
+    my $self = shift;
+
+    my @ret;
+    while (defined(my $unit = $self->_parse_text_unit()))
+    {
+        push @ret, $unit;
+    }
+
+    # If it's whitespace - return an empty list.
+    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
+    {
+        return 
+            XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => []
+            );
+    }
+
+    return XML::Grammar::Fiction::FromProto::Node::List->new(
+        contents => \@ret,
+        );
+}
+
+sub _consume_paragraph
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    return $self->_parse_inner_text();
+}
+
+sub _parse_inner_desc
+{
+    my $self = shift;
+
+    my $start_line = $self->_get_line_num();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{\G\[}g;
+        }
+    );
+
+    my $inside = $self->_parse_inner_text();
+
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ m{\G\]}g)
+            {
+                Carp::confess (
+                      "Inner description that started on line $start_line did "
+                    . "not terminate with a \"]\"!"
+                );
+            }
+        }
+    );
+
+    return
+        XML::Grammar::Fiction::FromProto::Node::InnerDesc->new(
+            start => $start_line,
+            children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $inside
+            ),
+        );
+ 
+}
+
+sub _parse_inner_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    if ($open->{is_standalone})
+    {
+        $self->_skip_space();
+
+        return        
+            XML::Grammar::Fiction::FromProto::Node::Element->new(
+                name => $open->{name},
+                children => XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents => []
+                ),
+                attrs => $open->{attrs},
+            );
+    }
+
+    my $inside = $self->_parse_inner_text();
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Opening and closing tags do not match: " 
+            . "$open->{name} and $close->{name} on element starting at "
+            . "line $open->{line}"
+        );
+    }
+    return XML::Grammar::Fiction::FromProto::Node::Element->new(
+        name => $open->{name},
+        children => XML::Grammar::Fiction::FromProto::Node::List->new(
+            contents => $inside
+            ),
+        attrs => $open->{attrs},
+        );
+}
+
+sub _parse_inner_text
+{
+    my $self = shift;
+
+    my @contents;
+
+    my $start_line = $self->_curr_line_idx();
+
+    my $curr_text = "";
+
+    CONTENTS_LOOP:
+    while ($self->_curr_line() ne "\n")
+    {
+        my $which_tag;
+        # We need this to avoid appending the rest of the first line 
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+                
+                # Apparently, perl does not always returns true in this
+                # case, so we need the defined($1) ? $1 : "" workaround.
+                $$l =~ m{\G([^\<\[\]\&]*)}cgms;
+
+                $curr_text .= (defined($1) ? $1 : "");
+
+                if ($$l =~ m{\G\[})
+                {
+                    $which_tag = "open_desc";
+                }
+                elsif ($$l =~ m{\G\&})
+                {
+                    $which_tag = "entity";
+                }                
+                elsif ($$l =~ m{\G(?:</|\])})
+                {
+                    $which_tag = "close";
+                }
+                elsif ($$l =~ m{\G<})
+                {
+                    $which_tag = "open_tag";
+                }
+            }
+        );
+
+        push @contents, $curr_text;
+
+        $curr_text = "";
+
+        if (!defined($which_tag))
+        {
+            # Do nothing - a tag was not detected.
+        }
+        else
+        {
+            if (($which_tag eq "open_desc") || ($which_tag eq "open_tag"))
+            {
+                push @contents, 
+                    (($which_tag eq "open_tag")
+                        ? $self->_parse_inner_tag()
+                        : $self->_parse_inner_desc()
+                    );
+                # Avoid skipping to the next line.
+                # Gotta love teh Perl!
+                redo CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "close")
+            {
+                last CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "entity")
+            {
+                $self->_with_curr_line(
+                    sub {
+                        my $l = shift;
+                        if ($$l !~ m{\G(\&\w+;)}g)
+                        {
+                            Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                                $self->_get_line_num()
+                            );
+                        }
+                        push @contents, HTML::Entities::decode_entities($1);
+                    }
+                );
+                redo CONTENTS_LOOP;
+            }
+        }
+    }
+    continue
+    {
+        if (!defined(${$self->_next_line_ref()}))
+        {
+            Carp::confess "End of file in an addressing paragraph starting at $start_line";
+        }
+    }
+
+    if (length($curr_text) > 0)
+    {
+        push @contents, $curr_text;
+    }
+
+    return \@contents;
+}
+
+# TODO : _parse_saying_first_para and _parse_saying_other_para are
+# very similar - abstract them into one function.
+sub _parse_saying_first_para
+{
+    my $self = shift;
+
+    my ($sayer, $what);
+    
+    ($sayer) = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G([^:\n\+]+): /cgms)
+            {
+                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
+            }
+            my $sayer = $1;
+
+            if ($sayer =~ m{[\[\]]})
+            {
+                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
+            }
+
+            return ($sayer);
+        }
+    );
+
+    $what = $self->_parse_inner_text();
+
+    return
+    +{
+         character => $sayer,
+         para => XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+            children =>
+            XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $what,
+                )
+            ),
+    };
+}
+
+sub _parse_saying_other_para
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    my $verdict = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G\++: /cgms)
+            {
+                return;
+            }
+            else
+            {
+                return 1;
+            }
+        }
+    );
+
+    if (!defined($verdict))
+    {
+        return;
+    }
+
+    my $what = $self->_parse_inner_text();
+
+    return
+        XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+            children =>
+            XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents => $what,
+                )
+        );
+}
+
+sub _parse_speech_unit
+{
+    my $self = shift;
+
+    my $first = $self->_parse_saying_first_para();
+
+    my @others;
+    while (defined(my $other_para = $self->_parse_saying_other_para()))
+    {
+        push @others, $other_para;
+    }
+
+    return
+        XML::Grammar::Fiction::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => 
+                XML::Grammar::Fiction::FromProto::Node::List->new(
+                    contents => [ $first->{para}, @others ],
+                ),
+        );
+}
+
+sub _parse_desc_unit
+{
+    my $self = shift;
+
+    my $start_line = $self->_curr_line_idx();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{^\[}g;
+        }
+    );
+
+    my @paragraphs;
+
+    my $is_end = 1;
+    my $para;
+    PARAS_LOOP:
+    while ($is_end && ($para = $self->_consume_paragraph()))
+    {
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+
+                if ($$l =~ m{\G\]}cg)
+                {
+                    $is_end = 0;
+                }
+            }
+        );
+        push @paragraphs, $para;
+    }
+
+    if ($is_end)
+    {
+        Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
+    }
+
+    return XML::Grammar::Fiction::FromProto::Node::Description->new(
+        children => 
+            XML::Grammar::Fiction::FromProto::Node::List->new(
+                contents =>
+            [
+            map { 
+            XML::Grammar::Fiction::FromProto::Node::Paragraph->new(
+                children =>
+                    XML::Grammar::Fiction::FromProto::Node::List->new(
+                        contents => $_,
+                        ),
+                    )
+            } @paragraphs
+            ],
+        ),
+    );
+}
+
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    if (pos(${$self->_curr_line_ref()}) == 0)
+    {
+        return $self->_with_curr_line(
+            sub {
+                my $l = shift;
+                if (substr($$l, 0, 1) eq "[")
+                {
+                    return $self->_parse_desc_unit();
+                }
+                elsif ($$l =~ m{\A[^:]+:})
+                {
+                    return $self->_parse_speech_unit();
+                }
+                else
+                {
+                    Carp::confess ("Line " . $self->_curr_line_idx() . 
+                        " is not a description or a saying."
+                    );
+                }
+            }
+        );
+    }
+    else
+    {
+        Carp::confess ("Line " . $self->_curr_line_idx() . 
+            " has leading whitespace."
+            );
+    }
+}
+
+sub _parse_text_unit
+{
+    my $self = shift;
+    my $space = $self->_consume(qr{\s});
+
+    if ($self->_curr_line() =~ m{\G<})
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        # If it's a closing tag - then backtrack.
+        if ($self->_curr_line() =~ m{\G</})
+        {
+            return undef;
+        }
+        else
+        {
+            return $self->_parse_top_level_tag();
+        }
+    }
+    else
+    {
+        return $self->_parse_non_tag_text_unit();
+    }
+}
+
+sub _curr_line_matches
+{
+    my $self = shift;
+    my $re = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    return ($$l =~ $re);
+}
+
+sub _parse_top_level_tag
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    if ($self->_with_curr_line(sub { my $l = shift; return $$l =~ m{\G<!--}cg}))
+    {
+        my $text = $self->_consume_up_to(qr{-->});
+
+        return
+            XML::Grammar::Fiction::FromProto::Node::Comment->new(
+                text => $text
+            );
+    }
+
+    my $open = $self->_parse_opening_tag();
+
+    $self->_skip_space();
+
+    my $inside = $self->_parse_text();
+
+    $self->_skip_space();
+
+    my $close = $self->_parse_closing_tag();
+
+    $self->_skip_space();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Tags do not match: " 
+            . "$open->{name} on line $open->{line} "
+            . "and $close->{name} on line $close->{line}"
+        );
+    }
+    return XML::Grammar::Fiction::FromProto::Node::Element->new(
+        name => $open->{name},
+        children => $inside,
+        attrs => $open->{attrs},
+        );
+}
+
+sub _consume
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
+    {
+        $return_value .= $$l;
+    }
+    continue
+    {
+        $self->_next_line_ref();
+        $l = $self->_curr_line_ref();
+    }
+
+    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
+    {
+        $return_value .= $1;
+    }
+
+    return $return_value;
+}
+
+# TODO : copied and pasted from _consume - abstract
+sub _consume_up_to
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    LINE_LOOP:
+    while (defined($$l))
+    {
+        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
+        $return_value .= $1;
+        
+        # Find if it matched the regex.
+        if (length($2) > 0)
+        {
+            last LINE_LOOP;
+        }
+    }
+    continue
+    {
+        $self->_next_line_ref();
+        $l = $self->_curr_line_ref();
+    }
+
+    return $return_value;
+}
+
+sub _setup_text
+{
+    my ($self, $text) = @_;
+
+    # We include the lines trailing newlines for safety.
+    # $self->_lines([$text =~ m{\A([^\n]*\n?)*\z}ms]);
+    $self->_lines([split(/^/, $text)]);
+
+    $self->_curr_line_idx(0);
+
+    $self->_curr_line() =~ m{\A}g;
+
+    return;
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    $self->_setup_text($text);
+
+    return $self->_start();
+}
+
+=head1 NAME
+
+XML::Grammar::Fiction::FromProto::Parser::QnD - Quick and Dirty parser
+for the Screenplay-XML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns the parse tree.
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToDocBook.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,149 @@
+package XML::Grammar::Fiction::ToDocBook;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Fiction::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Fiction::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Fiction::ToDocBook - module that converts the Screenplay
+XML to DocBook.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $dtd =
+        XML::LibXML::Dtd->new(
+            "Screenplay XML 0.1.0",
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.dtd"
+            ),
+        );
+
+    $self->_dtd($dtd);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-docbook.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_docbook
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Fiction/ToHTML.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,165 @@
+package XML::Grammar::Fiction::ToHTML;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Fiction::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Fiction::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Fiction::ToHTML - module that converts the Screenplay
+XML to HTML.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Fiction::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $rngschema =
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.rng"
+            ),
+        );
+
+    $self->_rng($rngschema);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-html.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_html
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+    }
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,205 +0,0 @@
-package XML::Grammar::Screenplay;
-
-use warnings;
-use strict;
-
-=head1 NAME
-
-XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for 
-screenplays.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head1 SYNOPSIS
-
-See L<XML::Grammar::Screenplay::FromProto>, 
-L<XML::Grammar::Screenplay::ToDocBook> and
-L<XML::Grammar::Screenplay::ToHTML>.
-
-=head1 DESCRIPTION
-
-XML::Grammar::Screenplay is a Perl module for:
-
-=over 4
-
-=item 1. Converting a well-formed plain text format to a specialized XML format.
-
-=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
-
-=back
-
-The best way to use it non-programatically is using
-L<XML::Grammar::Screenplay::App::FromProto>,
-L<XML::Grammar::Screenplay::App::ToDocBook> and
-L<XML::Grammar::Screenplay::App::ToHTML>, which are modules implementing
-command line applications for their processing.
-
-The rest of this page will document the syntax of the custom textual format.
-
-=head1 FORMAT
-
-=head2 Scenes
-
-Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
-abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
-attributes whose keys are plaintext and whose values are surrounded by
-double quotes. (Single-quotes are not supported).
-
-The scene tag must have an C<id> attribute (for anchors, etc.) and could
-have an optional C<title> attribute. If the title is not specified, it will
-default to the ID.
-
-Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
-except inside scenes.
-
-=head2 Text
-
-Text is any of:
-
-=over 4
-
-=item 1. Plaintext
-
-Regular text
-
-=item 2. XML-like tags.
-
-Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
-hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
-
-=item 3. Entities
-
-The text format supports SGML-like entities such as C<< &amp; >>,
-C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
-L<HTML::Entities>.
-
-=item 4. Text between [ ... ]
-
-Text between square brackets (C<[ ... ]>) is reserved for descriptions
-or inline descriptions (see below).
-
-=back 
-
-=head2 Sayings
-
-The first paragraph when a character talks starts with the name of the
-character followed by a colon (C<:>) and the rest of the text. Like this:
-
-    David: Goliath, I'm going to kill you! You'll see -
-    I will.
-
-If a character says more than one paragraph, the next paragraph should start
-with any number of "+"-signs followed by a colon:
-
-    David: Goliath, I'm going to kill you! You'll see -
-    I will.
-
-    ++++: I will sling you and bing you till infinity!
-
-=head2 Descriptions.
-
-Descriptions that are not part of saying start with a C<[> at the first
-character of a line and extend till the next C<]>. They can span several
-paragraphs.
-
-There are also internal descriptions to the saying which are placed
-inside the paragraph of the saying and describe what happens while the
-character talks. 
-
-=head2 EXAMPLES
-
-Examples can be found in the C<t/data> directory, and here:
-
-=over 4
-
-=item * The One with the Fountainhead
-
-L<http://www.shlomifish.org/humour/TOWTF/>
-
-=item * Humanity - The Movie
-
-L<http://www.shlomifish.org/humour/humanity/>
-
-=item * Star Trek - "We The Living Dead"
-
-L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
-
-=back
-
-=head1 DEBUGGING
-
-When trying to convert the well-formed text to XML, one will often 
-encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
-which is used for parsing. The best way I found to deal with it is to
-gradually eliminate parts of the document until the offending markup is
-isolated.
-
-In the future, I plan on writing a custom parser that will provide better
-diagnostics and will hopefully also be faster.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 TODO
-
-=over 4
-
-=item * Empty
-
-=back
-
-=head1 SUPPORT
-
-You can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-
-You can also look for information at:
-
-=over 4
-
-=item * AnnoCPAN: Annotated CPAN documentation
-
-L<http://annocpan.org/dist/XML-Grammar-Screenplay>
-
-=item * CPAN Ratings
-
-L<http://cpanratings.perl.org/d/XML-Grammar-Screenplay>
-
-=item * RT: CPAN's request tracker
-
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay>
-
-=item * Search CPAN
-
-L<http://search.cpan.org/dist/XML-Grammar-Screenplay>
-
-=back
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,89 +0,0 @@
-package XML::Grammar::Screenplay::App::FromProto;
-
-use strict;
-use warnings;
-
-use base 'Exporter';
-
-our @EXPORT = (qw(run));
-
-use Getopt::Long;
-
-use XML::Grammar::Screenplay::FromProto;
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::App::FromProto - module implementing
-a command line application to convert a well-formed text to
-Screenplay XML.
-
-=head1 SYNOPSIS
-
-    perl -MXML::Grammar::Screenplay::App::FromProto -e 'run()' -- \
-	-o $@ $<
-
-=head1 FUNCTIONS
-
-=head2 run()
-
-Call with no arguments to run the application from the commandline.
-
-=cut
-
-sub run
-{
-    my $output_filename;
-
-    GetOptions(
-        "output|o=s" => \$output_filename,
-    );
-
-    if (!defined($output_filename))
-    {
-        die "Output filename not specified! Use the -o|--output flag!";
-    }
-
-    my $converter = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
-    });
-
-    my $output_xml = $converter->convert({
-            source => { file => shift(@ARGV), },
-        }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_xml;
-    close($out);
-
-    exit(0);
-}
-
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,81 +0,0 @@
-package XML::Grammar::Screenplay::App::ToDocBook;
-
-use strict;
-use warnings;
-
-use base 'Exporter';
-
-our @EXPORT = (qw(run));
-
-use Getopt::Long;
-
-use XML::Grammar::Screenplay::ToDocBook;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::App::ToDocBook - module implementing
-a command line application to convert a Screenplay XML file to docbook.
-
-=head1 FUNCTIONS
-
-=head2 run()
-
-Call with no arguments to run the application from the commandline.
-
-=cut
-
-sub run
-{
-    my $output_filename;
-
-    GetOptions(
-        "output|o=s" => \$output_filename,
-    );
-
-    if (!defined($output_filename))
-    {
-        die "Output filename not specified! Use the -o|--output flag!";
-    }
-
-    my $converter = XML::Grammar::Screenplay::ToDocBook->new();
-
-    my $output_text = $converter->translate_to_docbook({
-            source => { file => shift(@ARGV), },
-            output => "string",
-        }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_text;
-    close($out);
-
-    exit(0);
-}
-
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,81 +0,0 @@
-package XML::Grammar::Screenplay::App::ToHTML;
-
-use strict;
-use warnings;
-
-use base 'Exporter';
-
-our @EXPORT = (qw(run));
-
-use Getopt::Long;
-
-use XML::Grammar::Screenplay::ToHTML;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::App::ToHTML - module implementing
-a command line application to convert a Screenplay XML file to HTML
-
-=head1 FUNCTIONS
-
-=head2 run()
-
-Call with no arguments to run the application from the commandline.
-
-=cut
-
-sub run
-{
-    my $output_filename;
-
-    GetOptions(
-        "output|o=s" => \$output_filename,
-    );
-
-    if (!defined($output_filename))
-    {
-        die "Output filename not specified! Use the -o|--output flag!";
-    }
-
-    my $converter = XML::Grammar::Screenplay::ToHTML->new();
-
-    my $output_text = $converter->translate_to_html({
-            source => { file => shift(@ARGV), },
-            output => "string",
-        }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_text;
-    close($out);
-
-    exit(0);
-}
-
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-package XML::Grammar::Screenplay::Base;
-
-use strict;
-use warnings;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
-classes.
-
-=head1 METHODS
-
-=head2 $package->new({%args});
-
-Constructs a new package
-
-=cut
-
-sub new
-{
-    my $class = shift;
-    my $self = {};
-
-    bless $self, $class;
-
-    $self->_init(@_);
-
-    return $self;
-}
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,323 +0,0 @@
-package XML::Grammar::Screenplay::FromProto;
-
-use strict;
-use warnings;
-
-use Carp;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use XML::Writer;
-use HTML::Entities ();
-
-use XML::Grammar::Screenplay::FromProto::Nodes;
-
-use Moose;
-
-has "_parser" => ('isa' => "XML::Grammar::Screenplay::FromProto::Parser", 'is' => "rw");
-has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
-
-my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto - module that converts well-formed
-text representing a screenplay to an XML format.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    local $Parse::RecDescent::skip = "";
-
-    my $parser_class = 
-        ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
-
-    $self->_parser(
-        $parser_class->new()
-    );
-
-    return 0;
-}
-
-=head2 $self->convert({ source => { file => $path_to_file } })
-
-Converts the file $path_to_file to XML and returns it.
-
-=cut
-
-use Data::Dumper;
-
-sub _output_tag
-{
-    my ($self, $args) = @_;
-
-    my @start = @{$args->{start}};
-    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
-
-    $args->{in}->($self, $args);
-
-    $self->_writer->endTag();
-}
-
-sub _output_tag_with_childs
-{
-    my ($self, $args) = @_;
-
-    return 
-        $self->_output_tag({
-            %$args,
-            'in' => sub {
-                foreach my $child (@{$args->{elem}->_get_childs()})
-                {
-                    $self->_write_elem({elem => $child,});
-                }
-            },
-        });
-}
-
-sub _get_text_start
-{
-    my ($self, $elem) = @_;
-
-    if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying"))
-    {
-        return ["saying", 'character' => $elem->character()];
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Description"))
-    {
-        return ["description"];
-    }
-    else
-    {
-        Carp::confess ("Unknown element class - " . ref($elem) . "!");
-    }
-}
-
-sub _write_elem
-{
-    my ($self, $args) = @_;
-
-    my $elem = $args->{elem};
-
-    if (ref($elem) eq "")
-    {
-        $self->_writer->characters($elem);
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph"))
-    {
-        $self->_output_tag_with_childs(
-            {
-               start => ["para"],
-                elem => $elem,
-            },
-        );
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Element"))
-    {
-        if (($elem->name() eq "s") || ($elem->name() eq "section"))
-        {
-            $self->_write_scene({scene => $elem});
-        }
-        elsif ($elem->name() eq "a")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["ulink", "url" => $elem->lookup_attr("href")],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "b")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["bold"],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "br")
-        {
-            $self->_writer->emptyTag("br");
-        }
-        elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::InnerDesc"))
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["inlinedesc"],
-                    elem => $elem,
-                }
-            );
-        }
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => $self->_get_text_start($elem),
-                elem => $elem,
-            },
-        );
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Comment"))
-    {
-        $self->_writer->comment($elem->text());
-    }
-}
-
-sub _write_scene
-{
-    my ($self, $args) = @_;
-
-    my $scene = $args->{scene};
-
-    my $tag = $scene->name;
-    
-    if (($tag eq "s") || ($tag eq "scene"))
-    {
-        my $id = $scene->lookup_attr("id");
-
-        if (!defined($id))
-        {
-            Carp::confess("Unspecified id for scene!");
-        }
-
-        my $title = $scene->lookup_attr("title");
-        my @t = (defined($title) ? (title => $title) : ());
-
-        $self->_output_tag_with_childs(
-            {
-                'start' => ["scene", id => $id, @t],
-                elem => $scene,
-            }
-        );
-    }
-    else
-    {
-        confess "Improper scene tag - should be '<s>' or '<scene>'!";
-    }
-
-    return;
-}
-
-sub _read_file
-{
-    my ($self, $filename) = @_;
-
-    open my $in, "<", $filename or
-        confess "Could not open the file \"$filename\" for slurping.";
-    binmode $in, ":utf8";
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>;
-    }
-    close($in);
-    
-    return $contents;
-}
-
-sub _calc_tree
-{
-    my ($self, $args) = @_;
-
-    my $filename = $args->{source}->{file} or
-        confess "Wrong filename given.";
-
-    return $self->_parser->process_text($self->_read_file($filename));
-}
-
-sub convert
-{
-    my ($self, $args) = @_;
-
-    # These should be un-commented for debugging.
-    # local $::RD_HINT = 1;
-    # local $::RD_TRACE = 1;
-    
-    # We need this so P::RD won't skip leading whitespace at lines
-    # which are siginificant.  
-
-    my $tree = $self->_calc_tree($args);
-
-    if (!defined($tree))
-    {
-        Carp::confess("Parsing failed.");
-    }
-
-    my $buffer = "";
-    my $writer = XML::Writer->new(
-        OUTPUT => \$buffer, 
-        ENCODING => "utf-8",
-        NAMESPACES => 1,
-        PREFIX_MAP =>
-        {
-             $screenplay_ns => "",
-        }
-    );
-
-    $writer->xmlDecl("utf-8");
-    $writer->doctype("document", undef, "screenplay-xml.dtd");
-    $writer->startTag([$screenplay_ns, "document"]);
-    $writer->startTag([$screenplay_ns, "head"]);
-    $writer->endTag();
-    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
-
-    # Now we're inside the body.
-    $self->_writer($writer);
-
-    $self->_write_scene({scene => $tree});
-
-    # Ending the body
-    $writer->endTag();
-
-    $writer->endTag();
-    
-    return $buffer;
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,120 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Nodes;
-
-use strict;
-use warnings;
-
-use List::Util ();
-
-package XML::Grammar::Screenplay::FromProto::Node;
-
-use Moose;
-
-package XML::Grammar::Screenplay::FromProto::Node::WithContent;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node");
-
-has 'children' => (
-    isa => 'XML::Grammar::Screenplay::FromProto::Node::List', 
-    is => 'rw'
-);
-
-sub _get_childs
-{
-    my $self = shift;
-
-    my $childs = $self->children->contents();
-
-    return $childs || [];
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::Element;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
-
-has 'name' => (isa => 'Str', is => 'rw');
-has 'attrs' => (isa => 'ArrayRef', is => 'rw');
-
-sub lookup_attr
-{
-    my ($self, $attr_name) = @_;
-
-    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
-
-    if (!defined($pair))
-    {
-        return undef;
-    }
-    else
-    {
-        return $pair->{value};
-    }
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::List;
-
-use Moose;
-
-has 'contents' => (isa => "ArrayRef", is => "rw");
-
-package XML::Grammar::Screenplay::FromProto::Node::Text;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
-
-package XML::Grammar::Screenplay::FromProto::Node::Saying;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Text");
-
-has 'character' => (isa => "Str", is => "rw");
-
-package XML::Grammar::Screenplay::FromProto::Node::Description;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Text");
-
-package XML::Grammar::Screenplay::FromProto::Node::Paragraph;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Element");
-
-package XML::Grammar::Screenplay::FromProto::Node::InnerDesc;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Element");
-
-sub name
-{
-    return "inlinedesc";
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::Comment;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node");
-
-has "text" => (isa => "Str", is => "rw");
-
-1;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Screenplay::FromProto.
-
-=head1 DESCRIPTION
-
-Contains several nodes.
-
-=cut
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,37 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-1;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
-
-B<For internal use only>.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,262 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser::PRD;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::FromProto::Parser';
-
-use Parse::RecDescent;
-
-use Moose;
-
-use XML::Grammar::Screenplay::FromProto::Nodes;
-
-has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
-
-sub _init
-{
-    my $self = shift;
-
-    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
-
-    return 0;
-}
-
-sub _calc_grammar
-{
-    my $self = shift;
-
-    return <<'EOF';
-
-start : tag  {$thisparser->{ret} = $item[1]; 1 }
-
-text_unit:   tag_or_comment { $item[1] }
-           | speech_or_desc { $item[1] }
-
-tag_or_comment:   tag
-                | comment
-
-comment:    /<!--(.*?)-->/ms para_sep {
-    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
-        text => $1
-    )
-    }
-
-para_sep:      /(\n\s*)+/
-
-speech_or_desc:   speech_unit
-                | desc_unit
-
-plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
-
-inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
-    {
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $item[2],
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => []
-            ),
-            attrs => $item[3]
-            );
-    }
-
-
-inner_tag:         opening_tag  inner_text closing_tag {
-        my ($open, $inside, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            attrs => $open->{attrs},
-            )
-    }
-
-inner_desc:      /\[/ inner_text /\]/ {
-        my $inside = $item[2];
-        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            )
-    }
-
-inner_tag_or_desc:    inner_tag
-                   |  inner_desc
-
-inner_entity:      /\&\w+;/ {
-        my $inside = $item[1];
-        HTML::Entities::decode_entities($inside)
-    }
-
-inner_text_unit:    plain_inner_text  { [ $item[1] ] }
-                 |  inner_tag_or_desc { [ $item[1] ] }
-                 |  inner_entity      { [ $item[1] ] }
-                 |  inner_standalone_tag { [ $item[1] ] }
-
-inner_text:       inner_text_unit(s) {
-        [ map { @{$_} } @{$item[1]} ]
-        }
-
-addressing: /^([^:\n\+]+): /ms { $1 }
-
-saying_first_para: addressing inner_text para_sep {
-            my ($sayer, $what) = ($item[1], $item[2]);
-            +{
-             character => $sayer,
-             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                children =>
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => $what,
-                    )
-                ),
-            }
-            }
-
-saying_other_para: /^\++: /ms inner_text para_sep {
-        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => $item[2],
-                    ),
-        )
-    }
-
-speech_unit:  saying_first_para saying_other_para(s?)
-    {
-    my $first = $item[1];
-    my $others = $item[2] || [];
-        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => [ $first->{para}, @{$others} ],
-                ),
-        )
-    }
-
-desc_para:  inner_text para_sep { $item[1] }
-
-desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
-
-desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
-        my $paragraphs = $item[2];
-
-        XML::Grammar::Screenplay::FromProto::Node::Description->new(
-            children => 
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents =>
-                [
-                map { 
-                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                    children =>
-                        XML::Grammar::Screenplay::FromProto::Node::List->new(
-                            contents => $_,
-                            ),
-                        )
-                } @$paragraphs
-                ],
-            ),
-        )
-    }
-
-text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => $item[1]
-        ) }
-      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => []
-        ) }
-
-tag: space opening_tag space text space closing_tag space
-     {
-        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => $inside,
-            attrs => $open->{attrs},
-            );
-     }
-
-opening_tag: '<' id attribute(s?) '>'
-    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
-
-closing_tag: '</' id '>'
-    { $item[0] = { 'name' => $item[2], }; }
-
-attribute: space id '="' attributevalue '"' space
-    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
-
-attributevalue: /[^"]+/
-    { $item[0] = HTML::Entities::decode_entities($item[1]); }
-
-space: /\s*/
-
-id: /[a-zA-Z_\-]+/
-
-EOF
-}
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    my $rv = $self->_p_rd()->start($text);
-
-    if (!defined($rv))
-    {
-        return;
-    }
-    else
-    {
-        return $self->_p_rd->{ret};
-    }
-}
-
-1;
-
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
-
-B<For internal use only>.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns it.
-
-=head2 $self->meta()
-
-Something that L<Moose> adds.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,749 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::FromProto::Parser';
-
-use Moose;
-
-has "_curr_line_idx" => (isa => "Int", is => "rw");
-has "_lines" => (isa => "ArrayRef", is => "rw");
-
-sub _curr_line :lvalue
-{
-    my $self = shift;
-
-    return $self->_lines()->[$self->_curr_line_idx()];
-}
-
-sub _curr_line_ref
-{
-    my $self = shift;
-
-    return \($self->_lines()->[$self->_curr_line_idx()]);
-}
-
-sub _with_curr_line
-{
-    my ($self, $sub_ref) = @_;
-
-    return $sub_ref->(\($self->_lines()->[$self->_curr_line_idx()]));
-}
-
-sub _next_line_ref
-{
-    my $self = shift;
-
-    $self->_curr_line_idx($self->_curr_line_idx()+1);
-
-    return $self->_curr_line_ref();
-}
-
-sub _init
-{
-    my $self = shift;
-
-    return 0;
-}
-
-sub _start
-{
-    my $self = shift;
-
-    return $self->_parse_top_level_tag();
-}
-
-# Skip the whitespace.
-sub _skip_space
-{
-    my $self = shift;
-
-    $self->_consume(qr{\s});
-}
-
-my $id_regex = '[a-zA-Z_\-]+';
-
-sub _parse_opening_tag
-{
-    my $self = shift;
-
-    # Now Lisp got nothing on us.
-    return $self->_with_curr_line(
-        sub {
-            # $l is a reference to the string of the current
-            # line
-            my $l = shift;
-
-            if ($$l !~ m{\G<($id_regex)}g)
-            {
-                Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
-            }
-            my $id = $1;
-
-            my @attrs;
-
-            while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-            {
-                push @attrs, { 'key' => $1, 'value' => $2, };
-            }
-
-            my $is_standalone = 0;
-            if ($$l =~ m{\G\s*/\s*>}cg)
-            {
-                $is_standalone = 1;
-            }
-            elsif ($$l !~ m{\G>}g)
-            {
-                Carp::confess (
-                    "Cannot match the \">\" of the opening tag at line " 
-                        . $self->_get_line_num()
-                );
-            }
-            
-            return
-            {
-                name => $id,
-                is_standalone => $is_standalone,
-                line => $self->_get_line_num(),
-                attrs => \@attrs,
-            };
-        }
-    );
-}
-
-sub _get_line_num
-{
-    my $self = shift;
-
-    return $self->_curr_line_idx()+1;
-}
-
-sub _parse_closing_tag
-{
-    my $self = shift;
-
-    return $self->_with_curr_line(
-        sub {
-            my $l = shift;
-            if ($$l !~ m{\G</($id_regex)>}g)
-            {
-                Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
-            }
-
-            return
-            {
-                name => $1,
-            };
-        }
-    );
-}
-
-sub _parse_text
-{
-    my $self = shift;
-
-    my @ret;
-    while (defined(my $unit = $self->_parse_text_unit()))
-    {
-        push @ret, $unit;
-    }
-
-    # If it's whitespace - return an empty list.
-    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
-    {
-        return 
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => []
-            );
-    }
-
-    return XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => \@ret,
-        );
-}
-
-sub _consume_paragraph
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    return $self->_parse_inner_text();
-}
-
-sub _parse_inner_desc
-{
-    my $self = shift;
-
-    my $start_line = $self->_get_line_num();
-
-    # Skip the [
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            $$l =~ m{\G\[}g;
-        }
-    );
-
-    my $inside = $self->_parse_inner_text();
-
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ m{\G\]}g)
-            {
-                Carp::confess (
-                      "Inner description that started on line $start_line did "
-                    . "not terminate with a \"]\"!"
-                );
-            }
-        }
-    );
-
-    return
-        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
-            start => $start_line,
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-            ),
-        );
- 
-}
-
-sub _parse_inner_tag
-{
-    my $self = shift;
-
-    my $open = $self->_parse_opening_tag();
-
-    if ($open->{is_standalone})
-    {
-        $self->_skip_space();
-
-        return        
-            XML::Grammar::Screenplay::FromProto::Node::Element->new(
-                name => $open->{name},
-                children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => []
-                ),
-                attrs => $open->{attrs},
-            );
-    }
-
-    my $inside = $self->_parse_inner_text();
-
-    my $close = $self->_parse_closing_tag();
-
-    if ($open->{name} ne $close->{name})
-    {
-        Carp::confess("Opening and closing tags do not match: " 
-            . "$open->{name} and $close->{name} on element starting at "
-            . "line $open->{line}"
-        );
-    }
-    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
-        name => $open->{name},
-        children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-            contents => $inside
-            ),
-        attrs => $open->{attrs},
-        );
-}
-
-sub _parse_inner_text
-{
-    my $self = shift;
-
-    my @contents;
-
-    my $start_line = $self->_curr_line_idx();
-
-    my $curr_text = "";
-
-    CONTENTS_LOOP:
-    while ($self->_curr_line() ne "\n")
-    {
-        my $which_tag;
-        # We need this to avoid appending the rest of the first line 
-        $self->_with_curr_line(
-            sub {
-                my $l = shift;
-                
-                # Apparently, perl does not always returns true in this
-                # case, so we need the defined($1) ? $1 : "" workaround.
-                $$l =~ m{\G([^\<\[\]\&]*)}cgms;
-
-                $curr_text .= (defined($1) ? $1 : "");
-
-                if ($$l =~ m{\G\[})
-                {
-                    $which_tag = "open_desc";
-                }
-                elsif ($$l =~ m{\G\&})
-                {
-                    $which_tag = "entity";
-                }                
-                elsif ($$l =~ m{\G(?:</|\])})
-                {
-                    $which_tag = "close";
-                }
-                elsif ($$l =~ m{\G<})
-                {
-                    $which_tag = "open_tag";
-                }
-            }
-        );
-
-        push @contents, $curr_text;
-
-        $curr_text = "";
-
-        if (!defined($which_tag))
-        {
-            # Do nothing - a tag was not detected.
-        }
-        else
-        {
-            if (($which_tag eq "open_desc") || ($which_tag eq "open_tag"))
-            {
-                push @contents, 
-                    (($which_tag eq "open_tag")
-                        ? $self->_parse_inner_tag()
-                        : $self->_parse_inner_desc()
-                    );
-                # Avoid skipping to the next line.
-                # Gotta love teh Perl!
-                redo CONTENTS_LOOP;
-            }
-            elsif ($which_tag eq "close")
-            {
-                last CONTENTS_LOOP;
-            }
-            elsif ($which_tag eq "entity")
-            {
-                $self->_with_curr_line(
-                    sub {
-                        my $l = shift;
-                        if ($$l !~ m{\G(\&\w+;)}g)
-                        {
-                            Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
-                                $self->_get_line_num()
-                            );
-                        }
-                        push @contents, HTML::Entities::decode_entities($1);
-                    }
-                );
-                redo CONTENTS_LOOP;
-            }
-        }
-    }
-    continue
-    {
-        if (!defined(${$self->_next_line_ref()}))
-        {
-            Carp::confess "End of file in an addressing paragraph starting at $start_line";
-        }
-    }
-
-    if (length($curr_text) > 0)
-    {
-        push @contents, $curr_text;
-    }
-
-    return \@contents;
-}
-
-# TODO : _parse_saying_first_para and _parse_saying_other_para are
-# very similar - abstract them into one function.
-sub _parse_saying_first_para
-{
-    my $self = shift;
-
-    my ($sayer, $what);
-    
-    ($sayer) = $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ /\G([^:\n\+]+): /cgms)
-            {
-                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
-            }
-            my $sayer = $1;
-
-            if ($sayer =~ m{[\[\]]})
-            {
-                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
-            }
-
-            return ($sayer);
-        }
-    );
-
-    $what = $self->_parse_inner_text();
-
-    return
-    +{
-         character => $sayer,
-         para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $what,
-                )
-            ),
-    };
-}
-
-sub _parse_saying_other_para
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    my $verdict = $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ /\G\++: /cgms)
-            {
-                return;
-            }
-            else
-            {
-                return 1;
-            }
-        }
-    );
-
-    if (!defined($verdict))
-    {
-        return;
-    }
-
-    my $what = $self->_parse_inner_text();
-
-    return
-        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $what,
-                )
-        );
-}
-
-sub _parse_speech_unit
-{
-    my $self = shift;
-
-    my $first = $self->_parse_saying_first_para();
-
-    my @others;
-    while (defined(my $other_para = $self->_parse_saying_other_para()))
-    {
-        push @others, $other_para;
-    }
-
-    return
-        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => 
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => [ $first->{para}, @others ],
-                ),
-        );
-}
-
-sub _parse_desc_unit
-{
-    my $self = shift;
-
-    my $start_line = $self->_curr_line_idx();
-
-    # Skip the [
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            $$l =~ m{^\[}g;
-        }
-    );
-
-    my @paragraphs;
-
-    my $is_end = 1;
-    my $para;
-    PARAS_LOOP:
-    while ($is_end && ($para = $self->_consume_paragraph()))
-    {
-        $self->_with_curr_line(
-            sub {
-                my $l = shift;
-
-                if ($$l =~ m{\G\]}cg)
-                {
-                    $is_end = 0;
-                }
-            }
-        );
-        push @paragraphs, $para;
-    }
-
-    if ($is_end)
-    {
-        Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
-    }
-
-    return XML::Grammar::Screenplay::FromProto::Node::Description->new(
-        children => 
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents =>
-            [
-            map { 
-            XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                children =>
-                    XML::Grammar::Screenplay::FromProto::Node::List->new(
-                        contents => $_,
-                        ),
-                    )
-            } @paragraphs
-            ],
-        ),
-    );
-}
-
-sub _parse_non_tag_text_unit
-{
-    my $self = shift;
-
-    if (pos(${$self->_curr_line_ref()}) == 0)
-    {
-        return $self->_with_curr_line(
-            sub {
-                my $l = shift;
-                if (substr($$l, 0, 1) eq "[")
-                {
-                    return $self->_parse_desc_unit();
-                }
-                elsif ($$l =~ m{\A[^:]+:})
-                {
-                    return $self->_parse_speech_unit();
-                }
-                else
-                {
-                    Carp::confess ("Line " . $self->_curr_line_idx() . 
-                        " is not a description or a saying."
-                    );
-                }
-            }
-        );
-    }
-    else
-    {
-        Carp::confess ("Line " . $self->_curr_line_idx() . 
-            " has leading whitespace."
-            );
-    }
-}
-
-sub _parse_text_unit
-{
-    my $self = shift;
-    my $space = $self->_consume(qr{\s});
-
-    if ($self->_curr_line() =~ m{\G<})
-    {
-        # If it's a tag.
-
-        # TODO : implement the comment handling.
-        # We have a tag.
-
-        # If it's a closing tag - then backtrack.
-        if ($self->_curr_line() =~ m{\G</})
-        {
-            return undef;
-        }
-        else
-        {
-            return $self->_parse_top_level_tag();
-        }
-    }
-    else
-    {
-        return $self->_parse_non_tag_text_unit();
-    }
-}
-
-sub _curr_line_matches
-{
-    my $self = shift;
-    my $re = shift;
-
-    my $l = $self->_curr_line_ref();
-
-    return ($$l =~ $re);
-}
-
-sub _parse_top_level_tag
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    if ($self->_with_curr_line(sub { my $l = shift; return $$l =~ m{\G<!--}cg}))
-    {
-        my $text = $self->_consume_up_to(qr{-->});
-
-        return
-            XML::Grammar::Screenplay::FromProto::Node::Comment->new(
-                text => $text
-            );
-    }
-
-    my $open = $self->_parse_opening_tag();
-
-    $self->_skip_space();
-
-    my $inside = $self->_parse_text();
-
-    $self->_skip_space();
-
-    my $close = $self->_parse_closing_tag();
-
-    $self->_skip_space();
-
-    if ($open->{name} ne $close->{name})
-    {
-        Carp::confess("Tags do not match: " 
-            . "$open->{name} on line $open->{line} "
-            . "and $close->{name} on line $close->{line}"
-        );
-    }
-    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
-        name => $open->{name},
-        children => $inside,
-        attrs => $open->{attrs},
-        );
-}
-
-sub _consume
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->_curr_line_ref();
-
-    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
-    {
-        $return_value .= $$l;
-    }
-    continue
-    {
-        $self->_next_line_ref();
-        $l = $self->_curr_line_ref();
-    }
-
-    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
-    {
-        $return_value .= $1;
-    }
-
-    return $return_value;
-}
-
-# TODO : copied and pasted from _consume - abstract
-sub _consume_up_to
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->_curr_line_ref();
-
-    LINE_LOOP:
-    while (defined($$l))
-    {
-        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
-        $return_value .= $1;
-        
-        # Find if it matched the regex.
-        if (length($2) > 0)
-        {
-            last LINE_LOOP;
-        }
-    }
-    continue
-    {
-        $self->_next_line_ref();
-        $l = $self->_curr_line_ref();
-    }
-
-    return $return_value;
-}
-
-sub _setup_text
-{
-    my ($self, $text) = @_;
-
-    # We include the lines trailing newlines for safety.
-    # $self->_lines([$text =~ m{\A([^\n]*\n?)*\z}ms]);
-    $self->_lines([split(/^/, $text)]);
-
-    $self->_curr_line_idx(0);
-
-    $self->_curr_line() =~ m{\A}g;
-
-    return;
-}
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    $self->_setup_text($text);
-
-    return $self->_start();
-}
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser
-for the Screenplay-XML proto-text.
-
-B<For internal use only>.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns the parse tree.
-
-=head2 $self->meta()
-
-Leftover from Moose.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,149 +0,0 @@
-package XML::Grammar::Screenplay::ToDocBook;
-
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use XML::Grammar::Screenplay::ConfigData;
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use Moose;
-
-
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
-
-=head1 NAME
-
-XML::Grammar::Screenplay::ToDocBook - module that converts the Screenplay
-XML to DocBook.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
-
-    $self->_data_dir($data_dir);
-
-    my $dtd =
-        XML::LibXML::Dtd->new(
-            "Screenplay XML 0.1.0",
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.dtd"
-            ),
-        );
-
-    $self->_dtd($dtd);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-docbook.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
-=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
-
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
-
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
-L<XML::LibXML> DOM object.
-
-=cut
-
-sub translate_to_docbook
-{
-    my ($self, $args) = @_;
-
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,165 +0,0 @@
-package XML::Grammar::Screenplay::ToHTML;
-
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use XML::Grammar::Screenplay::ConfigData;
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use Moose;
-
-
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
-
-=head1 NAME
-
-XML::Grammar::Screenplay::ToHTML - module that converts the Screenplay
-XML to HTML.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
-
-    $self->_data_dir($data_dir);
-
-    my $rngschema =
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.rng"
-            ),
-        );
-
-    $self->_rng($rngschema);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-html.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
-=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
-
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
-
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
-L<XML::LibXML> DOM object.
-
-=cut
-
-sub translate_to_html
-{
-    my ($self, $args) = @_;
-
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $ret_code;
-
-    eval
-    {
-        $ret_code = $self->_rng()->validate($source_dom);
-    };
-
-    if (defined($ret_code) && ($ret_code == 0))
-    {
-        # It's OK.
-    }
-    else
-    {
-        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
-    }
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/00-load.t
--- a/perl/modules/XML-Grammar-Fiction/t/00-load.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/00-load.t	Tue Nov 03 15:52:36 2009 +0000
@@ -3,7 +3,7 @@
 use Test::More tests => 1;
 
 BEGIN {
-	use_ok( 'XML::Grammar::Screenplay' );
+	use_ok( 'XML::Grammar::Fiction' );
 }
 
-diag( "Testing XML::Grammar::Screenplay $XML::Grammar::Screenplay::VERSION, Perl $], $^X" );
+diag( "Testing XML::Grammar::Fiction $XML::Grammar::Fiction::VERSION, Perl $], $^X" );
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/app-to-html.t
--- a/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Tue Nov 03 15:52:36 2009 +0000
@@ -21,7 +21,7 @@
 
     # TEST
     ok (
-        !system($^X, "-MXML::Grammar::Screenplay::App::ToHTML",
+        !system($^X, "-MXML::Grammar::Fiction::App::ToHTML",
             "-e", "run()",
             "--",
             "-o", "temp.xhtml",
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/boilerplate.t
--- a/perl/modules/XML-Grammar-Fiction/t/boilerplate.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/boilerplate.t	Tue Nov 03 15:52:36 2009 +0000
@@ -45,4 +45,4 @@
     );
 }
 
-module_boilerplate_ok('lib/XML/Grammar/Screenplay.pm');
+module_boilerplate_ok('lib/XML/Grammar/Fiction.pm');
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Fiction/ConfigData.pm	Tue Nov 03 15:52:36 2009 +0000
@@ -0,0 +1,11 @@
+package XML::Grammar::Fiction::ConfigData;
+
+use strict;
+use warnings;
+
+sub config
+{
+    return ["./extradata"];
+}
+
+1;
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
--- a/perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm	Tue Nov 03 15:40:53 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,11 +0,0 @@
-package XML::Grammar::Screenplay::ConfigData;
-
-use strict;
-use warnings;
-
-sub config
-{
-    return ["./extradata"];
-}
-
-1;
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Tue Nov 03 15:52:36 2009 +0000
@@ -9,8 +9,8 @@
 
 use XML::LibXML;
 
-use XML::Grammar::Screenplay::FromProto;
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+use XML::Grammar::Fiction::FromProto;
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
 sub load_xml
 {
@@ -26,8 +26,8 @@
     return $contents;
 }
 
-my $grammar = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+my $grammar = XML::Grammar::Fiction::FromProto->new({
+        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
     });
 
 eval {
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 15:52:36 2009 +0000
@@ -9,9 +9,9 @@
 
 use XML::LibXML;
 
-use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Fiction::FromProto;
 
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
 sub load_xml
 {
@@ -45,8 +45,8 @@
 
 # TEST:$num_texts=13
 
-my $grammar = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+my $grammar = XML::Grammar::Fiction::FromProto->new({
+        parser_class => "XML::Grammar::Fiction::FromProto::Parser::QnD",
     });
 
 my $rngschema = XML::LibXML::RelaxNG->new(
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Tue Nov 03 15:52:36 2009 +0000
@@ -3,7 +3,7 @@
 
 use Test::More tests => 3;
 
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+use XML::Grammar::Fiction::FromProto::Parser::QnD;
 
 {
     my $text = <<"EOF";
@@ -15,7 +15,7 @@
 </s>
 EOF
 
-    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
 
     $parser->_setup_text($text);
 
@@ -37,7 +37,7 @@
 </s>
 EOF
 
-    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
 
     $parser->_setup_text($text);
 
@@ -58,7 +58,7 @@
 </s>
 EOF
 
-    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+    my $parser = XML::Grammar::Fiction::FromProto::Parser::QnD->new();
 
     $parser->_setup_text($text);
 
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 15:52:36 2009 +0000
@@ -11,7 +11,7 @@
 
 use XML::LibXML;
 
-use XML::Grammar::Screenplay::ToDocBook;
+use XML::Grammar::Fiction::ToDocBook;
 
 my @tests = (qw(
         with-internal-description
@@ -33,7 +33,7 @@
 
 # TEST:$num_texts=1
 
-my $converter = XML::Grammar::Screenplay::ToDocBook->new({
+my $converter = XML::Grammar::Fiction::ToDocBook->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
     });
 
diff -r 55102bcc67a6 -r a2b836c533cf perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 15:40:53 2009 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 15:52:36 2009 +0000
@@ -11,7 +11,7 @@
 
 use XML::LibXML;
 
-use XML::Grammar::Screenplay::ToHTML;
+use XML::Grammar::Fiction::ToHTML;
 
 my @tests = (qw(
         with-internal-description
@@ -33,7 +33,7 @@
 
 # TEST:$num_texts=1
 
-my $converter = XML::Grammar::Screenplay::ToHTML->new({
+my $converter = XML::Grammar::Fiction::ToHTML->new({
         data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
     });
 

changeset:   1:55102bcc67a6
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 15:40:53 2009 +0000
files:       perl/modules/XML-Grammar-Fiction/.cvsignore perl/modules/XML-Grammar-Fiction/Build.PL perl/modules/XML-Grammar-Fiction/Changes perl/modules/XML-Grammar-Fiction/MANIFEST perl/modules/XML-Grammar-Fiction/README perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.dtd perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Fiction/process-screenplay.pl perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t perl/modules/XML-Grammar-Fiction/t/00-load.t perl/modules/XML-Grammar-Fiction/t/app-to-html.t perl/modules/XML-Grammar-Fiction/t/boilerplate.t perl/modules/XML-Grammar-Fiction/t/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-description.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Fiction/t/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/data/xml/nested-s.xml perl/modules/XML-Grammar-Fiction/t/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Fiction/t/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-brs.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-comments.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-description.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-entities.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Fiction/t/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm perl/modules/XML-Grammar-Fiction/t/pod-coverage.t perl/modules/XML-Grammar-Fiction/t/pod.t perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t perl/modules/XML-Grammar-Fiction/t/to-docbook.t perl/modules/XML-Grammar-Fiction/t/to-xhtml.t perl/modules/XML-Grammar-Screenplay/.cvsignore perl/modules/XML-Grammar-Screenplay/Build.PL perl/modules/XML-Grammar-Screenplay/Changes perl/modules/XML-Grammar-Screenplay/MANIFEST perl/modules/XML-Grammar-Screenplay/README perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-xsl-fo.xslt perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.dtd perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Screenplay/inc/Test/Run/Builder.pm perl/modules/XML-Grammar-Screenplay/inc/XML/Grammar/Builder.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Screenplay/process-screenplay.pl perl/modules/XML-Grammar-Screenplay/rejects/proto-text-to-xml.t perl/modules/XML-Grammar-Screenplay/t/00-load.t perl/modules/XML-Grammar-Screenplay/t/app-to-html.t perl/modules/XML-Grammar-Screenplay/t/boilerplate.t perl/modules/XML-Grammar-Screenplay/t/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Screenplay/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-description.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Screenplay/t/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/nested-s.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-brs.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-comments.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-description.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-entities.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Screenplay/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm perl/modules/XML-Grammar-Screenplay/t/pod-coverage.t perl/modules/XML-Grammar-Screenplay/t/pod.t perl/modules/XML-Grammar-Screenplay/t/proto-text-invalid.t perl/modules/XML-Grammar-Screenplay/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Screenplay/t/qnd-parser-unit.t perl/modules/XML-Grammar-Screenplay/t/to-docbook.t perl/modules/XML-Grammar-Screenplay/t/to-xhtml.t
description:
Rename to the new module name.


diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/.cvsignore
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/.cvsignore	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,10 @@
+blib*
+Makefile
+Makefile.old
+Build
+_build*
+pm_to_blib*
+*.tar.gz
+.lwpcookies
+XML-Grammar-Screeplay-*
+cover_db
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/Build.PL
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Build.PL	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,61 @@
+use strict;
+use warnings;
+
+use File::Spec;
+use lib File::Spec->catdir(File::Spec->curdir(), "inc");
+
+use XML::Grammar::Builder;
+
+my $builder = XML::Grammar::Builder->new(
+    module_name         => 'XML::Grammar::Screenplay',
+    license             => 'mit',
+    dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
+    dist_version_from   => 'lib/XML/Grammar/Screenplay.pm',
+    build_requires => {
+        'File::Find' => 0,
+        'Test::More' => 0,
+        'Test::XML' => 0,
+    },
+    requires => 
+    {
+        'Carp' => 0,
+        'Data::Dumper' => 0,
+        'HTML::Entities' => 0,
+        'List::Util' => 0,
+        'Moose' => 0,
+        'Parse::RecDescent' => 0,
+        'warnings' => 0,
+        'XML::LibXSLT' => 0,
+        'XML::Writer' => 0,
+    },
+    add_to_cleanup      => [ 'XML-Grammar-Screenplay-*' ],
+    create_makefile_pl => 'passthrough',
+    meta_merge =>
+    {
+        resources =>
+        {
+            repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Screenplay/",
+            homepage => "http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/",
+        },
+        keywords =>
+        [
+            "authoring",
+            "cinema",
+            "creative writing",
+            "films",
+            "grammar",
+            "movies",
+            "parsing",
+            "screenplay",
+            "screenplays",
+            "script",
+            "scripts",
+            "writing",
+            "xml",
+            "xml-libxml",
+            "xslt",
+        ],
+    },
+);
+
+$builder->create_build_script();
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/Changes
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/Changes	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,67 @@
+Revision history for XML-Grammar-Screenplay
+
+        - Added the resources and keywords to the Build.PL and META.yml.
+
+0.0600  Fri Oct  9 11:35:30 IST 2009
+        - Converted the generated Screenplay-XML to its own namespace:
+        http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/
+        - Adapted the stylesheets, the RelaxNG schema, etc. to that while
+        adapting the test scripts. 
+
+0.0503  Wed Jul 29 10:12:38 IDT 2009
+        - Included a "package XML::Grammar::Screenplay::FromProto::Nodes"
+        statement at the top of:
+        lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
+        Because otherwise the rpm builder was confused.
+
+0.0502  Wed Mar  4 22:19:43 IST 2009
+        - Upgraded inc/XML/Grammar/Builder.pm to 0.0101 to (hopefully)
+        handle the extradata properly under all conditions.
+
+0.0501  Tue Mar  3 19:38:22 IST 2009
+        - Changed the Build.PL to use XML::Grammar::Builder.
+            - changed the tests accordingly, due to the lack of 
+            "blib/extradata".
+
+0.0500  Fri Feb 27 17:48:52 IST 2009
+        - Converted to use a RelaxNG schema.
+            - Now using it in ::ToHTML instead of the DTD.
+        - Added a sanity check for no inner desc inside the addressing part.
+        - Changed the 'license' field in Build.PL from 'bsd' to 'mit'
+        which is more accurate.
+
+0.0402  Fri Apr 25 13:27:16 IDT 2008
+        - Fixed a thinko with the wrong path to the DTD:
+        "products-syndication.dtd" instead of "screenplay-xml.dtd".
+        Possibly a copy-and-paste bug.
+
+0.0401  Sat Jul 14 10:43:57 IDT 2007
+        - Converted the "Screeplay" strings that were a leftover from
+        the wrong module-starter invocation into "Screenplay".
+
+0.04    Mon Jun 11 21:26:48 IDT 2007
+        - Added the Quick-and-Dirty FromProto parser, which is slightly faster,
+        than the Parse::RecDescent one and with much better diagnostics. 
+        - More parsers can be added later.
+        - Broke some compatibility - now require "use"-ing the parser class.
+
+0.03    Tue May 22 07:46:18 IDT 2007
+        - Added the <br /> tag.
+        - Added a description of the proto-text format in the POD and
+        other POD.
+        - Fixed the space being part of the saying issue in the generated
+        HTML.
+
+0.02    Mon May 21 00:26:35 IDT 2007
+        - Added the title="" attribute to the scene tag.
+        - Added support for SGML-like entities
+        - Added the direct ScreenplayXML -> HTML processor.
+        
+0.0101  Thu May 17 19:14:01 IDT 2007
+        - BUG FIX: Changed to open the filename in 
+        XML::Grammar::Screenplay::FromProto in ":utf8" mode. 
+        - BUG FIX: added more dependencies to the Build.PL.
+
+0.01    
+        First version, released on an unsuspecting world.
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/MANIFEST
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/MANIFEST	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,65 @@
+Build.PL
+Changes
+extradata/screenplay-xml.dtd
+extradata/screenplay-xml.rng
+extradata/screenplay-xml-to-docbook.xslt
+extradata/screenplay-xml-to-html.xslt
+extradata/screenplay-xml-to-xsl-fo.xslt
+inc/Test/Run/Builder.pm
+inc/XML/Grammar/Builder.pm
+lib/XML/Grammar/Screenplay/App/FromProto.pm
+lib/XML/Grammar/Screenplay/App/ToDocBook.pm
+lib/XML/Grammar/Screenplay/App/ToHTML.pm
+lib/XML/Grammar/Screenplay/Base.pm
+lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
+lib/XML/Grammar/Screenplay/FromProto.pm
+lib/XML/Grammar/Screenplay.pm
+lib/XML/Grammar/Screenplay/ToDocBook.pm
+lib/XML/Grammar/Screenplay/ToHTML.pm
+Makefile.PL
+MANIFEST
+META.yml # Will be created by "make dist"
+README
+rejects/proto-text-to-xml.t
+t/00-load.t
+t/app-to-html.t
+t/boilerplate.t
+t/data/docbook/with-internal-description.docbook.xml
+t/data/proto-text/dialogue-with-several-paragraphs.txt
+t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/data/proto-text/nested-s.txt
+t/data/proto-text/scenes-with-titles.txt
+t/data/proto-text/two-nested-s.txt
+t/data/proto-text/with-brs.txt
+t/data/proto-text/with-comments.txt
+t/data/proto-text/with-description.txt
+t/data/proto-text/with-dialogue.txt
+t/data/proto-text/with-entities.txt
+t/data/proto-text/with-internal-description.txt
+t/data/proto-text/with-multi-line-comments.txt
+t/data/proto-text/with-multi-para-desc.txt
+t/data/proto-text/with-tags-inside-paragraphs.txt
+t/data/xml/dialogue-with-several-paragraphs.xml
+t/data/xml/nested-s.xml
+t/data/xml/scenes-with-titles.xml
+t/data/xml/two-nested-s.xml
+t/data/xml/with-brs.xml
+t/data/xml/with-comments.xml
+t/data/xml/with-description.xml
+t/data/xml/with-dialogue.xml
+t/data/xml/with-entities.xml
+t/data/xml/with-internal-description.xml
+t/data/xml/with-multi-line-comments.xml
+t/data/xml/with-multi-para-desc.xml
+t/data/xml/with-tags-inside-paragraphs.xml
+t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
+t/pod-coverage.t
+t/pod.t
+t/proto-text-invalid.t
+t/proto-text-to-xml-using-custom-parser.t
+t/qnd-parser-unit.t
+t/to-docbook.t
+t/to-xhtml.t
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/README
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/README	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,44 @@
+XML-Grammar-Screenplay
+
+This is a module implementing an XML grammar for screenplays. It contains:
+
+1. A converter from a well-formed plain text format to its custom XML format.
+
+2. A converter from its custom XML format to DocBook/XML.
+
+INSTALLATION
+
+To install this module, run the following commands:
+
+    perl Build.PL
+    ./Build
+    ./Build test
+    ./Build install
+
+
+SUPPORT AND DOCUMENTATION
+
+After installing, you can find documentation for this module with the perldoc command.
+
+    perldoc XML::Grammar::Screenplay
+
+You can also look for information at:
+
+    Search CPAN
+        http://search.cpan.org/dist/XML-Grammar-Screenplay
+
+    CPAN Request Tracker:
+        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay
+
+    AnnoCPAN, annotated CPAN documentation:
+        http://annocpan.org/dist/XML-Grammar-Screenplay
+
+    CPAN Ratings:
+        http://cpanratings.perl.org/d/XML-Grammar-Screenplay
+
+COPYRIGHT AND LICENCE
+
+Copyright (C) 2007 Shlomi Fish
+
+This program is released under the following license: MIT X11.
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-docbook.xslt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,91 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
+ doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <article>
+        <xsl:attribute name="id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
+        <xsl:apply-templates select="sp:scene" />
+    </article>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <section>
+        <xsl:attribute name="id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <title>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose> 
+        </title>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </section>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <section role="description" id="{generate-id()}">
+        <title></title>
+            <xsl:apply-templates />
+    </section>
+</xsl:template>
+
+<xsl:template match="saying">
+    <section role="sp:saying" id="{generate-id()}">
+        <title></title>
+        <xsl:apply-templates />
+    </section>
+</xsl:template>
+
+<xsl:template match="para">
+    <para>
+        <xsl:if test="local-name(..) = 'saying'">
+            <emphasis role="bold"><xsl:value-of select="../@character" />: </emphasis>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </para>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <ulink>
+        <xsl:attribute name="url">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+    </ulink>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <emphasis role="bold">
+        <xsl:apply-templates />
+    </emphasis>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <phrase>[<xsl:apply-templates />]</phrase>
+</xsl:template>
+
+</xsl:stylesheet>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-html.xslt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,102 @@
+<xsl:stylesheet version = '1.0'
+     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//W3C//DTD XHTML 1.1//EN"
+ doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <html>
+        <head>
+            <title>My Screenplay</title>
+        </head>
+        <body>
+            <div class="screenplay">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:apply-templates select="sp:scene" />
+            </div>
+        </body>
+    </html>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <div class="scene" id="scene-{@id}">
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <xsl:element name="h{count(ancestor-or-self::sp:scene)}">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose>
+        </xsl:element>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <div class="description">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:saying">
+    <div class="saying">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:para">
+    <p>
+        <xsl:if test="local-name(..) = 'saying'">
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <xsl:text> </xsl:text>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </p>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <a>
+        <xsl:attribute name="href">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:apply-templates />
+    </a>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <strong class="bold">
+        <xsl:apply-templates />
+    </strong>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+</xsl:template>
+
+<xsl:template match="sp:br">
+    <br />
+</xsl:template>
+
+</xsl:stylesheet>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml-to-xsl-fo.xslt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,101 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:fo='http://www.w3.org/1999/XSL/Format'
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//body" />  
+</xsl:template>
+
+<xsl:template match="body">
+    <fo:root>
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <fo:layout-master-set>
+                <fo:simple-page-master master-name="A4">
+                    <fo:region-body />
+                </fo:simple-page-master>
+            </fo:layout-master-set>
+            <fo:page-sequence master-reference="A4">
+                <fo:flow flow-name="xsl-region-body">
+                    <xsl:apply-templates select="scene" />        
+                </fo:flow>
+            </fo:page-sequence>
+    </fo:root>
+</xsl:template>
+
+<xsl:template match="scene">
+    <fo:block>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <xsl:element name="h{count(ancestor-or-self::scene)}">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose>
+        </xsl:element>
+        <xsl:apply-templates select="scene|description|saying" />
+    </fo:block>
+</xsl:template>
+
+<xsl:template match="description">
+    <div class="description">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="saying">
+    <div class="saying">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="para">
+    <p>
+        <xsl:if test="local-name(..) = 'saying'">
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <xsl:text> </xsl:text>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </p>
+</xsl:template>
+
+<xsl:template match="ulink">
+    <a>
+        <xsl:attribute name="href">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:apply-templates />
+    </a>
+</xsl:template>
+
+<xsl:template match="bold">
+    <strong class="bold">
+        <xsl:apply-templates />
+    </strong>
+</xsl:template>
+
+<xsl:template match="inlinedesc">
+    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+</xsl:template>
+
+<xsl:template match="br">
+    <br />
+</xsl:template>
+
+</xsl:stylesheet>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.dtd
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.dtd	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,15 @@
+<!ELEMENT document (head,body)>
+<!ELEMENT head EMPTY>
+<!ELEMENT body (scene+)>
+<!ELEMENT scene ((description|saying)*,scene*)>
+<!ELEMENT description (para+)>
+<!ELEMENT saying (para+)>
+<!ELEMENT para (#PCDATA|inlinedesc|ulink|bold|br)*>
+<!ELEMENT inlinedesc (#PCDATA|ulink|bold)*>
+<!ELEMENT ulink (#PCDATA|bold)*>
+<!ELEMENT bold (#PCDATA)>
+<!ELEMENT br EMPTY>
+<!ATTLIST scene id ID #REQUIRED title CDATA #IMPLIED>
+<!ATTLIST body id ID #REQUIRED>
+<!ATTLIST saying character CDATA #REQUIRED>
+<!ATTLIST ulink url CDATA #REQUIRED>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/extradata/screenplay-xml.rng	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,99 @@
+<?xml version="1.0"?>
+<!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
+<grammar xmlns="http://relaxng.org/ns/structure/1.0"
+    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
+    >
+    <start>
+        <element name="sp:document">
+            <element name="sp:head">
+                <empty/>
+            </element>
+            <element name="sp:body">
+                <attribute name="id">
+                    <data type="ID"/>
+                </attribute>
+                <oneOrMore>
+                    <ref name="scene" />
+                </oneOrMore>
+            </element>
+        </element>
+    </start>
+    <define name="several_paras">
+        <oneOrMore>
+            <ref name="para"/>
+        </oneOrMore>
+    </define>
+    <define name="single_inline_elem">
+        <choice>
+            <text/>
+            <ref name="ulink"/>
+            <ref name="bold"/>
+        </choice>
+    </define>
+    <define name="scene">
+        <element name="sp:scene">
+            <attribute name="id">
+                <data type="ID"/>
+            </attribute>
+            <optional>
+                <attribute name="title">
+                    <text/>
+                </attribute>
+            </optional>
+            <zeroOrMore>
+                <choice>
+                    <element name="sp:description">
+                        <ref name="several_paras"/>
+                    </element>
+                    <element name="sp:saying">
+                        <attribute name="character">
+                            <text/>
+                        </attribute>
+                        <ref name="several_paras"/>
+                    </element>
+                </choice>
+            </zeroOrMore>
+            <zeroOrMore>
+                <ref name="scene" />
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="para">
+        <element name="sp:para">
+            <zeroOrMore>
+                <choice>
+                    <text/>
+                    <element name="sp:inlinedesc">
+                        <zeroOrMore>
+                            <ref name="single_inline_elem"/>
+                        </zeroOrMore>
+                    </element>
+                    <ref name="single_inline_elem"/>
+                    <element name="sp:br">
+                        <empty/>
+                    </element>
+                </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="bold">
+        <element name="sp:bold">
+            <text />
+        </element>
+    </define>
+    <define name="ulink">
+        <element name="sp:ulink">
+                <attribute name="url">
+                    <text/>
+                </attribute>
+                <zeroOrMore>
+                    <choice>
+                        <text />
+                        <ref name="bold"/>
+                    </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+</grammar>
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/inc/Test/Run/Builder.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,65 @@
+package Test::Run::Builder;
+
+use strict;
+use warnings;
+
+use Module::Build;
+
+use vars qw(@ISA);
+
+@ISA = (qw(Module::Build));
+
+sub ACTION_runtest
+{
+    my ($self) = @_;
+    my $p = $self->{properties};
+
+    $self->depends_on('code');
+
+    local @INC = @INC;
+
+    # Make sure we test the module in blib/
+    unshift @INC, (File::Spec->catdir($p->{base_dir}, $self->blib, 'lib'),
+		 File::Spec->catdir($p->{base_dir}, $self->blib, 'arch'));
+
+    $self->do_test_run_tests;
+}
+
+sub ACTION_distruntest {
+  my ($self) = @_;
+
+  $self->depends_on('distdir');
+
+  my $start_dir = $self->cwd;
+  my $dist_dir = $self->dist_dir;
+  chdir $dist_dir or die "Cannot chdir to $dist_dir: $!";
+  # XXX could be different names for scripts
+
+  $self->run_perl_script('Build.PL') # XXX Should this be run w/ --nouse-rcfile
+      or die "Error executing 'Build.PL' in dist directory: $!";
+  $self->run_perl_script('Build')
+      or die "Error executing 'Build' in dist directory: $!";
+  $self->run_perl_script('Build', [], ['runtest'])
+      or die "Error executing 'Build test' in dist directory";
+  chdir $start_dir;
+}
+
+sub do_test_run_tests
+{
+    my $self = shift;
+
+    require Test::Run::CmdLine::Iface;
+
+    my $test_run =
+        Test::Run::CmdLine::Iface->new(
+            {
+                'test_files' => [glob("t/*.t")],
+            }   
+            # 'backend_params' => $self->_get_backend_params(),
+        );
+
+    return $test_run->run();
+}
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/inc/XML/Grammar/Builder.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,77 @@
+package XML::Grammar::Builder;
+
+use strict;
+use warnings;
+
+use base 'Test::Run::Builder';
+
+use File::Find;
+
+our $VERSION = '0.0101';
+
+sub new
+{
+    my $package = shift;
+    my %args = @_;
+    my @extradata_files;
+    
+    my $module_name = $args{'module_name'};
+    $module_name =~ s{::}{-}g;
+
+    my $filter_files_cb = sub {
+        my $filename = $File::Find::name;
+        if ((-f $filename) &&
+            ($filename =~ /\.(?:mod|xslt|dtd|ent|cat|jpg|rng|xcf\.bz2)$/)
+        )
+        {
+            push @extradata_files, $filename;
+        }
+    };
+ 
+    find({ wanted => $filter_files_cb, no_chdir => 1}, "extradata");
+
+    my $builder = $package->SUPER::new(
+        extradata_files =>
+        {
+            (map { $_ => $_ } @extradata_files)
+        },
+        @_
+    );
+
+    $builder->add_build_element('extradata');
+
+    $builder->install_path()->{'extradata'} = 
+        File::Spec->catdir(
+                $builder->install_destination("lib"),
+                qw(data modules),
+                $module_name,
+                qw(data)
+        );
+
+    $builder->config_data(
+        'extradata_install_path' =>
+        [$builder->install_path()->{'extradata'}]
+    );
+
+    return $builder;
+}
+
+
+=begin excluded
+
+    my $get_dest_extradata_cb = sub {
+        my $fn = shift;
+
+        # Trying if this makes it work.
+        # TODO : Either remove this line or the rest of the lines.
+        return $fn;
+
+        $fn =~ s{^extradata}{data};
+        return "lib/$module_name/$fn";
+    };
+
+=end excluded
+
+=cut
+
+1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,205 @@
+package XML::Grammar::Screenplay;
+
+use warnings;
+use strict;
+
+=head1 NAME
+
+XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for 
+screenplays.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head1 SYNOPSIS
+
+See L<XML::Grammar::Screenplay::FromProto>, 
+L<XML::Grammar::Screenplay::ToDocBook> and
+L<XML::Grammar::Screenplay::ToHTML>.
+
+=head1 DESCRIPTION
+
+XML::Grammar::Screenplay is a Perl module for:
+
+=over 4
+
+=item 1. Converting a well-formed plain text format to a specialized XML format.
+
+=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
+
+=back
+
+The best way to use it non-programatically is using
+L<XML::Grammar::Screenplay::App::FromProto>,
+L<XML::Grammar::Screenplay::App::ToDocBook> and
+L<XML::Grammar::Screenplay::App::ToHTML>, which are modules implementing
+command line applications for their processing.
+
+The rest of this page will document the syntax of the custom textual format.
+
+=head1 FORMAT
+
+=head2 Scenes
+
+Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
+abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
+attributes whose keys are plaintext and whose values are surrounded by
+double quotes. (Single-quotes are not supported).
+
+The scene tag must have an C<id> attribute (for anchors, etc.) and could
+have an optional C<title> attribute. If the title is not specified, it will
+default to the ID.
+
+Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
+except inside scenes.
+
+=head2 Text
+
+Text is any of:
+
+=over 4
+
+=item 1. Plaintext
+
+Regular text
+
+=item 2. XML-like tags.
+
+Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
+hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+
+=item 3. Entities
+
+The text format supports SGML-like entities such as C<< &amp; >>,
+C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
+L<HTML::Entities>.
+
+=item 4. Text between [ ... ]
+
+Text between square brackets (C<[ ... ]>) is reserved for descriptions
+or inline descriptions (see below).
+
+=back 
+
+=head2 Sayings
+
+The first paragraph when a character talks starts with the name of the
+character followed by a colon (C<:>) and the rest of the text. Like this:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+If a character says more than one paragraph, the next paragraph should start
+with any number of "+"-signs followed by a colon:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+    ++++: I will sling you and bing you till infinity!
+
+=head2 Descriptions.
+
+Descriptions that are not part of saying start with a C<[> at the first
+character of a line and extend till the next C<]>. They can span several
+paragraphs.
+
+There are also internal descriptions to the saying which are placed
+inside the paragraph of the saying and describe what happens while the
+character talks. 
+
+=head2 EXAMPLES
+
+Examples can be found in the C<t/data> directory, and here:
+
+=over 4
+
+=item * The One with the Fountainhead
+
+L<http://www.shlomifish.org/humour/TOWTF/>
+
+=item * Humanity - The Movie
+
+L<http://www.shlomifish.org/humour/humanity/>
+
+=item * Star Trek - "We The Living Dead"
+
+L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
+
+=back
+
+=head1 DEBUGGING
+
+When trying to convert the well-formed text to XML, one will often 
+encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
+which is used for parsing. The best way I found to deal with it is to
+gradually eliminate parts of the document until the offending markup is
+isolated.
+
+In the future, I plan on writing a custom parser that will provide better
+diagnostics and will hopefully also be faster.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 TODO
+
+=over 4
+
+=item * Empty
+
+=back
+
+=head1 SUPPORT
+
+You can find documentation for this module with the perldoc command.
+
+    perldoc XML::Grammar::Screenplay
+
+You can also look for information at:
+
+=over 4
+
+=item * AnnoCPAN: Annotated CPAN documentation
+
+L<http://annocpan.org/dist/XML-Grammar-Screenplay>
+
+=item * CPAN Ratings
+
+L<http://cpanratings.perl.org/d/XML-Grammar-Screenplay>
+
+=item * RT: CPAN's request tracker
+
+L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay>
+
+=item * Search CPAN
+
+L<http://search.cpan.org/dist/XML-Grammar-Screenplay>
+
+=back
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,89 @@
+package XML::Grammar::Screenplay::App::FromProto;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::FromProto - module implementing
+a command line application to convert a well-formed text to
+Screenplay XML.
+
+=head1 SYNOPSIS
+
+    perl -MXML::Grammar::Screenplay::App::FromProto -e 'run()' -- \
+	-o $@ $<
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+    my $output_xml = $converter->convert({
+            source => { file => shift(@ARGV), },
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_xml;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Screenplay::App::ToDocBook;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::ToDocBook;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::ToDocBook - module implementing
+a command line application to convert a Screenplay XML file to docbook.
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::ToDocBook->new();
+
+    my $output_text = $converter->translate_to_docbook({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Screenplay::App::ToHTML;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::ToHTML;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::ToHTML - module implementing
+a command line application to convert a Screenplay XML file to HTML
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::ToHTML->new();
+
+    my $output_text = $converter->translate_to_html({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/Base.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,32 @@
+package XML::Grammar::Screenplay::Base;
+
+use strict;
+use warnings;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
+classes.
+
+=head1 METHODS
+
+=head2 $package->new({%args});
+
+Constructs a new package
+
+=cut
+
+sub new
+{
+    my $class = shift;
+    my $self = {};
+
+    bless $self, $class;
+
+    $self->_init(@_);
+
+    return $self;
+}
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,323 @@
+package XML::Grammar::Screenplay::FromProto;
+
+use strict;
+use warnings;
+
+use Carp;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use XML::Writer;
+use HTML::Entities ();
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+use Moose;
+
+has "_parser" => ('isa' => "XML::Grammar::Screenplay::FromProto::Parser", 'is' => "rw");
+has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
+
+my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto - module that converts well-formed
+text representing a screenplay to an XML format.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    local $Parse::RecDescent::skip = "";
+
+    my $parser_class = 
+        ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
+
+    $self->_parser(
+        $parser_class->new()
+    );
+
+    return 0;
+}
+
+=head2 $self->convert({ source => { file => $path_to_file } })
+
+Converts the file $path_to_file to XML and returns it.
+
+=cut
+
+use Data::Dumper;
+
+sub _output_tag
+{
+    my ($self, $args) = @_;
+
+    my @start = @{$args->{start}};
+    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
+
+    $args->{in}->($self, $args);
+
+    $self->_writer->endTag();
+}
+
+sub _output_tag_with_childs
+{
+    my ($self, $args) = @_;
+
+    return 
+        $self->_output_tag({
+            %$args,
+            'in' => sub {
+                foreach my $child (@{$args->{elem}->_get_childs()})
+                {
+                    $self->_write_elem({elem => $child,});
+                }
+            },
+        });
+}
+
+sub _get_text_start
+{
+    my ($self, $elem) = @_;
+
+    if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying"))
+    {
+        return ["saying", 'character' => $elem->character()];
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Description"))
+    {
+        return ["description"];
+    }
+    else
+    {
+        Carp::confess ("Unknown element class - " . ref($elem) . "!");
+    }
+}
+
+sub _write_elem
+{
+    my ($self, $args) = @_;
+
+    my $elem = $args->{elem};
+
+    if (ref($elem) eq "")
+    {
+        $self->_writer->characters($elem);
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph"))
+    {
+        $self->_output_tag_with_childs(
+            {
+               start => ["para"],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Element"))
+    {
+        if (($elem->name() eq "s") || ($elem->name() eq "section"))
+        {
+            $self->_write_scene({scene => $elem});
+        }
+        elsif ($elem->name() eq "a")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["ulink", "url" => $elem->lookup_attr("href")],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "b")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["bold"],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "br")
+        {
+            $self->_writer->emptyTag("br");
+        }
+        elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::InnerDesc"))
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["inlinedesc"],
+                    elem => $elem,
+                }
+            );
+        }
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => $self->_get_text_start($elem),
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Comment"))
+    {
+        $self->_writer->comment($elem->text());
+    }
+}
+
+sub _write_scene
+{
+    my ($self, $args) = @_;
+
+    my $scene = $args->{scene};
+
+    my $tag = $scene->name;
+    
+    if (($tag eq "s") || ($tag eq "scene"))
+    {
+        my $id = $scene->lookup_attr("id");
+
+        if (!defined($id))
+        {
+            Carp::confess("Unspecified id for scene!");
+        }
+
+        my $title = $scene->lookup_attr("title");
+        my @t = (defined($title) ? (title => $title) : ());
+
+        $self->_output_tag_with_childs(
+            {
+                'start' => ["scene", id => $id, @t],
+                elem => $scene,
+            }
+        );
+    }
+    else
+    {
+        confess "Improper scene tag - should be '<s>' or '<scene>'!";
+    }
+
+    return;
+}
+
+sub _read_file
+{
+    my ($self, $filename) = @_;
+
+    open my $in, "<", $filename or
+        confess "Could not open the file \"$filename\" for slurping.";
+    binmode $in, ":utf8";
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+    
+    return $contents;
+}
+
+sub _calc_tree
+{
+    my ($self, $args) = @_;
+
+    my $filename = $args->{source}->{file} or
+        confess "Wrong filename given.";
+
+    return $self->_parser->process_text($self->_read_file($filename));
+}
+
+sub convert
+{
+    my ($self, $args) = @_;
+
+    # These should be un-commented for debugging.
+    # local $::RD_HINT = 1;
+    # local $::RD_TRACE = 1;
+    
+    # We need this so P::RD won't skip leading whitespace at lines
+    # which are siginificant.  
+
+    my $tree = $self->_calc_tree($args);
+
+    if (!defined($tree))
+    {
+        Carp::confess("Parsing failed.");
+    }
+
+    my $buffer = "";
+    my $writer = XML::Writer->new(
+        OUTPUT => \$buffer, 
+        ENCODING => "utf-8",
+        NAMESPACES => 1,
+        PREFIX_MAP =>
+        {
+             $screenplay_ns => "",
+        }
+    );
+
+    $writer->xmlDecl("utf-8");
+    $writer->doctype("document", undef, "screenplay-xml.dtd");
+    $writer->startTag([$screenplay_ns, "document"]);
+    $writer->startTag([$screenplay_ns, "head"]);
+    $writer->endTag();
+    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
+
+    # Now we're inside the body.
+    $self->_writer($writer);
+
+    $self->_write_scene({scene => $tree});
+
+    # Ending the body
+    $writer->endTag();
+
+    $writer->endTag();
+    
+    return $buffer;
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,120 @@
+package XML::Grammar::Screenplay::FromProto::Nodes;
+
+use strict;
+use warnings;
+
+use List::Util ();
+
+package XML::Grammar::Screenplay::FromProto::Node;
+
+use Moose;
+
+package XML::Grammar::Screenplay::FromProto::Node::WithContent;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node");
+
+has 'children' => (
+    isa => 'XML::Grammar::Screenplay::FromProto::Node::List', 
+    is => 'rw'
+);
+
+sub _get_childs
+{
+    my $self = shift;
+
+    my $childs = $self->children->contents();
+
+    return $childs || [];
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::Element;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
+
+has 'name' => (isa => 'Str', is => 'rw');
+has 'attrs' => (isa => 'ArrayRef', is => 'rw');
+
+sub lookup_attr
+{
+    my ($self, $attr_name) = @_;
+
+    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
+
+    if (!defined($pair))
+    {
+        return undef;
+    }
+    else
+    {
+        return $pair->{value};
+    }
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::List;
+
+use Moose;
+
+has 'contents' => (isa => "ArrayRef", is => "rw");
+
+package XML::Grammar::Screenplay::FromProto::Node::Text;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
+
+package XML::Grammar::Screenplay::FromProto::Node::Saying;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Text");
+
+has 'character' => (isa => "Str", is => "rw");
+
+package XML::Grammar::Screenplay::FromProto::Node::Description;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Text");
+
+package XML::Grammar::Screenplay::FromProto::Node::Paragraph;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Element");
+
+package XML::Grammar::Screenplay::FromProto::Node::InnerDesc;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Element");
+
+sub name
+{
+    return "inlinedesc";
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::Comment;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node");
+
+has "text" => (isa => "Str", is => "rw");
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Screenplay::FromProto.
+
+=head1 DESCRIPTION
+
+Contains several nodes.
+
+=cut
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,37 @@
+package XML::Grammar::Screenplay::FromProto::Parser;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,262 @@
+package XML::Grammar::Screenplay::FromProto::Parser::PRD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::FromProto::Parser';
+
+use Parse::RecDescent;
+
+use Moose;
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
+
+sub _init
+{
+    my $self = shift;
+
+    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
+
+    return 0;
+}
+
+sub _calc_grammar
+{
+    my $self = shift;
+
+    return <<'EOF';
+
+start : tag  {$thisparser->{ret} = $item[1]; 1 }
+
+text_unit:   tag_or_comment { $item[1] }
+           | speech_or_desc { $item[1] }
+
+tag_or_comment:   tag
+                | comment
+
+comment:    /<!--(.*?)-->/ms para_sep {
+    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
+        text => $1
+    )
+    }
+
+para_sep:      /(\n\s*)+/
+
+speech_or_desc:   speech_unit
+                | desc_unit
+
+plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
+
+inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
+    {
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $item[2],
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => []
+            ),
+            attrs => $item[3]
+            );
+    }
+
+
+inner_tag:         opening_tag  inner_text closing_tag {
+        my ($open, $inside, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            attrs => $open->{attrs},
+            )
+    }
+
+inner_desc:      /\[/ inner_text /\]/ {
+        my $inside = $item[2];
+        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            )
+    }
+
+inner_tag_or_desc:    inner_tag
+                   |  inner_desc
+
+inner_entity:      /\&\w+;/ {
+        my $inside = $item[1];
+        HTML::Entities::decode_entities($inside)
+    }
+
+inner_text_unit:    plain_inner_text  { [ $item[1] ] }
+                 |  inner_tag_or_desc { [ $item[1] ] }
+                 |  inner_entity      { [ $item[1] ] }
+                 |  inner_standalone_tag { [ $item[1] ] }
+
+inner_text:       inner_text_unit(s) {
+        [ map { @{$_} } @{$item[1]} ]
+        }
+
+addressing: /^([^:\n\+]+): /ms { $1 }
+
+saying_first_para: addressing inner_text para_sep {
+            my ($sayer, $what) = ($item[1], $item[2]);
+            +{
+             character => $sayer,
+             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $what,
+                    )
+                ),
+            }
+            }
+
+saying_other_para: /^\++: /ms inner_text para_sep {
+        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $item[2],
+                    ),
+        )
+    }
+
+speech_unit:  saying_first_para saying_other_para(s?)
+    {
+    my $first = $item[1];
+    my $others = $item[2] || [];
+        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => [ $first->{para}, @{$others} ],
+                ),
+        )
+    }
+
+desc_para:  inner_text para_sep { $item[1] }
+
+desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
+
+desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
+        my $paragraphs = $item[2];
+
+        XML::Grammar::Screenplay::FromProto::Node::Description->new(
+            children => 
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents =>
+                [
+                map { 
+                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                    children =>
+                        XML::Grammar::Screenplay::FromProto::Node::List->new(
+                            contents => $_,
+                            ),
+                        )
+                } @$paragraphs
+                ],
+            ),
+        )
+    }
+
+text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => $item[1]
+        ) }
+      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => []
+        ) }
+
+tag: space opening_tag space text space closing_tag space
+     {
+        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => $inside,
+            attrs => $open->{attrs},
+            );
+     }
+
+opening_tag: '<' id attribute(s?) '>'
+    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
+
+closing_tag: '</' id '>'
+    { $item[0] = { 'name' => $item[2], }; }
+
+attribute: space id '="' attributevalue '"' space
+    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
+
+attributevalue: /[^"]+/
+    { $item[0] = HTML::Entities::decode_entities($item[1]); }
+
+space: /\s*/
+
+id: /[a-zA-Z_\-]+/
+
+EOF
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    my $rv = $self->_p_rd()->start($text);
+
+    if (!defined($rv))
+    {
+        return;
+    }
+    else
+    {
+        return $self->_p_rd->{ret};
+    }
+}
+
+1;
+
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns it.
+
+=head2 $self->meta()
+
+Something that L<Moose> adds.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,749 @@
+package XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::FromProto::Parser';
+
+use Moose;
+
+has "_curr_line_idx" => (isa => "Int", is => "rw");
+has "_lines" => (isa => "ArrayRef", is => "rw");
+
+sub _curr_line :lvalue
+{
+    my $self = shift;
+
+    return $self->_lines()->[$self->_curr_line_idx()];
+}
+
+sub _curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
+sub _with_curr_line
+{
+    my ($self, $sub_ref) = @_;
+
+    return $sub_ref->(\($self->_lines()->[$self->_curr_line_idx()]));
+}
+
+sub _next_line_ref
+{
+    my $self = shift;
+
+    $self->_curr_line_idx($self->_curr_line_idx()+1);
+
+    return $self->_curr_line_ref();
+}
+
+sub _init
+{
+    my $self = shift;
+
+    return 0;
+}
+
+sub _start
+{
+    my $self = shift;
+
+    return $self->_parse_top_level_tag();
+}
+
+# Skip the whitespace.
+sub _skip_space
+{
+    my $self = shift;
+
+    $self->_consume(qr{\s});
+}
+
+my $id_regex = '[a-zA-Z_\-]+';
+
+sub _parse_opening_tag
+{
+    my $self = shift;
+
+    # Now Lisp got nothing on us.
+    return $self->_with_curr_line(
+        sub {
+            # $l is a reference to the string of the current
+            # line
+            my $l = shift;
+
+            if ($$l !~ m{\G<($id_regex)}g)
+            {
+                Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
+            }
+            my $id = $1;
+
+            my @attrs;
+
+            while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+            {
+                push @attrs, { 'key' => $1, 'value' => $2, };
+            }
+
+            my $is_standalone = 0;
+            if ($$l =~ m{\G\s*/\s*>}cg)
+            {
+                $is_standalone = 1;
+            }
+            elsif ($$l !~ m{\G>}g)
+            {
+                Carp::confess (
+                    "Cannot match the \">\" of the opening tag at line " 
+                        . $self->_get_line_num()
+                );
+            }
+            
+            return
+            {
+                name => $id,
+                is_standalone => $is_standalone,
+                line => $self->_get_line_num(),
+                attrs => \@attrs,
+            };
+        }
+    );
+}
+
+sub _get_line_num
+{
+    my $self = shift;
+
+    return $self->_curr_line_idx()+1;
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    return $self->_with_curr_line(
+        sub {
+            my $l = shift;
+            if ($$l !~ m{\G</($id_regex)>}g)
+            {
+                Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
+            }
+
+            return
+            {
+                name => $1,
+            };
+        }
+    );
+}
+
+sub _parse_text
+{
+    my $self = shift;
+
+    my @ret;
+    while (defined(my $unit = $self->_parse_text_unit()))
+    {
+        push @ret, $unit;
+    }
+
+    # If it's whitespace - return an empty list.
+    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
+    {
+        return 
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => []
+            );
+    }
+
+    return XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => \@ret,
+        );
+}
+
+sub _consume_paragraph
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    return $self->_parse_inner_text();
+}
+
+sub _parse_inner_desc
+{
+    my $self = shift;
+
+    my $start_line = $self->_get_line_num();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{\G\[}g;
+        }
+    );
+
+    my $inside = $self->_parse_inner_text();
+
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ m{\G\]}g)
+            {
+                Carp::confess (
+                      "Inner description that started on line $start_line did "
+                    . "not terminate with a \"]\"!"
+                );
+            }
+        }
+    );
+
+    return
+        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
+            start => $start_line,
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+            ),
+        );
+ 
+}
+
+sub _parse_inner_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    if ($open->{is_standalone})
+    {
+        $self->_skip_space();
+
+        return        
+            XML::Grammar::Screenplay::FromProto::Node::Element->new(
+                name => $open->{name},
+                children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => []
+                ),
+                attrs => $open->{attrs},
+            );
+    }
+
+    my $inside = $self->_parse_inner_text();
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Opening and closing tags do not match: " 
+            . "$open->{name} and $close->{name} on element starting at "
+            . "line $open->{line}"
+        );
+    }
+    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
+        name => $open->{name},
+        children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+            contents => $inside
+            ),
+        attrs => $open->{attrs},
+        );
+}
+
+sub _parse_inner_text
+{
+    my $self = shift;
+
+    my @contents;
+
+    my $start_line = $self->_curr_line_idx();
+
+    my $curr_text = "";
+
+    CONTENTS_LOOP:
+    while ($self->_curr_line() ne "\n")
+    {
+        my $which_tag;
+        # We need this to avoid appending the rest of the first line 
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+                
+                # Apparently, perl does not always returns true in this
+                # case, so we need the defined($1) ? $1 : "" workaround.
+                $$l =~ m{\G([^\<\[\]\&]*)}cgms;
+
+                $curr_text .= (defined($1) ? $1 : "");
+
+                if ($$l =~ m{\G\[})
+                {
+                    $which_tag = "open_desc";
+                }
+                elsif ($$l =~ m{\G\&})
+                {
+                    $which_tag = "entity";
+                }                
+                elsif ($$l =~ m{\G(?:</|\])})
+                {
+                    $which_tag = "close";
+                }
+                elsif ($$l =~ m{\G<})
+                {
+                    $which_tag = "open_tag";
+                }
+            }
+        );
+
+        push @contents, $curr_text;
+
+        $curr_text = "";
+
+        if (!defined($which_tag))
+        {
+            # Do nothing - a tag was not detected.
+        }
+        else
+        {
+            if (($which_tag eq "open_desc") || ($which_tag eq "open_tag"))
+            {
+                push @contents, 
+                    (($which_tag eq "open_tag")
+                        ? $self->_parse_inner_tag()
+                        : $self->_parse_inner_desc()
+                    );
+                # Avoid skipping to the next line.
+                # Gotta love teh Perl!
+                redo CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "close")
+            {
+                last CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "entity")
+            {
+                $self->_with_curr_line(
+                    sub {
+                        my $l = shift;
+                        if ($$l !~ m{\G(\&\w+;)}g)
+                        {
+                            Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                                $self->_get_line_num()
+                            );
+                        }
+                        push @contents, HTML::Entities::decode_entities($1);
+                    }
+                );
+                redo CONTENTS_LOOP;
+            }
+        }
+    }
+    continue
+    {
+        if (!defined(${$self->_next_line_ref()}))
+        {
+            Carp::confess "End of file in an addressing paragraph starting at $start_line";
+        }
+    }
+
+    if (length($curr_text) > 0)
+    {
+        push @contents, $curr_text;
+    }
+
+    return \@contents;
+}
+
+# TODO : _parse_saying_first_para and _parse_saying_other_para are
+# very similar - abstract them into one function.
+sub _parse_saying_first_para
+{
+    my $self = shift;
+
+    my ($sayer, $what);
+    
+    ($sayer) = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G([^:\n\+]+): /cgms)
+            {
+                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
+            }
+            my $sayer = $1;
+
+            if ($sayer =~ m{[\[\]]})
+            {
+                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
+            }
+
+            return ($sayer);
+        }
+    );
+
+    $what = $self->_parse_inner_text();
+
+    return
+    +{
+         character => $sayer,
+         para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $what,
+                )
+            ),
+    };
+}
+
+sub _parse_saying_other_para
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    my $verdict = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G\++: /cgms)
+            {
+                return;
+            }
+            else
+            {
+                return 1;
+            }
+        }
+    );
+
+    if (!defined($verdict))
+    {
+        return;
+    }
+
+    my $what = $self->_parse_inner_text();
+
+    return
+        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $what,
+                )
+        );
+}
+
+sub _parse_speech_unit
+{
+    my $self = shift;
+
+    my $first = $self->_parse_saying_first_para();
+
+    my @others;
+    while (defined(my $other_para = $self->_parse_saying_other_para()))
+    {
+        push @others, $other_para;
+    }
+
+    return
+        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => 
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => [ $first->{para}, @others ],
+                ),
+        );
+}
+
+sub _parse_desc_unit
+{
+    my $self = shift;
+
+    my $start_line = $self->_curr_line_idx();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{^\[}g;
+        }
+    );
+
+    my @paragraphs;
+
+    my $is_end = 1;
+    my $para;
+    PARAS_LOOP:
+    while ($is_end && ($para = $self->_consume_paragraph()))
+    {
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+
+                if ($$l =~ m{\G\]}cg)
+                {
+                    $is_end = 0;
+                }
+            }
+        );
+        push @paragraphs, $para;
+    }
+
+    if ($is_end)
+    {
+        Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
+    }
+
+    return XML::Grammar::Screenplay::FromProto::Node::Description->new(
+        children => 
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents =>
+            [
+            map { 
+            XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                children =>
+                    XML::Grammar::Screenplay::FromProto::Node::List->new(
+                        contents => $_,
+                        ),
+                    )
+            } @paragraphs
+            ],
+        ),
+    );
+}
+
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    if (pos(${$self->_curr_line_ref()}) == 0)
+    {
+        return $self->_with_curr_line(
+            sub {
+                my $l = shift;
+                if (substr($$l, 0, 1) eq "[")
+                {
+                    return $self->_parse_desc_unit();
+                }
+                elsif ($$l =~ m{\A[^:]+:})
+                {
+                    return $self->_parse_speech_unit();
+                }
+                else
+                {
+                    Carp::confess ("Line " . $self->_curr_line_idx() . 
+                        " is not a description or a saying."
+                    );
+                }
+            }
+        );
+    }
+    else
+    {
+        Carp::confess ("Line " . $self->_curr_line_idx() . 
+            " has leading whitespace."
+            );
+    }
+}
+
+sub _parse_text_unit
+{
+    my $self = shift;
+    my $space = $self->_consume(qr{\s});
+
+    if ($self->_curr_line() =~ m{\G<})
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        # If it's a closing tag - then backtrack.
+        if ($self->_curr_line() =~ m{\G</})
+        {
+            return undef;
+        }
+        else
+        {
+            return $self->_parse_top_level_tag();
+        }
+    }
+    else
+    {
+        return $self->_parse_non_tag_text_unit();
+    }
+}
+
+sub _curr_line_matches
+{
+    my $self = shift;
+    my $re = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    return ($$l =~ $re);
+}
+
+sub _parse_top_level_tag
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    if ($self->_with_curr_line(sub { my $l = shift; return $$l =~ m{\G<!--}cg}))
+    {
+        my $text = $self->_consume_up_to(qr{-->});
+
+        return
+            XML::Grammar::Screenplay::FromProto::Node::Comment->new(
+                text => $text
+            );
+    }
+
+    my $open = $self->_parse_opening_tag();
+
+    $self->_skip_space();
+
+    my $inside = $self->_parse_text();
+
+    $self->_skip_space();
+
+    my $close = $self->_parse_closing_tag();
+
+    $self->_skip_space();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Tags do not match: " 
+            . "$open->{name} on line $open->{line} "
+            . "and $close->{name} on line $close->{line}"
+        );
+    }
+    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
+        name => $open->{name},
+        children => $inside,
+        attrs => $open->{attrs},
+        );
+}
+
+sub _consume
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
+    {
+        $return_value .= $$l;
+    }
+    continue
+    {
+        $self->_next_line_ref();
+        $l = $self->_curr_line_ref();
+    }
+
+    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
+    {
+        $return_value .= $1;
+    }
+
+    return $return_value;
+}
+
+# TODO : copied and pasted from _consume - abstract
+sub _consume_up_to
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    LINE_LOOP:
+    while (defined($$l))
+    {
+        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
+        $return_value .= $1;
+        
+        # Find if it matched the regex.
+        if (length($2) > 0)
+        {
+            last LINE_LOOP;
+        }
+    }
+    continue
+    {
+        $self->_next_line_ref();
+        $l = $self->_curr_line_ref();
+    }
+
+    return $return_value;
+}
+
+sub _setup_text
+{
+    my ($self, $text) = @_;
+
+    # We include the lines trailing newlines for safety.
+    # $self->_lines([$text =~ m{\A([^\n]*\n?)*\z}ms]);
+    $self->_lines([split(/^/, $text)]);
+
+    $self->_curr_line_idx(0);
+
+    $self->_curr_line() =~ m{\A}g;
+
+    return;
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    $self->_setup_text($text);
+
+    return $self->_start();
+}
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser
+for the Screenplay-XML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns the parse tree.
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,149 @@
+package XML::Grammar::Screenplay::ToDocBook;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Screenplay::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToDocBook - module that converts the Screenplay
+XML to DocBook.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $dtd =
+        XML::LibXML::Dtd->new(
+            "Screenplay XML 0.1.0",
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.dtd"
+            ),
+        );
+
+    $self->_dtd($dtd);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-docbook.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_docbook
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,165 @@
+package XML::Grammar::Screenplay::ToHTML;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Screenplay::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToHTML - module that converts the Screenplay
+XML to HTML.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $rngschema =
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.rng"
+            ),
+        );
+
+    $self->_rng($rngschema);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-html.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_html
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+    }
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/process-screenplay.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/process-screenplay.pl	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,43 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use XML::Grammar::Screenplay::FromProto;
+use Getopt::Long;
+use Carp;
+
+# local $::RD_TRACE = 1;
+
+my $output_fn;
+
+GetOptions(
+    "output|o=s" => \$output_fn,
+);
+
+my $filename = shift(@ARGV);
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new();
+
+my $got_xml = $grammar->convert(
+    {
+        source =>
+        {
+            file => $filename,
+        },
+    }
+
+);
+
+if (defined($output_fn))
+{
+    open my $out, ">", $output_fn
+        or confess "Cannot open file \"$output_fn\" for writing!";
+    print {$out} $got_xml;
+    close($out)
+}
+else
+{
+    print $got_xml;
+}
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/rejects/proto-text-to-xml.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,100 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 39;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::PRD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my $rngschema = XML::LibXML::RelaxNG->new(
+        location => "./extradata/screenplay-xml.rng" 
+    );
+
+my @tests = (qw(
+        nested-s
+        two-nested-s
+        with-dialogue
+        dialogue-with-several-paragraphs
+        with-description
+        with-tags-inside-paragraphs
+        with-internal-description
+        with-comments
+        with-multi-para-desc
+        with-multi-line-comments
+        scenes-with-titles
+        with-entities
+        with-brs
+    ));
+
+# TEST:$num_texts=13
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::PRD",
+    });
+
+my $dtd = 
+    XML::LibXML::Dtd->new(
+        "Screenplay XML 0.1.0",
+        File::Spec->catfile(
+            "extradata", "screenplay-xml.dtd",
+        ),
+    );
+
+my $xml_parser = XML::LibXML->new();
+$xml_parser->validation(0);
+
+foreach my $fn (@tests)
+{
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text/$fn.txt",
+            },
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
+        "Output of the Proto Text \"$fn\""
+    );
+
+    my $dom = $xml_parser->parse_string($got_xml);
+
+    # TEST*$num_texts
+    ok ($dom->validate($dtd), 
+        "Checking for validity of '$fn'"
+    );
+
+    my $code;
+    $code = $rngschema->validate($dom);
+
+    # TEST*$num_texts
+    ok ((defined($code) && ($code == 0)),
+        "The validation of '$fn' succeeded.") ||
+        diag("\$@ == $@");
+    
+}
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/00-load.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/00-load.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,9 @@
+#!perl -T
+
+use Test::More tests => 1;
+
+BEGIN {
+	use_ok( 'XML::Grammar::Screenplay' );
+}
+
+diag( "Testing XML::Grammar::Screenplay $XML::Grammar::Screenplay::VERSION, Perl $], $^X" );
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/app-to-html.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/app-to-html.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,39 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 1;
+use File::Spec;
+
+use Config;
+
+{
+    local %ENV = %ENV;
+    my @p5lib = split($Config{'path_sep'}, $ENV{'PERL5LIB'});
+    $ENV{'PERL5LIB'} = join($Config{'path_sep'}, 
+        File::Spec->rel2abs(
+            File::Spec->catdir(
+                File::Spec->curdir(),
+                "t", "lib", "run-test-1",
+            )
+        ), @p5lib);
+
+    # TEST
+    ok (
+        !system($^X, "-MXML::Grammar::Screenplay::App::ToHTML",
+            "-e", "run()",
+            "--",
+            "-o", "temp.xhtml",
+            File::Spec->catdir(File::Spec->curdir(), 
+                "t", "data", "xml", "nested-s.xml"
+            )
+        ),
+        "Testing App::ToHTML",
+    );
+
+    unlink("temp.xhtml");
+}
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/boilerplate.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/boilerplate.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,48 @@
+#!perl -T
+
+use strict;
+use warnings;
+use Test::More tests => 3;
+
+sub not_in_file_ok {
+    my ($filename, %regex) = @_;
+    open my $fh, "<", $filename
+        or die "couldn't open $filename for reading: $!";
+
+    my %violated;
+
+    while (my $line = <$fh>) {
+        while (my ($desc, $regex) = each %regex) {
+            if ($line =~ $regex) {
+                push @{$violated{$desc}||=[]}, $.;
+            }
+        }
+    }
+
+    if (%violated) {
+        fail("$filename contains boilerplate text");
+        diag "$_ appears on lines @{$violated{$_}}" for keys %violated;
+    } else {
+        pass("$filename contains no boilerplate text");
+    }
+}
+
+not_in_file_ok(README =>
+    "The README is used..."       => qr/The README is used/,
+    "'version information here'"  => qr/to provide version information/,
+);
+
+not_in_file_ok(Changes =>
+    "placeholder date/time"       => qr(Date/time)
+);
+
+sub module_boilerplate_ok {
+    my ($module) = @_;
+    not_in_file_ok($module =>
+        'the great new $MODULENAME'   => qr/ - The great new /,
+        'boilerplate description'     => qr/Quick summary of what the module/,
+        'stub function definition'    => qr/function[12]/,
+    );
+}
+
+module_boilerplate_ok('lib/XML/Grammar/Screenplay.pm');
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/docbook/with-internal-description.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/docbook/with-internal-description.docbook.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd">
+<article id="index">
+  <section id="top">
+    <title>top</title>
+    <section id="david_and_goliath">
+      <title>david_and_goliath</title>
+      <section role="description" id="id2244766"><title/>
+            <para>
+            [
+        
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
+                are standing by each other.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2244967"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                I will kill you.
+            </para>
+        </section>
+      <section role="saying" id="id2244977"><title/>
+            <para><emphasis role="bold">Goliath: </emphasis>
+                no way, you little idiot!
+            </para>
+        </section>
+      <section role="saying" id="id2244986"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                yes way!
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
+                <phrase>[sarcastically]</phrase> power 
+                of my sling.
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                I shall sling you and bing you till infinity.
+            </para>
+        </section>
+      <section role="description" id="id2242910"><title/>
+            <para>
+            [
+        
+                David takes his sling.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2242918"><title/>
+        <para><emphasis role="bold">Goliath: </emphasis>
+            I'm still <ulink url="http://wait.tld/"/>.
+        </para>
+    </section>
+      <section role="saying" id="id2244786"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            so you are.
+        </para>
+    </section>
+      <section role="description" id="id2244795"><title/>
+        <para>
+            [
+        
+            David puts a stone in his sling and shoots Goliath. He hits.
+        
+            ]
+        </para>
+    </section>
+      <section role="saying" id="id2244802"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            as is written in the wikipedia <phrase>[See <ulink url="http://wiki.tld/"/>
+                for more information]</phrase>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </section>
+    </section>
+  </section>
+</article>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,23 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+Goliath [dead]: vengence will be mine.
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/dialogue-with-several-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/dialogue-with-several-paragraphs.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,22 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++: I shall sling you and bing you till infinity.
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/nested-s.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,6 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/scenes-with-titles.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/scenes-with-titles.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,17 @@
+<s id="top">
+
+<s id="a-better-scene" title="A Better Scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+<s id="exodus" title="The Exodus">
+
+Moses: let us get out of here!
+
+Joshua: amen!
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/two-nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/two-nested-s.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,9 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-brs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-brs.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,21 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-comments.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,15 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters -->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-description.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,28 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-dialogue.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-dialogue.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,13 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-entities.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-entities.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David &amp; Goliath &lt;are&gt; standing by each other.
+
+David is a red-head. &quot;Hello&quot;
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-internal-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-internal-description.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,34 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
+of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
+Wiki site</a> for more information], you are now dead, having been shot with
+my sling.
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-line-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-line-comments.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,18 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters 
+
+They are nifty.
+-->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-para-desc.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-multi-para-desc.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.
+
+David is a red-head.
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-tags-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/proto-text/with-tags-inside-paragraphs.txt	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/dialogue-with-several-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/dialogue-with-several-paragraphs.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,44 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                I'm still waiting.
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                so you are.
+            </para>
+        </saying>
+    </scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/nested-s.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,12 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/scenes-with-titles.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/scenes-with-titles.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene" title="A Better Scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+            <scene id="exodus" title="The Exodus">
+                <saying character="Moses">
+                    <para>
+                        let us get out of here!
+                    </para>
+                </saying>
+                <saying character="Joshua">
+                    <para>
+                        amen!
+                    </para>
+                </saying>
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/two-nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/two-nested-s.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,14 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-brs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-brs.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,39 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.<br />
+                I will kill you.<br />
+                You will not survive.<br />
+                I will kill you.<br />
+                I will kill you.<br />
+                Ask Jive.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-comments.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,29 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-description.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,59 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-dialogue.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-dialogue.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-entities.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-entities.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </para>
+        <para>
+            David is a red-head. "Hello"
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-internal-description.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,69 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
+                <inlinedesc>sarcastically</inlinedesc> power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+    <saying character="David">
+        <para>
+            as is written in the wikipedia <inlinedesc>See <ulink url="http://wiki.tld/">the Wiki site</ulink>
+                for more information</inlinedesc>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-line-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-line-comments.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,32 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters 
+
+        They are nifty.
+        -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-para-desc.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-multi-para-desc.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+        </para>
+        <para>
+            David is a red-head.
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/data/xml/with-tags-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/data/xml/with-tags-inside-paragraphs.xml	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,61 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,11 @@
+package XML::Grammar::Screenplay::ConfigData;
+
+use strict;
+use warnings;
+
+sub config
+{
+    return ["./extradata"];
+}
+
+1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/pod-coverage.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/pod-coverage.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,6 @@
+#!perl -T
+
+use Test::More;
+eval "use Test::Pod::Coverage 1.04";
+plan skip_all => "Test::Pod::Coverage 1.04 required for testing POD coverage" if $@;
+all_pod_coverage_ok();
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/pod.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/pod.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,6 @@
+#!perl -T
+
+use Test::More;
+eval "use Test::Pod 1.14";
+plan skip_all => "Test::Pod 1.14 required for testing POD" if $@;
+all_pod_files_ok();
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-invalid.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,51 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::More tests => 1;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+eval {
+my $got_xml = $grammar->convert(
+    {
+        source =>
+        {
+            file => "t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
+        },
+    }
+);
+};
+
+my $err = $@;
+
+# TEST
+like ($err, qr{inner-desc.*?addressing},
+   "Tried to put an inner-desc inside an addressing "
+);
+
+1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,86 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 26;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my @tests = (qw(
+        nested-s
+        two-nested-s
+        with-dialogue
+        dialogue-with-several-paragraphs
+        with-description
+        with-tags-inside-paragraphs
+        with-internal-description
+        with-comments
+        with-multi-para-desc
+        with-multi-line-comments
+        scenes-with-titles
+        with-entities
+        with-brs
+    ));
+
+# TEST:$num_texts=13
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+my $rngschema = XML::LibXML::RelaxNG->new(
+        location => "./extradata/screenplay-xml.rng" 
+    );    
+
+my $xml_parser = XML::LibXML->new();
+$xml_parser->validation(0);
+
+foreach my $fn (@tests)
+{
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text/$fn.txt",
+            },
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
+        "Output of the Proto Text \"$fn\""
+    );
+
+    my $dom = $xml_parser->parse_string($got_xml);
+
+    my $code;
+    $code = $rngschema->validate($dom);
+
+    # TEST*$num_texts
+    ok ((defined($code) && ($code == 0)),
+        "The validation of '$fn' succeeded.") ||
+        diag("\$@ == $@");
+}
+
+1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/qnd-parser-unit.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,78 @@
+use strict;
+use warnings;
+
+use Test::More tests => 3;
+
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+{
+    my $text = <<"EOF";
+Hello <s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->_setup_text($text);
+
+    my $ret = $parser->_consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello ", "_consume works for first line");
+}
+
+{
+    my $text = <<"EOF";
+Hello
+voila the row kala:
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->_setup_text($text);
+
+    my $ret = $parser->_consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello\nvoila the row kala:\n", 
+        "_consume works for several lines");
+}
+
+{
+    my $text = <<"EOF";
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->_setup_text($text);
+
+    my $ret = $parser->_parse_opening_tag();
+
+    # TEST
+    is_deeply ($ret, 
+        {
+            name => "s",
+            is_standalone => 0,
+            line => 1,
+            attrs => [ { key => "id", value => "top"}],
+        },
+        "Checking _parse_opening_tag() - #1",
+    );
+}
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/to-docbook.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-docbook.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,70 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 2;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToDocBook;
+
+my @tests = (qw(
+        with-internal-description
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=1
+
+my $converter = XML::Grammar::Screenplay::ToDocBook->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $docbook_text = $converter->translate_to_docbook({
+            source => { file => "t/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    # TEST*$num_texts*2
+    
+    my $parser = XML::LibXML->new();
+
+    my $doc = $parser->parse_string($docbook_text);
+
+    is (
+        scalar(() = $doc->findnodes(q{//article[@id='index']})),
+        1,
+        "Found one article with id index",
+    );
+
+    ok (
+        (scalar(() = $doc->findnodes(q{//section[@role='description']}))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+}
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Fiction/t/to-xhtml.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Fiction/t/to-xhtml.t	Tue Nov 03 15:40:53 2009 +0000
@@ -0,0 +1,82 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 3;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToHTML;
+
+my @tests = (qw(
+        with-internal-description
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=1
+
+my $converter = XML::Grammar::Screenplay::ToHTML->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $xhtml_text = $converter->translate_to_html({
+            source => { file => "t/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    my $parser = XML::LibXML->new();
+
+    my $doc = $parser->parse_string($xhtml_text);
+
+    my $xpc = XML::LibXML::XPathContext->new();
+    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+    # TEST*$num_texts
+    is (
+        scalar(() = $xpc->find(q{//x:html}, $doc)),
+        1,
+        "Found one article with id index",
+    );
+
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xpc->find(q{//x:div[@class='saying']}, $doc))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+}
+
+1;
+
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/.cvsignore
--- a/perl/modules/XML-Grammar-Screenplay/.cvsignore	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,10 +0,0 @@
-blib*
-Makefile
-Makefile.old
-Build
-_build*
-pm_to_blib*
-*.tar.gz
-.lwpcookies
-XML-Grammar-Screeplay-*
-cover_db
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/Build.PL
--- a/perl/modules/XML-Grammar-Screenplay/Build.PL	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,61 +0,0 @@
-use strict;
-use warnings;
-
-use File::Spec;
-use lib File::Spec->catdir(File::Spec->curdir(), "inc");
-
-use XML::Grammar::Builder;
-
-my $builder = XML::Grammar::Builder->new(
-    module_name         => 'XML::Grammar::Screenplay',
-    license             => 'mit',
-    dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
-    dist_version_from   => 'lib/XML/Grammar/Screenplay.pm',
-    build_requires => {
-        'File::Find' => 0,
-        'Test::More' => 0,
-        'Test::XML' => 0,
-    },
-    requires => 
-    {
-        'Carp' => 0,
-        'Data::Dumper' => 0,
-        'HTML::Entities' => 0,
-        'List::Util' => 0,
-        'Moose' => 0,
-        'Parse::RecDescent' => 0,
-        'warnings' => 0,
-        'XML::LibXSLT' => 0,
-        'XML::Writer' => 0,
-    },
-    add_to_cleanup      => [ 'XML-Grammar-Screenplay-*' ],
-    create_makefile_pl => 'passthrough',
-    meta_merge =>
-    {
-        resources =>
-        {
-            repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Screenplay/",
-            homepage => "http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/",
-        },
-        keywords =>
-        [
-            "authoring",
-            "cinema",
-            "creative writing",
-            "films",
-            "grammar",
-            "movies",
-            "parsing",
-            "screenplay",
-            "screenplays",
-            "script",
-            "scripts",
-            "writing",
-            "xml",
-            "xml-libxml",
-            "xslt",
-        ],
-    },
-);
-
-$builder->create_build_script();
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/Changes
--- a/perl/modules/XML-Grammar-Screenplay/Changes	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,67 +0,0 @@
-Revision history for XML-Grammar-Screenplay
-
-        - Added the resources and keywords to the Build.PL and META.yml.
-
-0.0600  Fri Oct  9 11:35:30 IST 2009
-        - Converted the generated Screenplay-XML to its own namespace:
-        http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/
-        - Adapted the stylesheets, the RelaxNG schema, etc. to that while
-        adapting the test scripts. 
-
-0.0503  Wed Jul 29 10:12:38 IDT 2009
-        - Included a "package XML::Grammar::Screenplay::FromProto::Nodes"
-        statement at the top of:
-        lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
-        Because otherwise the rpm builder was confused.
-
-0.0502  Wed Mar  4 22:19:43 IST 2009
-        - Upgraded inc/XML/Grammar/Builder.pm to 0.0101 to (hopefully)
-        handle the extradata properly under all conditions.
-
-0.0501  Tue Mar  3 19:38:22 IST 2009
-        - Changed the Build.PL to use XML::Grammar::Builder.
-            - changed the tests accordingly, due to the lack of 
-            "blib/extradata".
-
-0.0500  Fri Feb 27 17:48:52 IST 2009
-        - Converted to use a RelaxNG schema.
-            - Now using it in ::ToHTML instead of the DTD.
-        - Added a sanity check for no inner desc inside the addressing part.
-        - Changed the 'license' field in Build.PL from 'bsd' to 'mit'
-        which is more accurate.
-
-0.0402  Fri Apr 25 13:27:16 IDT 2008
-        - Fixed a thinko with the wrong path to the DTD:
-        "products-syndication.dtd" instead of "screenplay-xml.dtd".
-        Possibly a copy-and-paste bug.
-
-0.0401  Sat Jul 14 10:43:57 IDT 2007
-        - Converted the "Screeplay" strings that were a leftover from
-        the wrong module-starter invocation into "Screenplay".
-
-0.04    Mon Jun 11 21:26:48 IDT 2007
-        - Added the Quick-and-Dirty FromProto parser, which is slightly faster,
-        than the Parse::RecDescent one and with much better diagnostics. 
-        - More parsers can be added later.
-        - Broke some compatibility - now require "use"-ing the parser class.
-
-0.03    Tue May 22 07:46:18 IDT 2007
-        - Added the <br /> tag.
-        - Added a description of the proto-text format in the POD and
-        other POD.
-        - Fixed the space being part of the saying issue in the generated
-        HTML.
-
-0.02    Mon May 21 00:26:35 IDT 2007
-        - Added the title="" attribute to the scene tag.
-        - Added support for SGML-like entities
-        - Added the direct ScreenplayXML -> HTML processor.
-        
-0.0101  Thu May 17 19:14:01 IDT 2007
-        - BUG FIX: Changed to open the filename in 
-        XML::Grammar::Screenplay::FromProto in ":utf8" mode. 
-        - BUG FIX: added more dependencies to the Build.PL.
-
-0.01    
-        First version, released on an unsuspecting world.
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/MANIFEST
--- a/perl/modules/XML-Grammar-Screenplay/MANIFEST	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-Build.PL
-Changes
-extradata/screenplay-xml.dtd
-extradata/screenplay-xml.rng
-extradata/screenplay-xml-to-docbook.xslt
-extradata/screenplay-xml-to-html.xslt
-extradata/screenplay-xml-to-xsl-fo.xslt
-inc/Test/Run/Builder.pm
-inc/XML/Grammar/Builder.pm
-lib/XML/Grammar/Screenplay/App/FromProto.pm
-lib/XML/Grammar/Screenplay/App/ToDocBook.pm
-lib/XML/Grammar/Screenplay/App/ToHTML.pm
-lib/XML/Grammar/Screenplay/Base.pm
-lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
-lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
-lib/XML/Grammar/Screenplay/FromProto.pm
-lib/XML/Grammar/Screenplay.pm
-lib/XML/Grammar/Screenplay/ToDocBook.pm
-lib/XML/Grammar/Screenplay/ToHTML.pm
-Makefile.PL
-MANIFEST
-META.yml # Will be created by "make dist"
-README
-rejects/proto-text-to-xml.t
-t/00-load.t
-t/app-to-html.t
-t/boilerplate.t
-t/data/docbook/with-internal-description.docbook.xml
-t/data/proto-text/dialogue-with-several-paragraphs.txt
-t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
-t/data/proto-text/nested-s.txt
-t/data/proto-text/scenes-with-titles.txt
-t/data/proto-text/two-nested-s.txt
-t/data/proto-text/with-brs.txt
-t/data/proto-text/with-comments.txt
-t/data/proto-text/with-description.txt
-t/data/proto-text/with-dialogue.txt
-t/data/proto-text/with-entities.txt
-t/data/proto-text/with-internal-description.txt
-t/data/proto-text/with-multi-line-comments.txt
-t/data/proto-text/with-multi-para-desc.txt
-t/data/proto-text/with-tags-inside-paragraphs.txt
-t/data/xml/dialogue-with-several-paragraphs.xml
-t/data/xml/nested-s.xml
-t/data/xml/scenes-with-titles.xml
-t/data/xml/two-nested-s.xml
-t/data/xml/with-brs.xml
-t/data/xml/with-comments.xml
-t/data/xml/with-description.xml
-t/data/xml/with-dialogue.xml
-t/data/xml/with-entities.xml
-t/data/xml/with-internal-description.xml
-t/data/xml/with-multi-line-comments.xml
-t/data/xml/with-multi-para-desc.xml
-t/data/xml/with-tags-inside-paragraphs.xml
-t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
-t/pod-coverage.t
-t/pod.t
-t/proto-text-invalid.t
-t/proto-text-to-xml-using-custom-parser.t
-t/qnd-parser-unit.t
-t/to-docbook.t
-t/to-xhtml.t
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/README
--- a/perl/modules/XML-Grammar-Screenplay/README	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,44 +0,0 @@
-XML-Grammar-Screenplay
-
-This is a module implementing an XML grammar for screenplays. It contains:
-
-1. A converter from a well-formed plain text format to its custom XML format.
-
-2. A converter from its custom XML format to DocBook/XML.
-
-INSTALLATION
-
-To install this module, run the following commands:
-
-    perl Build.PL
-    ./Build
-    ./Build test
-    ./Build install
-
-
-SUPPORT AND DOCUMENTATION
-
-After installing, you can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-
-You can also look for information at:
-
-    Search CPAN
-        http://search.cpan.org/dist/XML-Grammar-Screenplay
-
-    CPAN Request Tracker:
-        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay
-
-    AnnoCPAN, annotated CPAN documentation:
-        http://annocpan.org/dist/XML-Grammar-Screenplay
-
-    CPAN Ratings:
-        http://cpanratings.perl.org/d/XML-Grammar-Screenplay
-
-COPYRIGHT AND LICENCE
-
-Copyright (C) 2007 Shlomi Fish
-
-This program is released under the following license: MIT X11.
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-docbook.xslt
--- a/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-docbook.xslt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,91 +0,0 @@
-<xsl:stylesheet version = '1.0'
-    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
-    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
-     >
-
-<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
- doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
- doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
- />
-
-<xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
-</xsl:template>
-
-<xsl:template match="sp:body">
-    <article>
-        <xsl:attribute name="id">
-            <xsl:value-of select="@id" />
-        </xsl:attribute>
-        <xsl:apply-templates select="sp:scene" />
-    </article>
-</xsl:template>
-
-<xsl:template match="sp:scene">
-    <section>
-        <xsl:attribute name="id">
-            <xsl:value-of select="@id" />
-        </xsl:attribute>
-        <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <title>
-            <xsl:choose>
-                <xsl:when test="@title">
-                    <xsl:value-of select="@title" />
-                </xsl:when>
-                <xsl:otherwise>
-                    <xsl:value-of select="@id" />
-                </xsl:otherwise>
-            </xsl:choose> 
-        </title>
-        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
-    </section>
-</xsl:template>
-
-<xsl:template match="sp:description">
-    <section role="description" id="{generate-id()}">
-        <title></title>
-            <xsl:apply-templates />
-    </section>
-</xsl:template>
-
-<xsl:template match="saying">
-    <section role="sp:saying" id="{generate-id()}">
-        <title></title>
-        <xsl:apply-templates />
-    </section>
-</xsl:template>
-
-<xsl:template match="para">
-    <para>
-        <xsl:if test="local-name(..) = 'saying'">
-            <emphasis role="bold"><xsl:value-of select="../@character" />: </emphasis>
-        </xsl:if>
-        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
-            [
-        </xsl:if>
-        <xsl:apply-templates />
-        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
-            ]
-        </xsl:if>
-    </para>
-</xsl:template>
-
-<xsl:template match="sp:ulink">
-    <ulink>
-        <xsl:attribute name="url">
-            <xsl:value-of select="@url" />
-        </xsl:attribute>
-    </ulink>
-</xsl:template>
-
-<xsl:template match="sp:bold">
-    <emphasis role="bold">
-        <xsl:apply-templates />
-    </emphasis>
-</xsl:template>
-
-<xsl:template match="sp:inlinedesc">
-    <phrase>[<xsl:apply-templates />]</phrase>
-</xsl:template>
-
-</xsl:stylesheet>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-html.xslt
--- a/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-html.xslt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,102 +0,0 @@
-<xsl:stylesheet version = '1.0'
-     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
-     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
-     >
-
-<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
- doctype-public="-//W3C//DTD XHTML 1.1//EN"
- doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
- />
-
-<xsl:template match="/">
-        <xsl:apply-templates select="//sp:body" />  
-</xsl:template>
-
-<xsl:template match="sp:body">
-    <html>
-        <head>
-            <title>My Screenplay</title>
-        </head>
-        <body>
-            <div class="screenplay">
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
-            <xsl:apply-templates select="sp:scene" />
-            </div>
-        </body>
-    </html>
-</xsl:template>
-
-<xsl:template match="sp:scene">
-    <div class="scene" id="scene-{@id}">
-        <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <xsl:element name="h{count(ancestor-or-self::sp:scene)}">
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
-            <xsl:choose>
-                <xsl:when test="@title">
-                    <xsl:value-of select="@title" />
-                </xsl:when>
-                <xsl:otherwise>
-                    <xsl:value-of select="@id" />
-                </xsl:otherwise>
-            </xsl:choose>
-        </xsl:element>
-        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
-    </div>
-</xsl:template>
-
-<xsl:template match="sp:description">
-    <div class="description">
-        <xsl:apply-templates />
-    </div>
-</xsl:template>
-
-<xsl:template match="sp:saying">
-    <div class="saying">
-        <xsl:apply-templates />
-    </div>
-</xsl:template>
-
-<xsl:template match="sp:para">
-    <p>
-        <xsl:if test="local-name(..) = 'saying'">
-            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
-            <xsl:text> </xsl:text>
-        </xsl:if>
-        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=1] = .">
-            [
-        </xsl:if>
-        <xsl:apply-templates />
-        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=last()] = .">
-            ]
-        </xsl:if>
-    </p>
-</xsl:template>
-
-<xsl:template match="sp:ulink">
-    <a>
-        <xsl:attribute name="href">
-            <xsl:value-of select="@url" />
-        </xsl:attribute>
-        <xsl:apply-templates />
-    </a>
-</xsl:template>
-
-<xsl:template match="sp:bold">
-    <strong class="bold">
-        <xsl:apply-templates />
-    </strong>
-</xsl:template>
-
-<xsl:template match="sp:inlinedesc">
-    <span class="inlinedesc">[<xsl:apply-templates />]</span>
-</xsl:template>
-
-<xsl:template match="sp:br">
-    <br />
-</xsl:template>
-
-</xsl:stylesheet>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-xsl-fo.xslt
--- a/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-xsl-fo.xslt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,101 +0,0 @@
-<xsl:stylesheet version = '1.0'
-    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
-    xmlns:fo='http://www.w3.org/1999/XSL/Format'
-     >
-
-<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
-
-<xsl:template match="/">
-        <xsl:apply-templates select="//body" />  
-</xsl:template>
-
-<xsl:template match="body">
-    <fo:root>
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
-            <fo:layout-master-set>
-                <fo:simple-page-master master-name="A4">
-                    <fo:region-body />
-                </fo:simple-page-master>
-            </fo:layout-master-set>
-            <fo:page-sequence master-reference="A4">
-                <fo:flow flow-name="xsl-region-body">
-                    <xsl:apply-templates select="scene" />        
-                </fo:flow>
-            </fo:page-sequence>
-    </fo:root>
-</xsl:template>
-
-<xsl:template match="scene">
-    <fo:block>
-        <!-- Make the title the title attribute or "ID" if does not exist. -->
-        <xsl:element name="h{count(ancestor-or-self::scene)}">
-            <xsl:attribute name="id">
-                <xsl:value-of select="@id" />
-            </xsl:attribute>
-            <xsl:choose>
-                <xsl:when test="@title">
-                    <xsl:value-of select="@title" />
-                </xsl:when>
-                <xsl:otherwise>
-                    <xsl:value-of select="@id" />
-                </xsl:otherwise>
-            </xsl:choose>
-        </xsl:element>
-        <xsl:apply-templates select="scene|description|saying" />
-    </fo:block>
-</xsl:template>
-
-<xsl:template match="description">
-    <div class="description">
-        <xsl:apply-templates />
-    </div>
-</xsl:template>
-
-<xsl:template match="saying">
-    <div class="saying">
-        <xsl:apply-templates />
-    </div>
-</xsl:template>
-
-<xsl:template match="para">
-    <p>
-        <xsl:if test="local-name(..) = 'saying'">
-            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
-            <xsl:text> </xsl:text>
-        </xsl:if>
-        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
-            [
-        </xsl:if>
-        <xsl:apply-templates />
-        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
-            ]
-        </xsl:if>
-    </p>
-</xsl:template>
-
-<xsl:template match="ulink">
-    <a>
-        <xsl:attribute name="href">
-            <xsl:value-of select="@url" />
-        </xsl:attribute>
-        <xsl:apply-templates />
-    </a>
-</xsl:template>
-
-<xsl:template match="bold">
-    <strong class="bold">
-        <xsl:apply-templates />
-    </strong>
-</xsl:template>
-
-<xsl:template match="inlinedesc">
-    <span class="inlinedesc">[<xsl:apply-templates />]</span>
-</xsl:template>
-
-<xsl:template match="br">
-    <br />
-</xsl:template>
-
-</xsl:stylesheet>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.dtd
--- a/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.dtd	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,15 +0,0 @@
-<!ELEMENT document (head,body)>
-<!ELEMENT head EMPTY>
-<!ELEMENT body (scene+)>
-<!ELEMENT scene ((description|saying)*,scene*)>
-<!ELEMENT description (para+)>
-<!ELEMENT saying (para+)>
-<!ELEMENT para (#PCDATA|inlinedesc|ulink|bold|br)*>
-<!ELEMENT inlinedesc (#PCDATA|ulink|bold)*>
-<!ELEMENT ulink (#PCDATA|bold)*>
-<!ELEMENT bold (#PCDATA)>
-<!ELEMENT br EMPTY>
-<!ATTLIST scene id ID #REQUIRED title CDATA #IMPLIED>
-<!ATTLIST body id ID #REQUIRED>
-<!ATTLIST saying character CDATA #REQUIRED>
-<!ATTLIST ulink url CDATA #REQUIRED>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.rng
--- a/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.rng	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,99 +0,0 @@
-<?xml version="1.0"?>
-<!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
-<grammar xmlns="http://relaxng.org/ns/structure/1.0"
-    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
-    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
-    >
-    <start>
-        <element name="sp:document">
-            <element name="sp:head">
-                <empty/>
-            </element>
-            <element name="sp:body">
-                <attribute name="id">
-                    <data type="ID"/>
-                </attribute>
-                <oneOrMore>
-                    <ref name="scene" />
-                </oneOrMore>
-            </element>
-        </element>
-    </start>
-    <define name="several_paras">
-        <oneOrMore>
-            <ref name="para"/>
-        </oneOrMore>
-    </define>
-    <define name="single_inline_elem">
-        <choice>
-            <text/>
-            <ref name="ulink"/>
-            <ref name="bold"/>
-        </choice>
-    </define>
-    <define name="scene">
-        <element name="sp:scene">
-            <attribute name="id">
-                <data type="ID"/>
-            </attribute>
-            <optional>
-                <attribute name="title">
-                    <text/>
-                </attribute>
-            </optional>
-            <zeroOrMore>
-                <choice>
-                    <element name="sp:description">
-                        <ref name="several_paras"/>
-                    </element>
-                    <element name="sp:saying">
-                        <attribute name="character">
-                            <text/>
-                        </attribute>
-                        <ref name="several_paras"/>
-                    </element>
-                </choice>
-            </zeroOrMore>
-            <zeroOrMore>
-                <ref name="scene" />
-            </zeroOrMore>
-        </element>
-    </define>
-    <define name="para">
-        <element name="sp:para">
-            <zeroOrMore>
-                <choice>
-                    <text/>
-                    <element name="sp:inlinedesc">
-                        <zeroOrMore>
-                            <ref name="single_inline_elem"/>
-                        </zeroOrMore>
-                    </element>
-                    <ref name="single_inline_elem"/>
-                    <element name="sp:br">
-                        <empty/>
-                    </element>
-                </choice>
-            </zeroOrMore>
-        </element>
-    </define>
-    <define name="bold">
-        <element name="sp:bold">
-            <text />
-        </element>
-    </define>
-    <define name="ulink">
-        <element name="sp:ulink">
-                <attribute name="url">
-                    <text/>
-                </attribute>
-                <zeroOrMore>
-                    <choice>
-                        <text />
-                        <ref name="bold"/>
-                    </choice>
-            </zeroOrMore>
-        </element>
-    </define>
-</grammar>
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/inc/Test/Run/Builder.pm
--- a/perl/modules/XML-Grammar-Screenplay/inc/Test/Run/Builder.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-package Test::Run::Builder;
-
-use strict;
-use warnings;
-
-use Module::Build;
-
-use vars qw(@ISA);
-
-@ISA = (qw(Module::Build));
-
-sub ACTION_runtest
-{
-    my ($self) = @_;
-    my $p = $self->{properties};
-
-    $self->depends_on('code');
-
-    local @INC = @INC;
-
-    # Make sure we test the module in blib/
-    unshift @INC, (File::Spec->catdir($p->{base_dir}, $self->blib, 'lib'),
-		 File::Spec->catdir($p->{base_dir}, $self->blib, 'arch'));
-
-    $self->do_test_run_tests;
-}
-
-sub ACTION_distruntest {
-  my ($self) = @_;
-
-  $self->depends_on('distdir');
-
-  my $start_dir = $self->cwd;
-  my $dist_dir = $self->dist_dir;
-  chdir $dist_dir or die "Cannot chdir to $dist_dir: $!";
-  # XXX could be different names for scripts
-
-  $self->run_perl_script('Build.PL') # XXX Should this be run w/ --nouse-rcfile
-      or die "Error executing 'Build.PL' in dist directory: $!";
-  $self->run_perl_script('Build')
-      or die "Error executing 'Build' in dist directory: $!";
-  $self->run_perl_script('Build', [], ['runtest'])
-      or die "Error executing 'Build test' in dist directory";
-  chdir $start_dir;
-}
-
-sub do_test_run_tests
-{
-    my $self = shift;
-
-    require Test::Run::CmdLine::Iface;
-
-    my $test_run =
-        Test::Run::CmdLine::Iface->new(
-            {
-                'test_files' => [glob("t/*.t")],
-            }   
-            # 'backend_params' => $self->_get_backend_params(),
-        );
-
-    return $test_run->run();
-}
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/inc/XML/Grammar/Builder.pm
--- a/perl/modules/XML-Grammar-Screenplay/inc/XML/Grammar/Builder.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,77 +0,0 @@
-package XML::Grammar::Builder;
-
-use strict;
-use warnings;
-
-use base 'Test::Run::Builder';
-
-use File::Find;
-
-our $VERSION = '0.0101';
-
-sub new
-{
-    my $package = shift;
-    my %args = @_;
-    my @extradata_files;
-    
-    my $module_name = $args{'module_name'};
-    $module_name =~ s{::}{-}g;
-
-    my $filter_files_cb = sub {
-        my $filename = $File::Find::name;
-        if ((-f $filename) &&
-            ($filename =~ /\.(?:mod|xslt|dtd|ent|cat|jpg|rng|xcf\.bz2)$/)
-        )
-        {
-            push @extradata_files, $filename;
-        }
-    };
- 
-    find({ wanted => $filter_files_cb, no_chdir => 1}, "extradata");
-
-    my $builder = $package->SUPER::new(
-        extradata_files =>
-        {
-            (map { $_ => $_ } @extradata_files)
-        },
-        @_
-    );
-
-    $builder->add_build_element('extradata');
-
-    $builder->install_path()->{'extradata'} = 
-        File::Spec->catdir(
-                $builder->install_destination("lib"),
-                qw(data modules),
-                $module_name,
-                qw(data)
-        );
-
-    $builder->config_data(
-        'extradata_install_path' =>
-        [$builder->install_path()->{'extradata'}]
-    );
-
-    return $builder;
-}
-
-
-=begin excluded
-
-    my $get_dest_extradata_cb = sub {
-        my $fn = shift;
-
-        # Trying if this makes it work.
-        # TODO : Either remove this line or the rest of the lines.
-        return $fn;
-
-        $fn =~ s{^extradata}{data};
-        return "lib/$module_name/$fn";
-    };
-
-=end excluded
-
-=cut
-
-1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,205 +0,0 @@
-package XML::Grammar::Screenplay;
-
-use warnings;
-use strict;
-
-=head1 NAME
-
-XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for 
-screenplays.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head1 SYNOPSIS
-
-See L<XML::Grammar::Screenplay::FromProto>, 
-L<XML::Grammar::Screenplay::ToDocBook> and
-L<XML::Grammar::Screenplay::ToHTML>.
-
-=head1 DESCRIPTION
-
-XML::Grammar::Screenplay is a Perl module for:
-
-=over 4
-
-=item 1. Converting a well-formed plain text format to a specialized XML format.
-
-=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
-
-=back
-
-The best way to use it non-programatically is using
-L<XML::Grammar::Screenplay::App::FromProto>,
-L<XML::Grammar::Screenplay::App::ToDocBook> and
-L<XML::Grammar::Screenplay::App::ToHTML>, which are modules implementing
-command line applications for their processing.
-
-The rest of this page will document the syntax of the custom textual format.
-
-=head1 FORMAT
-
-=head2 Scenes
-
-Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
-abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
-attributes whose keys are plaintext and whose values are surrounded by
-double quotes. (Single-quotes are not supported).
-
-The scene tag must have an C<id> attribute (for anchors, etc.) and could
-have an optional C<title> attribute. If the title is not specified, it will
-default to the ID.
-
-Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
-except inside scenes.
-
-=head2 Text
-
-Text is any of:
-
-=over 4
-
-=item 1. Plaintext
-
-Regular text
-
-=item 2. XML-like tags.
-
-Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
-hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
-
-=item 3. Entities
-
-The text format supports SGML-like entities such as C<< &amp; >>,
-C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
-L<HTML::Entities>.
-
-=item 4. Text between [ ... ]
-
-Text between square brackets (C<[ ... ]>) is reserved for descriptions
-or inline descriptions (see below).
-
-=back 
-
-=head2 Sayings
-
-The first paragraph when a character talks starts with the name of the
-character followed by a colon (C<:>) and the rest of the text. Like this:
-
-    David: Goliath, I'm going to kill you! You'll see -
-    I will.
-
-If a character says more than one paragraph, the next paragraph should start
-with any number of "+"-signs followed by a colon:
-
-    David: Goliath, I'm going to kill you! You'll see -
-    I will.
-
-    ++++: I will sling you and bing you till infinity!
-
-=head2 Descriptions.
-
-Descriptions that are not part of saying start with a C<[> at the first
-character of a line and extend till the next C<]>. They can span several
-paragraphs.
-
-There are also internal descriptions to the saying which are placed
-inside the paragraph of the saying and describe what happens while the
-character talks. 
-
-=head2 EXAMPLES
-
-Examples can be found in the C<t/data> directory, and here:
-
-=over 4
-
-=item * The One with the Fountainhead
-
-L<http://www.shlomifish.org/humour/TOWTF/>
-
-=item * Humanity - The Movie
-
-L<http://www.shlomifish.org/humour/humanity/>
-
-=item * Star Trek - "We The Living Dead"
-
-L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
-
-=back
-
-=head1 DEBUGGING
-
-When trying to convert the well-formed text to XML, one will often 
-encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
-which is used for parsing. The best way I found to deal with it is to
-gradually eliminate parts of the document until the offending markup is
-isolated.
-
-In the future, I plan on writing a custom parser that will provide better
-diagnostics and will hopefully also be faster.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 TODO
-
-=over 4
-
-=item * Empty
-
-=back
-
-=head1 SUPPORT
-
-You can find documentation for this module with the perldoc command.
-
-    perldoc XML::Grammar::Screenplay
-
-You can also look for information at:
-
-=over 4
-
-=item * AnnoCPAN: Annotated CPAN documentation
-
-L<http://annocpan.org/dist/XML-Grammar-Screenplay>
-
-=item * CPAN Ratings
-
-L<http://cpanratings.perl.org/d/XML-Grammar-Screenplay>
-
-=item * RT: CPAN's request tracker
-
-L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay>
-
-=item * Search CPAN
-
-L<http://search.cpan.org/dist/XML-Grammar-Screenplay>
-
-=back
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,89 +0,0 @@
-package XML::Grammar::Screenplay::App::FromProto;
-
-use strict;
-use warnings;
-
-use base 'Exporter';
-
-our @EXPORT = (qw(run));
-
-use Getopt::Long;
-
-use XML::Grammar::Screenplay::FromProto;
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::App::FromProto - module implementing
-a command line application to convert a well-formed text to
-Screenplay XML.
-
-=head1 SYNOPSIS
-
-    perl -MXML::Grammar::Screenplay::App::FromProto -e 'run()' -- \
-	-o $@ $<
-
-=head1 FUNCTIONS
-
-=head2 run()
-
-Call with no arguments to run the application from the commandline.
-
-=cut
-
-sub run
-{
-    my $output_filename;
-
-    GetOptions(
-        "output|o=s" => \$output_filename,
-    );
-
-    if (!defined($output_filename))
-    {
-        die "Output filename not specified! Use the -o|--output flag!";
-    }
-
-    my $converter = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
-    });
-
-    my $output_xml = $converter->convert({
-            source => { file => shift(@ARGV), },
-        }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_xml;
-    close($out);
-
-    exit(0);
-}
-
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,81 +0,0 @@
-package XML::Grammar::Screenplay::App::ToDocBook;
-
-use strict;
-use warnings;
-
-use base 'Exporter';
-
-our @EXPORT = (qw(run));
-
-use Getopt::Long;
-
-use XML::Grammar::Screenplay::ToDocBook;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::App::ToDocBook - module implementing
-a command line application to convert a Screenplay XML file to docbook.
-
-=head1 FUNCTIONS
-
-=head2 run()
-
-Call with no arguments to run the application from the commandline.
-
-=cut
-
-sub run
-{
-    my $output_filename;
-
-    GetOptions(
-        "output|o=s" => \$output_filename,
-    );
-
-    if (!defined($output_filename))
-    {
-        die "Output filename not specified! Use the -o|--output flag!";
-    }
-
-    my $converter = XML::Grammar::Screenplay::ToDocBook->new();
-
-    my $output_text = $converter->translate_to_docbook({
-            source => { file => shift(@ARGV), },
-            output => "string",
-        }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_text;
-    close($out);
-
-    exit(0);
-}
-
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,81 +0,0 @@
-package XML::Grammar::Screenplay::App::ToHTML;
-
-use strict;
-use warnings;
-
-use base 'Exporter';
-
-our @EXPORT = (qw(run));
-
-use Getopt::Long;
-
-use XML::Grammar::Screenplay::ToHTML;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::App::ToHTML - module implementing
-a command line application to convert a Screenplay XML file to HTML
-
-=head1 FUNCTIONS
-
-=head2 run()
-
-Call with no arguments to run the application from the commandline.
-
-=cut
-
-sub run
-{
-    my $output_filename;
-
-    GetOptions(
-        "output|o=s" => \$output_filename,
-    );
-
-    if (!defined($output_filename))
-    {
-        die "Output filename not specified! Use the -o|--output flag!";
-    }
-
-    my $converter = XML::Grammar::Screenplay::ToHTML->new();
-
-    my $output_text = $converter->translate_to_html({
-            source => { file => shift(@ARGV), },
-            output => "string",
-        }
-    );
-
-    open my $out, ">", $output_filename;
-    binmode $out, ":utf8";
-    print {$out} $output_text;
-    close($out);
-
-    exit(0);
-}
-
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/Base.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/Base.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-package XML::Grammar::Screenplay::Base;
-
-use strict;
-use warnings;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
-classes.
-
-=head1 METHODS
-
-=head2 $package->new({%args});
-
-Constructs a new package
-
-=cut
-
-sub new
-{
-    my $class = shift;
-    my $self = {};
-
-    bless $self, $class;
-
-    $self->_init(@_);
-
-    return $self;
-}
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,323 +0,0 @@
-package XML::Grammar::Screenplay::FromProto;
-
-use strict;
-use warnings;
-
-use Carp;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use XML::Writer;
-use HTML::Entities ();
-
-use XML::Grammar::Screenplay::FromProto::Nodes;
-
-use Moose;
-
-has "_parser" => ('isa' => "XML::Grammar::Screenplay::FromProto::Parser", 'is' => "rw");
-has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
-
-my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto - module that converts well-formed
-text representing a screenplay to an XML format.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    local $Parse::RecDescent::skip = "";
-
-    my $parser_class = 
-        ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
-
-    $self->_parser(
-        $parser_class->new()
-    );
-
-    return 0;
-}
-
-=head2 $self->convert({ source => { file => $path_to_file } })
-
-Converts the file $path_to_file to XML and returns it.
-
-=cut
-
-use Data::Dumper;
-
-sub _output_tag
-{
-    my ($self, $args) = @_;
-
-    my @start = @{$args->{start}};
-    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
-
-    $args->{in}->($self, $args);
-
-    $self->_writer->endTag();
-}
-
-sub _output_tag_with_childs
-{
-    my ($self, $args) = @_;
-
-    return 
-        $self->_output_tag({
-            %$args,
-            'in' => sub {
-                foreach my $child (@{$args->{elem}->_get_childs()})
-                {
-                    $self->_write_elem({elem => $child,});
-                }
-            },
-        });
-}
-
-sub _get_text_start
-{
-    my ($self, $elem) = @_;
-
-    if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying"))
-    {
-        return ["saying", 'character' => $elem->character()];
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Description"))
-    {
-        return ["description"];
-    }
-    else
-    {
-        Carp::confess ("Unknown element class - " . ref($elem) . "!");
-    }
-}
-
-sub _write_elem
-{
-    my ($self, $args) = @_;
-
-    my $elem = $args->{elem};
-
-    if (ref($elem) eq "")
-    {
-        $self->_writer->characters($elem);
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph"))
-    {
-        $self->_output_tag_with_childs(
-            {
-               start => ["para"],
-                elem => $elem,
-            },
-        );
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Element"))
-    {
-        if (($elem->name() eq "s") || ($elem->name() eq "section"))
-        {
-            $self->_write_scene({scene => $elem});
-        }
-        elsif ($elem->name() eq "a")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["ulink", "url" => $elem->lookup_attr("href")],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "b")
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["bold"],
-                    elem => $elem,
-                }
-            );
-        }
-        elsif ($elem->name() eq "br")
-        {
-            $self->_writer->emptyTag("br");
-        }
-        elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::InnerDesc"))
-        {
-            $self->_output_tag_with_childs(
-                {
-                    start => ["inlinedesc"],
-                    elem => $elem,
-                }
-            );
-        }
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
-    {
-        $self->_output_tag_with_childs(
-            {
-                start => $self->_get_text_start($elem),
-                elem => $elem,
-            },
-        );
-    }
-    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Comment"))
-    {
-        $self->_writer->comment($elem->text());
-    }
-}
-
-sub _write_scene
-{
-    my ($self, $args) = @_;
-
-    my $scene = $args->{scene};
-
-    my $tag = $scene->name;
-    
-    if (($tag eq "s") || ($tag eq "scene"))
-    {
-        my $id = $scene->lookup_attr("id");
-
-        if (!defined($id))
-        {
-            Carp::confess("Unspecified id for scene!");
-        }
-
-        my $title = $scene->lookup_attr("title");
-        my @t = (defined($title) ? (title => $title) : ());
-
-        $self->_output_tag_with_childs(
-            {
-                'start' => ["scene", id => $id, @t],
-                elem => $scene,
-            }
-        );
-    }
-    else
-    {
-        confess "Improper scene tag - should be '<s>' or '<scene>'!";
-    }
-
-    return;
-}
-
-sub _read_file
-{
-    my ($self, $filename) = @_;
-
-    open my $in, "<", $filename or
-        confess "Could not open the file \"$filename\" for slurping.";
-    binmode $in, ":utf8";
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>;
-    }
-    close($in);
-    
-    return $contents;
-}
-
-sub _calc_tree
-{
-    my ($self, $args) = @_;
-
-    my $filename = $args->{source}->{file} or
-        confess "Wrong filename given.";
-
-    return $self->_parser->process_text($self->_read_file($filename));
-}
-
-sub convert
-{
-    my ($self, $args) = @_;
-
-    # These should be un-commented for debugging.
-    # local $::RD_HINT = 1;
-    # local $::RD_TRACE = 1;
-    
-    # We need this so P::RD won't skip leading whitespace at lines
-    # which are siginificant.  
-
-    my $tree = $self->_calc_tree($args);
-
-    if (!defined($tree))
-    {
-        Carp::confess("Parsing failed.");
-    }
-
-    my $buffer = "";
-    my $writer = XML::Writer->new(
-        OUTPUT => \$buffer, 
-        ENCODING => "utf-8",
-        NAMESPACES => 1,
-        PREFIX_MAP =>
-        {
-             $screenplay_ns => "",
-        }
-    );
-
-    $writer->xmlDecl("utf-8");
-    $writer->doctype("document", undef, "screenplay-xml.dtd");
-    $writer->startTag([$screenplay_ns, "document"]);
-    $writer->startTag([$screenplay_ns, "head"]);
-    $writer->endTag();
-    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
-
-    # Now we're inside the body.
-    $self->_writer($writer);
-
-    $self->_write_scene({scene => $tree});
-
-    # Ending the body
-    $writer->endTag();
-
-    $writer->endTag();
-    
-    return $buffer;
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,120 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Nodes;
-
-use strict;
-use warnings;
-
-use List::Util ();
-
-package XML::Grammar::Screenplay::FromProto::Node;
-
-use Moose;
-
-package XML::Grammar::Screenplay::FromProto::Node::WithContent;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node");
-
-has 'children' => (
-    isa => 'XML::Grammar::Screenplay::FromProto::Node::List', 
-    is => 'rw'
-);
-
-sub _get_childs
-{
-    my $self = shift;
-
-    my $childs = $self->children->contents();
-
-    return $childs || [];
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::Element;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
-
-has 'name' => (isa => 'Str', is => 'rw');
-has 'attrs' => (isa => 'ArrayRef', is => 'rw');
-
-sub lookup_attr
-{
-    my ($self, $attr_name) = @_;
-
-    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
-
-    if (!defined($pair))
-    {
-        return undef;
-    }
-    else
-    {
-        return $pair->{value};
-    }
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::List;
-
-use Moose;
-
-has 'contents' => (isa => "ArrayRef", is => "rw");
-
-package XML::Grammar::Screenplay::FromProto::Node::Text;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
-
-package XML::Grammar::Screenplay::FromProto::Node::Saying;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Text");
-
-has 'character' => (isa => "Str", is => "rw");
-
-package XML::Grammar::Screenplay::FromProto::Node::Description;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Text");
-
-package XML::Grammar::Screenplay::FromProto::Node::Paragraph;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Element");
-
-package XML::Grammar::Screenplay::FromProto::Node::InnerDesc;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node::Element");
-
-sub name
-{
-    return "inlinedesc";
-}
-
-package XML::Grammar::Screenplay::FromProto::Node::Comment;
-
-use Moose;
-
-extends("XML::Grammar::Screenplay::FromProto::Node");
-
-has "text" => (isa => "Str", is => "rw");
-
-1;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Nodes - contains several nodes for
-use in XML::Grammar::Screenplay::FromProto.
-
-=head1 DESCRIPTION
-
-Contains several nodes.
-
-=cut
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,37 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-1;
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
-
-B<For internal use only>.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,262 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser::PRD;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::FromProto::Parser';
-
-use Parse::RecDescent;
-
-use Moose;
-
-use XML::Grammar::Screenplay::FromProto::Nodes;
-
-has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
-
-sub _init
-{
-    my $self = shift;
-
-    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
-
-    return 0;
-}
-
-sub _calc_grammar
-{
-    my $self = shift;
-
-    return <<'EOF';
-
-start : tag  {$thisparser->{ret} = $item[1]; 1 }
-
-text_unit:   tag_or_comment { $item[1] }
-           | speech_or_desc { $item[1] }
-
-tag_or_comment:   tag
-                | comment
-
-comment:    /<!--(.*?)-->/ms para_sep {
-    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
-        text => $1
-    )
-    }
-
-para_sep:      /(\n\s*)+/
-
-speech_or_desc:   speech_unit
-                | desc_unit
-
-plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
-
-inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
-    {
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $item[2],
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => []
-            ),
-            attrs => $item[3]
-            );
-    }
-
-
-inner_tag:         opening_tag  inner_text closing_tag {
-        my ($open, $inside, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            attrs => $open->{attrs},
-            )
-    }
-
-inner_desc:      /\[/ inner_text /\]/ {
-        my $inside = $item[2];
-        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-                ),
-            )
-    }
-
-inner_tag_or_desc:    inner_tag
-                   |  inner_desc
-
-inner_entity:      /\&\w+;/ {
-        my $inside = $item[1];
-        HTML::Entities::decode_entities($inside)
-    }
-
-inner_text_unit:    plain_inner_text  { [ $item[1] ] }
-                 |  inner_tag_or_desc { [ $item[1] ] }
-                 |  inner_entity      { [ $item[1] ] }
-                 |  inner_standalone_tag { [ $item[1] ] }
-
-inner_text:       inner_text_unit(s) {
-        [ map { @{$_} } @{$item[1]} ]
-        }
-
-addressing: /^([^:\n\+]+): /ms { $1 }
-
-saying_first_para: addressing inner_text para_sep {
-            my ($sayer, $what) = ($item[1], $item[2]);
-            +{
-             character => $sayer,
-             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                children =>
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => $what,
-                    )
-                ),
-            }
-            }
-
-saying_other_para: /^\++: /ms inner_text para_sep {
-        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => $item[2],
-                    ),
-        )
-    }
-
-speech_unit:  saying_first_para saying_other_para(s?)
-    {
-    my $first = $item[1];
-    my $others = $item[2] || [];
-        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => [ $first->{para}, @{$others} ],
-                ),
-        )
-    }
-
-desc_para:  inner_text para_sep { $item[1] }
-
-desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
-
-desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
-        my $paragraphs = $item[2];
-
-        XML::Grammar::Screenplay::FromProto::Node::Description->new(
-            children => 
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents =>
-                [
-                map { 
-                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                    children =>
-                        XML::Grammar::Screenplay::FromProto::Node::List->new(
-                            contents => $_,
-                            ),
-                        )
-                } @$paragraphs
-                ],
-            ),
-        )
-    }
-
-text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => $item[1]
-        ) }
-      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => []
-        ) }
-
-tag: space opening_tag space text space closing_tag space
-     {
-        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
-        if ($open->{name} ne $close->{name})
-        {
-            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
-        }
-        XML::Grammar::Screenplay::FromProto::Node::Element->new(
-            name => $open->{name},
-            children => $inside,
-            attrs => $open->{attrs},
-            );
-     }
-
-opening_tag: '<' id attribute(s?) '>'
-    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
-
-closing_tag: '</' id '>'
-    { $item[0] = { 'name' => $item[2], }; }
-
-attribute: space id '="' attributevalue '"' space
-    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
-
-attributevalue: /[^"]+/
-    { $item[0] = HTML::Entities::decode_entities($item[1]); }
-
-space: /\s*/
-
-id: /[a-zA-Z_\-]+/
-
-EOF
-}
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    my $rv = $self->_p_rd()->start($text);
-
-    if (!defined($rv))
-    {
-        return;
-    }
-    else
-    {
-        return $self->_p_rd->{ret};
-    }
-}
-
-1;
-
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
-ScreenplayXML proto-text.
-
-B<For internal use only>.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns it.
-
-=head2 $self->meta()
-
-Something that L<Moose> adds.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,749 +0,0 @@
-package XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-use strict;
-use warnings;
-
-use base 'XML::Grammar::Screenplay::FromProto::Parser';
-
-use Moose;
-
-has "_curr_line_idx" => (isa => "Int", is => "rw");
-has "_lines" => (isa => "ArrayRef", is => "rw");
-
-sub _curr_line :lvalue
-{
-    my $self = shift;
-
-    return $self->_lines()->[$self->_curr_line_idx()];
-}
-
-sub _curr_line_ref
-{
-    my $self = shift;
-
-    return \($self->_lines()->[$self->_curr_line_idx()]);
-}
-
-sub _with_curr_line
-{
-    my ($self, $sub_ref) = @_;
-
-    return $sub_ref->(\($self->_lines()->[$self->_curr_line_idx()]));
-}
-
-sub _next_line_ref
-{
-    my $self = shift;
-
-    $self->_curr_line_idx($self->_curr_line_idx()+1);
-
-    return $self->_curr_line_ref();
-}
-
-sub _init
-{
-    my $self = shift;
-
-    return 0;
-}
-
-sub _start
-{
-    my $self = shift;
-
-    return $self->_parse_top_level_tag();
-}
-
-# Skip the whitespace.
-sub _skip_space
-{
-    my $self = shift;
-
-    $self->_consume(qr{\s});
-}
-
-my $id_regex = '[a-zA-Z_\-]+';
-
-sub _parse_opening_tag
-{
-    my $self = shift;
-
-    # Now Lisp got nothing on us.
-    return $self->_with_curr_line(
-        sub {
-            # $l is a reference to the string of the current
-            # line
-            my $l = shift;
-
-            if ($$l !~ m{\G<($id_regex)}g)
-            {
-                Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
-            }
-            my $id = $1;
-
-            my @attrs;
-
-            while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
-            {
-                push @attrs, { 'key' => $1, 'value' => $2, };
-            }
-
-            my $is_standalone = 0;
-            if ($$l =~ m{\G\s*/\s*>}cg)
-            {
-                $is_standalone = 1;
-            }
-            elsif ($$l !~ m{\G>}g)
-            {
-                Carp::confess (
-                    "Cannot match the \">\" of the opening tag at line " 
-                        . $self->_get_line_num()
-                );
-            }
-            
-            return
-            {
-                name => $id,
-                is_standalone => $is_standalone,
-                line => $self->_get_line_num(),
-                attrs => \@attrs,
-            };
-        }
-    );
-}
-
-sub _get_line_num
-{
-    my $self = shift;
-
-    return $self->_curr_line_idx()+1;
-}
-
-sub _parse_closing_tag
-{
-    my $self = shift;
-
-    return $self->_with_curr_line(
-        sub {
-            my $l = shift;
-            if ($$l !~ m{\G</($id_regex)>}g)
-            {
-                Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
-            }
-
-            return
-            {
-                name => $1,
-            };
-        }
-    );
-}
-
-sub _parse_text
-{
-    my $self = shift;
-
-    my @ret;
-    while (defined(my $unit = $self->_parse_text_unit()))
-    {
-        push @ret, $unit;
-    }
-
-    # If it's whitespace - return an empty list.
-    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
-    {
-        return 
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => []
-            );
-    }
-
-    return XML::Grammar::Screenplay::FromProto::Node::List->new(
-        contents => \@ret,
-        );
-}
-
-sub _consume_paragraph
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    return $self->_parse_inner_text();
-}
-
-sub _parse_inner_desc
-{
-    my $self = shift;
-
-    my $start_line = $self->_get_line_num();
-
-    # Skip the [
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            $$l =~ m{\G\[}g;
-        }
-    );
-
-    my $inside = $self->_parse_inner_text();
-
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ m{\G\]}g)
-            {
-                Carp::confess (
-                      "Inner description that started on line $start_line did "
-                    . "not terminate with a \"]\"!"
-                );
-            }
-        }
-    );
-
-    return
-        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
-            start => $start_line,
-            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $inside
-            ),
-        );
- 
-}
-
-sub _parse_inner_tag
-{
-    my $self = shift;
-
-    my $open = $self->_parse_opening_tag();
-
-    if ($open->{is_standalone})
-    {
-        $self->_skip_space();
-
-        return        
-            XML::Grammar::Screenplay::FromProto::Node::Element->new(
-                name => $open->{name},
-                children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => []
-                ),
-                attrs => $open->{attrs},
-            );
-    }
-
-    my $inside = $self->_parse_inner_text();
-
-    my $close = $self->_parse_closing_tag();
-
-    if ($open->{name} ne $close->{name})
-    {
-        Carp::confess("Opening and closing tags do not match: " 
-            . "$open->{name} and $close->{name} on element starting at "
-            . "line $open->{line}"
-        );
-    }
-    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
-        name => $open->{name},
-        children => XML::Grammar::Screenplay::FromProto::Node::List->new(
-            contents => $inside
-            ),
-        attrs => $open->{attrs},
-        );
-}
-
-sub _parse_inner_text
-{
-    my $self = shift;
-
-    my @contents;
-
-    my $start_line = $self->_curr_line_idx();
-
-    my $curr_text = "";
-
-    CONTENTS_LOOP:
-    while ($self->_curr_line() ne "\n")
-    {
-        my $which_tag;
-        # We need this to avoid appending the rest of the first line 
-        $self->_with_curr_line(
-            sub {
-                my $l = shift;
-                
-                # Apparently, perl does not always returns true in this
-                # case, so we need the defined($1) ? $1 : "" workaround.
-                $$l =~ m{\G([^\<\[\]\&]*)}cgms;
-
-                $curr_text .= (defined($1) ? $1 : "");
-
-                if ($$l =~ m{\G\[})
-                {
-                    $which_tag = "open_desc";
-                }
-                elsif ($$l =~ m{\G\&})
-                {
-                    $which_tag = "entity";
-                }                
-                elsif ($$l =~ m{\G(?:</|\])})
-                {
-                    $which_tag = "close";
-                }
-                elsif ($$l =~ m{\G<})
-                {
-                    $which_tag = "open_tag";
-                }
-            }
-        );
-
-        push @contents, $curr_text;
-
-        $curr_text = "";
-
-        if (!defined($which_tag))
-        {
-            # Do nothing - a tag was not detected.
-        }
-        else
-        {
-            if (($which_tag eq "open_desc") || ($which_tag eq "open_tag"))
-            {
-                push @contents, 
-                    (($which_tag eq "open_tag")
-                        ? $self->_parse_inner_tag()
-                        : $self->_parse_inner_desc()
-                    );
-                # Avoid skipping to the next line.
-                # Gotta love teh Perl!
-                redo CONTENTS_LOOP;
-            }
-            elsif ($which_tag eq "close")
-            {
-                last CONTENTS_LOOP;
-            }
-            elsif ($which_tag eq "entity")
-            {
-                $self->_with_curr_line(
-                    sub {
-                        my $l = shift;
-                        if ($$l !~ m{\G(\&\w+;)}g)
-                        {
-                            Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
-                                $self->_get_line_num()
-                            );
-                        }
-                        push @contents, HTML::Entities::decode_entities($1);
-                    }
-                );
-                redo CONTENTS_LOOP;
-            }
-        }
-    }
-    continue
-    {
-        if (!defined(${$self->_next_line_ref()}))
-        {
-            Carp::confess "End of file in an addressing paragraph starting at $start_line";
-        }
-    }
-
-    if (length($curr_text) > 0)
-    {
-        push @contents, $curr_text;
-    }
-
-    return \@contents;
-}
-
-# TODO : _parse_saying_first_para and _parse_saying_other_para are
-# very similar - abstract them into one function.
-sub _parse_saying_first_para
-{
-    my $self = shift;
-
-    my ($sayer, $what);
-    
-    ($sayer) = $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ /\G([^:\n\+]+): /cgms)
-            {
-                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
-            }
-            my $sayer = $1;
-
-            if ($sayer =~ m{[\[\]]})
-            {
-                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
-            }
-
-            return ($sayer);
-        }
-    );
-
-    $what = $self->_parse_inner_text();
-
-    return
-    +{
-         character => $sayer,
-         para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $what,
-                )
-            ),
-    };
-}
-
-sub _parse_saying_other_para
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    my $verdict = $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            if ($$l !~ /\G\++: /cgms)
-            {
-                return;
-            }
-            else
-            {
-                return 1;
-            }
-        }
-    );
-
-    if (!defined($verdict))
-    {
-        return;
-    }
-
-    my $what = $self->_parse_inner_text();
-
-    return
-        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-            children =>
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents => $what,
-                )
-        );
-}
-
-sub _parse_speech_unit
-{
-    my $self = shift;
-
-    my $first = $self->_parse_saying_first_para();
-
-    my @others;
-    while (defined(my $other_para = $self->_parse_saying_other_para()))
-    {
-        push @others, $other_para;
-    }
-
-    return
-        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
-            character => $first->{character},
-            children => 
-                XML::Grammar::Screenplay::FromProto::Node::List->new(
-                    contents => [ $first->{para}, @others ],
-                ),
-        );
-}
-
-sub _parse_desc_unit
-{
-    my $self = shift;
-
-    my $start_line = $self->_curr_line_idx();
-
-    # Skip the [
-    $self->_with_curr_line(
-        sub {
-            my $l = shift;
-
-            $$l =~ m{^\[}g;
-        }
-    );
-
-    my @paragraphs;
-
-    my $is_end = 1;
-    my $para;
-    PARAS_LOOP:
-    while ($is_end && ($para = $self->_consume_paragraph()))
-    {
-        $self->_with_curr_line(
-            sub {
-                my $l = shift;
-
-                if ($$l =~ m{\G\]}cg)
-                {
-                    $is_end = 0;
-                }
-            }
-        );
-        push @paragraphs, $para;
-    }
-
-    if ($is_end)
-    {
-        Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
-    }
-
-    return XML::Grammar::Screenplay::FromProto::Node::Description->new(
-        children => 
-            XML::Grammar::Screenplay::FromProto::Node::List->new(
-                contents =>
-            [
-            map { 
-            XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
-                children =>
-                    XML::Grammar::Screenplay::FromProto::Node::List->new(
-                        contents => $_,
-                        ),
-                    )
-            } @paragraphs
-            ],
-        ),
-    );
-}
-
-sub _parse_non_tag_text_unit
-{
-    my $self = shift;
-
-    if (pos(${$self->_curr_line_ref()}) == 0)
-    {
-        return $self->_with_curr_line(
-            sub {
-                my $l = shift;
-                if (substr($$l, 0, 1) eq "[")
-                {
-                    return $self->_parse_desc_unit();
-                }
-                elsif ($$l =~ m{\A[^:]+:})
-                {
-                    return $self->_parse_speech_unit();
-                }
-                else
-                {
-                    Carp::confess ("Line " . $self->_curr_line_idx() . 
-                        " is not a description or a saying."
-                    );
-                }
-            }
-        );
-    }
-    else
-    {
-        Carp::confess ("Line " . $self->_curr_line_idx() . 
-            " has leading whitespace."
-            );
-    }
-}
-
-sub _parse_text_unit
-{
-    my $self = shift;
-    my $space = $self->_consume(qr{\s});
-
-    if ($self->_curr_line() =~ m{\G<})
-    {
-        # If it's a tag.
-
-        # TODO : implement the comment handling.
-        # We have a tag.
-
-        # If it's a closing tag - then backtrack.
-        if ($self->_curr_line() =~ m{\G</})
-        {
-            return undef;
-        }
-        else
-        {
-            return $self->_parse_top_level_tag();
-        }
-    }
-    else
-    {
-        return $self->_parse_non_tag_text_unit();
-    }
-}
-
-sub _curr_line_matches
-{
-    my $self = shift;
-    my $re = shift;
-
-    my $l = $self->_curr_line_ref();
-
-    return ($$l =~ $re);
-}
-
-sub _parse_top_level_tag
-{
-    my $self = shift;
-
-    $self->_skip_space();
-
-    if ($self->_with_curr_line(sub { my $l = shift; return $$l =~ m{\G<!--}cg}))
-    {
-        my $text = $self->_consume_up_to(qr{-->});
-
-        return
-            XML::Grammar::Screenplay::FromProto::Node::Comment->new(
-                text => $text
-            );
-    }
-
-    my $open = $self->_parse_opening_tag();
-
-    $self->_skip_space();
-
-    my $inside = $self->_parse_text();
-
-    $self->_skip_space();
-
-    my $close = $self->_parse_closing_tag();
-
-    $self->_skip_space();
-
-    if ($open->{name} ne $close->{name})
-    {
-        Carp::confess("Tags do not match: " 
-            . "$open->{name} on line $open->{line} "
-            . "and $close->{name} on line $close->{line}"
-        );
-    }
-    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
-        name => $open->{name},
-        children => $inside,
-        attrs => $open->{attrs},
-        );
-}
-
-sub _consume
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->_curr_line_ref();
-
-    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
-    {
-        $return_value .= $$l;
-    }
-    continue
-    {
-        $self->_next_line_ref();
-        $l = $self->_curr_line_ref();
-    }
-
-    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
-    {
-        $return_value .= $1;
-    }
-
-    return $return_value;
-}
-
-# TODO : copied and pasted from _consume - abstract
-sub _consume_up_to
-{
-    my ($self, $match_regex) = @_;
-
-    my $return_value = "";
-    my $l = $self->_curr_line_ref();
-
-    LINE_LOOP:
-    while (defined($$l))
-    {
-        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
-        $return_value .= $1;
-        
-        # Find if it matched the regex.
-        if (length($2) > 0)
-        {
-            last LINE_LOOP;
-        }
-    }
-    continue
-    {
-        $self->_next_line_ref();
-        $l = $self->_curr_line_ref();
-    }
-
-    return $return_value;
-}
-
-sub _setup_text
-{
-    my ($self, $text) = @_;
-
-    # We include the lines trailing newlines for safety.
-    # $self->_lines([$text =~ m{\A([^\n]*\n?)*\z}ms]);
-    $self->_lines([split(/^/, $text)]);
-
-    $self->_curr_line_idx(0);
-
-    $self->_curr_line() =~ m{\A}g;
-
-    return;
-}
-
-sub process_text
-{   
-    my ($self, $text) = @_;
-
-    $self->_setup_text($text);
-
-    return $self->_start();
-}
-
-=head1 NAME
-
-XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser
-for the Screenplay-XML proto-text.
-
-B<For internal use only>.
-
-=head1 METHODS
-
-=head2 $self->process_text($string)
-
-Processes the text and returns the parse tree.
-
-=head2 $self->meta()
-
-Leftover from Moose.
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,149 +0,0 @@
-package XML::Grammar::Screenplay::ToDocBook;
-
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use XML::Grammar::Screenplay::ConfigData;
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use Moose;
-
-
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
-
-=head1 NAME
-
-XML::Grammar::Screenplay::ToDocBook - module that converts the Screenplay
-XML to DocBook.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
-
-    $self->_data_dir($data_dir);
-
-    my $dtd =
-        XML::LibXML::Dtd->new(
-            "Screenplay XML 0.1.0",
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.dtd"
-            ),
-        );
-
-    $self->_dtd($dtd);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-docbook.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
-=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
-
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
-
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
-L<XML::LibXML> DOM object.
-
-=cut
-
-sub translate_to_docbook
-{
-    my ($self, $args) = @_;
-
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToHTML.pm
--- a/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,165 +0,0 @@
-package XML::Grammar::Screenplay::ToHTML;
-
-use strict;
-use warnings;
-
-use Carp;
-use File::Spec;
-
-use XML::LibXSLT;
-
-use XML::Grammar::Screenplay::ConfigData;
-
-use XML::LibXML;
-use XML::LibXSLT;
-
-use base 'XML::Grammar::Screenplay::Base';
-
-use Moose;
-
-
-has '_data_dir' => (isa => 'Str', is => 'rw');
-has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
-has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
-has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
-
-=head1 NAME
-
-XML::Grammar::Screenplay::ToHTML - module that converts the Screenplay
-XML to HTML.
-
-=head1 VERSION
-
-Version 0.0600
-
-=cut
-
-our $VERSION = '0.0600';
-
-=head2 new()
-
-Accepts no arguments so far. May take some time as the grammar is compiled
-at that point.
-
-=head2 meta()
-
-Internal - (to settle pod-coverage.).
-
-=cut
-
-sub _init
-{
-    my ($self, $args) = @_;
-
-    my $data_dir = $args->{'data_dir'} ||
-        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
-
-    $self->_data_dir($data_dir);
-
-    my $rngschema =
-        XML::LibXML::RelaxNG->new(
-            location =>
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml.rng"
-            ),
-        );
-
-    $self->_rng($rngschema);
-
-    $self->_xml_parser(XML::LibXML->new());
-
-    my $xslt = XML::LibXSLT->new();
-
-    my $style_doc = $self->_xml_parser()->parse_file(
-            File::Spec->catfile(
-                $self->_data_dir(), 
-                "screenplay-xml-to-html.xslt"
-            ),
-        );
-
-    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
-
-    return 0;
-}
-
-=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
-
-Does the actual conversion. $filename is the filename to translate (currently
-the only available source). 
-
-The C<'output'> key specifies the return value. A value of C<'string'> returns 
-the XML as a string, and a value of C<'xml'> returns the XML as an 
-L<XML::LibXML> DOM object.
-
-=cut
-
-sub translate_to_html
-{
-    my ($self, $args) = @_;
-
-    my $source_dom =
-        $self->_xml_parser()->parse_file($args->{source}->{file})
-        ;
-
-    my $ret_code;
-
-    eval
-    {
-        $ret_code = $self->_rng()->validate($source_dom);
-    };
-
-    if (defined($ret_code) && ($ret_code == 0))
-    {
-        # It's OK.
-    }
-    else
-    {
-        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
-    }
-
-    my $stylesheet = $self->_stylesheet();
-
-    my $results = $stylesheet->transform($source_dom);
-
-    my $medium = $args->{output};
-
-    if ($medium eq "string")
-    {
-        return $stylesheet->output_string($results);
-    }
-    elsif ($medium eq "xml")
-    {
-        return $results;
-    }
-    else
-    {
-        confess "Unknown medium";
-    }
-}
-
-=head1 AUTHOR
-
-Shlomi Fish, L<http://www.shlomifish.org/>.
-
-=head1 BUGS
-
-Please report any bugs or feature requests to
-C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
-L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
-I will be notified, and then you'll automatically be notified of progress on
-your bug as I make changes.
-
-
-=head1 ACKNOWLEDGEMENTS
-
-=head1 COPYRIGHT & LICENSE
-
-Copyright 2007 Shlomi Fish, all rights reserved.
-
-This program is released under the following license: MIT X11.
-
-=cut
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/process-screenplay.pl
--- a/perl/modules/XML-Grammar-Screenplay/process-screenplay.pl	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,43 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use XML::Grammar::Screenplay::FromProto;
-use Getopt::Long;
-use Carp;
-
-# local $::RD_TRACE = 1;
-
-my $output_fn;
-
-GetOptions(
-    "output|o=s" => \$output_fn,
-);
-
-my $filename = shift(@ARGV);
-
-my $grammar = XML::Grammar::Screenplay::FromProto->new();
-
-my $got_xml = $grammar->convert(
-    {
-        source =>
-        {
-            file => $filename,
-        },
-    }
-
-);
-
-if (defined($output_fn))
-{
-    open my $out, ">", $output_fn
-        or confess "Cannot open file \"$output_fn\" for writing!";
-    print {$out} $got_xml;
-    close($out)
-}
-else
-{
-    print $got_xml;
-}
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/rejects/proto-text-to-xml.t
--- a/perl/modules/XML-Grammar-Screenplay/rejects/proto-text-to-xml.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,100 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More;
-
-use Test::XML tests => 39;
-
-use XML::LibXML;
-
-use XML::Grammar::Screenplay::FromProto;
-use XML::Grammar::Screenplay::FromProto::Parser::PRD;
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/screenplay-xml.rng" 
-    );
-
-my @tests = (qw(
-        nested-s
-        two-nested-s
-        with-dialogue
-        dialogue-with-several-paragraphs
-        with-description
-        with-tags-inside-paragraphs
-        with-internal-description
-        with-comments
-        with-multi-para-desc
-        with-multi-line-comments
-        scenes-with-titles
-        with-entities
-        with-brs
-    ));
-
-# TEST:$num_texts=13
-
-my $grammar = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::PRD",
-    });
-
-my $dtd = 
-    XML::LibXML::Dtd->new(
-        "Screenplay XML 0.1.0",
-        File::Spec->catfile(
-            "extradata", "screenplay-xml.dtd",
-        ),
-    );
-
-my $xml_parser = XML::LibXML->new();
-$xml_parser->validation(0);
-
-foreach my $fn (@tests)
-{
-    my $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text/$fn.txt",
-            },
-        }
-    );
-
-    # TEST*$num_texts
-    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
-        "Output of the Proto Text \"$fn\""
-    );
-
-    my $dom = $xml_parser->parse_string($got_xml);
-
-    # TEST*$num_texts
-    ok ($dom->validate($dtd), 
-        "Checking for validity of '$fn'"
-    );
-
-    my $code;
-    $code = $rngschema->validate($dom);
-
-    # TEST*$num_texts
-    ok ((defined($code) && ($code == 0)),
-        "The validation of '$fn' succeeded.") ||
-        diag("\$@ == $@");
-    
-}
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/00-load.t
--- a/perl/modules/XML-Grammar-Screenplay/t/00-load.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,9 +0,0 @@
-#!perl -T
-
-use Test::More tests => 1;
-
-BEGIN {
-	use_ok( 'XML::Grammar::Screenplay' );
-}
-
-diag( "Testing XML::Grammar::Screenplay $XML::Grammar::Screenplay::VERSION, Perl $], $^X" );
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/app-to-html.t
--- a/perl/modules/XML-Grammar-Screenplay/t/app-to-html.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,39 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More tests => 1;
-use File::Spec;
-
-use Config;
-
-{
-    local %ENV = %ENV;
-    my @p5lib = split($Config{'path_sep'}, $ENV{'PERL5LIB'});
-    $ENV{'PERL5LIB'} = join($Config{'path_sep'}, 
-        File::Spec->rel2abs(
-            File::Spec->catdir(
-                File::Spec->curdir(),
-                "t", "lib", "run-test-1",
-            )
-        ), @p5lib);
-
-    # TEST
-    ok (
-        !system($^X, "-MXML::Grammar::Screenplay::App::ToHTML",
-            "-e", "run()",
-            "--",
-            "-o", "temp.xhtml",
-            File::Spec->catdir(File::Spec->curdir(), 
-                "t", "data", "xml", "nested-s.xml"
-            )
-        ),
-        "Testing App::ToHTML",
-    );
-
-    unlink("temp.xhtml");
-}
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/boilerplate.t
--- a/perl/modules/XML-Grammar-Screenplay/t/boilerplate.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,48 +0,0 @@
-#!perl -T
-
-use strict;
-use warnings;
-use Test::More tests => 3;
-
-sub not_in_file_ok {
-    my ($filename, %regex) = @_;
-    open my $fh, "<", $filename
-        or die "couldn't open $filename for reading: $!";
-
-    my %violated;
-
-    while (my $line = <$fh>) {
-        while (my ($desc, $regex) = each %regex) {
-            if ($line =~ $regex) {
-                push @{$violated{$desc}||=[]}, $.;
-            }
-        }
-    }
-
-    if (%violated) {
-        fail("$filename contains boilerplate text");
-        diag "$_ appears on lines @{$violated{$_}}" for keys %violated;
-    } else {
-        pass("$filename contains no boilerplate text");
-    }
-}
-
-not_in_file_ok(README =>
-    "The README is used..."       => qr/The README is used/,
-    "'version information here'"  => qr/to provide version information/,
-);
-
-not_in_file_ok(Changes =>
-    "placeholder date/time"       => qr(Date/time)
-);
-
-sub module_boilerplate_ok {
-    my ($module) = @_;
-    not_in_file_ok($module =>
-        'the great new $MODULENAME'   => qr/ - The great new /,
-        'boilerplate description'     => qr/Quick summary of what the module/,
-        'stub function definition'    => qr/function[12]/,
-    );
-}
-
-module_boilerplate_ok('lib/XML/Grammar/Screenplay.pm');
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/docbook/with-internal-description.docbook.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/docbook/with-internal-description.docbook.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,79 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd">
-<article id="index">
-  <section id="top">
-    <title>top</title>
-    <section id="david_and_goliath">
-      <title>david_and_goliath</title>
-      <section role="description" id="id2244766"><title/>
-            <para>
-            [
-        
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
-                are standing by each other.
-            
-            ]
-        </para>
-        </section>
-      <section role="saying" id="id2244967"><title/>
-            <para><emphasis role="bold">David: </emphasis>
-                I will kill you.
-            </para>
-        </section>
-      <section role="saying" id="id2244977"><title/>
-            <para><emphasis role="bold">Goliath: </emphasis>
-                no way, you little idiot!
-            </para>
-        </section>
-      <section role="saying" id="id2244986"><title/>
-            <para><emphasis role="bold">David: </emphasis>
-                yes way!
-            </para>
-            <para><emphasis role="bold">David: </emphasis>
-                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
-                <phrase>[sarcastically]</phrase> power 
-                of my sling.
-            </para>
-            <para><emphasis role="bold">David: </emphasis>
-                I shall sling you and bing you till infinity.
-            </para>
-        </section>
-      <section role="description" id="id2242910"><title/>
-            <para>
-            [
-        
-                David takes his sling.
-            
-            ]
-        </para>
-        </section>
-      <section role="saying" id="id2242918"><title/>
-        <para><emphasis role="bold">Goliath: </emphasis>
-            I'm still <ulink url="http://wait.tld/"/>.
-        </para>
-    </section>
-      <section role="saying" id="id2244786"><title/>
-        <para><emphasis role="bold">David: </emphasis>
-            so you are.
-        </para>
-    </section>
-      <section role="description" id="id2244795"><title/>
-        <para>
-            [
-        
-            David puts a stone in his sling and shoots Goliath. He hits.
-        
-            ]
-        </para>
-    </section>
-      <section role="saying" id="id2244802"><title/>
-        <para><emphasis role="bold">David: </emphasis>
-            as is written in the wikipedia <phrase>[See <ulink url="http://wiki.tld/"/>
-                for more information]</phrase>, you are now dead,
-            having been shot with my sling.
-        </para>
-    </section>
-    </section>
-  </section>
-</article>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,23 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.<br />
-I will kill you.<br />
-You will not survive.<br />
-I will kill you.<br />
-I will kill you.<br />
-Ask Jive.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-Goliath [dead]: vengence will be mine.
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/dialogue-with-several-paragraphs.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/dialogue-with-several-paragraphs.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,22 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++: I shall sling you and bing you till infinity.
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/nested-s.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/nested-s.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/scenes-with-titles.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/scenes-with-titles.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,17 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene" title="A Better Scene">
-</s>
-
-<s id="another-scene">
-</s>
-
-<s id="exodus" title="The Exodus">
-
-Moses: let us get out of here!
-
-Joshua: amen!
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/two-nested-s.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/two-nested-s.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,9 +0,0 @@
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-<s id="another-scene">
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-brs.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-brs.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,21 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.<br />
-I will kill you.<br />
-You will not survive.<br />
-I will kill you.<br />
-I will kill you.<br />
-Ask Jive.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-comments.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-comments.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,15 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-<!-- David and Goliath are Biblical characters -->
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-description.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-description.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and Goliath are standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-dialogue.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-dialogue.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,13 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-entities.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-entities.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David &amp; Goliath &lt;are&gt; standing by each other.
-
-David is a red-head. &quot;Hello&quot;
-
-Goliath is very tall.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-internal-description.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-internal-description.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,34 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
-of my sling. 
-
-++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
-Wiki site</a> for more information], you are now dead, having been shot with
-my sling.
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-line-comments.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-line-comments.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-David: I will kill you.
-
-<!-- David and Goliath are Biblical characters 
-
-They are nifty.
--->
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-para-desc.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-para-desc.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and Goliath are standing by each other.
-
-David is a red-head.
-
-Goliath is very tall.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of Allah, the merciful, I will show you the power of my
-sling.
-
-++++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still waiting.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-tags-inside-paragraphs.txt
--- a/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-tags-inside-paragraphs.txt	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,29 +0,0 @@
-<s id="top">
-
-<s id="david_and_goliath">
-
-[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
-standing by each other.]
-
-David: I will kill you.
-
-Goliath: no way, you little idiot!
-
-David: yes way!
-
-++++: In the name of <a href="http://real-allah.tld/">Allah, the 
-<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
-
-++: I shall sling you and bing you till infinity.
-
-[David takes his sling.]
-
-Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
-
-David: so you are.
-
-[David puts a stone in his sling and shoots Goliath. He hits.]
-
-</s>
-
-</s>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/dialogue-with-several-paragraphs.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/dialogue-with-several-paragraphs.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,44 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                I'm still waiting.
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                so you are.
-            </para>
-        </saying>
-    </scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/nested-s.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/nested-s.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,12 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene">
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/scenes-with-titles.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/scenes-with-titles.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene" title="A Better Scene">
-            </scene>
-            <scene id="another-scene">
-            </scene>
-            <scene id="exodus" title="The Exodus">
-                <saying character="Moses">
-                    <para>
-                        let us get out of here!
-                    </para>
-                </saying>
-                <saying character="Joshua">
-                    <para>
-                        amen!
-                    </para>
-                </saying>
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/two-nested-s.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/two-nested-s.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,14 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-        <scene id="top">
-            <scene id="a-better-scene">
-            </scene>
-            <scene id="another-scene">
-            </scene>
-        </scene>
-    </body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-brs.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-brs.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,39 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.<br />
-                I will kill you.<br />
-                You will not survive.<br />
-                I will kill you.<br />
-                I will kill you.<br />
-                Ask Jive.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-comments.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-comments.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,29 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <!-- David and Goliath are Biblical characters -->
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-description.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-description.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,59 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David and Goliath are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-dialogue.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-dialogue.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,28 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-entities.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-entities.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David &amp; Goliath &lt;are&gt; standing by each other.
-        </para>
-        <para>
-            David is a red-head. "Hello"
-        </para>
-        <para>
-            Goliath is very tall.
-        </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-internal-description.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-internal-description.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,69 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
-                <inlinedesc>sarcastically</inlinedesc> power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-    <saying character="David">
-        <para>
-            as is written in the wikipedia <inlinedesc>See <ulink url="http://wiki.tld/">the Wiki site</ulink>
-                for more information</inlinedesc>, you are now dead,
-            having been shot with my sling.
-        </para>
-    </saying>
-</scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-line-comments.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-line-comments.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,32 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <!-- David and Goliath are Biblical characters 
-
-        They are nifty.
-        -->
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-        </saying>
-</scene>
-
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-para-desc.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-para-desc.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,65 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-            David and Goliath are standing by each other.
-        </para>
-        <para>
-            David is a red-head.
-        </para>
-        <para>
-            Goliath is very tall.
-        </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of Allah, the merciful, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still waiting.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-tags-inside-paragraphs.xml
--- a/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-tags-inside-paragraphs.xml	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,61 +0,0 @@
-<?xml version='1.0' encoding='utf-8'?>
-<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
-<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
-    <head>
-    </head>
-    <body id="index">
-<scene id="top">
-    <scene id="david_and_goliath">
-        <description>
-            <para>
-                David and 
-                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
-                are standing by each other.
-            </para>
-        </description>
-        <saying character="David">
-            <para>
-                I will kill you.
-            </para>
-        </saying>
-        <saying character="Goliath">
-            <para>
-                no way, you little idiot!
-            </para>
-        </saying>
-        <saying character="David">
-            <para>
-                yes way!
-            </para>
-            <para>
-                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
-                of my sling.
-            </para>
-            <para>
-                I shall sling you and bing you till infinity.
-            </para>
-        </saying>
-        <description>
-            <para>
-                David takes his sling.
-            </para>
-        </description>
-    <saying character="Goliath">
-        <para>
-            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
-        </para>
-    </saying>
-    <saying character="David">
-        <para>
-            so you are.
-        </para>
-    </saying>
-    <description>
-        <para>
-            David puts a stone in his sling and shoots Goliath. He hits.
-        </para>
-    </description>
-</scene>
-</scene>
-</body>
-</document>
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
--- a/perl/modules/XML-Grammar-Screenplay/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,11 +0,0 @@
-package XML::Grammar::Screenplay::ConfigData;
-
-use strict;
-use warnings;
-
-sub config
-{
-    return ["./extradata"];
-}
-
-1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/pod-coverage.t
--- a/perl/modules/XML-Grammar-Screenplay/t/pod-coverage.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-#!perl -T
-
-use Test::More;
-eval "use Test::Pod::Coverage 1.04";
-plan skip_all => "Test::Pod::Coverage 1.04 required for testing POD coverage" if $@;
-all_pod_coverage_ok();
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/pod.t
--- a/perl/modules/XML-Grammar-Screenplay/t/pod.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,6 +0,0 @@
-#!perl -T
-
-use Test::More;
-eval "use Test::Pod 1.14";
-plan skip_all => "Test::Pod 1.14 required for testing POD" if $@;
-all_pod_files_ok();
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/proto-text-invalid.t
--- a/perl/modules/XML-Grammar-Screenplay/t/proto-text-invalid.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,51 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More;
-
-use Test::More tests => 1;
-
-use XML::LibXML;
-
-use XML::Grammar::Screenplay::FromProto;
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-my $grammar = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
-    });
-
-eval {
-my $got_xml = $grammar->convert(
-    {
-        source =>
-        {
-            file => "t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
-        },
-    }
-);
-};
-
-my $err = $@;
-
-# TEST
-like ($err, qr{inner-desc.*?addressing},
-   "Tried to put an inner-desc inside an addressing "
-);
-
-1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/proto-text-to-xml-using-custom-parser.t
--- a/perl/modules/XML-Grammar-Screenplay/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,86 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More;
-
-use Test::XML tests => 26;
-
-use XML::LibXML;
-
-use XML::Grammar::Screenplay::FromProto;
-
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-my @tests = (qw(
-        nested-s
-        two-nested-s
-        with-dialogue
-        dialogue-with-several-paragraphs
-        with-description
-        with-tags-inside-paragraphs
-        with-internal-description
-        with-comments
-        with-multi-para-desc
-        with-multi-line-comments
-        scenes-with-titles
-        with-entities
-        with-brs
-    ));
-
-# TEST:$num_texts=13
-
-my $grammar = XML::Grammar::Screenplay::FromProto->new({
-        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
-    });
-
-my $rngschema = XML::LibXML::RelaxNG->new(
-        location => "./extradata/screenplay-xml.rng" 
-    );    
-
-my $xml_parser = XML::LibXML->new();
-$xml_parser->validation(0);
-
-foreach my $fn (@tests)
-{
-    my $got_xml = $grammar->convert(
-        {
-            source =>
-            {
-                file => "t/data/proto-text/$fn.txt",
-            },
-        }
-    );
-
-    # TEST*$num_texts
-    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
-        "Output of the Proto Text \"$fn\""
-    );
-
-    my $dom = $xml_parser->parse_string($got_xml);
-
-    my $code;
-    $code = $rngschema->validate($dom);
-
-    # TEST*$num_texts
-    ok ((defined($code) && ($code == 0)),
-        "The validation of '$fn' succeeded.") ||
-        diag("\$@ == $@");
-}
-
-1;
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/qnd-parser-unit.t
--- a/perl/modules/XML-Grammar-Screenplay/t/qnd-parser-unit.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,78 +0,0 @@
-use strict;
-use warnings;
-
-use Test::More tests => 3;
-
-use XML::Grammar::Screenplay::FromProto::Parser::QnD;
-
-{
-    my $text = <<"EOF";
-Hello <s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
-EOF
-
-    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
-
-    $parser->_setup_text($text);
-
-    my $ret = $parser->_consume(qr{[^<]});
-
-    # TEST
-    is ($ret, "Hello ", "_consume works for first line");
-}
-
-{
-    my $text = <<"EOF";
-Hello
-voila the row kala:
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
-EOF
-
-    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
-
-    $parser->_setup_text($text);
-
-    my $ret = $parser->_consume(qr{[^<]});
-
-    # TEST
-    is ($ret, "Hello\nvoila the row kala:\n", 
-        "_consume works for several lines");
-}
-
-{
-    my $text = <<"EOF";
-<s id="top">
-
-<s id="a-better-scene">
-</s>
-
-</s>
-EOF
-
-    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
-
-    $parser->_setup_text($text);
-
-    my $ret = $parser->_parse_opening_tag();
-
-    # TEST
-    is_deeply ($ret, 
-        {
-            name => "s",
-            is_standalone => 0,
-            line => 1,
-            attrs => [ { key => "id", value => "top"}],
-        },
-        "Checking _parse_opening_tag() - #1",
-    );
-}
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/to-docbook.t
--- a/perl/modules/XML-Grammar-Screenplay/t/to-docbook.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,70 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More;
-
-use Test::XML tests => 2;
-
-use File::Spec;
-
-use XML::LibXML;
-
-use XML::Grammar::Screenplay::ToDocBook;
-
-my @tests = (qw(
-        with-internal-description
-    ));
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-# TEST:$num_texts=1
-
-my $converter = XML::Grammar::Screenplay::ToDocBook->new({
-        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
-    });
-
-foreach my $fn (@tests)
-{
-    my $docbook_text = $converter->translate_to_docbook({
-            source => { file => "t/data/xml/$fn.xml", },
-            output => "string",
-        }
-        );
-
-    # TEST*$num_texts*2
-    
-    my $parser = XML::LibXML->new();
-
-    my $doc = $parser->parse_string($docbook_text);
-
-    is (
-        scalar(() = $doc->findnodes(q{//article[@id='index']})),
-        1,
-        "Found one article with id index",
-    );
-
-    ok (
-        (scalar(() = $doc->findnodes(q{//section[@role='description']}))
-            >=
-            1
-        ),
-        "Found role=description sections",
-    );
-}
-
-1;
-
diff -r ecf865b363a2 -r 55102bcc67a6 perl/modules/XML-Grammar-Screenplay/t/to-xhtml.t
--- a/perl/modules/XML-Grammar-Screenplay/t/to-xhtml.t	Tue Nov 03 15:39:45 2009 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,82 +0,0 @@
-#!/usr/bin/perl
-
-use strict;
-use warnings;
-
-use Test::More;
-
-use Test::XML tests => 3;
-
-use File::Spec;
-
-use XML::LibXML;
-
-use XML::Grammar::Screenplay::ToHTML;
-
-my @tests = (qw(
-        with-internal-description
-    ));
-
-sub load_xml
-{
-    my $path = shift;
-
-    open my $in, "<", $path;
-    my $contents;
-    {
-        local $/;
-        $contents = <$in>
-    }
-    close($in);
-    return $contents;
-}
-
-# TEST:$num_texts=1
-
-my $converter = XML::Grammar::Screenplay::ToHTML->new({
-        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
-    });
-
-foreach my $fn (@tests)
-{
-    my $xhtml_text = $converter->translate_to_html({
-            source => { file => "t/data/xml/$fn.xml", },
-            output => "string",
-        }
-        );
-
-    my $parser = XML::LibXML->new();
-
-    my $doc = $parser->parse_string($xhtml_text);
-
-    my $xpc = XML::LibXML::XPathContext->new();
-    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
-    # TEST*$num_texts
-    is (
-        scalar(() = $xpc->find(q{//x:html}, $doc)),
-        1,
-        "Found one article with id index",
-    );
-
-    # TEST*$num_texts
-    ok (
-        (scalar(() = $xpc->find(q{//x:div[@class='saying']}, $doc))
-            >=
-            1
-        ),
-        "Found role=description sections",
-    );
-
-    # TEST*$num_texts
-    ok (
-        (scalar(() = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc))
-            >=
-            1
-        ),
-        "Found role=description sections",
-    );
-
-}
-
-1;
-

changeset:   0:ecf865b363a2
user:        shlomif@52c325ad-5fd0-0310-8a0f-c43feede02cc
date:        Tue Nov 03 15:39:45 2009 +0000
files:       build/build-tags/build-ctags.sh perl/modules/XML-Grammar-Screenplay/.cvsignore perl/modules/XML-Grammar-Screenplay/Build.PL perl/modules/XML-Grammar-Screenplay/Changes perl/modules/XML-Grammar-Screenplay/MANIFEST perl/modules/XML-Grammar-Screenplay/README perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-docbook.xslt perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-html.xslt perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-xsl-fo.xslt perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.dtd perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.rng perl/modules/XML-Grammar-Screenplay/inc/Test/Run/Builder.pm perl/modules/XML-Grammar-Screenplay/inc/XML/Grammar/Builder.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/FromProto.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToDocBook.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToHTML.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/Base.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToDocBook.pm perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToHTML.pm perl/modules/XML-Grammar-Screenplay/process-screenplay.pl perl/modules/XML-Grammar-Screenplay/rejects/proto-text-to-xml.t perl/modules/XML-Grammar-Screenplay/t/00-load.t perl/modules/XML-Grammar-Screenplay/t/app-to-html.t perl/modules/XML-Grammar-Screenplay/t/boilerplate.t perl/modules/XML-Grammar-Screenplay/t/data/docbook/with-internal-description.docbook.xml perl/modules/XML-Grammar-Screenplay/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/dialogue-with-several-paragraphs.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/nested-s.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/scenes-with-titles.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/two-nested-s.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-brs.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-comments.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-description.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-dialogue.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-entities.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-internal-description.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-line-comments.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-para-desc.txt perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-tags-inside-paragraphs.txt perl/modules/XML-Grammar-Screenplay/t/data/xml/dialogue-with-several-paragraphs.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/nested-s.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/scenes-with-titles.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/two-nested-s.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-brs.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-comments.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-description.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-dialogue.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-entities.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-internal-description.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-line-comments.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-para-desc.xml perl/modules/XML-Grammar-Screenplay/t/data/xml/with-tags-inside-paragraphs.xml perl/modules/XML-Grammar-Screenplay/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm perl/modules/XML-Grammar-Screenplay/t/pod-coverage.t perl/modules/XML-Grammar-Screenplay/t/pod.t perl/modules/XML-Grammar-Screenplay/t/proto-text-invalid.t perl/modules/XML-Grammar-Screenplay/t/proto-text-to-xml-using-custom-parser.t perl/modules/XML-Grammar-Screenplay/t/qnd-parser-unit.t perl/modules/XML-Grammar-Screenplay/t/to-docbook.t perl/modules/XML-Grammar-Screenplay/t/to-xhtml.t vim/Makefile vim/syntax/screenplay-text.vim
description:
Copying the XML-Grammar-Screenplay trunk to XML-Grammar-Fiction's


diff -r 000000000000 -r ecf865b363a2 build/build-tags/build-ctags.sh
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/build/build-tags/build-ctags.sh	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,7 @@
+#!/bin/sh
+(cd ../.. &&
+    ctags -f tags --recurse --totals \
+        --exclude='**/blib/**' --exclude='**/t/lib/**' \
+        --exclude='**/.svn/**' --exclude='*~' \
+        --languages=Perl --langmap=Perl:+.t
+)
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/.cvsignore
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/.cvsignore	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,10 @@
+blib*
+Makefile
+Makefile.old
+Build
+_build*
+pm_to_blib*
+*.tar.gz
+.lwpcookies
+XML-Grammar-Screeplay-*
+cover_db
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/Build.PL
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/Build.PL	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,61 @@
+use strict;
+use warnings;
+
+use File::Spec;
+use lib File::Spec->catdir(File::Spec->curdir(), "inc");
+
+use XML::Grammar::Builder;
+
+my $builder = XML::Grammar::Builder->new(
+    module_name         => 'XML::Grammar::Screenplay',
+    license             => 'mit',
+    dist_author         => 'Shlomi Fish <shlomif@cpan.org>',
+    dist_version_from   => 'lib/XML/Grammar/Screenplay.pm',
+    build_requires => {
+        'File::Find' => 0,
+        'Test::More' => 0,
+        'Test::XML' => 0,
+    },
+    requires => 
+    {
+        'Carp' => 0,
+        'Data::Dumper' => 0,
+        'HTML::Entities' => 0,
+        'List::Util' => 0,
+        'Moose' => 0,
+        'Parse::RecDescent' => 0,
+        'warnings' => 0,
+        'XML::LibXSLT' => 0,
+        'XML::Writer' => 0,
+    },
+    add_to_cleanup      => [ 'XML-Grammar-Screenplay-*' ],
+    create_makefile_pl => 'passthrough',
+    meta_merge =>
+    {
+        resources =>
+        {
+            repository => "https://svn.berlios.de/svnroot/repos/web-cpan/XML-Grammar-Screenplay/",
+            homepage => "http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/",
+        },
+        keywords =>
+        [
+            "authoring",
+            "cinema",
+            "creative writing",
+            "films",
+            "grammar",
+            "movies",
+            "parsing",
+            "screenplay",
+            "screenplays",
+            "script",
+            "scripts",
+            "writing",
+            "xml",
+            "xml-libxml",
+            "xslt",
+        ],
+    },
+);
+
+$builder->create_build_script();
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/Changes
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/Changes	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,67 @@
+Revision history for XML-Grammar-Screenplay
+
+        - Added the resources and keywords to the Build.PL and META.yml.
+
+0.0600  Fri Oct  9 11:35:30 IST 2009
+        - Converted the generated Screenplay-XML to its own namespace:
+        http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/
+        - Adapted the stylesheets, the RelaxNG schema, etc. to that while
+        adapting the test scripts. 
+
+0.0503  Wed Jul 29 10:12:38 IDT 2009
+        - Included a "package XML::Grammar::Screenplay::FromProto::Nodes"
+        statement at the top of:
+        lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
+        Because otherwise the rpm builder was confused.
+
+0.0502  Wed Mar  4 22:19:43 IST 2009
+        - Upgraded inc/XML/Grammar/Builder.pm to 0.0101 to (hopefully)
+        handle the extradata properly under all conditions.
+
+0.0501  Tue Mar  3 19:38:22 IST 2009
+        - Changed the Build.PL to use XML::Grammar::Builder.
+            - changed the tests accordingly, due to the lack of 
+            "blib/extradata".
+
+0.0500  Fri Feb 27 17:48:52 IST 2009
+        - Converted to use a RelaxNG schema.
+            - Now using it in ::ToHTML instead of the DTD.
+        - Added a sanity check for no inner desc inside the addressing part.
+        - Changed the 'license' field in Build.PL from 'bsd' to 'mit'
+        which is more accurate.
+
+0.0402  Fri Apr 25 13:27:16 IDT 2008
+        - Fixed a thinko with the wrong path to the DTD:
+        "products-syndication.dtd" instead of "screenplay-xml.dtd".
+        Possibly a copy-and-paste bug.
+
+0.0401  Sat Jul 14 10:43:57 IDT 2007
+        - Converted the "Screeplay" strings that were a leftover from
+        the wrong module-starter invocation into "Screenplay".
+
+0.04    Mon Jun 11 21:26:48 IDT 2007
+        - Added the Quick-and-Dirty FromProto parser, which is slightly faster,
+        than the Parse::RecDescent one and with much better diagnostics. 
+        - More parsers can be added later.
+        - Broke some compatibility - now require "use"-ing the parser class.
+
+0.03    Tue May 22 07:46:18 IDT 2007
+        - Added the <br /> tag.
+        - Added a description of the proto-text format in the POD and
+        other POD.
+        - Fixed the space being part of the saying issue in the generated
+        HTML.
+
+0.02    Mon May 21 00:26:35 IDT 2007
+        - Added the title="" attribute to the scene tag.
+        - Added support for SGML-like entities
+        - Added the direct ScreenplayXML -> HTML processor.
+        
+0.0101  Thu May 17 19:14:01 IDT 2007
+        - BUG FIX: Changed to open the filename in 
+        XML::Grammar::Screenplay::FromProto in ":utf8" mode. 
+        - BUG FIX: added more dependencies to the Build.PL.
+
+0.01    
+        First version, released on an unsuspecting world.
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/MANIFEST
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/MANIFEST	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,65 @@
+Build.PL
+Changes
+extradata/screenplay-xml.dtd
+extradata/screenplay-xml.rng
+extradata/screenplay-xml-to-docbook.xslt
+extradata/screenplay-xml-to-html.xslt
+extradata/screenplay-xml-to-xsl-fo.xslt
+inc/Test/Run/Builder.pm
+inc/XML/Grammar/Builder.pm
+lib/XML/Grammar/Screenplay/App/FromProto.pm
+lib/XML/Grammar/Screenplay/App/ToDocBook.pm
+lib/XML/Grammar/Screenplay/App/ToHTML.pm
+lib/XML/Grammar/Screenplay/Base.pm
+lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
+lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
+lib/XML/Grammar/Screenplay/FromProto.pm
+lib/XML/Grammar/Screenplay.pm
+lib/XML/Grammar/Screenplay/ToDocBook.pm
+lib/XML/Grammar/Screenplay/ToHTML.pm
+Makefile.PL
+MANIFEST
+META.yml # Will be created by "make dist"
+README
+rejects/proto-text-to-xml.t
+t/00-load.t
+t/app-to-html.t
+t/boilerplate.t
+t/data/docbook/with-internal-description.docbook.xml
+t/data/proto-text/dialogue-with-several-paragraphs.txt
+t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
+t/data/proto-text/nested-s.txt
+t/data/proto-text/scenes-with-titles.txt
+t/data/proto-text/two-nested-s.txt
+t/data/proto-text/with-brs.txt
+t/data/proto-text/with-comments.txt
+t/data/proto-text/with-description.txt
+t/data/proto-text/with-dialogue.txt
+t/data/proto-text/with-entities.txt
+t/data/proto-text/with-internal-description.txt
+t/data/proto-text/with-multi-line-comments.txt
+t/data/proto-text/with-multi-para-desc.txt
+t/data/proto-text/with-tags-inside-paragraphs.txt
+t/data/xml/dialogue-with-several-paragraphs.xml
+t/data/xml/nested-s.xml
+t/data/xml/scenes-with-titles.xml
+t/data/xml/two-nested-s.xml
+t/data/xml/with-brs.xml
+t/data/xml/with-comments.xml
+t/data/xml/with-description.xml
+t/data/xml/with-dialogue.xml
+t/data/xml/with-entities.xml
+t/data/xml/with-internal-description.xml
+t/data/xml/with-multi-line-comments.xml
+t/data/xml/with-multi-para-desc.xml
+t/data/xml/with-tags-inside-paragraphs.xml
+t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
+t/pod-coverage.t
+t/pod.t
+t/proto-text-invalid.t
+t/proto-text-to-xml-using-custom-parser.t
+t/qnd-parser-unit.t
+t/to-docbook.t
+t/to-xhtml.t
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/README
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/README	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,44 @@
+XML-Grammar-Screenplay
+
+This is a module implementing an XML grammar for screenplays. It contains:
+
+1. A converter from a well-formed plain text format to its custom XML format.
+
+2. A converter from its custom XML format to DocBook/XML.
+
+INSTALLATION
+
+To install this module, run the following commands:
+
+    perl Build.PL
+    ./Build
+    ./Build test
+    ./Build install
+
+
+SUPPORT AND DOCUMENTATION
+
+After installing, you can find documentation for this module with the perldoc command.
+
+    perldoc XML::Grammar::Screenplay
+
+You can also look for information at:
+
+    Search CPAN
+        http://search.cpan.org/dist/XML-Grammar-Screenplay
+
+    CPAN Request Tracker:
+        http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay
+
+    AnnoCPAN, annotated CPAN documentation:
+        http://annocpan.org/dist/XML-Grammar-Screenplay
+
+    CPAN Ratings:
+        http://cpanratings.perl.org/d/XML-Grammar-Screenplay
+
+COPYRIGHT AND LICENCE
+
+Copyright (C) 2007 Shlomi Fish
+
+This program is released under the following license: MIT X11.
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-docbook.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-docbook.xslt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,91 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//OASIS//DTD DocBook XML V4.3//EN"
+ doctype-system="/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <article>
+        <xsl:attribute name="id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
+        <xsl:apply-templates select="sp:scene" />
+    </article>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <section>
+        <xsl:attribute name="id">
+            <xsl:value-of select="@id" />
+        </xsl:attribute>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <title>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose> 
+        </title>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </section>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <section role="description" id="{generate-id()}">
+        <title></title>
+            <xsl:apply-templates />
+    </section>
+</xsl:template>
+
+<xsl:template match="saying">
+    <section role="sp:saying" id="{generate-id()}">
+        <title></title>
+        <xsl:apply-templates />
+    </section>
+</xsl:template>
+
+<xsl:template match="para">
+    <para>
+        <xsl:if test="local-name(..) = 'saying'">
+            <emphasis role="bold"><xsl:value-of select="../@character" />: </emphasis>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </para>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <ulink>
+        <xsl:attribute name="url">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+    </ulink>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <emphasis role="bold">
+        <xsl:apply-templates />
+    </emphasis>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <phrase>[<xsl:apply-templates />]</phrase>
+</xsl:template>
+
+</xsl:stylesheet>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-html.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-html.xslt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,102 @@
+<xsl:stylesheet version = '1.0'
+     xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+     xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"
+ doctype-public="-//W3C//DTD XHTML 1.1//EN"
+ doctype-system="http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
+ />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//sp:body" />  
+</xsl:template>
+
+<xsl:template match="sp:body">
+    <html>
+        <head>
+            <title>My Screenplay</title>
+        </head>
+        <body>
+            <div class="screenplay">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:apply-templates select="sp:scene" />
+            </div>
+        </body>
+    </html>
+</xsl:template>
+
+<xsl:template match="sp:scene">
+    <div class="scene" id="scene-{@id}">
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <xsl:element name="h{count(ancestor-or-self::sp:scene)}">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose>
+        </xsl:element>
+        <xsl:apply-templates select="sp:scene|sp:description|sp:saying" />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:description">
+    <div class="description">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:saying">
+    <div class="saying">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="sp:para">
+    <p>
+        <xsl:if test="local-name(..) = 'saying'">
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <xsl:text> </xsl:text>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::sp:para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </p>
+</xsl:template>
+
+<xsl:template match="sp:ulink">
+    <a>
+        <xsl:attribute name="href">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:apply-templates />
+    </a>
+</xsl:template>
+
+<xsl:template match="sp:bold">
+    <strong class="bold">
+        <xsl:apply-templates />
+    </strong>
+</xsl:template>
+
+<xsl:template match="sp:inlinedesc">
+    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+</xsl:template>
+
+<xsl:template match="sp:br">
+    <br />
+</xsl:template>
+
+</xsl:stylesheet>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-xsl-fo.xslt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml-to-xsl-fo.xslt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,101 @@
+<xsl:stylesheet version = '1.0'
+    xmlns:xsl='http://www.w3.org/1999/XSL/Transform'
+    xmlns:fo='http://www.w3.org/1999/XSL/Format'
+     >
+
+<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" />
+
+<xsl:template match="/">
+        <xsl:apply-templates select="//body" />  
+</xsl:template>
+
+<xsl:template match="body">
+    <fo:root>
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <fo:layout-master-set>
+                <fo:simple-page-master master-name="A4">
+                    <fo:region-body />
+                </fo:simple-page-master>
+            </fo:layout-master-set>
+            <fo:page-sequence master-reference="A4">
+                <fo:flow flow-name="xsl-region-body">
+                    <xsl:apply-templates select="scene" />        
+                </fo:flow>
+            </fo:page-sequence>
+    </fo:root>
+</xsl:template>
+
+<xsl:template match="scene">
+    <fo:block>
+        <!-- Make the title the title attribute or "ID" if does not exist. -->
+        <xsl:element name="h{count(ancestor-or-self::scene)}">
+            <xsl:attribute name="id">
+                <xsl:value-of select="@id" />
+            </xsl:attribute>
+            <xsl:choose>
+                <xsl:when test="@title">
+                    <xsl:value-of select="@title" />
+                </xsl:when>
+                <xsl:otherwise>
+                    <xsl:value-of select="@id" />
+                </xsl:otherwise>
+            </xsl:choose>
+        </xsl:element>
+        <xsl:apply-templates select="scene|description|saying" />
+    </fo:block>
+</xsl:template>
+
+<xsl:template match="description">
+    <div class="description">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="saying">
+    <div class="saying">
+        <xsl:apply-templates />
+    </div>
+</xsl:template>
+
+<xsl:template match="para">
+    <p>
+        <xsl:if test="local-name(..) = 'saying'">
+            <strong class="sayer"><xsl:value-of select="../@character" />:</strong> 
+            <xsl:text> </xsl:text>
+        </xsl:if>
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=1] = .">
+            [
+        </xsl:if>
+        <xsl:apply-templates />
+        <xsl:if test="local-name(..) = 'description' and ../child::para[position()=last()] = .">
+            ]
+        </xsl:if>
+    </p>
+</xsl:template>
+
+<xsl:template match="ulink">
+    <a>
+        <xsl:attribute name="href">
+            <xsl:value-of select="@url" />
+        </xsl:attribute>
+        <xsl:apply-templates />
+    </a>
+</xsl:template>
+
+<xsl:template match="bold">
+    <strong class="bold">
+        <xsl:apply-templates />
+    </strong>
+</xsl:template>
+
+<xsl:template match="inlinedesc">
+    <span class="inlinedesc">[<xsl:apply-templates />]</span>
+</xsl:template>
+
+<xsl:template match="br">
+    <br />
+</xsl:template>
+
+</xsl:stylesheet>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.dtd
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.dtd	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,15 @@
+<!ELEMENT document (head,body)>
+<!ELEMENT head EMPTY>
+<!ELEMENT body (scene+)>
+<!ELEMENT scene ((description|saying)*,scene*)>
+<!ELEMENT description (para+)>
+<!ELEMENT saying (para+)>
+<!ELEMENT para (#PCDATA|inlinedesc|ulink|bold|br)*>
+<!ELEMENT inlinedesc (#PCDATA|ulink|bold)*>
+<!ELEMENT ulink (#PCDATA|bold)*>
+<!ELEMENT bold (#PCDATA)>
+<!ELEMENT br EMPTY>
+<!ATTLIST scene id ID #REQUIRED title CDATA #IMPLIED>
+<!ATTLIST body id ID #REQUIRED>
+<!ATTLIST saying character CDATA #REQUIRED>
+<!ATTLIST ulink url CDATA #REQUIRED>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.rng
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/extradata/screenplay-xml.rng	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,99 @@
+<?xml version="1.0"?>
+<!-- $Id: testSuite.rng,v 1.12 2003/01/29 12:24:07 jjc Exp $ -->
+<grammar xmlns="http://relaxng.org/ns/structure/1.0"
+    xmlns:sp="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/"
+    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
+    >
+    <start>
+        <element name="sp:document">
+            <element name="sp:head">
+                <empty/>
+            </element>
+            <element name="sp:body">
+                <attribute name="id">
+                    <data type="ID"/>
+                </attribute>
+                <oneOrMore>
+                    <ref name="scene" />
+                </oneOrMore>
+            </element>
+        </element>
+    </start>
+    <define name="several_paras">
+        <oneOrMore>
+            <ref name="para"/>
+        </oneOrMore>
+    </define>
+    <define name="single_inline_elem">
+        <choice>
+            <text/>
+            <ref name="ulink"/>
+            <ref name="bold"/>
+        </choice>
+    </define>
+    <define name="scene">
+        <element name="sp:scene">
+            <attribute name="id">
+                <data type="ID"/>
+            </attribute>
+            <optional>
+                <attribute name="title">
+                    <text/>
+                </attribute>
+            </optional>
+            <zeroOrMore>
+                <choice>
+                    <element name="sp:description">
+                        <ref name="several_paras"/>
+                    </element>
+                    <element name="sp:saying">
+                        <attribute name="character">
+                            <text/>
+                        </attribute>
+                        <ref name="several_paras"/>
+                    </element>
+                </choice>
+            </zeroOrMore>
+            <zeroOrMore>
+                <ref name="scene" />
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="para">
+        <element name="sp:para">
+            <zeroOrMore>
+                <choice>
+                    <text/>
+                    <element name="sp:inlinedesc">
+                        <zeroOrMore>
+                            <ref name="single_inline_elem"/>
+                        </zeroOrMore>
+                    </element>
+                    <ref name="single_inline_elem"/>
+                    <element name="sp:br">
+                        <empty/>
+                    </element>
+                </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+    <define name="bold">
+        <element name="sp:bold">
+            <text />
+        </element>
+    </define>
+    <define name="ulink">
+        <element name="sp:ulink">
+                <attribute name="url">
+                    <text/>
+                </attribute>
+                <zeroOrMore>
+                    <choice>
+                        <text />
+                        <ref name="bold"/>
+                    </choice>
+            </zeroOrMore>
+        </element>
+    </define>
+</grammar>
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/inc/Test/Run/Builder.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/inc/Test/Run/Builder.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,65 @@
+package Test::Run::Builder;
+
+use strict;
+use warnings;
+
+use Module::Build;
+
+use vars qw(@ISA);
+
+@ISA = (qw(Module::Build));
+
+sub ACTION_runtest
+{
+    my ($self) = @_;
+    my $p = $self->{properties};
+
+    $self->depends_on('code');
+
+    local @INC = @INC;
+
+    # Make sure we test the module in blib/
+    unshift @INC, (File::Spec->catdir($p->{base_dir}, $self->blib, 'lib'),
+		 File::Spec->catdir($p->{base_dir}, $self->blib, 'arch'));
+
+    $self->do_test_run_tests;
+}
+
+sub ACTION_distruntest {
+  my ($self) = @_;
+
+  $self->depends_on('distdir');
+
+  my $start_dir = $self->cwd;
+  my $dist_dir = $self->dist_dir;
+  chdir $dist_dir or die "Cannot chdir to $dist_dir: $!";
+  # XXX could be different names for scripts
+
+  $self->run_perl_script('Build.PL') # XXX Should this be run w/ --nouse-rcfile
+      or die "Error executing 'Build.PL' in dist directory: $!";
+  $self->run_perl_script('Build')
+      or die "Error executing 'Build' in dist directory: $!";
+  $self->run_perl_script('Build', [], ['runtest'])
+      or die "Error executing 'Build test' in dist directory";
+  chdir $start_dir;
+}
+
+sub do_test_run_tests
+{
+    my $self = shift;
+
+    require Test::Run::CmdLine::Iface;
+
+    my $test_run =
+        Test::Run::CmdLine::Iface->new(
+            {
+                'test_files' => [glob("t/*.t")],
+            }   
+            # 'backend_params' => $self->_get_backend_params(),
+        );
+
+    return $test_run->run();
+}
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/inc/XML/Grammar/Builder.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/inc/XML/Grammar/Builder.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,77 @@
+package XML::Grammar::Builder;
+
+use strict;
+use warnings;
+
+use base 'Test::Run::Builder';
+
+use File::Find;
+
+our $VERSION = '0.0101';
+
+sub new
+{
+    my $package = shift;
+    my %args = @_;
+    my @extradata_files;
+    
+    my $module_name = $args{'module_name'};
+    $module_name =~ s{::}{-}g;
+
+    my $filter_files_cb = sub {
+        my $filename = $File::Find::name;
+        if ((-f $filename) &&
+            ($filename =~ /\.(?:mod|xslt|dtd|ent|cat|jpg|rng|xcf\.bz2)$/)
+        )
+        {
+            push @extradata_files, $filename;
+        }
+    };
+ 
+    find({ wanted => $filter_files_cb, no_chdir => 1}, "extradata");
+
+    my $builder = $package->SUPER::new(
+        extradata_files =>
+        {
+            (map { $_ => $_ } @extradata_files)
+        },
+        @_
+    );
+
+    $builder->add_build_element('extradata');
+
+    $builder->install_path()->{'extradata'} = 
+        File::Spec->catdir(
+                $builder->install_destination("lib"),
+                qw(data modules),
+                $module_name,
+                qw(data)
+        );
+
+    $builder->config_data(
+        'extradata_install_path' =>
+        [$builder->install_path()->{'extradata'}]
+    );
+
+    return $builder;
+}
+
+
+=begin excluded
+
+    my $get_dest_extradata_cb = sub {
+        my $fn = shift;
+
+        # Trying if this makes it work.
+        # TODO : Either remove this line or the rest of the lines.
+        return $fn;
+
+        $fn =~ s{^extradata}{data};
+        return "lib/$module_name/$fn";
+    };
+
+=end excluded
+
+=cut
+
+1;
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,205 @@
+package XML::Grammar::Screenplay;
+
+use warnings;
+use strict;
+
+=head1 NAME
+
+XML::Grammar::Screenplay - CPAN distribution implementing an XML grammar for 
+screenplays.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head1 SYNOPSIS
+
+See L<XML::Grammar::Screenplay::FromProto>, 
+L<XML::Grammar::Screenplay::ToDocBook> and
+L<XML::Grammar::Screenplay::ToHTML>.
+
+=head1 DESCRIPTION
+
+XML::Grammar::Screenplay is a Perl module for:
+
+=over 4
+
+=item 1. Converting a well-formed plain text format to a specialized XML format.
+
+=item 2. Converting the XML to DocBook/XML or directly to HTML for rendering.
+
+=back
+
+The best way to use it non-programatically is using
+L<XML::Grammar::Screenplay::App::FromProto>,
+L<XML::Grammar::Screenplay::App::ToDocBook> and
+L<XML::Grammar::Screenplay::App::ToHTML>, which are modules implementing
+command line applications for their processing.
+
+The rest of this page will document the syntax of the custom textual format.
+
+=head1 FORMAT
+
+=head2 Scenes
+
+Scenes are placed in XML-like tags of C<< <section> ... </section> >> or
+abbreviated as C<< <s> ... </s> >>. Opening tags in the format may have 
+attributes whose keys are plaintext and whose values are surrounded by
+double quotes. (Single-quotes are not supported).
+
+The scene tag must have an C<id> attribute (for anchors, etc.) and could
+have an optional C<title> attribute. If the title is not specified, it will
+default to the ID.
+
+Scenes may be B<nested>. There cannot be any sayings or descriptions (see below)
+except inside scenes.
+
+=head2 Text
+
+Text is any of:
+
+=over 4
+
+=item 1. Plaintext
+
+Regular text
+
+=item 2. XML-like tags.
+
+Supported tags are C<< <b> >> for bold tags, C<< <a href="..."> >> for
+hyperlinks, and an empty C<< <br /> >> tag for line-breaks.
+
+=item 3. Entities
+
+The text format supports SGML-like entities such as C<< &amp; >>,
+C<< &lt; >>, C<< &quot; >> and all other entities that are supported by 
+L<HTML::Entities>.
+
+=item 4. Text between [ ... ]
+
+Text between square brackets (C<[ ... ]>) is reserved for descriptions
+or inline descriptions (see below).
+
+=back 
+
+=head2 Sayings
+
+The first paragraph when a character talks starts with the name of the
+character followed by a colon (C<:>) and the rest of the text. Like this:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+If a character says more than one paragraph, the next paragraph should start
+with any number of "+"-signs followed by a colon:
+
+    David: Goliath, I'm going to kill you! You'll see -
+    I will.
+
+    ++++: I will sling you and bing you till infinity!
+
+=head2 Descriptions.
+
+Descriptions that are not part of saying start with a C<[> at the first
+character of a line and extend till the next C<]>. They can span several
+paragraphs.
+
+There are also internal descriptions to the saying which are placed
+inside the paragraph of the saying and describe what happens while the
+character talks. 
+
+=head2 EXAMPLES
+
+Examples can be found in the C<t/data> directory, and here:
+
+=over 4
+
+=item * The One with the Fountainhead
+
+L<http://www.shlomifish.org/humour/TOWTF/>
+
+=item * Humanity - The Movie
+
+L<http://www.shlomifish.org/humour/humanity/>
+
+=item * Star Trek - "We The Living Dead"
+
+L<http://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/>
+
+=back
+
+=head1 DEBUGGING
+
+When trying to convert the well-formed text to XML, one will often 
+encounter an obscure "Parse Error". This is caused by L<Parse::RecDescent>,
+which is used for parsing. The best way I found to deal with it is to
+gradually eliminate parts of the document until the offending markup is
+isolated.
+
+In the future, I plan on writing a custom parser that will provide better
+diagnostics and will hopefully also be faster.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 TODO
+
+=over 4
+
+=item * Empty
+
+=back
+
+=head1 SUPPORT
+
+You can find documentation for this module with the perldoc command.
+
+    perldoc XML::Grammar::Screenplay
+
+You can also look for information at:
+
+=over 4
+
+=item * AnnoCPAN: Annotated CPAN documentation
+
+L<http://annocpan.org/dist/XML-Grammar-Screenplay>
+
+=item * CPAN Ratings
+
+L<http://cpanratings.perl.org/d/XML-Grammar-Screenplay>
+
+=item * RT: CPAN's request tracker
+
+L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=XML-Grammar-Screenplay>
+
+=item * Search CPAN
+
+L<http://search.cpan.org/dist/XML-Grammar-Screenplay>
+
+=back
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/FromProto.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,89 @@
+package XML::Grammar::Screenplay::App::FromProto;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::FromProto - module implementing
+a command line application to convert a well-formed text to
+Screenplay XML.
+
+=head1 SYNOPSIS
+
+    perl -MXML::Grammar::Screenplay::App::FromProto -e 'run()' -- \
+	-o $@ $<
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+    my $output_xml = $converter->convert({
+            source => { file => shift(@ARGV), },
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_xml;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToDocBook.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Screenplay::App::ToDocBook;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::ToDocBook;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::ToDocBook - module implementing
+a command line application to convert a Screenplay XML file to docbook.
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::ToDocBook->new();
+
+    my $output_text = $converter->translate_to_docbook({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/App/ToHTML.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,81 @@
+package XML::Grammar::Screenplay::App::ToHTML;
+
+use strict;
+use warnings;
+
+use base 'Exporter';
+
+our @EXPORT = (qw(run));
+
+use Getopt::Long;
+
+use XML::Grammar::Screenplay::ToHTML;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::App::ToHTML - module implementing
+a command line application to convert a Screenplay XML file to HTML
+
+=head1 FUNCTIONS
+
+=head2 run()
+
+Call with no arguments to run the application from the commandline.
+
+=cut
+
+sub run
+{
+    my $output_filename;
+
+    GetOptions(
+        "output|o=s" => \$output_filename,
+    );
+
+    if (!defined($output_filename))
+    {
+        die "Output filename not specified! Use the -o|--output flag!";
+    }
+
+    my $converter = XML::Grammar::Screenplay::ToHTML->new();
+
+    my $output_text = $converter->translate_to_html({
+            source => { file => shift(@ARGV), },
+            output => "string",
+        }
+    );
+
+    open my $out, ">", $output_filename;
+    binmode $out, ":utf8";
+    print {$out} $output_text;
+    close($out);
+
+    exit(0);
+}
+
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/Base.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/Base.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,32 @@
+package XML::Grammar::Screenplay::Base;
+
+use strict;
+use warnings;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::Base - base class for XML::Grammar::Screenplay
+classes.
+
+=head1 METHODS
+
+=head2 $package->new({%args});
+
+Constructs a new package
+
+=cut
+
+sub new
+{
+    my $class = shift;
+    my $self = {};
+
+    bless $self, $class;
+
+    $self->_init(@_);
+
+    return $self;
+}
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,323 @@
+package XML::Grammar::Screenplay::FromProto;
+
+use strict;
+use warnings;
+
+use Carp;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use XML::Writer;
+use HTML::Entities ();
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+use Moose;
+
+has "_parser" => ('isa' => "XML::Grammar::Screenplay::FromProto::Parser", 'is' => "rw");
+has "_writer" => ('isa' => "XML::Writer", 'is' => "rw");
+
+my $screenplay_ns = q{http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/};
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto - module that converts well-formed
+text representing a screenplay to an XML format.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    local $Parse::RecDescent::skip = "";
+
+    my $parser_class = 
+        ($args->{parser_class} || "XML::Grammar::Screenplay::FromProto::Parser::QnD");
+
+    $self->_parser(
+        $parser_class->new()
+    );
+
+    return 0;
+}
+
+=head2 $self->convert({ source => { file => $path_to_file } })
+
+Converts the file $path_to_file to XML and returns it.
+
+=cut
+
+use Data::Dumper;
+
+sub _output_tag
+{
+    my ($self, $args) = @_;
+
+    my @start = @{$args->{start}};
+    $self->_writer->startTag([$screenplay_ns,$start[0]], @start[1..$#start]);
+
+    $args->{in}->($self, $args);
+
+    $self->_writer->endTag();
+}
+
+sub _output_tag_with_childs
+{
+    my ($self, $args) = @_;
+
+    return 
+        $self->_output_tag({
+            %$args,
+            'in' => sub {
+                foreach my $child (@{$args->{elem}->_get_childs()})
+                {
+                    $self->_write_elem({elem => $child,});
+                }
+            },
+        });
+}
+
+sub _get_text_start
+{
+    my ($self, $elem) = @_;
+
+    if ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Saying"))
+    {
+        return ["saying", 'character' => $elem->character()];
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Description"))
+    {
+        return ["description"];
+    }
+    else
+    {
+        Carp::confess ("Unknown element class - " . ref($elem) . "!");
+    }
+}
+
+sub _write_elem
+{
+    my ($self, $args) = @_;
+
+    my $elem = $args->{elem};
+
+    if (ref($elem) eq "")
+    {
+        $self->_writer->characters($elem);
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Paragraph"))
+    {
+        $self->_output_tag_with_childs(
+            {
+               start => ["para"],
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Element"))
+    {
+        if (($elem->name() eq "s") || ($elem->name() eq "section"))
+        {
+            $self->_write_scene({scene => $elem});
+        }
+        elsif ($elem->name() eq "a")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["ulink", "url" => $elem->lookup_attr("href")],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "b")
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["bold"],
+                    elem => $elem,
+                }
+            );
+        }
+        elsif ($elem->name() eq "br")
+        {
+            $self->_writer->emptyTag("br");
+        }
+        elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::InnerDesc"))
+        {
+            $self->_output_tag_with_childs(
+                {
+                    start => ["inlinedesc"],
+                    elem => $elem,
+                }
+            );
+        }
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Text"))
+    {
+        $self->_output_tag_with_childs(
+            {
+                start => $self->_get_text_start($elem),
+                elem => $elem,
+            },
+        );
+    }
+    elsif ($elem->isa("XML::Grammar::Screenplay::FromProto::Node::Comment"))
+    {
+        $self->_writer->comment($elem->text());
+    }
+}
+
+sub _write_scene
+{
+    my ($self, $args) = @_;
+
+    my $scene = $args->{scene};
+
+    my $tag = $scene->name;
+    
+    if (($tag eq "s") || ($tag eq "scene"))
+    {
+        my $id = $scene->lookup_attr("id");
+
+        if (!defined($id))
+        {
+            Carp::confess("Unspecified id for scene!");
+        }
+
+        my $title = $scene->lookup_attr("title");
+        my @t = (defined($title) ? (title => $title) : ());
+
+        $self->_output_tag_with_childs(
+            {
+                'start' => ["scene", id => $id, @t],
+                elem => $scene,
+            }
+        );
+    }
+    else
+    {
+        confess "Improper scene tag - should be '<s>' or '<scene>'!";
+    }
+
+    return;
+}
+
+sub _read_file
+{
+    my ($self, $filename) = @_;
+
+    open my $in, "<", $filename or
+        confess "Could not open the file \"$filename\" for slurping.";
+    binmode $in, ":utf8";
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>;
+    }
+    close($in);
+    
+    return $contents;
+}
+
+sub _calc_tree
+{
+    my ($self, $args) = @_;
+
+    my $filename = $args->{source}->{file} or
+        confess "Wrong filename given.";
+
+    return $self->_parser->process_text($self->_read_file($filename));
+}
+
+sub convert
+{
+    my ($self, $args) = @_;
+
+    # These should be un-commented for debugging.
+    # local $::RD_HINT = 1;
+    # local $::RD_TRACE = 1;
+    
+    # We need this so P::RD won't skip leading whitespace at lines
+    # which are siginificant.  
+
+    my $tree = $self->_calc_tree($args);
+
+    if (!defined($tree))
+    {
+        Carp::confess("Parsing failed.");
+    }
+
+    my $buffer = "";
+    my $writer = XML::Writer->new(
+        OUTPUT => \$buffer, 
+        ENCODING => "utf-8",
+        NAMESPACES => 1,
+        PREFIX_MAP =>
+        {
+             $screenplay_ns => "",
+        }
+    );
+
+    $writer->xmlDecl("utf-8");
+    $writer->doctype("document", undef, "screenplay-xml.dtd");
+    $writer->startTag([$screenplay_ns, "document"]);
+    $writer->startTag([$screenplay_ns, "head"]);
+    $writer->endTag();
+    $writer->startTag([$screenplay_ns, "body"], "id" => "index",);
+
+    # Now we're inside the body.
+    $self->_writer($writer);
+
+    $self->_write_scene({scene => $tree});
+
+    # Ending the body
+    $writer->endTag();
+
+    $writer->endTag();
+    
+    return $buffer;
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Nodes.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,120 @@
+package XML::Grammar::Screenplay::FromProto::Nodes;
+
+use strict;
+use warnings;
+
+use List::Util ();
+
+package XML::Grammar::Screenplay::FromProto::Node;
+
+use Moose;
+
+package XML::Grammar::Screenplay::FromProto::Node::WithContent;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node");
+
+has 'children' => (
+    isa => 'XML::Grammar::Screenplay::FromProto::Node::List', 
+    is => 'rw'
+);
+
+sub _get_childs
+{
+    my $self = shift;
+
+    my $childs = $self->children->contents();
+
+    return $childs || [];
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::Element;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
+
+has 'name' => (isa => 'Str', is => 'rw');
+has 'attrs' => (isa => 'ArrayRef', is => 'rw');
+
+sub lookup_attr
+{
+    my ($self, $attr_name) = @_;
+
+    my $pair = List::Util::first { $_->{key} eq $attr_name } (@{$self->attrs()});
+
+    if (!defined($pair))
+    {
+        return undef;
+    }
+    else
+    {
+        return $pair->{value};
+    }
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::List;
+
+use Moose;
+
+has 'contents' => (isa => "ArrayRef", is => "rw");
+
+package XML::Grammar::Screenplay::FromProto::Node::Text;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::WithContent");
+
+package XML::Grammar::Screenplay::FromProto::Node::Saying;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Text");
+
+has 'character' => (isa => "Str", is => "rw");
+
+package XML::Grammar::Screenplay::FromProto::Node::Description;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Text");
+
+package XML::Grammar::Screenplay::FromProto::Node::Paragraph;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Element");
+
+package XML::Grammar::Screenplay::FromProto::Node::InnerDesc;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node::Element");
+
+sub name
+{
+    return "inlinedesc";
+}
+
+package XML::Grammar::Screenplay::FromProto::Node::Comment;
+
+use Moose;
+
+extends("XML::Grammar::Screenplay::FromProto::Node");
+
+has "text" => (isa => "Str", is => "rw");
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Nodes - contains several nodes for
+use in XML::Grammar::Screenplay::FromProto.
+
+=head1 DESCRIPTION
+
+Contains several nodes.
+
+=cut
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,37 @@
+package XML::Grammar::Screenplay::FromProto::Parser;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+1;
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/PRD.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,262 @@
+package XML::Grammar::Screenplay::FromProto::Parser::PRD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::FromProto::Parser';
+
+use Parse::RecDescent;
+
+use Moose;
+
+use XML::Grammar::Screenplay::FromProto::Nodes;
+
+has "_p_rd" => ('isa' => "Parse::RecDescent", is => "rw");
+
+sub _init
+{
+    my $self = shift;
+
+    $self->_p_rd(Parse::RecDescent->new($self->_calc_grammar()));
+
+    return 0;
+}
+
+sub _calc_grammar
+{
+    my $self = shift;
+
+    return <<'EOF';
+
+start : tag  {$thisparser->{ret} = $item[1]; 1 }
+
+text_unit:   tag_or_comment { $item[1] }
+           | speech_or_desc { $item[1] }
+
+tag_or_comment:   tag
+                | comment
+
+comment:    /<!--(.*?)-->/ms para_sep {
+    XML::Grammar::Screenplay::FromProto::Node::Comment->new(
+        text => $1
+    )
+    }
+
+para_sep:      /(\n\s*)+/
+
+speech_or_desc:   speech_unit
+                | desc_unit
+
+plain_inner_text:  /([^\n<\[\]&]+\n?)+/ { $item[1] }
+
+inner_standalone_tag: /</ id attribute(s?) / *\/ *>/ space
+    {
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $item[2],
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => []
+            ),
+            attrs => $item[3]
+            );
+    }
+
+
+inner_tag:         opening_tag  inner_text closing_tag {
+        my ($open, $inside, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            attrs => $open->{attrs},
+            )
+    }
+
+inner_desc:      /\[/ inner_text /\]/ {
+        my $inside = $item[2];
+        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+                ),
+            )
+    }
+
+inner_tag_or_desc:    inner_tag
+                   |  inner_desc
+
+inner_entity:      /\&\w+;/ {
+        my $inside = $item[1];
+        HTML::Entities::decode_entities($inside)
+    }
+
+inner_text_unit:    plain_inner_text  { [ $item[1] ] }
+                 |  inner_tag_or_desc { [ $item[1] ] }
+                 |  inner_entity      { [ $item[1] ] }
+                 |  inner_standalone_tag { [ $item[1] ] }
+
+inner_text:       inner_text_unit(s) {
+        [ map { @{$_} } @{$item[1]} ]
+        }
+
+addressing: /^([^:\n\+]+): /ms { $1 }
+
+saying_first_para: addressing inner_text para_sep {
+            my ($sayer, $what) = ($item[1], $item[2]);
+            +{
+             character => $sayer,
+             para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $what,
+                    )
+                ),
+            }
+            }
+
+saying_other_para: /^\++: /ms inner_text para_sep {
+        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => $item[2],
+                    ),
+        )
+    }
+
+speech_unit:  saying_first_para saying_other_para(s?)
+    {
+    my $first = $item[1];
+    my $others = $item[2] || [];
+        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => [ $first->{para}, @{$others} ],
+                ),
+        )
+    }
+
+desc_para:  inner_text para_sep { $item[1] }
+
+desc_unit_inner: desc_para(s?) inner_text { [ @{$item[1]}, $item[2] ] }
+
+desc_unit: /^\[/ms desc_unit_inner /\]\s*$/ms para_sep {
+        my $paragraphs = $item[2];
+
+        XML::Grammar::Screenplay::FromProto::Node::Description->new(
+            children => 
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents =>
+                [
+                map { 
+                XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                    children =>
+                        XML::Grammar::Screenplay::FromProto::Node::List->new(
+                            contents => $_,
+                            ),
+                        )
+                } @$paragraphs
+                ],
+            ),
+        )
+    }
+
+text: text_unit(s) { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => $item[1]
+        ) }
+      | space { XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => []
+        ) }
+
+tag: space opening_tag space text space closing_tag space
+     {
+        my (undef, $open, undef, $inside, undef, $close) = @item[1..$#item];
+        if ($open->{name} ne $close->{name})
+        {
+            Carp::confess("Tags do not match: $open->{name} and $close->{name}");
+        }
+        XML::Grammar::Screenplay::FromProto::Node::Element->new(
+            name => $open->{name},
+            children => $inside,
+            attrs => $open->{attrs},
+            );
+     }
+
+opening_tag: '<' id attribute(s?) '>'
+    { $item[0] = { 'name' => $item[2], 'attrs' => $item[3] }; }
+
+closing_tag: '</' id '>'
+    { $item[0] = { 'name' => $item[2], }; }
+
+attribute: space id '="' attributevalue '"' space
+    { $item[0] = { 'key' => $item[2] , 'value' => $item[4] }; }
+
+attributevalue: /[^"]+/
+    { $item[0] = HTML::Entities::decode_entities($item[1]); }
+
+space: /\s*/
+
+id: /[a-zA-Z_\-]+/
+
+EOF
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    my $rv = $self->_p_rd()->start($text);
+
+    if (!defined($rv))
+    {
+        return;
+    }
+    else
+    {
+        return $self->_p_rd->{ret};
+    }
+}
+
+1;
+
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser - base class for parsers of the
+ScreenplayXML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns it.
+
+=head2 $self->meta()
+
+Something that L<Moose> adds.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/FromProto/Parser/QnD.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,749 @@
+package XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+use strict;
+use warnings;
+
+use base 'XML::Grammar::Screenplay::FromProto::Parser';
+
+use Moose;
+
+has "_curr_line_idx" => (isa => "Int", is => "rw");
+has "_lines" => (isa => "ArrayRef", is => "rw");
+
+sub _curr_line :lvalue
+{
+    my $self = shift;
+
+    return $self->_lines()->[$self->_curr_line_idx()];
+}
+
+sub _curr_line_ref
+{
+    my $self = shift;
+
+    return \($self->_lines()->[$self->_curr_line_idx()]);
+}
+
+sub _with_curr_line
+{
+    my ($self, $sub_ref) = @_;
+
+    return $sub_ref->(\($self->_lines()->[$self->_curr_line_idx()]));
+}
+
+sub _next_line_ref
+{
+    my $self = shift;
+
+    $self->_curr_line_idx($self->_curr_line_idx()+1);
+
+    return $self->_curr_line_ref();
+}
+
+sub _init
+{
+    my $self = shift;
+
+    return 0;
+}
+
+sub _start
+{
+    my $self = shift;
+
+    return $self->_parse_top_level_tag();
+}
+
+# Skip the whitespace.
+sub _skip_space
+{
+    my $self = shift;
+
+    $self->_consume(qr{\s});
+}
+
+my $id_regex = '[a-zA-Z_\-]+';
+
+sub _parse_opening_tag
+{
+    my $self = shift;
+
+    # Now Lisp got nothing on us.
+    return $self->_with_curr_line(
+        sub {
+            # $l is a reference to the string of the current
+            # line
+            my $l = shift;
+
+            if ($$l !~ m{\G<($id_regex)}g)
+            {
+                Carp::confess("Cannot match opening tag at line " . $self->_get_line_num());
+            }
+            my $id = $1;
+
+            my @attrs;
+
+            while ($$l =~ m{\G\s*($id_regex)="([^"]+)"\s*}cg)
+            {
+                push @attrs, { 'key' => $1, 'value' => $2, };
+            }
+
+            my $is_standalone = 0;
+            if ($$l =~ m{\G\s*/\s*>}cg)
+            {
+                $is_standalone = 1;
+            }
+            elsif ($$l !~ m{\G>}g)
+            {
+                Carp::confess (
+                    "Cannot match the \">\" of the opening tag at line " 
+                        . $self->_get_line_num()
+                );
+            }
+            
+            return
+            {
+                name => $id,
+                is_standalone => $is_standalone,
+                line => $self->_get_line_num(),
+                attrs => \@attrs,
+            };
+        }
+    );
+}
+
+sub _get_line_num
+{
+    my $self = shift;
+
+    return $self->_curr_line_idx()+1;
+}
+
+sub _parse_closing_tag
+{
+    my $self = shift;
+
+    return $self->_with_curr_line(
+        sub {
+            my $l = shift;
+            if ($$l !~ m{\G</($id_regex)>}g)
+            {
+                Carp::confess("Cannot match closing tag at line ". $self->_get_line_num());
+            }
+
+            return
+            {
+                name => $1,
+            };
+        }
+    );
+}
+
+sub _parse_text
+{
+    my $self = shift;
+
+    my @ret;
+    while (defined(my $unit = $self->_parse_text_unit()))
+    {
+        push @ret, $unit;
+    }
+
+    # If it's whitespace - return an empty list.
+    if ((scalar(@ret) == 1) && (ref($ret[0]) eq "") && ($ret[0] !~ m{\S}))
+    {
+        return 
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => []
+            );
+    }
+
+    return XML::Grammar::Screenplay::FromProto::Node::List->new(
+        contents => \@ret,
+        );
+}
+
+sub _consume_paragraph
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    return $self->_parse_inner_text();
+}
+
+sub _parse_inner_desc
+{
+    my $self = shift;
+
+    my $start_line = $self->_get_line_num();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{\G\[}g;
+        }
+    );
+
+    my $inside = $self->_parse_inner_text();
+
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ m{\G\]}g)
+            {
+                Carp::confess (
+                      "Inner description that started on line $start_line did "
+                    . "not terminate with a \"]\"!"
+                );
+            }
+        }
+    );
+
+    return
+        XML::Grammar::Screenplay::FromProto::Node::InnerDesc->new(
+            start => $start_line,
+            children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $inside
+            ),
+        );
+ 
+}
+
+sub _parse_inner_tag
+{
+    my $self = shift;
+
+    my $open = $self->_parse_opening_tag();
+
+    if ($open->{is_standalone})
+    {
+        $self->_skip_space();
+
+        return        
+            XML::Grammar::Screenplay::FromProto::Node::Element->new(
+                name => $open->{name},
+                children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => []
+                ),
+                attrs => $open->{attrs},
+            );
+    }
+
+    my $inside = $self->_parse_inner_text();
+
+    my $close = $self->_parse_closing_tag();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Opening and closing tags do not match: " 
+            . "$open->{name} and $close->{name} on element starting at "
+            . "line $open->{line}"
+        );
+    }
+    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
+        name => $open->{name},
+        children => XML::Grammar::Screenplay::FromProto::Node::List->new(
+            contents => $inside
+            ),
+        attrs => $open->{attrs},
+        );
+}
+
+sub _parse_inner_text
+{
+    my $self = shift;
+
+    my @contents;
+
+    my $start_line = $self->_curr_line_idx();
+
+    my $curr_text = "";
+
+    CONTENTS_LOOP:
+    while ($self->_curr_line() ne "\n")
+    {
+        my $which_tag;
+        # We need this to avoid appending the rest of the first line 
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+                
+                # Apparently, perl does not always returns true in this
+                # case, so we need the defined($1) ? $1 : "" workaround.
+                $$l =~ m{\G([^\<\[\]\&]*)}cgms;
+
+                $curr_text .= (defined($1) ? $1 : "");
+
+                if ($$l =~ m{\G\[})
+                {
+                    $which_tag = "open_desc";
+                }
+                elsif ($$l =~ m{\G\&})
+                {
+                    $which_tag = "entity";
+                }                
+                elsif ($$l =~ m{\G(?:</|\])})
+                {
+                    $which_tag = "close";
+                }
+                elsif ($$l =~ m{\G<})
+                {
+                    $which_tag = "open_tag";
+                }
+            }
+        );
+
+        push @contents, $curr_text;
+
+        $curr_text = "";
+
+        if (!defined($which_tag))
+        {
+            # Do nothing - a tag was not detected.
+        }
+        else
+        {
+            if (($which_tag eq "open_desc") || ($which_tag eq "open_tag"))
+            {
+                push @contents, 
+                    (($which_tag eq "open_tag")
+                        ? $self->_parse_inner_tag()
+                        : $self->_parse_inner_desc()
+                    );
+                # Avoid skipping to the next line.
+                # Gotta love teh Perl!
+                redo CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "close")
+            {
+                last CONTENTS_LOOP;
+            }
+            elsif ($which_tag eq "entity")
+            {
+                $self->_with_curr_line(
+                    sub {
+                        my $l = shift;
+                        if ($$l !~ m{\G(\&\w+;)}g)
+                        {
+                            Carp::confess("Cannot match entity (e.g: \"&quot;\") at line " .
+                                $self->_get_line_num()
+                            );
+                        }
+                        push @contents, HTML::Entities::decode_entities($1);
+                    }
+                );
+                redo CONTENTS_LOOP;
+            }
+        }
+    }
+    continue
+    {
+        if (!defined(${$self->_next_line_ref()}))
+        {
+            Carp::confess "End of file in an addressing paragraph starting at $start_line";
+        }
+    }
+
+    if (length($curr_text) > 0)
+    {
+        push @contents, $curr_text;
+    }
+
+    return \@contents;
+}
+
+# TODO : _parse_saying_first_para and _parse_saying_other_para are
+# very similar - abstract them into one function.
+sub _parse_saying_first_para
+{
+    my $self = shift;
+
+    my ($sayer, $what);
+    
+    ($sayer) = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G([^:\n\+]+): /cgms)
+            {
+                Carp::confess("Cannot match addressing at line " . $self->_get_line_num());
+            }
+            my $sayer = $1;
+
+            if ($sayer =~ m{[\[\]]})
+            {
+                Carp::confess("Tried to put an inner-desc inside an addressing at line " . $self->_get_line_num());
+            }
+
+            return ($sayer);
+        }
+    );
+
+    $what = $self->_parse_inner_text();
+
+    return
+    +{
+         character => $sayer,
+         para => XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $what,
+                )
+            ),
+    };
+}
+
+sub _parse_saying_other_para
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    my $verdict = $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            if ($$l !~ /\G\++: /cgms)
+            {
+                return;
+            }
+            else
+            {
+                return 1;
+            }
+        }
+    );
+
+    if (!defined($verdict))
+    {
+        return;
+    }
+
+    my $what = $self->_parse_inner_text();
+
+    return
+        XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+            children =>
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents => $what,
+                )
+        );
+}
+
+sub _parse_speech_unit
+{
+    my $self = shift;
+
+    my $first = $self->_parse_saying_first_para();
+
+    my @others;
+    while (defined(my $other_para = $self->_parse_saying_other_para()))
+    {
+        push @others, $other_para;
+    }
+
+    return
+        XML::Grammar::Screenplay::FromProto::Node::Saying->new(
+            character => $first->{character},
+            children => 
+                XML::Grammar::Screenplay::FromProto::Node::List->new(
+                    contents => [ $first->{para}, @others ],
+                ),
+        );
+}
+
+sub _parse_desc_unit
+{
+    my $self = shift;
+
+    my $start_line = $self->_curr_line_idx();
+
+    # Skip the [
+    $self->_with_curr_line(
+        sub {
+            my $l = shift;
+
+            $$l =~ m{^\[}g;
+        }
+    );
+
+    my @paragraphs;
+
+    my $is_end = 1;
+    my $para;
+    PARAS_LOOP:
+    while ($is_end && ($para = $self->_consume_paragraph()))
+    {
+        $self->_with_curr_line(
+            sub {
+                my $l = shift;
+
+                if ($$l =~ m{\G\]}cg)
+                {
+                    $is_end = 0;
+                }
+            }
+        );
+        push @paragraphs, $para;
+    }
+
+    if ($is_end)
+    {
+        Carp::confess (qq{Description ("[ ... ]") that started on line $start_line does not terminate anywhere.});
+    }
+
+    return XML::Grammar::Screenplay::FromProto::Node::Description->new(
+        children => 
+            XML::Grammar::Screenplay::FromProto::Node::List->new(
+                contents =>
+            [
+            map { 
+            XML::Grammar::Screenplay::FromProto::Node::Paragraph->new(
+                children =>
+                    XML::Grammar::Screenplay::FromProto::Node::List->new(
+                        contents => $_,
+                        ),
+                    )
+            } @paragraphs
+            ],
+        ),
+    );
+}
+
+sub _parse_non_tag_text_unit
+{
+    my $self = shift;
+
+    if (pos(${$self->_curr_line_ref()}) == 0)
+    {
+        return $self->_with_curr_line(
+            sub {
+                my $l = shift;
+                if (substr($$l, 0, 1) eq "[")
+                {
+                    return $self->_parse_desc_unit();
+                }
+                elsif ($$l =~ m{\A[^:]+:})
+                {
+                    return $self->_parse_speech_unit();
+                }
+                else
+                {
+                    Carp::confess ("Line " . $self->_curr_line_idx() . 
+                        " is not a description or a saying."
+                    );
+                }
+            }
+        );
+    }
+    else
+    {
+        Carp::confess ("Line " . $self->_curr_line_idx() . 
+            " has leading whitespace."
+            );
+    }
+}
+
+sub _parse_text_unit
+{
+    my $self = shift;
+    my $space = $self->_consume(qr{\s});
+
+    if ($self->_curr_line() =~ m{\G<})
+    {
+        # If it's a tag.
+
+        # TODO : implement the comment handling.
+        # We have a tag.
+
+        # If it's a closing tag - then backtrack.
+        if ($self->_curr_line() =~ m{\G</})
+        {
+            return undef;
+        }
+        else
+        {
+            return $self->_parse_top_level_tag();
+        }
+    }
+    else
+    {
+        return $self->_parse_non_tag_text_unit();
+    }
+}
+
+sub _curr_line_matches
+{
+    my $self = shift;
+    my $re = shift;
+
+    my $l = $self->_curr_line_ref();
+
+    return ($$l =~ $re);
+}
+
+sub _parse_top_level_tag
+{
+    my $self = shift;
+
+    $self->_skip_space();
+
+    if ($self->_with_curr_line(sub { my $l = shift; return $$l =~ m{\G<!--}cg}))
+    {
+        my $text = $self->_consume_up_to(qr{-->});
+
+        return
+            XML::Grammar::Screenplay::FromProto::Node::Comment->new(
+                text => $text
+            );
+    }
+
+    my $open = $self->_parse_opening_tag();
+
+    $self->_skip_space();
+
+    my $inside = $self->_parse_text();
+
+    $self->_skip_space();
+
+    my $close = $self->_parse_closing_tag();
+
+    $self->_skip_space();
+
+    if ($open->{name} ne $close->{name})
+    {
+        Carp::confess("Tags do not match: " 
+            . "$open->{name} on line $open->{line} "
+            . "and $close->{name} on line $close->{line}"
+        );
+    }
+    return XML::Grammar::Screenplay::FromProto::Node::Element->new(
+        name => $open->{name},
+        children => $inside,
+        attrs => $open->{attrs},
+        );
+}
+
+sub _consume
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    while (defined($$l) && ($$l =~ m[\G(${match_regex}*)\z]cgms))
+    {
+        $return_value .= $$l;
+    }
+    continue
+    {
+        $self->_next_line_ref();
+        $l = $self->_curr_line_ref();
+    }
+
+    if (defined($$l) && ($$l =~ m[\G(${match_regex}*)]cg))
+    {
+        $return_value .= $1;
+    }
+
+    return $return_value;
+}
+
+# TODO : copied and pasted from _consume - abstract
+sub _consume_up_to
+{
+    my ($self, $match_regex) = @_;
+
+    my $return_value = "";
+    my $l = $self->_curr_line_ref();
+
+    LINE_LOOP:
+    while (defined($$l))
+    {
+        my $verdict = ($$l =~ m[\G(.*?)((?:${match_regex})|\z)]cgms);
+        $return_value .= $1;
+        
+        # Find if it matched the regex.
+        if (length($2) > 0)
+        {
+            last LINE_LOOP;
+        }
+    }
+    continue
+    {
+        $self->_next_line_ref();
+        $l = $self->_curr_line_ref();
+    }
+
+    return $return_value;
+}
+
+sub _setup_text
+{
+    my ($self, $text) = @_;
+
+    # We include the lines trailing newlines for safety.
+    # $self->_lines([$text =~ m{\A([^\n]*\n?)*\z}ms]);
+    $self->_lines([split(/^/, $text)]);
+
+    $self->_curr_line_idx(0);
+
+    $self->_curr_line() =~ m{\A}g;
+
+    return;
+}
+
+sub process_text
+{   
+    my ($self, $text) = @_;
+
+    $self->_setup_text($text);
+
+    return $self->_start();
+}
+
+=head1 NAME
+
+XML::Grammar::Screenplay::FromProto::Parser::QnD - Quick and Dirty parser
+for the Screenplay-XML proto-text.
+
+B<For internal use only>.
+
+=head1 METHODS
+
+=head2 $self->process_text($string)
+
+Processes the text and returns the parse tree.
+
+=head2 $self->meta()
+
+Leftover from Moose.
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToDocBook.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToDocBook.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,149 @@
+package XML::Grammar::Screenplay::ToDocBook;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Screenplay::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_dtd' => (isa => 'XML::LibXML::Dtd', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToDocBook - module that converts the Screenplay
+XML to DocBook.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $dtd =
+        XML::LibXML::Dtd->new(
+            "Screenplay XML 0.1.0",
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.dtd"
+            ),
+        );
+
+    $self->_dtd($dtd);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-docbook.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_docbook({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_docbook
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToHTML.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/lib/XML/Grammar/Screenplay/ToHTML.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,165 @@
+package XML::Grammar::Screenplay::ToHTML;
+
+use strict;
+use warnings;
+
+use Carp;
+use File::Spec;
+
+use XML::LibXSLT;
+
+use XML::Grammar::Screenplay::ConfigData;
+
+use XML::LibXML;
+use XML::LibXSLT;
+
+use base 'XML::Grammar::Screenplay::Base';
+
+use Moose;
+
+
+has '_data_dir' => (isa => 'Str', is => 'rw');
+has '_rng' => (isa => 'XML::LibXML::RelaxNG', is => 'rw');
+has '_xml_parser' => (isa => "XML::LibXML", is => 'rw');
+has '_stylesheet' => (isa => "XML::LibXSLT::StylesheetWrapper", is => 'rw');
+
+=head1 NAME
+
+XML::Grammar::Screenplay::ToHTML - module that converts the Screenplay
+XML to HTML.
+
+=head1 VERSION
+
+Version 0.0600
+
+=cut
+
+our $VERSION = '0.0600';
+
+=head2 new()
+
+Accepts no arguments so far. May take some time as the grammar is compiled
+at that point.
+
+=head2 meta()
+
+Internal - (to settle pod-coverage.).
+
+=cut
+
+sub _init
+{
+    my ($self, $args) = @_;
+
+    my $data_dir = $args->{'data_dir'} ||
+        XML::Grammar::Screenplay::ConfigData->config('extradata_install_path')->[0];
+
+    $self->_data_dir($data_dir);
+
+    my $rngschema =
+        XML::LibXML::RelaxNG->new(
+            location =>
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml.rng"
+            ),
+        );
+
+    $self->_rng($rngschema);
+
+    $self->_xml_parser(XML::LibXML->new());
+
+    my $xslt = XML::LibXSLT->new();
+
+    my $style_doc = $self->_xml_parser()->parse_file(
+            File::Spec->catfile(
+                $self->_data_dir(), 
+                "screenplay-xml-to-html.xslt"
+            ),
+        );
+
+    $self->_stylesheet($xslt->parse_stylesheet($style_doc));
+
+    return 0;
+}
+
+=head2 $converter->translate_to_html({source => {file => $filename}, output => "string" })
+
+Does the actual conversion. $filename is the filename to translate (currently
+the only available source). 
+
+The C<'output'> key specifies the return value. A value of C<'string'> returns 
+the XML as a string, and a value of C<'xml'> returns the XML as an 
+L<XML::LibXML> DOM object.
+
+=cut
+
+sub translate_to_html
+{
+    my ($self, $args) = @_;
+
+    my $source_dom =
+        $self->_xml_parser()->parse_file($args->{source}->{file})
+        ;
+
+    my $ret_code;
+
+    eval
+    {
+        $ret_code = $self->_rng()->validate($source_dom);
+    };
+
+    if (defined($ret_code) && ($ret_code == 0))
+    {
+        # It's OK.
+    }
+    else
+    {
+        confess "RelaxNG validation failed [\$ret_code == $ret_code ; $@]";
+    }
+
+    my $stylesheet = $self->_stylesheet();
+
+    my $results = $stylesheet->transform($source_dom);
+
+    my $medium = $args->{output};
+
+    if ($medium eq "string")
+    {
+        return $stylesheet->output_string($results);
+    }
+    elsif ($medium eq "xml")
+    {
+        return $results;
+    }
+    else
+    {
+        confess "Unknown medium";
+    }
+}
+
+=head1 AUTHOR
+
+Shlomi Fish, L<http://www.shlomifish.org/>.
+
+=head1 BUGS
+
+Please report any bugs or feature requests to
+C<bug-xml-grammar-screenplay at rt.cpan.org>, or through the web interface at
+L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=XML-Grammar-Screenplay>.
+I will be notified, and then you'll automatically be notified of progress on
+your bug as I make changes.
+
+
+=head1 ACKNOWLEDGEMENTS
+
+=head1 COPYRIGHT & LICENSE
+
+Copyright 2007 Shlomi Fish, all rights reserved.
+
+This program is released under the following license: MIT X11.
+
+=cut
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/process-screenplay.pl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/process-screenplay.pl	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,43 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use XML::Grammar::Screenplay::FromProto;
+use Getopt::Long;
+use Carp;
+
+# local $::RD_TRACE = 1;
+
+my $output_fn;
+
+GetOptions(
+    "output|o=s" => \$output_fn,
+);
+
+my $filename = shift(@ARGV);
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new();
+
+my $got_xml = $grammar->convert(
+    {
+        source =>
+        {
+            file => $filename,
+        },
+    }
+
+);
+
+if (defined($output_fn))
+{
+    open my $out, ">", $output_fn
+        or confess "Cannot open file \"$output_fn\" for writing!";
+    print {$out} $got_xml;
+    close($out)
+}
+else
+{
+    print $got_xml;
+}
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/rejects/proto-text-to-xml.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/rejects/proto-text-to-xml.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,100 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 39;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::PRD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my $rngschema = XML::LibXML::RelaxNG->new(
+        location => "./extradata/screenplay-xml.rng" 
+    );
+
+my @tests = (qw(
+        nested-s
+        two-nested-s
+        with-dialogue
+        dialogue-with-several-paragraphs
+        with-description
+        with-tags-inside-paragraphs
+        with-internal-description
+        with-comments
+        with-multi-para-desc
+        with-multi-line-comments
+        scenes-with-titles
+        with-entities
+        with-brs
+    ));
+
+# TEST:$num_texts=13
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::PRD",
+    });
+
+my $dtd = 
+    XML::LibXML::Dtd->new(
+        "Screenplay XML 0.1.0",
+        File::Spec->catfile(
+            "extradata", "screenplay-xml.dtd",
+        ),
+    );
+
+my $xml_parser = XML::LibXML->new();
+$xml_parser->validation(0);
+
+foreach my $fn (@tests)
+{
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text/$fn.txt",
+            },
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
+        "Output of the Proto Text \"$fn\""
+    );
+
+    my $dom = $xml_parser->parse_string($got_xml);
+
+    # TEST*$num_texts
+    ok ($dom->validate($dtd), 
+        "Checking for validity of '$fn'"
+    );
+
+    my $code;
+    $code = $rngschema->validate($dom);
+
+    # TEST*$num_texts
+    ok ((defined($code) && ($code == 0)),
+        "The validation of '$fn' succeeded.") ||
+        diag("\$@ == $@");
+    
+}
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/00-load.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/00-load.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,9 @@
+#!perl -T
+
+use Test::More tests => 1;
+
+BEGIN {
+	use_ok( 'XML::Grammar::Screenplay' );
+}
+
+diag( "Testing XML::Grammar::Screenplay $XML::Grammar::Screenplay::VERSION, Perl $], $^X" );
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/app-to-html.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/app-to-html.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,39 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More tests => 1;
+use File::Spec;
+
+use Config;
+
+{
+    local %ENV = %ENV;
+    my @p5lib = split($Config{'path_sep'}, $ENV{'PERL5LIB'});
+    $ENV{'PERL5LIB'} = join($Config{'path_sep'}, 
+        File::Spec->rel2abs(
+            File::Spec->catdir(
+                File::Spec->curdir(),
+                "t", "lib", "run-test-1",
+            )
+        ), @p5lib);
+
+    # TEST
+    ok (
+        !system($^X, "-MXML::Grammar::Screenplay::App::ToHTML",
+            "-e", "run()",
+            "--",
+            "-o", "temp.xhtml",
+            File::Spec->catdir(File::Spec->curdir(), 
+                "t", "data", "xml", "nested-s.xml"
+            )
+        ),
+        "Testing App::ToHTML",
+    );
+
+    unlink("temp.xhtml");
+}
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/boilerplate.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/boilerplate.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,48 @@
+#!perl -T
+
+use strict;
+use warnings;
+use Test::More tests => 3;
+
+sub not_in_file_ok {
+    my ($filename, %regex) = @_;
+    open my $fh, "<", $filename
+        or die "couldn't open $filename for reading: $!";
+
+    my %violated;
+
+    while (my $line = <$fh>) {
+        while (my ($desc, $regex) = each %regex) {
+            if ($line =~ $regex) {
+                push @{$violated{$desc}||=[]}, $.;
+            }
+        }
+    }
+
+    if (%violated) {
+        fail("$filename contains boilerplate text");
+        diag "$_ appears on lines @{$violated{$_}}" for keys %violated;
+    } else {
+        pass("$filename contains no boilerplate text");
+    }
+}
+
+not_in_file_ok(README =>
+    "The README is used..."       => qr/The README is used/,
+    "'version information here'"  => qr/to provide version information/,
+);
+
+not_in_file_ok(Changes =>
+    "placeholder date/time"       => qr(Date/time)
+);
+
+sub module_boilerplate_ok {
+    my ($module) = @_;
+    not_in_file_ok($module =>
+        'the great new $MODULENAME'   => qr/ - The great new /,
+        'boilerplate description'     => qr/Quick summary of what the module/,
+        'stub function definition'    => qr/function[12]/,
+    );
+}
+
+module_boilerplate_ok('lib/XML/Grammar/Screenplay.pm');
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/docbook/with-internal-description.docbook.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/docbook/with-internal-description.docbook.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "/usr/share/sgml/docbook/xml-dtd-4.3/docbookx.dtd">
+<article id="index">
+  <section id="top">
+    <title>top</title>
+    <section id="david_and_goliath">
+      <title>david_and_goliath</title>
+      <section role="description" id="id2244766"><title/>
+            <para>
+            [
+        
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath"/> 
+                are standing by each other.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2244967"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                I will kill you.
+            </para>
+        </section>
+      <section role="saying" id="id2244977"><title/>
+            <para><emphasis role="bold">Goliath: </emphasis>
+                no way, you little idiot!
+            </para>
+        </section>
+      <section role="saying" id="id2244986"><title/>
+            <para><emphasis role="bold">David: </emphasis>
+                yes way!
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                In the name of <ulink url="http://real-allah.tld"/>, I will show you the 
+                <phrase>[sarcastically]</phrase> power 
+                of my sling.
+            </para>
+            <para><emphasis role="bold">David: </emphasis>
+                I shall sling you and bing you till infinity.
+            </para>
+        </section>
+      <section role="description" id="id2242910"><title/>
+            <para>
+            [
+        
+                David takes his sling.
+            
+            ]
+        </para>
+        </section>
+      <section role="saying" id="id2242918"><title/>
+        <para><emphasis role="bold">Goliath: </emphasis>
+            I'm still <ulink url="http://wait.tld/"/>.
+        </para>
+    </section>
+      <section role="saying" id="id2244786"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            so you are.
+        </para>
+    </section>
+      <section role="description" id="id2244795"><title/>
+        <para>
+            [
+        
+            David puts a stone in his sling and shoots Goliath. He hits.
+        
+            ]
+        </para>
+    </section>
+      <section role="saying" id="id2244802"><title/>
+        <para><emphasis role="bold">David: </emphasis>
+            as is written in the wikipedia <phrase>[See <ulink url="http://wiki.tld/"/>
+                for more information]</phrase>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </section>
+    </section>
+  </section>
+</article>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,23 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+Goliath [dead]: vengence will be mine.
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/dialogue-with-several-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/dialogue-with-several-paragraphs.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,22 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++: I shall sling you and bing you till infinity.
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/nested-s.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,6 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/scenes-with-titles.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/scenes-with-titles.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,17 @@
+<s id="top">
+
+<s id="a-better-scene" title="A Better Scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+<s id="exodus" title="The Exodus">
+
+Moses: let us get out of here!
+
+Joshua: amen!
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/two-nested-s.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/two-nested-s.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,9 @@
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+<s id="another-scene">
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-brs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-brs.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,21 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.<br />
+I will kill you.<br />
+You will not survive.<br />
+I will kill you.<br />
+I will kill you.<br />
+Ask Jive.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-comments.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,15 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters -->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-description.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,28 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-dialogue.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-dialogue.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,13 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-entities.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-entities.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David &amp; Goliath &lt;are&gt; standing by each other.
+
+David is a red-head. &quot;Hello&quot;
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-internal-description.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-internal-description.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,34 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the [sarcastically] power 
+of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+David: as is written in the wikipedia [See <a href="http://wiki.tld/">the
+Wiki site</a> for more information], you are now dead, having been shot with
+my sling.
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-line-comments.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-line-comments.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,18 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+David: I will kill you.
+
+<!-- David and Goliath are Biblical characters 
+
+They are nifty.
+-->
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-para-desc.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-multi-para-desc.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,32 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and Goliath are standing by each other.
+
+David is a red-head.
+
+Goliath is very tall.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of Allah, the merciful, I will show you the power of my
+sling.
+
+++++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still waiting.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-tags-inside-paragraphs.txt
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/proto-text/with-tags-inside-paragraphs.txt	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,29 @@
+<s id="top">
+
+<s id="david_and_goliath">
+
+[David and <a href="http://en.wikipedia.org/wiki/Goliath">Goliath</a> are 
+standing by each other.]
+
+David: I will kill you.
+
+Goliath: no way, you little idiot!
+
+David: yes way!
+
+++++: In the name of <a href="http://real-allah.tld/">Allah, the 
+<b>merciful</b>, real merciful</a>, I will show you the power of my sling. 
+
+++: I shall sling you and bing you till infinity.
+
+[David takes his sling.]
+
+Goliath: I'm still <a href="http://wait.tld/">waiting</a>.
+
+David: so you are.
+
+[David puts a stone in his sling and shoots Goliath. He hits.]
+
+</s>
+
+</s>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/dialogue-with-several-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/dialogue-with-several-paragraphs.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,44 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                I'm still waiting.
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                so you are.
+            </para>
+        </saying>
+    </scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/nested-s.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,12 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/scenes-with-titles.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/scenes-with-titles.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene" title="A Better Scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+            <scene id="exodus" title="The Exodus">
+                <saying character="Moses">
+                    <para>
+                        let us get out of here!
+                    </para>
+                </saying>
+                <saying character="Joshua">
+                    <para>
+                        amen!
+                    </para>
+                </saying>
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/two-nested-s.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/two-nested-s.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,14 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+        <scene id="top">
+            <scene id="a-better-scene">
+            </scene>
+            <scene id="another-scene">
+            </scene>
+        </scene>
+    </body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-brs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-brs.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,39 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.<br />
+                I will kill you.<br />
+                You will not survive.<br />
+                I will kill you.<br />
+                I will kill you.<br />
+                Ask Jive.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-comments.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,29 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-description.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,59 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-dialogue.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-dialogue.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,28 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-entities.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-entities.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David &amp; Goliath &lt;are&gt; standing by each other.
+        </para>
+        <para>
+            David is a red-head. "Hello"
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-internal-description.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-internal-description.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,69 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the 
+                <inlinedesc>sarcastically</inlinedesc> power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+    <saying character="David">
+        <para>
+            as is written in the wikipedia <inlinedesc>See <ulink url="http://wiki.tld/">the Wiki site</ulink>
+                for more information</inlinedesc>, you are now dead,
+            having been shot with my sling.
+        </para>
+    </saying>
+</scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-line-comments.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-line-comments.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,32 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <!-- David and Goliath are Biblical characters 
+
+        They are nifty.
+        -->
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+        </saying>
+</scene>
+
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-para-desc.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-multi-para-desc.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,65 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+            David and Goliath are standing by each other.
+        </para>
+        <para>
+            David is a red-head.
+        </para>
+        <para>
+            Goliath is very tall.
+        </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of Allah, the merciful, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still waiting.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/data/xml/with-tags-inside-paragraphs.xml
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/data/xml/with-tags-inside-paragraphs.xml	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,61 @@
+<?xml version='1.0' encoding='utf-8'?>
+<!DOCTYPE document SYSTEM "screenplay-xml.dtd">
+<document xmlns="http://web-cpan.berlios.de/modules/XML-Grammar-Screenplay/screenplay-xml-0.2/">
+    <head>
+    </head>
+    <body id="index">
+<scene id="top">
+    <scene id="david_and_goliath">
+        <description>
+            <para>
+                David and 
+                <ulink url="http://en.wikipedia.org/wiki/Goliath">Goliath</ulink> 
+                are standing by each other.
+            </para>
+        </description>
+        <saying character="David">
+            <para>
+                I will kill you.
+            </para>
+        </saying>
+        <saying character="Goliath">
+            <para>
+                no way, you little idiot!
+            </para>
+        </saying>
+        <saying character="David">
+            <para>
+                yes way!
+            </para>
+            <para>
+                In the name of <ulink url="http://real-allah.tld/">Allah, the <bold>merciful</bold>, real merciful</ulink>, I will show you the power 
+                of my sling.
+            </para>
+            <para>
+                I shall sling you and bing you till infinity.
+            </para>
+        </saying>
+        <description>
+            <para>
+                David takes his sling.
+            </para>
+        </description>
+    <saying character="Goliath">
+        <para>
+            I'm still <ulink url="http://wait.tld/">waiting</ulink>.
+        </para>
+    </saying>
+    <saying character="David">
+        <para>
+            so you are.
+        </para>
+    </saying>
+    <description>
+        <para>
+            David puts a stone in his sling and shoots Goliath. He hits.
+        </para>
+    </description>
+</scene>
+</scene>
+</body>
+</document>
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/lib/run-test-1/XML/Grammar/Screenplay/ConfigData.pm	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,11 @@
+package XML::Grammar::Screenplay::ConfigData;
+
+use strict;
+use warnings;
+
+sub config
+{
+    return ["./extradata"];
+}
+
+1;
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/pod-coverage.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/pod-coverage.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,6 @@
+#!perl -T
+
+use Test::More;
+eval "use Test::Pod::Coverage 1.04";
+plan skip_all => "Test::Pod::Coverage 1.04 required for testing POD coverage" if $@;
+all_pod_coverage_ok();
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/pod.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/pod.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,6 @@
+#!perl -T
+
+use Test::More;
+eval "use Test::Pod 1.14";
+plan skip_all => "Test::Pod 1.14 required for testing POD" if $@;
+all_pod_files_ok();
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/proto-text-invalid.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/proto-text-invalid.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,51 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::More tests => 1;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+eval {
+my $got_xml = $grammar->convert(
+    {
+        source =>
+        {
+            file => "t/data/proto-text-invalid/inner-desc-inside-char-addressing.txt",
+        },
+    }
+);
+};
+
+my $err = $@;
+
+# TEST
+like ($err, qr{inner-desc.*?addressing},
+   "Tried to put an inner-desc inside an addressing "
+);
+
+1;
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/proto-text-to-xml-using-custom-parser.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/proto-text-to-xml-using-custom-parser.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,86 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 26;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::FromProto;
+
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+my @tests = (qw(
+        nested-s
+        two-nested-s
+        with-dialogue
+        dialogue-with-several-paragraphs
+        with-description
+        with-tags-inside-paragraphs
+        with-internal-description
+        with-comments
+        with-multi-para-desc
+        with-multi-line-comments
+        scenes-with-titles
+        with-entities
+        with-brs
+    ));
+
+# TEST:$num_texts=13
+
+my $grammar = XML::Grammar::Screenplay::FromProto->new({
+        parser_class => "XML::Grammar::Screenplay::FromProto::Parser::QnD",
+    });
+
+my $rngschema = XML::LibXML::RelaxNG->new(
+        location => "./extradata/screenplay-xml.rng" 
+    );    
+
+my $xml_parser = XML::LibXML->new();
+$xml_parser->validation(0);
+
+foreach my $fn (@tests)
+{
+    my $got_xml = $grammar->convert(
+        {
+            source =>
+            {
+                file => "t/data/proto-text/$fn.txt",
+            },
+        }
+    );
+
+    # TEST*$num_texts
+    is_xml ($got_xml, load_xml("t/data/xml/$fn.xml"),
+        "Output of the Proto Text \"$fn\""
+    );
+
+    my $dom = $xml_parser->parse_string($got_xml);
+
+    my $code;
+    $code = $rngschema->validate($dom);
+
+    # TEST*$num_texts
+    ok ((defined($code) && ($code == 0)),
+        "The validation of '$fn' succeeded.") ||
+        diag("\$@ == $@");
+}
+
+1;
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/qnd-parser-unit.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/qnd-parser-unit.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,78 @@
+use strict;
+use warnings;
+
+use Test::More tests => 3;
+
+use XML::Grammar::Screenplay::FromProto::Parser::QnD;
+
+{
+    my $text = <<"EOF";
+Hello <s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->_setup_text($text);
+
+    my $ret = $parser->_consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello ", "_consume works for first line");
+}
+
+{
+    my $text = <<"EOF";
+Hello
+voila the row kala:
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->_setup_text($text);
+
+    my $ret = $parser->_consume(qr{[^<]});
+
+    # TEST
+    is ($ret, "Hello\nvoila the row kala:\n", 
+        "_consume works for several lines");
+}
+
+{
+    my $text = <<"EOF";
+<s id="top">
+
+<s id="a-better-scene">
+</s>
+
+</s>
+EOF
+
+    my $parser = XML::Grammar::Screenplay::FromProto::Parser::QnD->new();
+
+    $parser->_setup_text($text);
+
+    my $ret = $parser->_parse_opening_tag();
+
+    # TEST
+    is_deeply ($ret, 
+        {
+            name => "s",
+            is_standalone => 0,
+            line => 1,
+            attrs => [ { key => "id", value => "top"}],
+        },
+        "Checking _parse_opening_tag() - #1",
+    );
+}
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/to-docbook.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/to-docbook.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,70 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 2;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToDocBook;
+
+my @tests = (qw(
+        with-internal-description
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=1
+
+my $converter = XML::Grammar::Screenplay::ToDocBook->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $docbook_text = $converter->translate_to_docbook({
+            source => { file => "t/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    # TEST*$num_texts*2
+    
+    my $parser = XML::LibXML->new();
+
+    my $doc = $parser->parse_string($docbook_text);
+
+    is (
+        scalar(() = $doc->findnodes(q{//article[@id='index']})),
+        1,
+        "Found one article with id index",
+    );
+
+    ok (
+        (scalar(() = $doc->findnodes(q{//section[@role='description']}))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+}
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 perl/modules/XML-Grammar-Screenplay/t/to-xhtml.t
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/perl/modules/XML-Grammar-Screenplay/t/to-xhtml.t	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,82 @@
+#!/usr/bin/perl
+
+use strict;
+use warnings;
+
+use Test::More;
+
+use Test::XML tests => 3;
+
+use File::Spec;
+
+use XML::LibXML;
+
+use XML::Grammar::Screenplay::ToHTML;
+
+my @tests = (qw(
+        with-internal-description
+    ));
+
+sub load_xml
+{
+    my $path = shift;
+
+    open my $in, "<", $path;
+    my $contents;
+    {
+        local $/;
+        $contents = <$in>
+    }
+    close($in);
+    return $contents;
+}
+
+# TEST:$num_texts=1
+
+my $converter = XML::Grammar::Screenplay::ToHTML->new({
+        data_dir => File::Spec->catdir(File::Spec->curdir(), "extradata"),
+    });
+
+foreach my $fn (@tests)
+{
+    my $xhtml_text = $converter->translate_to_html({
+            source => { file => "t/data/xml/$fn.xml", },
+            output => "string",
+        }
+        );
+
+    my $parser = XML::LibXML->new();
+
+    my $doc = $parser->parse_string($xhtml_text);
+
+    my $xpc = XML::LibXML::XPathContext->new();
+    $xpc->registerNs('x', q{http://www.w3.org/1999/xhtml});
+    # TEST*$num_texts
+    is (
+        scalar(() = $xpc->find(q{//x:html}, $doc)),
+        1,
+        "Found one article with id index",
+    );
+
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xpc->find(q{//x:div[@class='saying']}, $doc))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+    # TEST*$num_texts
+    ok (
+        (scalar(() = $xpc->find(q{//x:div[@class='saying']/x:p/x:strong[@class='sayer']}, $doc))
+            >=
+            1
+        ),
+        "Found role=description sections",
+    );
+
+}
+
+1;
+
diff -r 000000000000 -r ecf865b363a2 vim/Makefile
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/vim/Makefile	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,7 @@
+VIM_SYNTAX_DIR = $$HOME/.vim/syntax
+
+all:
+
+install: all
+	mkdir -p $(VIM_SYNTAX_DIR)
+	cp -f syntax/screenplay-text.vim $(VIM_SYNTAX_DIR)/
diff -r 000000000000 -r ecf865b363a2 vim/syntax/screenplay-text.vim
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/vim/syntax/screenplay-text.vim	Tue Nov 03 15:39:45 2009 +0000
@@ -0,0 +1,32 @@
+" Vim syntax file
+" Language: ScreenplayText - the textual source of ScreenplayXML
+" Maintainer: Shlomi Fish <shlomif@iglu.org.il>
+" Home: http://search.cpan.org/dist/XML-Grammar-Screenplay/
+"
+" Author: Shlomi Fish
+" Filenames: *.screen.txt
+" Last Change: Thu Jul  3 00:59:42 IDT 2008
+" Version: 0.0.1
+
+" Quit if syntax file is already loaded
+if version < 600
+    syntax clear
+elseif exists("b:current_syntax")
+    finish
+endif
+
+syntax match screenplayTextComment /<!--\_.\{-0,}-->/
+syntax match screenplayTextDescription /^ *\[\_.\{-0,}\]/
+syntax match screenplayTextAddress /^\(+\{2,\}\|[^[:+]*\):/ contained nextgroup=screenplayTextInnerDesc
+syntax match screenplayTextInnerDesc /\[\_.\{-0,}\]/ contained nextgroup=screenplayTextInnerDesc
+
+syntax region screenplayTextSaying start=/^\s*\n^\(+\{2,\}\|[^[:+]*\):/ end=/^\s*$/ contains=screenplayTextAddress,screenplayTextInnerDesc
+
+hi def link screenplayTextComment Comment
+hi def link screenplayTextDescription PreProc
+hi def link screenplayTextInnerDesc PreProc
+hi def screenplayTextAddress      term=bold cterm=bold gui=bold
+
+let b:current_syntax="ScreenplayText"
+
+runtime! syntax/xml.vim

